{
"version":3,
"file":"module$node_modules$Phaser$src$actions$SetDepth.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,gDAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO5G,IAAIC,iBAAmBH,OAAA,CAAQ,yDAAR,CA4BvBC,OAAAC,QAAA,CALeE,QAAS,CAACC,KAAD,CAAQC,KAAR,CAAeC,IAAf,CAAqBC,KAArB,CAA4BC,SAA5B,CACxB,CACI,MAAON,iBAAA,CAAiBE,KAAjB,CAAwB,OAAxB,CAAiCC,KAAjC,CAAwCC,IAAxC,CAA8CC,KAA9C,CAAqDC,SAArD,CADX,CA/B4G;",
"sources":["node_modules/Phaser/src/actions/SetDepth.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$actions$SetDepth\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar PropertyValueSet = require('./PropertyValueSet');\r\n\r\n/**\r\n * Takes an array of Game Objects, or any objects that have the public property `depth`\r\n * and then sets it to the given value.\r\n *\r\n * The optional `step` property is applied incrementally, multiplied by each item in the array.\r\n *\r\n * To use this with a Group: `SetDepth(group.getChildren(), value, step)`\r\n *\r\n * @function Phaser.Actions.SetDepth\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {number} value - The amount to set the property to.\r\n * @param {number} [step=0] - This is added to the `value` amount, multiplied by the iteration counter.\r\n * @param {integer} [index=0] - An optional offset to start searching from within the items array.\r\n * @param {integer} [direction=1] - The direction to iterate through the array. 1 is from beginning to end, -1 from end to beginning.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that were passed to this Action.\r\n */\r\nvar SetDepth = function (items, value, step, index, direction)\r\n{\r\n    return PropertyValueSet(items, 'depth', value, step, index, direction);\r\n};\r\n\r\nmodule.exports = SetDepth;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","PropertyValueSet","SetDepth","items","value","step","index","direction"]
}
