{
"version":3,
"file":"module$node_modules$Phaser$src$math$Vector4.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/Phaser/src/math/Vector4.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$Vector4\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n//  Adapted from [gl-matrix](https://github.com/toji/gl-matrix) by toji\r\n//  and [vecmath](https://github.com/mattdesl/vecmath) by mattdesl\r\n\r\nvar Class = require('../utils/Class');\r\n\r\n/**\r\n * @classdesc\r\n * A representation of a vector in 4D space.\r\n *\r\n * A four-component vector.\r\n *\r\n * @class Vector4\r\n * @memberOf Phaser.Math\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [x] - The x component.\r\n * @param {number} [y] - The y component.\r\n * @param {number} [z] - The z component.\r\n * @param {number} [w] - The w component.\r\n */\r\nvar Vector4 = new Class({\r\n\r\n    initialize:\r\n\r\n    function Vector4 (x, y, z, w)\r\n    {\r\n        /**\r\n         * The x component of this Vector.\r\n         *\r\n         * @name Phaser.Math.Vector4#x\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.x = 0;\r\n\r\n        /**\r\n         * The y component of this Vector.\r\n         *\r\n         * @name Phaser.Math.Vector4#y\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.y = 0;\r\n\r\n        /**\r\n         * The z component of this Vector.\r\n         *\r\n         * @name Phaser.Math.Vector4#z\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.z = 0;\r\n\r\n        /**\r\n         * The w component of this Vector.\r\n         *\r\n         * @name Phaser.Math.Vector4#w\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.w = 0;\r\n\r\n        if (typeof x === 'object')\r\n        {\r\n            this.x = x.x || 0;\r\n            this.y = x.y || 0;\r\n            this.z = x.z || 0;\r\n            this.w = x.w || 0;\r\n        }\r\n        else\r\n        {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.z = z || 0;\r\n            this.w = w || 0;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Make a clone of this Vector4.\r\n     *\r\n     * @method Phaser.Math.Vector4#clone\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Vector4} A clone of this Vector4.\r\n     */\r\n    clone: function ()\r\n    {\r\n        return new Vector4(this.x, this.y, this.z, this.w);\r\n    },\r\n\r\n    /**\r\n     * Copy the components of a given Vector into this Vector.\r\n     *\r\n     * @method Phaser.Math.Vector4#copy\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Vector4} src - The Vector to copy the components from.\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    copy: function (src)\r\n    {\r\n        this.x = src.x;\r\n        this.y = src.y;\r\n        this.z = src.z || 0;\r\n        this.w = src.w || 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Check whether this Vector is equal to a given Vector.\r\n     *\r\n     * Performs a strict quality check against each Vector's components.\r\n     *\r\n     * @method Phaser.Math.Vector4#equals\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Vector4} v - The vector to check equality with.\r\n     *\r\n     * @return {boolean} A boolean indicating whether the two Vectors are equal or not.\r\n     */\r\n    equals: function (v)\r\n    {\r\n        return ((this.x === v.x) && (this.y === v.y) && (this.z === v.z) && (this.w === v.w));\r\n    },\r\n\r\n    /**\r\n     * Set the `x`, `y`, `z` and `w` components of the this Vector to the given `x`, `y`, `z` and `w` values.\r\n     *\r\n     * @method Phaser.Math.Vector4#set\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(number|object)} x - The x value to set for this Vector, or an object containing x, y, z and w components.\r\n     * @param {number} y - The y value to set for this Vector.\r\n     * @param {number} z - The z value to set for this Vector.\r\n     * @param {number} w - The z value to set for this Vector.\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    set: function (x, y, z, w)\r\n    {\r\n        if (typeof x === 'object')\r\n        {\r\n            this.x = x.x || 0;\r\n            this.y = x.y || 0;\r\n            this.z = x.z || 0;\r\n            this.w = x.w || 0;\r\n        }\r\n        else\r\n        {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.z = z || 0;\r\n            this.w = w || 0;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Add a given Vector to this Vector. Addition is component-wise.\r\n     *\r\n     * @method Phaser.Math.Vector4#add\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Math.Vector2|Phaser.Math.Vector3|Phaser.Math.Vector4)} v - The Vector to add to this Vector.\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    add: function (v)\r\n    {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z || 0;\r\n        this.w += v.w || 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Subtract the given Vector from this Vector. Subtraction is component-wise.\r\n     *\r\n     * @method Phaser.Math.Vector4#subtract\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Math.Vector2|Phaser.Math.Vector3|Phaser.Math.Vector4)} v - The Vector to subtract from this Vector.\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    subtract: function (v)\r\n    {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z || 0;\r\n        this.w -= v.w || 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Scale this Vector by the given value.\r\n     *\r\n     * @method Phaser.Math.Vector4#scale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} scale - The value to scale this Vector by.\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    scale: function (scale)\r\n    {\r\n        this.x *= scale;\r\n        this.y *= scale;\r\n        this.z *= scale;\r\n        this.w *= scale;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Calculate the length (or magnitude) of this Vector.\r\n     *\r\n     * @method Phaser.Math.Vector4#length\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The length of this Vector.\r\n     */\r\n    length: function ()\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var z = this.z;\r\n        var w = this.w;\r\n\r\n        return Math.sqrt(x * x + y * y + z * z + w * w);\r\n    },\r\n\r\n    /**\r\n     * Calculate the length of this Vector squared.\r\n     *\r\n     * @method Phaser.Math.Vector4#lengthSq\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The length of this Vector, squared.\r\n     */\r\n    lengthSq: function ()\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var z = this.z;\r\n        var w = this.w;\r\n\r\n        return x * x + y * y + z * z + w * w;\r\n    },\r\n\r\n    /**\r\n     * Normalize this Vector.\r\n     *\r\n     * Makes the vector a unit length vector (magnitude of 1) in the same direction.\r\n     *\r\n     * @method Phaser.Math.Vector4#normalize\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    normalize: function ()\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var z = this.z;\r\n        var w = this.w;\r\n        var len = x * x + y * y + z * z + w * w;\r\n\r\n        if (len > 0)\r\n        {\r\n            len = 1 / Math.sqrt(len);\r\n\r\n            this.x = x * len;\r\n            this.y = y * len;\r\n            this.z = z * len;\r\n            this.w = w * len;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Calculate the dot product of this Vector and the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector4#dot\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Vector4} v - The Vector4 to dot product with this Vector4.\r\n     *\r\n     * @return {number} The dot product of this Vector and the given Vector.\r\n     */\r\n    dot: function (v)\r\n    {\r\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n    },\r\n\r\n    /**\r\n     * Linearly interpolate between this Vector and the given Vector.\r\n     *\r\n     * Interpolates this Vector towards the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector4#lerp\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Vector4} v - The Vector4 to interpolate towards.\r\n     * @param {number} [t=0] - The interpolation percentage, between 0 and 1.\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    lerp: function (v, t)\r\n    {\r\n        if (t === undefined) { t = 0; }\r\n\r\n        var ax = this.x;\r\n        var ay = this.y;\r\n        var az = this.z;\r\n        var aw = this.w;\r\n\r\n        this.x = ax + t * (v.x - ax);\r\n        this.y = ay + t * (v.y - ay);\r\n        this.z = az + t * (v.z - az);\r\n        this.w = aw + t * (v.w - aw);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Perform a component-wise multiplication between this Vector and the given Vector.\r\n     *\r\n     * Multiplies this Vector by the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector4#multiply\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Math.Vector2|Phaser.Math.Vector3|Phaser.Math.Vector4)} v - The Vector to multiply this Vector by.\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    multiply: function (v)\r\n    {\r\n        this.x *= v.x;\r\n        this.y *= v.y;\r\n        this.z *= v.z || 1;\r\n        this.w *= v.w || 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Perform a component-wise division between this Vector and the given Vector.\r\n     *\r\n     * Divides this Vector by the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector4#divide\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Math.Vector2|Phaser.Math.Vector3|Phaser.Math.Vector4)} v - The Vector to divide this Vector by.\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    divide: function (v)\r\n    {\r\n        this.x /= v.x;\r\n        this.y /= v.y;\r\n        this.z /= v.z || 1;\r\n        this.w /= v.w || 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Calculate the distance between this Vector and the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector4#distance\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Math.Vector2|Phaser.Math.Vector3|Phaser.Math.Vector4)} v - The Vector to calculate the distance to.\r\n     *\r\n     * @return {number} The distance from this Vector to the given Vector.\r\n     */\r\n    distance: function (v)\r\n    {\r\n        var dx = v.x - this.x;\r\n        var dy = v.y - this.y;\r\n        var dz = v.z - this.z || 0;\r\n        var dw = v.w - this.w || 0;\r\n\r\n        return Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);\r\n    },\r\n\r\n    /**\r\n     * Calculate the distance between this Vector and the given Vector, squared.\r\n     *\r\n     * @method Phaser.Math.Vector4#distanceSq\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Math.Vector2|Phaser.Math.Vector3|Phaser.Math.Vector4)} v - The Vector to calculate the distance to.\r\n     *\r\n     * @return {number} The distance from this Vector to the given Vector, squared.\r\n     */\r\n    distanceSq: function (v)\r\n    {\r\n        var dx = v.x - this.x;\r\n        var dy = v.y - this.y;\r\n        var dz = v.z - this.z || 0;\r\n        var dw = v.w - this.w || 0;\r\n\r\n        return dx * dx + dy * dy + dz * dz + dw * dw;\r\n    },\r\n\r\n    /**\r\n     * Negate the `x`, `y`, `z` and `w` components of this Vector.\r\n     *\r\n     * @method Phaser.Math.Vector4#negate\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    negate: function ()\r\n    {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        this.z = -this.z;\r\n        this.w = -this.w;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Transform this Vector with the given Matrix.\r\n     *\r\n     * @method Phaser.Math.Vector4#transformMat4\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Matrix4} mat - The Matrix4 to transform this Vector4 with.\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    transformMat4: function (mat)\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var z = this.z;\r\n        var w = this.w;\r\n        var m = mat.val;\r\n\r\n        this.x = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n        this.y = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n        this.z = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n        this.w = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Transform this Vector with the given Quaternion.\r\n     *\r\n     * @method Phaser.Math.Vector4#transformQuat\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Quaternion} q - The Quaternion to transform this Vector with.\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    transformQuat: function (q)\r\n    {\r\n        // TODO: is this really the same as Vector3?\r\n        // Also, what about this: http://molecularmusings.wordpress.com/2013/05/24/a-faster-quaternion-vector-multiplication/\r\n        // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var z = this.z;\r\n        var qx = q.x;\r\n        var qy = q.y;\r\n        var qz = q.z;\r\n        var qw = q.w;\r\n\r\n        // calculate quat * vec\r\n        var ix = qw * x + qy * z - qz * y;\r\n        var iy = qw * y + qz * x - qx * z;\r\n        var iz = qw * z + qx * y - qy * x;\r\n        var iw = -qx * x - qy * y - qz * z;\r\n\r\n        // calculate result * inverse quat\r\n        this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Make this Vector the zero vector (0, 0, 0, 0).\r\n     *\r\n     * @method Phaser.Math.Vector4#reset\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Vector4} This Vector4.\r\n     */\r\n    reset: function ()\r\n    {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n});\r\n\r\n//  TODO: Check if these are required internally, if not, remove.\r\nVector4.prototype.sub = Vector4.prototype.subtract;\r\nVector4.prototype.mul = Vector4.prototype.multiply;\r\nVector4.prototype.div = Vector4.prototype.divide;\r\nVector4.prototype.dist = Vector4.prototype.distance;\r\nVector4.prototype.distSq = Vector4.prototype.distanceSq;\r\nVector4.prototype.len = Vector4.prototype.length;\r\nVector4.prototype.lenSq = Vector4.prototype.lengthSq;\r\n\r\nmodule.exports = Vector4;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Vector4","Class","initialize","x","y","z","w","clone","copy","src","equals","v","set","add","subtract","scale","length","Math","sqrt","lengthSq","normalize","len","dot","lerp","t","undefined","ax","ay","az","aw","multiply","divide","distance","dx","dy","dz","dw","distanceSq","negate","transformMat4","mat","m","val","transformQuat","q","qx","qy","qz","qw","ix","iy","iz","iw","reset","prototype","sub","mul","div","dist","distSq","lenSq"]
}
