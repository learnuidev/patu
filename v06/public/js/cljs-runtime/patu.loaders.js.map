{"version":3,"sources":["patu/loaders.cljs"],"mappings":";;;;AAMA,AAAA,AAAMA,AAAWC;AAAjB,AACE,AAAW,AAAA,AAAA,AAAAC,AAAKC,AAAOF;;AAEzB,AAAA,AAACG,AAEA,AAAAC,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAQE;AAAR,AAAAD,AAAAD,AAAA,AAAA,AAAUG;AAAV,AACE,AAACT,AAAUS;;AAEd,AAAA;;;;;;;;;;;;;;;;;;;;AAAA,AAAAC,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAmBFE;AAnBJ,AAoBG,AAAAC,AAAA,AAAAC,AAAiBF;AAAjBG,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAA,AAAAZ,AAAAa,AAAA,AAAA,AAASU;AAAT,AAAAvB,AAAAa,AAAA,AAAA,AAAYnB;AAAZ,AAAA,AACE,AAAC8B,AAAYD,AAAG7B;;AADlB;AAAA,AAAAc;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAE,AAAA,AAAAL,AAAAD;AAAA,AAAA,AAAAM;AAAA,AAAA,AAAAN,AAAAM;AAAA,AAAA,AAAA,AAAAC,AAAAP;AAAA,AAAAQ,AAAA,AAAAC,AAAAT;AAAA,AAAA,AAAA,AAAAU,AAAAV;AAAAQ;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAAI,AAAA,AAAAC,AAAAb;AAAA,AAAAR,AAAAoB,AAAA,AAAA,AAASG;AAAT,AAAAvB,AAAAoB,AAAA,AAAA,AAAY1B;AAAZ,AAAA,AACE,AAAC8B,AAAYD,AAAG7B;;AADlB;AAAA,AAAA,AAAA4B,AAAAd;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;;AApBH,AAAA,AAAA,AAAMH,AAsBFkB,AAAG7B;AAtBP,AAuBG,AAAa,AAAA,AAAA,AAAAC,AAAKC,AAAO,AAAC6B,AAAKF,AAAI7B;;;AAvBtC,AAAA,AAAA,AAAMW,AAwBFkB,AAAG7B,AAAIgC;AAxBX,AAyBG,AAAa,AAAA,AAAA,AAAA/B,AAAKC,AAAO,AAAC6B,AAAKF,AAAI7B,AAAI,AAACiC,AAAQD;;;AAzBnD,AAAA,AAAA,AAAMrB;;AAAN,AA4BA,AAAA,AAACR,AAEA,AAAKI,AAAEyB;AAAP,AACE,AAACE,AAAMvB,AAAY,AAACwB,AAAKH;;AAE5B,AAAA;;;;;;AAAA,AAAAvB,AAAM4B;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAzB,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMyB,AAKFxB;AALJ,AAMG,AAAAyB,AAAA,AAAAvB,AAAiBF;AAAjB0B,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAA,AAAAnC,AAAAoC,AAAA,AAAA,AAASb;AAAT,AAAAvB,AAAAoC,AAAA,AAAA,AAAY1C;AAAZ,AAAA,AACE,AAAC4C,AAAWf,AAAG7B;;AADjB;AAAA,AAAAsC;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAArB,AAAA,AAAAL,AAAAuB;AAAA,AAAA,AAAAlB;AAAA,AAAA,AAAAkB,AAAAlB;AAAA,AAAA,AAAA,AAAAC,AAAAiB;AAAA,AAAAhB,AAAA,AAAAC,AAAAe;AAAA,AAAA,AAAA,AAAAd,AAAAc;AAAAhB;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAAqB,AAAA,AAAAhB,AAAAW;AAAA,AAAAhC,AAAAqC,AAAA,AAAA,AAASd;AAAT,AAAAvB,AAAAqC,AAAA,AAAA,AAAY3C;AAAZ,AAAA,AACE,AAAC4C,AAAWf,AAAG7B;;AADjB;AAAA,AAAA,AAAA4B,AAAAU;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;;AANH,AAAA,AAAA,AAAMD,AAQFR,AAAGgB;AARP,AASG,AAAY,AAAA,AAAA,AAAA5C,AAAKC,AAAO,AAAC6B,AAAKF,AAAIgB;;;AATrC,AAAA,AAAA,AAAMR;;AAAN,AAYA,AAAA,AAAClC,AAEA,AAAKI,AAAEuC;AAAP,AACE,AAACZ,AAAMG,AAAW,AAACF,AAAKW","names":["patu.loaders/load-root","val","cljs.core/deref","patu.state/state","patu.events/reg-event","p__31857","vec__31858","cljs.core.nth","_","url","var_args","G__31862","patu.loaders/load-sprite","js/Error","vals","seq__31863","cljs.core/seq","chunk__31864","count__31865","i__31866","vec__31873","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__31876","cljs.core/first","cljs.core/next","id","patu.loaders.load_sprite","cljs.core/name","opts","cljs.core/clj->js","cljs.core.apply","cljs.core/rest","G__31880","patu.loaders/load-sound","seq__31881","chunk__31882","count__31883","i__31884","vec__31891","vec__31894","patu.loaders.load_sound","src","args"],"sourcesContent":["(ns patu.loaders\n  (:require  [patu.state :refer [state]]\n             [patu.events :refer [reg-event]]))\n\n;; Kaboom Helpers\n;; === Loaders ===\n(defn load-root [val]\n  (.loadRoot (:k @state) val));\n\n(reg-event\n :load/root\n (fn [_ [_ url]]\n   (load-root url)))\n\n(defn load-sprite\n  \"Load a sprite or collection of sprites into the asset manager\n\n  # Usage 1: Load collection of sprites\n  (l/load-sprite\n   [[:bg,    \\\"img/bg.png\\\"]\n    [:birdy, \\\"img/birdy.png\\\"]\n    [:pipe, \\\"img/pipe.png\\\"]])\n\n  # Usage 2: Load a single sprite\n  (l/load-sprite :birdy \\\"img\\birdy.png\\\")\n\n  // Usage #3 - slice a spritesheet and add anims manually:\n  (load-sprite :froggy \\\"froggy.png\\\",\n   {:sliceX 4,\n    :sliceY 1,\n    :anims {:run  {:from 0 :to 3 }\n            :jump {:from 3 :to 3 }}})\n  \"\n  ([vals]\n   (doseq [[id val] vals]\n     (load-sprite id val)))\n  ([id val]\n   (.loadSprite (:k @state) (name id) val))\n  ([id val opts]\n   (.loadSprite (:k @state) (name id) val (clj->js opts))));\n\n;;\n(reg-event\n :load/sprite\n (fn [_ opts]\n   (apply load-sprite (rest opts))))\n\n(defn load-sound\n  \"Load a sound:\n   Usage:\n   (load-sound :woosh \\\"woosh.mp3\\\")\n   \"\n  ([vals]\n   (doseq [[id val] vals]\n     (load-sound id val)))\n  ([id src]\n   (.loadSound (:k @state) (name id) src)))\n\n;;\n(reg-event\n :load/sound\n (fn [_ args]\n   (apply load-sound (rest args))))\n"]}