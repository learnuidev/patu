{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$particles$zones$RandomZone.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO9HC,MAAAA,CAAQH,OAAA,CAAQ,4CAAR,CACZ,KAAII,QAAUJ,OAAA,CAAQ,6CAAR,CAgCVK,QAAAA,CAAa,IAAIF,MAAJ,CAAU,CAEvBG,WAEAD,QAAoB,CAACE,MAAD,CACpB,CAQI,IAAAA,OAAA,CAAcA,MAUd,KAAAC,SAAA,CAAgB,IAAIJ,OAlBxB,CALuB,CAkCvBK,SAAUA,QAAS,CAACC,QAAD,CACnB,CACI,IAAIC,IAAM,IAAAH,SAEV,KAAAD,OAAAK,eAAA,CAA2BD,GAA3B,CAEAD,SAAAG,EAAA,CAAaF,GAAAE,EACbH,SAAAI,EAAA,CAAaH,GAAAG,EANjB,CAnCuB,CAAV,CA8CjBb,OAAAC,QAAA,CAAiBG,OAtFiH;",
"sources":["node_modules/Phaser/src/gameobjects/particles/zones/RandomZone.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$particles$zones$RandomZone\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../../utils/Class');\r\nvar Vector2 = require('../../../math/Vector2');\r\n\r\n/**\r\n * @callback RandomZoneSourceCallback\r\n *\r\n * @param {Phaser.Math.Vector2} point - A point to modify.\r\n */\r\n\r\n/**\r\n * @typedef {object} RandomZoneSource\r\n *\r\n * @property {RandomZoneSourceCallback} getRandomPoint - A function modifying its point argument.\r\n *\r\n * @see Phaser.Geom.Circle\r\n * @see Phaser.Geom.Ellipse\r\n * @see Phaser.Geom.Line\r\n * @see Phaser.Geom.Polygon\r\n * @see Phaser.Geom.Rectangle\r\n * @see Phaser.Geom.Triangle\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A zone that places particles randomly within a shape's area.\r\n *\r\n * @class RandomZone\r\n * @memberOf Phaser.GameObjects.Particles.Zones\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {RandomZoneSource} source - An object instance with a `getRandomPoint(point)` method.\r\n */\r\nvar RandomZone = new Class({\r\n\r\n    initialize:\r\n\r\n    function RandomZone (source)\r\n    {\r\n        /**\r\n         * An object instance with a `getRandomPoint(point)` method.\r\n         *\r\n         * @name Phaser.GameObjects.Particles.Zones.RandomZone#source\r\n         * @type {RandomZoneSource}\r\n         * @since 3.0.0\r\n         */\r\n        this.source = source;\r\n\r\n        /**\r\n         * Internal calculation vector.\r\n         *\r\n         * @name Phaser.GameObjects.Particles.Zones.RandomZone#_tempVec\r\n         * @type {Phaser.Math.Vector2}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._tempVec = new Vector2();\r\n    },\r\n\r\n    /**\r\n     * Get the next point in the Zone and set its coordinates on the given Particle.\r\n     *\r\n     * @method Phaser.GameObjects.Particles.Zones.RandomZone#getPoint\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.Particles.Particle} particle - The Particle.\r\n     */\r\n    getPoint: function (particle)\r\n    {\r\n        var vec = this._tempVec;\r\n\r\n        this.source.getRandomPoint(vec);\r\n\r\n        particle.x = vec.x;\r\n        particle.y = vec.y;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = RandomZone;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","Vector2","RandomZone","initialize","source","_tempVec","getPoint","particle","vec","getRandomPoint","x","y"]
}
