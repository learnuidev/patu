{
"version":3,
"file":"module$node_modules$Phaser$src$animations$AnimationFrame.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqCjHC,MAAAA,CAAiB,KA9BTH,OAAAI,CAAQ,4CAARA,CA8BS,EAAU,CAE3BC,WAEAF,QAAwB,CAACG,UAAD,CAAaC,YAAb,CAA2BC,KAA3B,CAAkCC,KAAlC,CACxB,CAQI,IAAAH,WAAA,CAAkBA,UASlB,KAAAC,aAAA,CAAoBA,YASpB,KAAAC,MAAA,CAAaA,KASb,KAAAC,MAAA,CAAaA,KAsBb,KAAAC,OAAA,CAXA,IAAAC,QAWA,CAXe,CAAA,CAiCf,KAAAC,UAAA,CAXA,IAAAC,UAWA,CAXiB,IAkCjB,KAAAC,SAAA,CAZA,IAAAC,SAYA,CAZgB,CA1FpB,CAL2B,CAsH3BC,OAAQA,QAAS,EACjB,CACI,MAAO,CACHC,IAAK,IAAAX,WADF,CAEHG,MAAO,IAAAF,aAFJ,CAGHQ,SAAU,IAAAA,SAHP,CADX,CAvH2B;AAqI3BG,QAASA,QAAS,EAClB,CACI,IAAAT,MAAA,CAAaU,IAAAA,EADjB,CAtI2B,CAAV,CA4IrBlB,OAAAC,QAAA,CAAiBC,MAjLoG;",
"sources":["node_modules/Phaser/src/animations/AnimationFrame.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$animations$AnimationFrame\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\n\r\n/**\r\n * @typedef {object} JSONAnimationFrame\r\n *\r\n * @property {string} key - The key of the Texture this AnimationFrame uses.\r\n * @property {(string|integer)} frame - The key of the Frame within the Texture that this AnimationFrame uses.\r\n * @property {number} duration - Additional time (in ms) that this frame should appear for during playback.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A single frame in an Animation sequence.\r\n *\r\n * An AnimationFrame consists of a reference to the Texture it uses for rendering, references to other\r\n * frames in the animation, and index data. It also has the ability to fire its own `onUpdate` callback\r\n * and modify the animation timing.\r\n *\r\n * AnimationFrames are generated automatically by the Animation class.\r\n *\r\n * @class AnimationFrame\r\n * @memberOf Phaser.Animations\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {string} textureKey - The key of the Texture this AnimationFrame uses.\r\n * @param {(string|integer)} textureFrame - The key of the Frame within the Texture that this AnimationFrame uses.\r\n * @param {integer} index - The index of this AnimationFrame within the Animation sequence.\r\n * @param {Phaser.Textures.Frame} frame - A reference to the Texture Frame this AnimationFrame uses for rendering.\r\n */\r\nvar AnimationFrame = new Class({\r\n\r\n    initialize:\r\n\r\n    function AnimationFrame (textureKey, textureFrame, index, frame)\r\n    {\r\n        /**\r\n         * The key of the Texture this AnimationFrame uses.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#textureKey\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.textureKey = textureKey;\r\n\r\n        /**\r\n         * The key of the Frame within the Texture that this AnimationFrame uses.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#textureFrame\r\n         * @type {(string|integer)}\r\n         * @since 3.0.0\r\n         */\r\n        this.textureFrame = textureFrame;\r\n\r\n        /**\r\n         * The index of this AnimationFrame within the Animation sequence.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#index\r\n         * @type {integer}\r\n         * @since 3.0.0\r\n         */\r\n        this.index = index;\r\n\r\n        /**\r\n         * A reference to the Texture Frame this AnimationFrame uses for rendering.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#frame\r\n         * @type {Phaser.Textures.Frame}\r\n         * @since 3.0.0\r\n         */\r\n        this.frame = frame;\r\n\r\n        /**\r\n         * Is this the first frame in an animation sequence?\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#isFirst\r\n         * @type {boolean}\r\n         * @default false\r\n         * @readOnly\r\n         * @since 3.0.0\r\n         */\r\n        this.isFirst = false;\r\n\r\n        /**\r\n         * Is this the last frame in an animation sequence?\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#isLast\r\n         * @type {boolean}\r\n         * @default false\r\n         * @readOnly\r\n         * @since 3.0.0\r\n         */\r\n        this.isLast = false;\r\n\r\n        /**\r\n         * A reference to the AnimationFrame that comes before this one in the animation, if any.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#prevFrame\r\n         * @type {?Phaser.Animations.AnimationFrame}\r\n         * @default null\r\n         * @readOnly\r\n         * @since 3.0.0\r\n         */\r\n        this.prevFrame = null;\r\n\r\n        /**\r\n         * A reference to the AnimationFrame that comes after this one in the animation, if any.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#nextFrame\r\n         * @type {?Phaser.Animations.AnimationFrame}\r\n         * @default null\r\n         * @readOnly\r\n         * @since 3.0.0\r\n         */\r\n        this.nextFrame = null;\r\n\r\n        /**\r\n         * Additional time (in ms) that this frame should appear for during playback.\r\n         * The value is added onto the msPerFrame set by the animation.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#duration\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.duration = 0;\r\n\r\n        /**\r\n         * What % through the animation does this frame come?\r\n         * This value is generated when the animation is created and cached here.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#progress\r\n         * @type {number}\r\n         * @default 0\r\n         * @readOnly\r\n         * @since 3.0.0\r\n         */\r\n        this.progress = 0;\r\n    },\r\n\r\n    /**\r\n     * Generates a JavaScript object suitable for converting to JSON.\r\n     *\r\n     * @method Phaser.Animations.AnimationFrame#toJSON\r\n     * @since 3.0.0\r\n     *\r\n     * @return {JSONAnimationFrame} The AnimationFrame data.\r\n     */\r\n    toJSON: function ()\r\n    {\r\n        return {\r\n            key: this.textureKey,\r\n            frame: this.textureFrame,\r\n            duration: this.duration\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Destroys this object by removing references to external resources and callbacks.\r\n     *\r\n     * @method Phaser.Animations.AnimationFrame#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.frame = undefined;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = AnimationFrame;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","AnimationFrame","Class","initialize","textureKey","textureFrame","index","frame","isLast","isFirst","nextFrame","prevFrame","progress","duration","toJSON","key","destroy","undefined"]
}
