{"version":3,"sources":["patu/examples/rogue/core.cljs"],"mappings":";;;;AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA,AAAkB,AAAA,AAACC;AAgBpB,AAAA,AAACC;AACD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;AAiCD,AAAAC,AAAA;AAAAC,AAEC,AAAAE,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAQE;AAAR,AAAAD,AAAAD,AAAA,AAAA,AAAUG;AAAV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAFD,AAAA,AAAAP,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;AAKD,AAAA,AAAMM,AAAUC;AAAhB,AACE,AAACC,AAAQ,AAAU,AAAAC,AAAA,AAAA,AAAcF;AAAd,AAAA,AAAAE,AAAAA,AAACC,AAAAA,AAAAA;;;AAEtB,AAGA,AAGA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAYA,AAAA,AAAMC;AAAN,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAGwB,AAAAC,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;;AAGzB,AAAAC,AAAA,AAAA,AAAA,AAAA,AACoBJ,AAAUC;AAD9B,AAAA,AAAAG,AAAAA,AAACC,AAAAA,AAAAA;AAGD,AAAA,AAAMC;AAAN,AACE,AAAAC,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACJ,AAAAA,AAAAA","names":["patu.core.kaboom","js/document.getElementById","patu.loaders/load-root","patu.loaders.load_sprite","G__26663","G__26664","patu.core/reg-event","p__26665","vec__26666","cljs.core.nth","_","cid","patu.examples.rogue.core/cur-anim","id","cljs.core.keyword","G__26669","patu.core/sub","patu.examples.rogue.core/main-init","patu.examples.rogue.core/main-evt","G__26670","patu.core/dispatch","G__26671","patu.core/dispatch-n","patu.examples.rogue.core/app","G__26672"],"sourcesContent":["(ns patu.examples.rogue.core\n  (:require [patu.core :as p]\n            [patu.loaders :as l]))\n\n;;\n(p/kaboom {:canvas (js/document.getElementById \"app\")\n           :global true\n           :fullscreen false\n           :scale 2\n           :debug true\n           :clearColor [0 0 0 1]})\n;; 1. Initialize App\n; (p/dispatch-sync [:kaboom {:canvas (js/document.getElementById \"app\")\n;                            :global true\n;                            :fullscreen false\n;                            :scale 2\n;                            :debug true\n;                            :clearColor [0 0 0 1]}])\n\n;;\n\n(l/load-root \"assets/metro/\")\n(l/load-sprite :character\n               \"hero/herochar_spritesheet.png\"\n               {:sliceX 8\n                :sliceY 15\n                :anims {:lose {:from 0 :to 7}\n                        :run {:from 8 :to 13}\n                        :boom {:from 16 :to 21}\n                        :nod {:from 24 :to 27}}})\n; (p/dispatch-n\n;  [[:load/root \"assets/metro/\"]\n;   [:load/sprite :character\n;    \"hero/herochar_spritesheet.png\"\n;    {:sliceX 8\n;     :sliceY 15\n;     :anims {:lose {:from 0 :to 7}\n;             :run {:from 8 :to 13}\n;             :boom {:from 16 :to 21}\n;             :nod {:from 24 :to 27}}}]])\n  ; [:load/sprite :tiles \"platformer/Tilemap/monochrome_tilemap_transparent_packed.png\"\n  ;  {:sliceX 20\n  ;   :sliceY 20}]])\n\n;;\n; (p/reg-event\n;  :player/idle\n;  (fn [_ [_ player]]\n;    (when (or  (not (key-down? [:left :right :x]))\n;               (not (c/cur-anim? player :player/attack))\n;               (not (c/cur-anim? player :run))\n;               (not (c/cur-anim? player :nod)))\n;      (p/play :player :player/nod))))\n\n;;\n(p/reg-event\n :comp/jump\n (fn [_ [_ cid]]\n   [:dispatch [:jump :player 320]]))\n\n(defn cur-anim [id]\n  (keyword (.curAnim (p/sub [:comp id]))))\n\n(comment\n  (cur-anim :player)\n  (js/console.log (.play (p/sub [:comp :player]) \"run\")))\n(comment)\n;; 4. Scenes\n;; ==== 4.1 Main Scene\n(defn main-init []\n  [[:layers [:bg :game, :ui] :game]\n   [:gravity 1000]\n   [:cam/ignore [:ui]]\n   [:comp/reg\n    [:player [[:sprite :character]\n              [:scale 1]\n              [:pos 190 90]\n              [:origin :botleft]\n              ;; [:body]\n              {:animSpeed 300}]]]])\n\n(defn main-evt []\n  []\n  [[:anim/play :player :run]\n   [:key-press :space  #(p/dispatch [:comp/jump :player])]])\n\n;; === 4.3 Scene Registration\n(p/dispatch-n\n [[:reg-scene :main main-init main-evt]])\n\n(defn app []\n  (p/dispatch [:go :main]))\n"]}