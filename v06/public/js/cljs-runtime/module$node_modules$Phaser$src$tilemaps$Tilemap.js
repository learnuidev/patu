shadow$provide.module$node_modules$Phaser$src$tilemaps$Tilemap=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var DegToRad=require("module$node_modules$Phaser$src$math$DegToRad"),DynamicTilemapLayer=require("module$node_modules$Phaser$src$tilemaps$dynamiclayer$DynamicTilemapLayer"),Extend=require("module$node_modules$Phaser$src$utils$object$Extend"),Formats=require("module$node_modules$Phaser$src$tilemaps$Formats"),LayerData=require("module$node_modules$Phaser$src$tilemaps$mapdata$LayerData"),
Rotate=require("module$node_modules$Phaser$src$math$Rotate"),StaticTilemapLayer=require("module$node_modules$Phaser$src$tilemaps$staticlayer$StaticTilemapLayer"),Tile=require("module$node_modules$Phaser$src$tilemaps$Tile"),TilemapComponents=require("module$node_modules$Phaser$src$tilemaps$components$index"),Tileset=require("module$node_modules$Phaser$src$tilemaps$Tileset");require=new global({initialize:function(scene,mapData){this.scene=scene;this.tileWidth=mapData.tileWidth;this.tileHeight=mapData.tileHeight;
this.width=mapData.width;this.height=mapData.height;this.orientation=mapData.orientation;this.renderOrder=mapData.renderOrder;this.format=mapData.format;this.version=mapData.version;this.properties=mapData.properties;this.widthInPixels=mapData.widthInPixels;this.heightInPixels=mapData.heightInPixels;this.imageCollections=mapData.imageCollections;this.images=mapData.images;this.layers=mapData.layers;this.tilesets=mapData.tilesets;this.objects=mapData.objects;this.currentLayerIndex=0},setRenderOrder:function(renderOrder){var orders=
["right-down","left-down","right-up","left-up"];"number"===typeof renderOrder&&(renderOrder=orders[renderOrder]);-1<orders.indexOf(renderOrder)&&(this.renderOrder=renderOrder);return this},addTilesetImage:function(tilesetName,key,tileWidth,tileHeight,tileMargin,tileSpacing,gid){if(void 0===tilesetName)return null;if(void 0===key||null===key)key=tilesetName;if(!this.scene.sys.textures.exists(key))return console.warn("Invalid Tileset Image: "+key),null;key=this.scene.sys.textures.get(key);var index=
this.getTilesetIndex(tilesetName);if(null===index&&this.format===Formats.TILED_JSON)return console.warn("No data found for Tileset: "+tilesetName),null;if(index=this.tilesets[index])return index.setTileSize(tileWidth,tileHeight),index.setSpacing(tileMargin,tileSpacing),index.setImage(key),index;void 0===tileWidth&&(tileWidth=this.tileWidth);void 0===tileHeight&&(tileHeight=this.tileHeight);void 0===tileMargin&&(tileMargin=0);void 0===tileSpacing&&(tileSpacing=0);void 0===gid&&(gid=0);index=new Tileset(tilesetName,
gid,tileWidth,tileHeight,tileMargin,tileSpacing);index.setImage(key);this.tilesets.push(index);return index},convertLayerToStatic:function(layer){layer=this.getLayer(layer);if(null===layer)return null;layer=layer.tilemapLayer;if(!(layer&&layer instanceof DynamicTilemapLayer))return null;var staticLayer=new StaticTilemapLayer(layer.scene,layer.tilemap,layer.layerIndex,layer.tileset,layer.x,layer.y);this.scene.sys.displayList.add(staticLayer);layer.destroy();return staticLayer},copy:function(srcTileX,
srcTileY,width,height,destTileX,destTileY,recalculateFaces,layer){layer=this.getLayer(layer);if(this._isStaticCall(layer,"copy"))return this;null!==layer&&TilemapComponents.Copy(srcTileX,srcTileY,width,height,destTileX,destTileY,recalculateFaces,layer);return this},createBlankDynamicLayer:function(name,tileset,x,y,width,height,tileWidth,tileHeight){void 0===tileWidth&&(tileWidth=tileset.tileWidth);void 0===tileHeight&&(tileHeight=tileset.tileHeight);void 0===width&&(width=this.width);void 0===height&&
(height=this.height);void 0===x&&(x=0);void 0===y&&(y=0);if(null!==this.getLayerIndex(name))return console.warn("Invalid Tilemap Layer ID: "+name),null;name=new LayerData({name:name,tileWidth:tileWidth,tileHeight:tileHeight,width:width,height:height});for(var row,tileY=0;tileY<height;tileY++){row=[];for(var tileX=0;tileX<width;tileX++)row.push(new Tile(name,-1,tileX,tileY,tileWidth,tileHeight,this.tileWidth,this.tileHeight));name.data.push(row)}this.layers.push(name);this.currentLayerIndex=this.layers.length-
1;tileset=new DynamicTilemapLayer(this.scene,this,this.currentLayerIndex,tileset,x,y);tileset.setRenderOrder(this.renderOrder);this.scene.sys.displayList.add(tileset);return tileset},createDynamicLayer:function(layerID,tileset,x,y){var index=this.getLayerIndex(layerID);if(null===index)return console.warn("Invalid Tilemap Layer ID: "+layerID),null;if(this.layers[index].tilemapLayer)return console.warn("Tilemap Layer ID already exists:"+layerID),null;this.currentLayerIndex=index;void 0===x&&this.layers[index].x&&
(x=this.layers[index].x);void 0===y&&this.layers[index].y&&(y=this.layers[index].y);layerID=new DynamicTilemapLayer(this.scene,this,index,tileset,x,y);layerID.setRenderOrder(this.renderOrder);this.scene.sys.displayList.add(layerID);return layerID},createFromObjects:function(name,id,spriteConfig,scene){void 0===spriteConfig&&(spriteConfig={});if(scene=this.getObjectLayer(name)){name=scene.objects;scene=[];for(var i=0;i<name.length;i++){var found=!1,obj=name[i];if(void 0!==obj.gid&&"number"===typeof id&&
obj.gid===id||void 0!==obj.id&&"number"===typeof id&&obj.id===id||void 0!==obj.name&&"string"===typeof id&&obj.name===id)found=!0;if(found){found=Extend({},spriteConfig,obj.properties);found.x=obj.x;found.y=obj.y;found=this.scene.make.sprite(found);found.name=obj.name;obj.width&&(found.displayWidth=obj.width);obj.height&&(found.displayHeight=obj.height);var offset={x:found.originX*found.displayWidth,y:(found.originY-1)*found.displayHeight};if(obj.rotation){var angle=DegToRad(obj.rotation);Rotate(offset,
angle);found.rotation=angle}found.x+=offset.x;found.y+=offset.y;void 0===obj.flippedHorizontal&&void 0===obj.flippedVertical||found.setFlip(obj.flippedHorizontal,obj.flippedVertical);obj.visible||(found.visible=!1);for(var key in obj.properties)found.hasOwnProperty(key)||found.setData(key,obj.properties[key]);scene.push(found)}}return scene}console.warn("Cannot create from object. Invalid objectgroup name given: "+name)},createFromTiles:function(indexes,replacements,spriteConfig,scene,camera,layer){layer=
this.getLayer(layer);return null===layer?null:TilemapComponents.CreateFromTiles(indexes,replacements,spriteConfig,scene,camera,layer)},createStaticLayer:function(layerID,tileset,x,y){var index=this.getLayerIndex(layerID);if(null===index)return console.warn("Invalid Tilemap Layer ID: "+layerID),null;if(this.layers[index].tilemapLayer)return console.warn("Tilemap Layer ID already exists:"+layerID),null;this.currentLayerIndex=index;void 0===x&&this.layers[index].x&&(x=this.layers[index].x);void 0===
y&&this.layers[index].y&&(y=this.layers[index].y);layerID=new StaticTilemapLayer(this.scene,this,index,tileset,x,y);layerID.setRenderOrder(this.renderOrder);this.scene.sys.displayList.add(layerID);return layerID},destroy:function(){this.removeAllLayers();this.tilesets.length=0;this.objects.length=0;this.scene=void 0},fill:function(index,tileX,tileY,width,height,recalculateFaces,layer){layer=this.getLayer(layer);if(this._isStaticCall(layer,"fill"))return this;null!==layer&&TilemapComponents.Fill(index,
tileX,tileY,width,height,recalculateFaces,layer);return this},filterObjects:function(objectLayer,callback,context){if("string"===typeof objectLayer){var name=objectLayer;objectLayer=this.getObjectLayer(objectLayer);if(!objectLayer)return console.warn("No object layer found with the name: "+name),null}return objectLayer.objects.filter(callback,context)},filterTiles:function(callback,context,tileX,tileY,width,height,filteringOptions,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.FilterTiles(callback,
context,tileX,tileY,width,height,filteringOptions,layer)},findByIndex:function(findIndex,skip,reverse,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.FindByIndex(findIndex,skip,reverse,layer)},findObject:function(objectLayer,callback,context){if("string"===typeof objectLayer){var name=objectLayer;objectLayer=this.getObjectLayer(objectLayer);if(!objectLayer)return console.warn("No object layer found with the name: "+name),null}return objectLayer.objects.find(callback,context)||
null},findTile:function(callback,context,tileX,tileY,width,height,filteringOptions,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.FindTile(callback,context,tileX,tileY,width,height,filteringOptions,layer)},forEachTile:function(callback,context,tileX,tileY,width,height,filteringOptions,layer){layer=this.getLayer(layer);null!==layer&&TilemapComponents.ForEachTile(callback,context,tileX,tileY,width,height,filteringOptions,layer);return this},getImageIndex:function(name){return this.getIndex(this.images,
name)},getIndex:function(location,name){for(var i=0;i<location.length;i++)if(location[i].name===name)return i;return null},getLayer:function(layer){layer=this.getLayerIndex(layer);return null!==layer?this.layers[layer]:null},getObjectLayer:function(name){name=this.getIndex(this.objects,name);return null!==name?this.objects[name]:null},getLayerIndex:function(layer){return void 0===layer?this.currentLayerIndex:"string"===typeof layer?this.getLayerIndexByName(layer):"number"===typeof layer&&layer<this.layers.length?
layer:layer instanceof StaticTilemapLayer||layer instanceof DynamicTilemapLayer?layer.layerIndex:null},getLayerIndexByName:function(name){return this.getIndex(this.layers,name)},getTileAt:function(tileX,tileY,nonNull,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.GetTileAt(tileX,tileY,nonNull,layer)},getTileAtWorldXY:function(worldX,worldY,nonNull,camera,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.GetTileAtWorldXY(worldX,worldY,nonNull,
camera,layer)},getTilesWithin:function(tileX,tileY,width,height,filteringOptions,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.GetTilesWithin(tileX,tileY,width,height,filteringOptions,layer)},getTilesWithinShape:function(shape,filteringOptions,camera,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.GetTilesWithinShape(shape,filteringOptions,camera,layer)},getTilesWithinWorldXY:function(worldX,worldY,width,height,filteringOptions,camera,layer){layer=
this.getLayer(layer);return null===layer?null:TilemapComponents.GetTilesWithinWorldXY(worldX,worldY,width,height,filteringOptions,camera,layer)},getTileset:function(name){name=this.getIndex(this.tilesets,name);return null!==name?this.tilesets[name]:null},getTilesetIndex:function(name){return this.getIndex(this.tilesets,name)},hasTileAt:function(tileX,tileY,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.HasTileAt(tileX,tileY,layer)},hasTileAtWorldXY:function(worldX,worldY,
camera,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.HasTileAtWorldXY(worldX,worldY,camera,layer)},layer:{get:function(){return this.layers[this.currentLayerIndex]},set:function(layer){this.setLayer(layer)}},putTileAt:function(tile,tileX,tileY,recalculateFaces,layer){layer=this.getLayer(layer);return this._isStaticCall(layer,"putTileAt")||null===layer?null:TilemapComponents.PutTileAt(tile,tileX,tileY,recalculateFaces,layer)},putTileAtWorldXY:function(tile,worldX,worldY,
recalculateFaces,camera,layer){layer=this.getLayer(layer);return this._isStaticCall(layer,"putTileAtWorldXY")||null===layer?null:TilemapComponents.PutTileAtWorldXY(tile,worldX,worldY,recalculateFaces,camera,layer)},putTilesAt:function(tilesArray,tileX,tileY,recalculateFaces,layer){layer=this.getLayer(layer);if(this._isStaticCall(layer,"putTilesAt"))return this;null!==layer&&TilemapComponents.PutTilesAt(tilesArray,tileX,tileY,recalculateFaces,layer);return this},randomize:function(tileX,tileY,width,
height,indexes,layer){layer=this.getLayer(layer);if(this._isStaticCall(layer,"randomize"))return this;null!==layer&&TilemapComponents.Randomize(tileX,tileY,width,height,indexes,layer);return this},calculateFacesAt:function(tileX,tileY,layer){layer=this.getLayer(layer);if(null===layer)return this;TilemapComponents.CalculateFacesAt(tileX,tileY,layer);return this},calculateFacesWithin:function(tileX,tileY,width,height,layer){layer=this.getLayer(layer);if(null===layer)return this;TilemapComponents.CalculateFacesWithin(tileX,
tileY,width,height,layer);return this},removeAllLayers:function(){for(var i=0;i<this.layers.length;i++)this.layers[i].tilemapLayer&&this.layers[i].tilemapLayer.destroy();this.currentLayerIndex=this.layers.length=0;return this},removeTileAt:function(tileX,tileY,replaceWithNull,recalculateFaces,layer){layer=this.getLayer(layer);return this._isStaticCall(layer,"removeTileAt")||null===layer?null:TilemapComponents.RemoveTileAt(tileX,tileY,replaceWithNull,recalculateFaces,layer)},removeTileAtWorldXY:function(worldX,
worldY,replaceWithNull,recalculateFaces,camera,layer){layer=this.getLayer(layer);return this._isStaticCall(layer,"removeTileAtWorldXY")||null===layer?null:TilemapComponents.RemoveTileAtWorldXY(worldX,worldY,replaceWithNull,recalculateFaces,camera,layer)},renderDebug:function(graphics,styleConfig,layer){layer=this.getLayer(layer);if(null===layer)return this;TilemapComponents.RenderDebug(graphics,styleConfig,layer);return this},replaceByIndex:function(findIndex,newIndex,tileX,tileY,width,height,layer){layer=
this.getLayer(layer);if(this._isStaticCall(layer,"replaceByIndex"))return this;null!==layer&&TilemapComponents.ReplaceByIndex(findIndex,newIndex,tileX,tileY,width,height,layer);return this},setCollision:function(indexes,collides,recalculateFaces,layer){layer=this.getLayer(layer);if(null===layer)return this;TilemapComponents.SetCollision(indexes,collides,recalculateFaces,layer);return this},setCollisionBetween:function(start,stop,collides,recalculateFaces,layer){layer=this.getLayer(layer);if(null===
layer)return this;TilemapComponents.SetCollisionBetween(start,stop,collides,recalculateFaces,layer);return this},setCollisionByProperty:function(properties,collides,recalculateFaces,layer){layer=this.getLayer(layer);if(null===layer)return this;TilemapComponents.SetCollisionByProperty(properties,collides,recalculateFaces,layer);return this},setCollisionByExclusion:function(indexes,collides,recalculateFaces,layer){layer=this.getLayer(layer);if(null===layer)return this;TilemapComponents.SetCollisionByExclusion(indexes,
collides,recalculateFaces,layer);return this},setCollisionFromCollisionGroup:function(collides,recalculateFaces,layer){layer=this.getLayer(layer);if(null===layer)return this;TilemapComponents.SetCollisionFromCollisionGroup(collides,recalculateFaces,layer);return this},setTileIndexCallback:function(indexes,callback,callbackContext,layer){layer=this.getLayer(layer);if(null===layer)return this;TilemapComponents.SetTileIndexCallback(indexes,callback,callbackContext,layer);return this},setTileLocationCallback:function(tileX,
tileY,width,height,callback,callbackContext,layer){layer=this.getLayer(layer);if(null===layer)return this;TilemapComponents.SetTileLocationCallback(tileX,tileY,width,height,callback,callbackContext,layer);return this},setLayer:function(layer){layer=this.getLayerIndex(layer);null!==layer&&(this.currentLayerIndex=layer);return this},setBaseTileSize:function(tileWidth,tileHeight){this.tileWidth=tileWidth;this.tileHeight=tileHeight;this.widthInPixels=this.width*tileWidth;this.heightInPixels=this.height*
tileHeight;for(var i=0;i<this.layers.length;i++){this.layers[i].baseTileWidth=tileWidth;this.layers[i].baseTileHeight=tileHeight;for(var mapData=this.layers[i].data,mapWidth=this.layers[i].width,mapHeight=this.layers[i].height,row=0;row<mapHeight;++row)for(var col=0;col<mapWidth;++col){var tile=mapData[row][col];null!==tile&&tile.setSize(void 0,void 0,tileWidth,tileHeight)}}return this},setLayerTileSize:function(tileWidth,tileHeight,layer){layer=this.getLayer(layer);if(null===layer)return this;layer.tileWidth=
tileWidth;layer.tileHeight=tileHeight;var mapData=layer.data,mapWidth=layer.width;layer=layer.height;for(var row=0;row<layer;++row)for(var col=0;col<mapWidth;++col){var tile=mapData[row][col];null!==tile&&tile.setSize(tileWidth,tileHeight)}return this},shuffle:function(tileX,tileY,width,height,layer){layer=this.getLayer(layer);if(this._isStaticCall(layer,"shuffle"))return this;null!==layer&&TilemapComponents.Shuffle(tileX,tileY,width,height,layer);return this},swapByIndex:function(indexA,indexB,tileX,
tileY,width,height,layer){layer=this.getLayer(layer);if(this._isStaticCall(layer,"swapByIndex"))return this;null!==layer&&TilemapComponents.SwapByIndex(indexA,indexB,tileX,tileY,width,height,layer);return this},tileToWorldX:function(tileX,camera,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.TileToWorldX(tileX,camera,layer)},tileToWorldY:function(tileX,camera,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.TileToWorldY(tileX,camera,layer)},
tileToWorldXY:function(tileX,tileY,point,camera,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.TileToWorldXY(tileX,tileY,point,camera,layer)},weightedRandomize:function(tileX,tileY,width,height,weightedIndexes,layer){layer=this.getLayer(layer);if(this._isStaticCall(layer,"weightedRandomize"))return this;null!==layer&&TilemapComponents.WeightedRandomize(tileX,tileY,width,height,weightedIndexes,layer);return this},worldToTileX:function(worldX,snapToFloor,camera,layer){layer=
this.getLayer(layer);return null===layer?null:TilemapComponents.WorldToTileX(worldX,snapToFloor,camera,layer)},worldToTileY:function(worldY,snapToFloor,camera,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.WorldToTileY(worldY,snapToFloor,camera,layer)},worldToTileXY:function(worldX,worldY,snapToFloor,point,camera,layer){layer=this.getLayer(layer);return null===layer?null:TilemapComponents.WorldToTileXY(worldX,worldY,snapToFloor,point,camera,layer)},_isStaticCall:function(layer,
functionName){return layer.tilemapLayer instanceof StaticTilemapLayer?(console.warn(functionName+": You cannot change the tiles in a static tilemap layer"),!0):!1}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$tilemaps$Tilemap.js.map
