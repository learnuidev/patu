shadow$provide.module$node_modules$Phaser$src$input$keyboard$combo$KeyCombo=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),ProcessKeyCombo=require("module$node_modules$Phaser$src$input$keyboard$combo$ProcessKeyCombo"),ResetKeyCombo=require("module$node_modules$Phaser$src$input$keyboard$combo$ResetKeyCombo");require=new global({initialize:function(keyboardPlugin,
keys,config){void 0===config&&(config={});if(2>keys.length)return!1;this.manager=keyboardPlugin;this.enabled=!0;this.keyCodes=[];for(keyboardPlugin=0;keyboardPlugin<keys.length;keyboardPlugin++){var char=keys[keyboardPlugin];"string"===typeof char?this.keyCodes.push(char.toUpperCase().charCodeAt(0)):"number"===typeof char?this.keyCodes.push(char):char.hasOwnProperty("keyCode")&&this.keyCodes.push(char.keyCode)}this.current=this.keyCodes[0];this.index=0;this.size=this.keyCodes.length;this.timeLastMatched=
0;this.matched=!1;this.timeMatched=0;this.resetOnWrongKey=GetFastValue(config,"resetOnWrongKey",!0);this.maxKeyDelay=GetFastValue(config,"maxKeyDelay",0);this.resetOnMatch=GetFastValue(config,"resetOnMatch",!1);this.deleteOnMatch=GetFastValue(config,"deleteOnMatch",!1);var _this=this;this.onKeyDown=keys=function(event){!_this.matched&&_this.enabled&&ProcessKeyCombo(event,_this)&&(_this.manager.emit("keycombomatch",_this,event),_this.resetOnMatch?ResetKeyCombo(_this):_this.deleteOnMatch&&_this.destroy())};
this.manager.on("keydown",keys)},progress:{get:function(){return this.index/this.size}},destroy:function(){this.enabled=!1;this.keyCodes=[];this.manager.off("keydown",this.onKeyDown);this.manager=null}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$input$keyboard$combo$KeyCombo.js.map
