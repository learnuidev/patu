{"version":3,"sources":["app/kaboom_examples/fafa/core.cljs"],"mappings":";;;;;;;;;;AAcA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA,AAAgB,AAAA,AAACC;AAOlB,AAAA,AAACC;AACD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;AAMD,AAAA,AAAA,AAACA;AAGD,AAAA,AAACC,AAAwBC;AAGzB,AAAA,AAACC,AAEA,AAAAC,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAQE;AAAR,AAAAD,AAAAD,AAAA,AAAA,AAAUG;AAAV,AACE,AAAOA,AAAO,AAAQ,AAAA,AAAA,AAAA,AAACC,AAAe,AAASD;;AAClD,AAAA,AAACL,AAEA,AAAAO,AAAKH;AAAL,AAAA,AAAAI,AAAAD;AAAA,AAAAJ,AAAAK,AAAA,AAAA,AAAQJ;AAAR,AAAAD,AAAAK,AAAA,AAAA,AAAUH;AAAV,AACE,AAAOA,AAAO,AAAQ,AAAA,AAAA,AAAA,AAACC,AAAc,AAASD;;AACjD,AAAA,AAACL,AAEA,AAAAS,AAAKL;AAAL,AAAA,AAAAM,AAAAD;AAAA,AAAAN,AAAAO,AAAA,AAAA,AAAQN;AAAR,AAAAD,AAAAO,AAAA,AAAA,AAAUL;AAAV,AACE,AAAOA,AAAO,AAAQ,AAAA,AAAA,AAAA,AAACC,AAAe,AAASD;;AAClD,AAAA,AAACL,AAEA,AAAAW,AAAKP;AAAL,AAAA,AAAAQ,AAAAD;AAAA,AAAAR,AAAAS,AAAA,AAAA,AAAQR;AAAR,AAAAD,AAAAS,AAAA,AAAA,AAAUP;AAAV,AACE,AAAOA,AAAO,AAAQ,AAAA,AAAA,AAAA,AAACC,AAAc,AAASD;;AAEjD,AAAA,AAAMQ;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEoBC;;AAQpB,AAAA,AAAMC;AAAN,AACE,AAAMV,AAAQ,AAAA,AAACW;AAAf,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AACwC,AAAA,AAAA,AAACC,AAA4BZ;AADrE,AAAA,AAAA,AAAA;AAAA,AAEwC,AAAA,AAAA,AAACY,AAA6BZ;AAFtE,AAAA,AAAA,AAAA;AAAA,AAGwC,AAAA,AAAA,AAACY,AAA0BZ;AAHnE,AAAA,AAAA,AAAA;AAAA,AAIwC,AAAA,AAAA,AAACY,AAA4BZ;;;AAGvE,AAAA,AAAA,AAAA,AAAA,AAACa,AAA+BL,AACDE;AAE/B,AAAA,AAAMI;AAAN,AACE,AAAA,AAACC","names":["app.kaboom.patu.core.init","js/document.getElementById","app.kaboom.patu.loaders.load_root","app.kaboom.patu.loaders.load_sprite","app.kaboom.patu.core/reg-level","app.kaboom-examples.fafa.assets/level-handler","app.kaboom.patu.events/reg-event","p__26635","vec__26636","cljs.core.nth","_","player","app.kaboom.patu.core/vec2","p__26639","vec__26640","p__26643","vec__26644","p__26647","vec__26648","app.kaboom-examples.fafa.core/main-init","app.kaboom-examples.fafa.assets/main-map","app.kaboom-examples.fafa.core/main-event","app.kaboom.patu.core/get-component","app.kaboom.patu.events/dispatch","app.kaboom.patu.core/reg-scene","app.kaboom-examples.fafa.core/app","app.kaboom.patu.core/start"],"sourcesContent":["(ns app.kaboom-examples.fafa.core\n  (:require\n   [clojure.repl :refer [doc]]\n   ;; Main Libs ===\n   [app.kaboom.patu.core :as p]\n   [app.kaboom.patu.loaders :as l]\n   [app.kaboom.patu.cam :as cam]\n   [app.kaboom.patu.audio :as a]\n   [app.kaboom.patu.components :as c]\n   ;; Event System\n   [app.kaboom.patu.events :refer [dispatch reg-event]]\n   ;; Assets\n   [app.kaboom-examples.fafa.assets :refer [main-map level-handler]]))\n\n(comment\n  (js/console.clear)\n  (doc p/start)\n  (doc p/init))\n\n(p/init {:canvas (js/document.getElementById \"app\")\n         :global true\n         :scale 2\n         :fullscreen true\n         :debug true\n         :clearColor [0 0 0 1]})\n;;\n(l/load-root \"assets/rpg16/\")\n(l/load-sprite\n :tiles\n \"PokemonLike.png\"\n {:sliceX 40\n  :sliceY 40})\n\n(l/load-sprite :character \"CharacterAnimation/Idle/Untitled-0_0.png\")\n\n;;\n(p/reg-level :level/main level-handler)\n\n;;\n(reg-event\n :player/move-left\n (fn [_ [_ player]]\n   (.move player (.scale (p/vec2 [-1 0]) (.-speed player)))))\n(reg-event\n :player/move-right\n (fn [_ [_ player]]\n   (.move player (.scale (p/vec2 [1 0]) (.-speed player)))))\n(reg-event\n :player/move-up\n (fn [_ [_ player]]\n   (.move player (.scale (p/vec2 [0 -1]) (.-speed player)))))\n(reg-event\n :player/move-down\n (fn [_ [_ player]]\n   (.move player (.scale (p/vec2 [0 1]) (.-speed player)))))\n\n(defn main-init []\n  [[:game/layers [:bg :game, :ui] :game]\n   [:game/add-level main-map :level/main]\n   [:comp/reg-n\n    [:player [[:sprite :character]\n              [:pos 30 90]\n              [:prop :player]\n              [:prop {:speed 55}]]]]])\n\n;;\n(defn main-event []\n  (let [player  (p/get-component :player)]\n    [[:evt/key-down     :left            #(dispatch [:player/move-left player])]\n     [:evt/key-down     :right           #(dispatch [:player/move-right player])]\n     [:evt/key-down     :up              #(dispatch [:player/move-up player])]\n     [:evt/key-down     :down            #(dispatch [:player/move-down player])]]))\n\n;;\n(p/reg-scene :scene/main {:init main-init\n                          :evt main-event})\n\n(defn app []\n  (p/start :scene/main))\n"]}