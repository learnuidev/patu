{
"version":3,
"file":"module$node_modules$Phaser$src$physics$arcade$ArcadeImage.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlHC,MAAAA,CAAQH,OAAA,CAAQ,4CAAR,CACRI,QAAAA,CAAaJ,OAAA,CAAQ,gEAAR,CACjB,KAAIK,MAAQL,OAAA,CAAQ,wDAAR,CAkDRM,QAAAA,CAAc,IAAIH,MAAJ,CAAU,CAExBI,QAASF,KAFe,CAIxBG,OAAQ,CACJJ,OAAAK,aADI,CAEJL,OAAAM,QAFI,CAGJN,OAAAO,OAHI,CAIJP,OAAAQ,MAJI,CAKJR,OAAAS,KALI,CAMJT,OAAAU,OANI,CAOJV,OAAAW,SAPI,CAQJX,OAAAY,QARI;AASJZ,OAAAa,UATI,CAUJb,OAAAc,KAVI,CAWJd,OAAAe,KAXI,CAYJf,OAAAgB,SAZI,CAJgB,CAmBxBC,WAEAf,QAAqB,CAACgB,KAAD,CAAQC,CAAR,CAAWC,CAAX,CAAcC,OAAd,CAAuBC,KAAvB,CACrB,CACIrB,KAAAsB,KAAA,CAAW,IAAX,CAAiBL,KAAjB,CAAwBC,CAAxB,CAA2BC,CAA3B,CAA8BC,OAA9B,CAAuCC,KAAvC,CAUA,KAAAE,KAAA,CAAY,IAXhB,CAtBwB,CAAV,CAsClB3B,OAAAC,QAAA,CAAiBI,OAjGqG;",
"sources":["node_modules/Phaser/src/physics/arcade/ArcadeImage.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$arcade$ArcadeImage\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Components = require('./components');\r\nvar Image = require('../../gameobjects/image/Image');\r\n\r\n/**\r\n * @classdesc\r\n * An Arcade Physics Image Game Object.\r\n *\r\n * An Image is a light-weight Game Object useful for the display of static images in your game,\r\n * such as logos, backgrounds, scenery or other non-animated elements. Images can have input\r\n * events and physics bodies, or be tweened, tinted or scrolled. The main difference between an\r\n * Image and a Sprite is that you cannot animate an Image as they do not have the Animation component.\r\n *\r\n * @class Image\r\n * @extends Phaser.GameObjects.Image\r\n * @memberOf Phaser.Physics.Arcade\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.Physics.Arcade.Components.Acceleration\r\n * @extends Phaser.Physics.Arcade.Components.Angular\r\n * @extends Phaser.Physics.Arcade.Components.Bounce\r\n * @extends Phaser.Physics.Arcade.Components.Debug\r\n * @extends Phaser.Physics.Arcade.Components.Drag\r\n * @extends Phaser.Physics.Arcade.Components.Enable\r\n * @extends Phaser.Physics.Arcade.Components.Friction\r\n * @extends Phaser.Physics.Arcade.Components.Gravity\r\n * @extends Phaser.Physics.Arcade.Components.Immovable\r\n * @extends Phaser.Physics.Arcade.Components.Mass\r\n * @extends Phaser.Physics.Arcade.Components.Size\r\n * @extends Phaser.Physics.Arcade.Components.Velocity\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.GetBounds\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.Pipeline\r\n * @extends Phaser.GameObjects.Components.ScaleMode\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.Texture\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\r\nvar ArcadeImage = new Class({\r\n\r\n    Extends: Image,\r\n\r\n    Mixins: [\r\n        Components.Acceleration,\r\n        Components.Angular,\r\n        Components.Bounce,\r\n        Components.Debug,\r\n        Components.Drag,\r\n        Components.Enable,\r\n        Components.Friction,\r\n        Components.Gravity,\r\n        Components.Immovable,\r\n        Components.Mass,\r\n        Components.Size,\r\n        Components.Velocity\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function ArcadeImage (scene, x, y, texture, frame)\r\n    {\r\n        Image.call(this, scene, x, y, texture, frame);\r\n\r\n        /**\r\n         * This Game Object's Physics Body.\r\n         *\r\n         * @name Phaser.Physics.Arcade.Image#body\r\n         * @type {?(Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody)}\r\n         * @default null\r\n         * @since 3.0.0\r\n         */\r\n        this.body = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = ArcadeImage;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","Components","Image","ArcadeImage","Extends","Mixins","Acceleration","Angular","Bounce","Debug","Drag","Enable","Friction","Gravity","Immovable","Mass","Size","Velocity","initialize","scene","x","y","texture","frame","call","body"]
}
