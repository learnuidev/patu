{
"version":3,
"file":"module$node_modules$Phaser$src$utils$array$EachInRange.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOnH,IAAIC,UAAYH,OAAA,CAAQ,sDAAR,CA2ChBC,OAAAC,QAAA,CA1BkBE,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkBC,OAAlB,CAA2BC,UAA3B,CAAuCC,QAAvC,CAC3B,CACuBC,IAAAA,EAAnB,GAAIF,UAAJ,GAAgCA,UAAhC,CAA6C,CAA7C,CACiBE,KAAAA,EAAjB,GAAID,QAAJ,GAA8BA,QAA9B,CAAyCJ,KAAAM,OAAzC,CAEA,IAAIR,SAAA,CAAUE,KAAV,CAAiBG,UAAjB,CAA6BC,QAA7B,CAAJ,CACA,CACI,IAAIG,CAAJ,CACIC,KAAO,CAAE,IAAF,CAEX,KAAKD,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBE,SAAAH,OAAhB,CAAkCC,CAAA,EAAlC,CAEIC,IAAAE,KAAA,CAAUD,SAAA,CAAUF,CAAV,CAAV,CAGJ,KAAKA,CAAL,CAASJ,UAAT,CAAqBI,CAArB,CAAyBH,QAAzB,CAAmCG,CAAA,EAAnC,CAEIC,IAAA,CAAK,CAAL,CAEA,CAFUR,KAAA,CAAMO,CAAN,CAEV,CAAAN,QAAAU,MAAA,CAAeT,OAAf;AAAwBM,IAAxB,CAbR,CAiBA,MAAOR,MAtBX,CAzBmH;",
"sources":["node_modules/Phaser/src/utils/array/EachInRange.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$array$EachInRange\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar SafeRange = require('./SafeRange');\r\n\r\n/**\r\n * Passes each element in the array, between the start and end indexes, to the given callback.\r\n *\r\n * @function Phaser.Utils.Array.EachInRange\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search.\r\n * @param {function} callback - A callback to be invoked for each item in the array.\r\n * @param {object} context - The context in which the callback is invoked.\r\n * @param {integer} startIndex - The start index to search from.\r\n * @param {integer} endIndex - The end index to search to.\r\n * @param {...*} [args] - Additional arguments that will be passed to the callback, after the child.\r\n *\r\n * @return {array} The input array.\r\n */\r\nvar EachInRange = function (array, callback, context, startIndex, endIndex)\r\n{\r\n    if (startIndex === undefined) { startIndex = 0; }\r\n    if (endIndex === undefined) { endIndex = array.length; }\r\n\r\n    if (SafeRange(array, startIndex, endIndex))\r\n    {\r\n        var i;\r\n        var args = [ null ];\r\n\r\n        for (i = 5; i < arguments.length; i++)\r\n        {\r\n            args.push(arguments[i]);\r\n        }\r\n\r\n        for (i = startIndex; i < endIndex; i++)\r\n        {\r\n            args[0] = array[i];\r\n\r\n            callback.apply(context, args);\r\n        }\r\n    }\r\n\r\n    return array;\r\n};\r\n\r\nmodule.exports = EachInRange;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","SafeRange","EachInRange","array","callback","context","startIndex","endIndex","undefined","length","i","args","arguments","push","apply"]
}
