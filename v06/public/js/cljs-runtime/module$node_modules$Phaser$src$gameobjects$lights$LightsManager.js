shadow$provide.module$node_modules$Phaser$src$gameobjects$lights$LightsManager=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var Light=require("module$node_modules$Phaser$src$gameobjects$lights$Light"),LightPipeline=require("module$node_modules$Phaser$src$renderer$webgl$pipelines$ForwardDiffuseLightPipeline"),Utils=require("module$node_modules$Phaser$src$renderer$webgl$Utils");require=new global({initialize:function(){this.lightPool=[];this.lights=
[];this.culledLights=[];this.ambientColor={r:.1,g:.1,b:.1};this.active=!1},enable:function(){this.active=!0;return this},disable:function(){this.active=!1;return this},cull:function(camera){for(var lights=this.lights,culledLights=this.culledLights,length=lights.length,cameraCenterX=camera.x+camera.width/2,cameraCenterY=camera.y+camera.height/2,cameraRadius=(camera.width+camera.height)/2,point={x:0,y:0},cameraMatrix=camera.matrix,viewportHeight=this.systems.game.config.height,index=culledLights.length=
0;index<length&&culledLights.length<LightPipeline.LIGHT_COUNT;++index){var light=lights[index];cameraMatrix.transformPoint(light.x,light.y,point);var dx=cameraCenterX-(point.x-camera.scrollX*light.scrollFactorX*camera.zoom),dy=cameraCenterY-(viewportHeight-(point.y-camera.scrollY*light.scrollFactorY*camera.zoom));Math.sqrt(dx*dx+dy*dy)<light.radius+cameraRadius&&culledLights.push(lights[index])}return culledLights},forEachLight:function(callback){if(callback){for(var lights=this.lights,length=lights.length,
index=0;index<length;++index)callback(lights[index]);return this}},setAmbientColor:function(rgb){rgb=Utils.getFloatsFromUintRGB(rgb);this.ambientColor.r=rgb[0];this.ambientColor.g=rgb[1];this.ambientColor.b=rgb[2];return this},getMaxVisibleLights:function(){return 10},getLightCount:function(){return this.lights.length},addLight:function(x,y,radius,rgb,intensity){x=void 0===x?0:x;y=void 0===y?0:y;radius=void 0===radius?100:radius;intensity=void 0===intensity?1:intensity;rgb=Utils.getFloatsFromUintRGB(void 0===
rgb?16777215:rgb);if(0<this.lightPool.length){var light=this.lightPool.pop();light.set(x,y,radius,rgb[0],rgb[1],rgb[2],intensity)}else light=new Light(x,y,radius,rgb[0],rgb[1],rgb[2],intensity);this.lights.push(light);return light},removeLight:function(light){var index=this.lights.indexOf(light);0<=index&&(this.lightPool.push(light),this.lights.splice(index,1));return this},shutdown:function(){for(;0<this.lights.length;)this.lightPool.push(this.lights.pop());this.ambientColor={r:.1,g:.1,b:.1};this.culledLights.length=
0;this.lights.length=0},destroy:function(){this.shutdown()}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$lights$LightsManager.js.map
