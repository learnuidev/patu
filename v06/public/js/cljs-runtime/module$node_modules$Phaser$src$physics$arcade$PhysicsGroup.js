shadow$provide.module$node_modules$Phaser$src$physics$arcade$PhysicsGroup=function(global,require,module,exports){var ArcadeSprite=require("module$node_modules$Phaser$src$physics$arcade$ArcadeSprite");global=require("module$node_modules$Phaser$src$utils$Class");var CONST=require("module$node_modules$Phaser$src$physics$arcade$const"),GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),Group=require("module$node_modules$Phaser$src$gameobjects$group$Group"),IsPlainObject=
require("module$node_modules$Phaser$src$utils$object$IsPlainObject");require=new global({Extends:Group,initialize:function(world,scene,children,config){children||config?IsPlainObject(children)?(config=children,children=null,config.createCallback=this.createCallbackHandler,config.removeCallback=this.removeCallbackHandler):Array.isArray(children)&&IsPlainObject(children[0])&&(config=children,children=null,config.forEach(function(singleConfig){singleConfig.createCallback=this.createCallbackHandler;singleConfig.removeCallback=
this.removeCallbackHandler})):config={createCallback:this.createCallbackHandler,removeCallback:this.removeCallbackHandler};this.world=world;config.classType=GetFastValue(config,"classType",ArcadeSprite);this.physicsType=CONST.DYNAMIC_BODY;this.defaults={setCollideWorldBounds:GetFastValue(config,"collideWorldBounds",!1),setAccelerationX:GetFastValue(config,"accelerationX",0),setAccelerationY:GetFastValue(config,"accelerationY",0),setAllowDrag:GetFastValue(config,"allowDrag",!0),setAllowGravity:GetFastValue(config,
"allowGravity",!0),setAllowRotation:GetFastValue(config,"allowRotation",!0),setBounceX:GetFastValue(config,"bounceX",0),setBounceY:GetFastValue(config,"bounceY",0),setDragX:GetFastValue(config,"dragX",0),setDragY:GetFastValue(config,"dragY",0),setGravityX:GetFastValue(config,"gravityX",0),setGravityY:GetFastValue(config,"gravityY",0),setFrictionX:GetFastValue(config,"frictionX",0),setFrictionY:GetFastValue(config,"frictionY",0),setVelocityX:GetFastValue(config,"velocityX",0),setVelocityY:GetFastValue(config,
"velocityY",0),setAngularVelocity:GetFastValue(config,"angularVelocity",0),setAngularAcceleration:GetFastValue(config,"angularAcceleration",0),setAngularDrag:GetFastValue(config,"angularDrag",0),setMass:GetFastValue(config,"mass",1),setImmovable:GetFastValue(config,"immovable",!1)};Group.call(this,scene,children,config)},createCallbackHandler:function(child){child.body||this.world.enableBody(child,CONST.DYNAMIC_BODY);child=child.body;for(var key in this.defaults)child[key](this.defaults[key])},removeCallbackHandler:function(child){child.body&&
this.world.disableBody(child)},setVelocity:function(x,y,step){void 0===step&&(step=0);for(var items=this.getChildren(),i=0;i<items.length;i++)items[i].body.velocity.set(x+i*step,y+i*step);return this},setVelocityX:function(value,step){void 0===step&&(step=0);for(var items=this.getChildren(),i=0;i<items.length;i++)items[i].body.velocity.x=value+i*step;return this},setVelocityY:function(value,step){void 0===step&&(step=0);for(var items=this.getChildren(),i=0;i<items.length;i++)items[i].body.velocity.y=
value+i*step;return this}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$arcade$PhysicsGroup.js.map
