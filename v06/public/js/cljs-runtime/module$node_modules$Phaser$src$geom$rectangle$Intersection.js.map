{
"version":3,
"file":"module$node_modules$Phaser$src$geom$rectangle$Intersection.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,2DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOvH,IAAIC,UAAYH,OAAA,CAAQ,yDAAR,CAAhB,CACII,WAAaJ,OAAA,CAAQ,qEAAR,CAqCjBC,OAAAC,QAAA,CAnBmBG,QAAS,CAACC,KAAD,CAAQC,KAAR,CAAeC,GAAf,CAC5B,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,IAAIL,SAAnC,CAEIC,WAAA,CAAWE,KAAX,CAAkBC,KAAlB,CAAJ,EAEIC,GAAAE,EAGA,CAHQC,IAAAC,IAAA,CAASN,KAAAI,EAAT,CAAkBH,KAAAG,EAAlB,CAGR,CAFAF,GAAAK,EAEA,CAFQF,IAAAC,IAAA,CAASN,KAAAO,EAAT,CAAkBN,KAAAM,EAAlB,CAER,CADAL,GAAAM,MACA,CADYH,IAAAI,IAAA,CAAST,KAAAU,MAAT,CAAsBT,KAAAS,MAAtB,CACZ,CADiDR,GAAAE,EACjD,CAAAF,GAAAS,OAAA;AAAaN,IAAAI,IAAA,CAAST,KAAAY,OAAT,CAAuBX,KAAAW,OAAvB,CAAb,CAAoDV,GAAAK,EALxD,EASIL,GAAAW,SAAA,EAGJ,OAAOX,IAfX,CA3BuH;",
"sources":["node_modules/Phaser/src/geom/rectangle/Intersection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$rectangle$Intersection\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Rectangle = require('./Rectangle');\r\nvar Intersects = require('../intersects/RectangleToRectangle');\r\n\r\n/**\r\n * Takes two Rectangles and first checks to see if they intersect.\r\n * If they intersect it will return the area of intersection in the `out` Rectangle.\r\n * If they do not intersect, the `out` Rectangle will have a width and height of zero.\r\n *\r\n * @function Phaser.Geom.Rectangle.Intersection\r\n * @since 3.11.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle to get the intersection from.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle to get the intersection from.\r\n * @param {Phaser.Geom.Rectangle} [out] - A Rectangle to store the intersection results in.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The intersection result. If the width and height are zero, no intersection occurred.\r\n */\r\nvar Intersection = function (rectA, rectB, out)\r\n{\r\n    if (out === undefined) { out = new Rectangle(); }\r\n\r\n    if (Intersects(rectA, rectB))\r\n    {\r\n        out.x = Math.max(rectA.x, rectB.x);\r\n        out.y = Math.max(rectA.y, rectB.y);\r\n        out.width = Math.min(rectA.right, rectB.right) - out.x;\r\n        out.height = Math.min(rectA.bottom, rectB.bottom) - out.y;\r\n    }\r\n    else\r\n    {\r\n        out.setEmpty();\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Intersection;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Rectangle","Intersects","Intersection","rectA","rectB","out","undefined","x","Math","max","y","width","min","right","height","bottom","setEmpty"]
}
