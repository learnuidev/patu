{
"version":3,
"file":"module$node_modules$Phaser$src$geom$rectangle$Decompose.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+BpHD,MAAAC,QAAA,CAZgBC,QAAS,CAACC,IAAD,CAAOC,GAAP,CACzB,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,EAA/B,CAEAA,IAAAE,KAAA,CAAS,CAAEC,EAAGJ,IAAAI,EAAL,CAAaC,EAAGL,IAAAK,EAAhB,CAAT,CACAJ,IAAAE,KAAA,CAAS,CAAEC,EAAGJ,IAAAM,MAAL,CAAiBD,EAAGL,IAAAK,EAApB,CAAT,CACAJ,IAAAE,KAAA,CAAS,CAAEC,EAAGJ,IAAAM,MAAL,CAAiBD,EAAGL,IAAAO,OAApB,CAAT,CACAN,IAAAE,KAAA,CAAS,CAAEC,EAAGJ,IAAAI,EAAL,CAAaC,EAAGL,IAAAO,OAAhB,CAAT,CAEA,OAAON,IARX,CApBoH;",
"sources":["node_modules/Phaser/src/geom/rectangle/Decompose.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$rectangle$Decompose\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Create an array of points for each corner of a Rectangle\r\n * If an array is specified, each point object will be added to the end of the array, otherwise a new array will be created.\r\n *\r\n * @function Phaser.Geom.Rectangle.Decompose\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle object to be decomposed.\r\n * @param {array} [out] - If provided, each point will be added to this array.\r\n *\r\n * @return {array} Will return the array you specified or a new array containing the points of the Rectangle.\r\n */\r\nvar Decompose = function (rect, out)\r\n{\r\n    if (out === undefined) { out = []; }\r\n\r\n    out.push({ x: rect.x, y: rect.y });\r\n    out.push({ x: rect.right, y: rect.y });\r\n    out.push({ x: rect.right, y: rect.bottom });\r\n    out.push({ x: rect.x, y: rect.bottom });\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Decompose;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Decompose","rect","out","undefined","push","x","y","right","bottom"]
}
