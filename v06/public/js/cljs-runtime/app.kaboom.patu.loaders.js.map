{"version":3,"sources":["app/kaboom/patu/loaders.cljs"],"mappings":";;;;;;;;AAQA,AAAA,AAAA,AAAAA,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD;AAAN,AAEG,AAAME,AAAK,AAAA,AAAA,AAAAC,AAAQC;AAAnB,AACE,AAACC,AAAcH;;;AAHpB,AAAA,AAAA,AAAMF,AAIFM;AAJJ,AAKG,AAAMJ,AAAK,AAAA,AAAA,AAAAC,AAAQC;AAAnB,AACE,AAACC,AAAcH,AAAKI;;;AANzB,AAAA,AAAA,AAAMN;;AAAN,AAQA,AAAA,AAAA,AAAAF,AAAMU;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAP,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMO,AACFC,AAAMH,AAAII;AADd,AAEG,AAAMR,AAAK,AAAA,AAAA,AAAAC,AAAQC;AAAnB,AACE,AAACO,AAAgBT,AAAKO,AAAMH,AAAII;;;AAHrC,AAAA,AAAA,AAAMF,AAIFC,AAAMH;AAJV,AAKG,AAAMJ,AAAK,AAAA,AAAA,AAAAC,AAAQC;AAAnB,AACE,AAACO,AAAgBT,AAAKO,AAAMH;;;AANjC,AAAA,AAAA,AAAME;;AAAN,AAQA,AAAA,AAAMI,AAAeH,AAAMH,AAAIO;AAA/B,AACE,AAACC,AAAkB,AAAA,AAAA,AAAAX,AAAQC,AAAYK,AAAMH,AAAIO;;AAEnD,AAAA,AAAME,AAAab,AAAKc,AAAGC;AAA3B,AACE,AAAYf,AAAK,AAACgB,AAAKF,AAAIC;;AAE7B,AAAA,AAAME,AAAYH,AAAGC;AAArB,AACE,AAACF,AAAY,AAAA,AAAA,AAAAZ,AAAQC,AAAYY,AAAGC","names":["var_args","G__64184","app.kaboom.patu.loaders/load-root","js/Error","game","cljs.core/deref","app.kaboom.patu.state/game-state","app.kaboom.patu.lib.load_root","url","G__64186","app.kaboom.patu.loaders/load-sprite","title","opts","app.kaboom.patu.lib.load_sprite","app.kaboom.patu.loaders/load-aseprite","url2","app.kaboom.patu.lib/load-aseprite","app.kaboom.patu.loaders/load-sound!","id","src","cljs.core/name","app.kaboom.patu.loaders/load-sound"],"sourcesContent":["(ns app.kaboom.patu.loaders\n  (:require [app.kaboom.patu.components :as c :refer [cis action]]\n            [app.kaboom.patu.utils :refer [js-get]]\n            [app.kaboom.patu.lib :as lib]\n            [goog.object :as obj]\n            [app.kaboom.patu.cam :as cam]\n            [app.kaboom.patu.state :refer [game-state]]))\n\n(defn load-root\n  ([]\n   (let [game (:game @game-state)]\n     (lib/load-root game)))\n  ([url]\n   (let [game (:game @game-state)]\n     (lib/load-root game url))))\n\n(defn load-sprite\n  ([title url opts]\n   (let [game (:game @game-state)]\n     (lib/load-sprite game title url opts)))\n  ([title url]\n   (let [game (:game @game-state)]\n     (lib/load-sprite game title url))))\n\n(defn load-aseprite [title url url2]\n  (lib/load-aseprite (:game @game-state) title url url2))\n\n(defn load-sound! [game id src]\n  (.loadSound game (name id) src))\n\n(defn load-sound [id src]\n  (load-sound! (:game @game-state) id src))\n"]}