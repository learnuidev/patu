shadow$provide.module$node_modules$Phaser$src$gameobjects$components$GetBounds=function(global,require,module,exports){var Rectangle=require("module$node_modules$Phaser$src$geom$rectangle$Rectangle"),RotateAround=require("module$node_modules$Phaser$src$math$RotateAround"),Vector2=require("module$node_modules$Phaser$src$math$Vector2");module.exports={getCenter:function(output){void 0===output&&(output=new Vector2);output.x=this.x-this.displayWidth*this.originX+this.displayWidth/2;output.y=this.y-this.displayHeight*
this.originY+this.displayHeight/2;return output},getTopLeft:function(output,includeParent){output||(output=new Vector2);void 0===includeParent&&(includeParent=!1);output.x=this.x-this.displayWidth*this.originX;output.y=this.y-this.displayHeight*this.originY;0!==this.rotation&&RotateAround(output,this.x,this.y,this.rotation);includeParent&&this.parentContainer&&this.parentContainer.getBoundsTransformMatrix().transformPoint(output.x,output.y,output);return output},getTopRight:function(output,includeParent){output||
(output=new Vector2);void 0===includeParent&&(includeParent=!1);output.x=this.x-this.displayWidth*this.originX+this.displayWidth;output.y=this.y-this.displayHeight*this.originY;0!==this.rotation&&RotateAround(output,this.x,this.y,this.rotation);includeParent&&this.parentContainer&&this.parentContainer.getBoundsTransformMatrix().transformPoint(output.x,output.y,output);return output},getBottomLeft:function(output,includeParent){output||(output=new Vector2);void 0===includeParent&&(includeParent=!1);
output.x=this.x-this.displayWidth*this.originX;output.y=this.y-this.displayHeight*this.originY+this.displayHeight;0!==this.rotation&&RotateAround(output,this.x,this.y,this.rotation);includeParent&&this.parentContainer&&this.parentContainer.getBoundsTransformMatrix().transformPoint(output.x,output.y,output);return output},getBottomRight:function(output,includeParent){output||(output=new Vector2);void 0===includeParent&&(includeParent=!1);output.x=this.x-this.displayWidth*this.originX+this.displayWidth;
output.y=this.y-this.displayHeight*this.originY+this.displayHeight;0!==this.rotation&&RotateAround(output,this.x,this.y,this.rotation);includeParent&&this.parentContainer&&this.parentContainer.getBoundsTransformMatrix().transformPoint(output.x,output.y,output);return output},getBounds:function(output){void 0===output&&(output=new Rectangle);if(this.parentContainer){var BRx=this.parentContainer.getBoundsTransformMatrix();this.getTopLeft(output);BRx.transformPoint(output.x,output.y,output);var TLx=
output.x;var TLy=output.y;this.getTopRight(output);BRx.transformPoint(output.x,output.y,output);var TRx=output.x;var TRy=output.y;this.getBottomLeft(output);BRx.transformPoint(output.x,output.y,output);var BLx=output.x;var BLy=output.y;this.getBottomRight(output);BRx.transformPoint(output.x,output.y,output)}else this.getTopLeft(output),TLx=output.x,TLy=output.y,this.getTopRight(output),TRx=output.x,TRy=output.y,this.getBottomLeft(output),BLx=output.x,BLy=output.y,this.getBottomRight(output);BRx=output.x;
var BRy=output.y;output.x=Math.min(TLx,TRx,BLx,BRx);output.y=Math.min(TLy,TRy,BLy,BRy);output.width=Math.max(TLx,TRx,BLx,BRx)-output.x;output.height=Math.max(TLy,TRy,BLy,BRy)-output.y;return output}}}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$components$GetBounds.js.map
