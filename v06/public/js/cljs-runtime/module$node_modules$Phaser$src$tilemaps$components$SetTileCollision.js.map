{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$components$SetTileCollision.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,oEAAA,CAAwF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA8BhID,MAAAC,QAAA,CAZuBC,QAAS,CAACC,IAAD,CAAOC,QAAP,CAChC,CACQA,QAAJ,CAEID,IAAAE,aAAA,CAAkB,CAAA,CAAlB,CAAwB,CAAA,CAAxB,CAA8B,CAAA,CAA9B,CAAoC,CAAA,CAApC,CAA0C,CAAA,CAA1C,CAFJ,CAMIF,IAAAG,eAAA,CAAoB,CAAA,CAApB,CAPR,CAnBgI;",
"sources":["node_modules/Phaser/src/tilemaps/components/SetTileCollision.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$components$SetTileCollision\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Internally used method to set the colliding state of a tile. This does not recalculate\r\n * interesting faces.\r\n *\r\n * @function Phaser.Tilemaps.Components.SetTileCollision\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Tilemaps.Tile} tile - The Tile to set the collision on.\r\n * @param {boolean} [collides=true] - Should the tile index collide or not?\r\n */\r\nvar SetTileCollision = function (tile, collides)\r\n{\r\n    if (collides)\r\n    {\r\n        tile.setCollision(true, true, true, true, false);\r\n    }\r\n    else\r\n    {\r\n        tile.resetCollision(false);\r\n    }\r\n};\r\n\r\nmodule.exports = SetTileCollision;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","SetTileCollision","tile","collides","setCollision","resetCollision"]
}
