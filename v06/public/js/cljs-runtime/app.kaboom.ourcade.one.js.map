{"version":3,"sources":["app/kaboom/ourcade/one.cljs"],"mappings":"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","names":["app$kaboom$ourcade$one$ITransform$scale_BANG_$dyn","x__4428__auto__","m__4429__auto__","app.kaboom.ourcade.one/scale!","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","app.kaboom.ourcade.one/ITransform","this","value","app$kaboom$ourcade$one$IEntity$play$dyn","app.kaboom.ourcade.one/play","app$kaboom$ourcade$one$IEntity$scale_x_BANG_$dyn","app.kaboom.ourcade.one/scale-x!","app$kaboom$ourcade$one$IEntity$scale_y_BANG_$dyn","app.kaboom.ourcade.one/scale-y!","app$kaboom$ourcade$one$IEntity$move$dyn","app.kaboom.ourcade.one/move","app$kaboom$ourcade$one$IEntity$jump$dyn","app.kaboom.ourcade.one/jump","app$kaboom$ourcade$one$IEntity$action$dyn","app.kaboom.ourcade.one/action","app$kaboom$ourcade$one$IEntity$pos$dyn","app.kaboom.ourcade.one/pos","app.kaboom.ourcade.one/IEntity","animation-id","pos","x","y","handler","app$kaboom$ourcade$one$IBiggify$big_QMARK_$dyn","app.kaboom.ourcade.one/big?","app$kaboom$ourcade$one$IBiggify$timer$dyn","app.kaboom.ourcade.one/timer","app$kaboom$ourcade$one$IBiggify$biggify$dyn","app.kaboom.ourcade.one/biggify","app$kaboom$ourcade$one$IBiggify$smallify$dyn","app.kaboom.ourcade.one/smallify","app$kaboom$ourcade$one$IBiggify$update_BANG_$dyn","app.kaboom.ourcade.one/update!","app.kaboom.ourcade.one/IBiggify","_","cljs.core/PROTOCOL_SENTINEL","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","app.kaboom.ourcade.one/Player","app.kaboom.ourcade.one/->Player","player","cljs.core/name","app$kaboom$ourcade$one$IKaboom$width$dyn","app.kaboom.ourcade.one/width","app$kaboom$ourcade$one$IKaboom$vec2$dyn","app.kaboom.ourcade.one/vec2","app$kaboom$ourcade$one$IKaboom$height$dyn","app.kaboom.ourcade.one/height","app$kaboom$ourcade$one$IKaboom$text_BANG_$dyn","app.kaboom.ourcade.one/text!","app$kaboom$ourcade$one$IKaboom$add_BANG_$dyn","app.kaboom.ourcade.one/add!","app$kaboom$ourcade$one$IKaboom$pos_BANG_$dyn","app.kaboom.ourcade.one/pos!","app$kaboom$ourcade$one$IKaboom$scene_BANG_$dyn","app.kaboom.ourcade.one/scene!","app$kaboom$ourcade$one$IKaboom$start_BANG_$dyn","app.kaboom.ourcade.one/start!","app$kaboom$ourcade$one$IKaboom$load_aseprite_BANG_$dyn","app.kaboom.ourcade.one/load-aseprite!","app$kaboom$ourcade$one$IKaboom$load_sprite_BANG_$dyn","app.kaboom.ourcade.one/load-sprite!","var_args","G__44946","js/Error","app$kaboom$ourcade$one$IKaboom$add_level_BANG_$dyn","app.kaboom.ourcade.one/add-level!","app$kaboom$ourcade$one$IKaboom$origin_BANG_$dyn","app.kaboom.ourcade.one/origin!","app$kaboom$ourcade$one$IKaboom$go_BANG_$dyn","app.kaboom.ourcade.one/go!","app$kaboom$ourcade$one$IKaboom$rect_BANG_$dyn","app.kaboom.ourcade.one/rect!","app$kaboom$ourcade$one$IKaboom$body$dyn","app.kaboom.ourcade.one/body","app$kaboom$ourcade$one$IKaboom$solid$dyn","app.kaboom.ourcade.one/solid","app$kaboom$ourcade$one$IKaboom$sprite$dyn","app.kaboom.ourcade.one/sprite","app$kaboom$ourcade$one$IKaboom$key_press$dyn","app.kaboom.ourcade.one/key-press","app$kaboom$ourcade$one$IKaboom$key_release$dyn","app.kaboom.ourcade.one/key-release","app$kaboom$ourcade$one$IKaboom$key_down$dyn","app.kaboom.ourcade.one/key-down","app$kaboom$ourcade$one$IKaboom$cam_pos$dyn","app.kaboom.ourcade.one/cam-pos","app.kaboom.ourcade.one/IKaboom","font-size","type","func","sprite-id","asset-path-1","asset-path-2","asset-path","options","width","height","id","app.kaboom.ourcade.one/Kaboom","app.kaboom.ourcade.one/->Kaboom","g","cljs.core/clj->js","scene-id","G__44948","app.kaboom.ourcade.one/kaboom!","app.kaboom.ourcade.one.kaboom_BANG_","js/kaboom","app.kaboom.ourcade.one/game","js/document.querySelector","app.kaboom.ourcade.one/reg-scene","game","text","origin","app.kaboom.ourcade.one/add-level","app.kaboom.ourcade.one/add-player","app.kaboom.ourcade.one/level","app.kaboom.ourcade.one/level-handler","config","times-jumped","cljs.core.atom","cljs.core.swap_BANG_","cljs.core/inc","app.kaboom.ourcade.one/biggify-component","state","update-fn","cljs.core.partial","cljs.core/swap!","biggify","js/console.log","smallify","update","cljs.core/deref","cljs.core.merge","app.kaboom.ourcade.one/component-handler","cljs.core.print","*print-newline*-orig-val__44949","cljs.core/*print-newline*","*print-newline*-temp-val__44950","sb__4667__auto__","goog.string/StringBuffer","*print-newline*-orig-val__44951","*print-fn*-orig-val__44952","cljs.core/*print-fn*","*print-newline*-temp-val__44953","*print-fn*-temp-val__44954","x__4668__auto__","cljs.repl/print-doc","app.kaboom.ourcade.one/app"],"sourcesContent":["(ns app.kaboom.ourcade.one\n  (:require [clojure.repl :refer [doc]]\n            [clojure.spec.alpha :as s]\n            [clojure.spec.gen.alpha :as gen]))\n\n(defprotocol ITransform\n  (scale! [this value]))\n\n(defprotocol IEntity\n  (play [this animation-id])\n  (scale-x! [this pos value])\n  (scale-y! [this pos value])\n  (move [this x y])\n  (jump [this value])\n  (action [this handler])\n  (pos [this]))\n\n;; === Player\n(defprotocol IBiggify\n  (big? [_])\n  (timer [_])\n  (biggify [_])\n  (smallify [_])\n  (update! [_]))\n\n(deftype Player [player]\n  IEntity\n  (play [_ animation-id]\n    (.play player (name animation-id)))\n  (scale-x! [_ pos value]\n    (set! (.. player -scale -x) value))\n  (scale-y! [_ pos value]\n    (set! (.. player -scale -y) value))\n  (move [_ x y]\n    (.move player x y))\n  (jump [_ value]\n    (.jump player value))\n  (action [_ handler]\n    (.action player handler))\n  (pos [_]\n    (.-pos player))\n  ITransform\n  (scale! [this value]\n    (.scale player value))\n  IBiggify\n  (big? [_]\n    (.-isBig player))\n  (timer [_]\n    (.-timer player))\n  (biggify [_]\n    (.biggify player))\n  (smallify [_]\n    (.smallify player))\n  (update! [_]\n    (.update player)))\n\n(comment\n  (doc load-sprite))\n;; == Protocol\n(defprotocol IKaboom\n  \"IKaboom protocol abstraction\"\n  (width [this])\n  (vec2 [this value])\n  (height [this])\n  (text! [this value font-size])\n  (add! [this value] \"Add a game object to scene\")\n  (pos! [this x y])\n  (scene! [this type func])\n  (start! [this value])\n  (load-aseprite! [this sprite-id asset-path-1 asset-path-2])\n  (load-sprite! [this sprite-id asset-path] [this sprite-id asset-path options]\n    \"Description:\n      - Loads a sprite\n      - Accepts three arguments\n         - 1. game       - kaboom instance. object\n         - 2. sprit-id   - id of the sprite. keyword\n         - 3. asset-path - public path of the asset. string\n    Example usage:\n      - (load-sprite! game :player 'assets/player.png')\")\n  ; (scale! [this value])\n  (add-level! [this value options] \"Add a new level\")\n  (origin! [this value]\n    \"Description:\n      - Sets the origin value:\n      - Accepts one argument\n          - 1. origin-id - string or keyword\n   Example usage:\n      - (set-origin! game :center)\")\n  (go! [this value]\n    \"Description:\n      - Sets the origin value:\n      - Accepts one argument\n          - 1. origin-id - string or keyword\n   Example usage:\n      - (set-origin! game :center)\")\n  (rect! [this width height]\n    \"Description:\n      - Sets the origin value:\n      - Accepts one argument\n          - 1. origin-id - string or keyword\n   Example usage:\n      - (set-origin! game :center)\")\n  (body [this]\n    \"Description:\n      - Sets the origin value:\n      - Accepts one argument\n          - 1. origin-id - string or keyword\n   Example usage:\n      - (set-origin! game :center)\")\n  (solid [this]\n    \"Description:\n      - Sets the origin value:\n      - Accepts one argument\n          - 1. origin-id - string or keyword\n   Example usage:\n      - (set-origin! game :center)\")\n  (sprite [this sprite-id options]\n    \"Description:\n      - Sets the origin value:\n      - Accepts one argument\n          - 1. origin-id - string or keyword\n   Example usage:\n      - (set-origin! game :center)\")\n  (key-press [this id handler]\n    \"Description:\n      - Sets the origin value:\n      - Accepts one argument\n          - 1. origin-id - string or keyword\n   Example usage:\n      - (set-origin! game :center)\")\n  (key-release [this id handler]\n    \"Description:\n      - Sets the origin value:\n      - Accepts one argument\n          - 1. origin-id - string or keyword\n   Example usage:\n      - (set-origin! game :center)\")\n  (key-down [this id handler]\n    \"Description:\n      - Sets the origin value:\n      - Accepts one argument\n          - 1. origin-id - string or keyword\n   Example usage:\n      - (set-origin! game :center)\")\n  (cam-pos [this value]\n    \"Description:\n      - Sets the origin value:\n      - Accepts one argument\n          - 1. origin-id - string or keyword\n   Example usage:\n      - (set-origin! game :center)\"))\n(comment\n  (doc load-sprite)\n  (doc add)\n  (doc scale)\n  (doc set-origin!)\n  (name \"hello\"))\n\n(deftype Kaboom [^js/kaboom g]\n  IKaboom\n  (width [this]\n    (.width g))\n  (height  [this]\n    (.height g))\n  (text! [this value font-size]\n    (.text g value font-size))\n  (pos! [this x y]\n    (.pos g x y))\n  #_(add! [_ value] (.add g (clj->js value)))\n  (add! [_ value]\n    (.add g (clj->js value)))\n  (scene! [_ scene-id func]\n    (.scene g (name scene-id) func))\n  (start! [_ scene-id]\n    (.start g (name scene-id)))\n  (load-sprite! [_ sprite-id asset-path]\n    (.loadSprite g (name sprite-id) asset-path))\n  (load-sprite! [_ sprite-id asset-path options]\n    (.loadSprite g (name sprite-id) asset-path (clj->js options)))\n  (load-aseprite! [_ sprite-id asset-path asset-path-2]\n    (.loadAseprite g (name sprite-id) asset-path asset-path-2))\n  ; (scale! [_ value]\n  ;   (.scale g value))\n  (add-level! [_ value options]\n    (.addLevel g (clj->js value) (clj->js options)))\n  (origin! [_ value]\n    (.origin g (name value)))\n  (go! [_ value]\n    (.go g (name value)))\n  (rect! [_ width height]\n    (.rect g width height))\n  (body [_]\n    (.body g))\n  (solid [_]\n    (.solid g))\n  (sprite [_ sprite-id options]\n    (.sprite g (name sprite-id) (clj->js options)))\n  (key-press [_ id handler]\n    (.keyPress g (name id) handler))\n  (key-release [_ id handler]\n    (.keyRelease g (name id) handler))\n  (key-down [_ id handler]\n    (.keyDown g (name id) handler))\n  (cam-pos [_ value]\n    (.camPos g value))\n  (vec2 [_ value]\n    (.vec2 g value))\n  ITransform\n  (scale! [_ value]\n    (.scale g value)))\n\n(defn kaboom!\n  ([] (kaboom! {}))\n  ([options]\n   (->Kaboom (js/kaboom (clj->js options)))))\n\n;; 0 Create New game\n(def game (kaboom! {:debug true\n                    :width 320\n                    :height 240\n                    :scale 2.5\n                    :clearColor [0, 0, 0, 1]\n                    :canvas (js/document.querySelector \"canvas\")}))\n(comment\n  (set! js/window -game game))\n\n;; =============  ;; OLD STUFF =============\n#_(defn reg-scene [id {:keys [level config text scale pos origin go rect body?]\n                       :or {level []\n                            config {}}}]\n    (let [handler-fn (fn []\n                       (when (seq level)\n                         (add-level! game level config))\n                       (add! game [(when text   (text! game (:val text) (:size text)))\n                                   (when scale  (scale! game scale))\n                                   (when pos    (pos! game (:x pos) (:y pos)))\n                                   (when origin (origin! game (name origin)))\n                                   (when go     (go! game (name go)))\n                                   (when rect   (rect! game (:width rect) (:height rect)))\n                                   (when body?  (body! game))]))]\n      (scene! game id handler-fn)))\n#_(reg-scene\n   :main\n   {:config {:width 40\n             :height 40}\n    :level [\"      +++       \"\n            \"         \"\n            \"         \"\n            \"xxxxxxxxx\"]\n    :text {:val \"learnui\" :size 32}\n    :scale 1\n    :pos {:x 200 :y 200}})\n ;; =====\n;; =============  ;; OLD STUFF =============\n;;\n;; ===\n(defn reg-scene [id handler]\n  (scene! game id #(handler game)))\n\n;; ================== IMPLEMENTATION =================\n;; 1 Import asset\n#_(load-sprite game :scrooge \"assets/ducktales/scrooge.png\")\n(load-sprite! game\n              :tiles\n              \"assets/platformer/Tilemap/monochrome_tilemap.png\"\n              {:sliceX 20\n               :sliceY 20\n               :anims {:idle {:from 300 :to 300}\n                       :run {:from 301 :to 302}}})\n\n;; 2 Scene Registartion\n(reg-scene\n :hello-world\n (fn [game]\n   (let [text {:val \"Hello KaboomJS\" :size 16}\n         pos {:x (* (width game) 0.5) :y (* (height game) 0.5)}\n         origin :center]\n     (add! game [(pos! game (* (width game) 0.5) (* (height game) 0.5))\n                 (text! game \"Hello KaboomJS\" 16)\n                 (origin! game :center)]))))\n\n(reg-scene\n :collisions\n (fn [game]\n   (add! game [(rect! game 32 64)\n               (pos!  game (* (width game) 0.5) 200)\n               (body  game)\n               (solid game)])\n     ;; Random Text\n   (add! game [(pos!  game (* (width game) 0.5) (* (height game) 0.5))\n               (text! game \"Hello KaboomJS\" 16)\n               (origin! game :center)\n               (body game)\n               (solid game)])\n     ;; Floor\n   (add! game [(pos!  game 0 (height game))\n               (rect! game (width game) 50)\n               (solid game)])))\n\n(defn add-level [game]\n  ())\n\n(defn add-player [game]\n  (add! game [(sprite  game :tiles {:animation 0.1\n                                    :frame 300})\n              (pos!    game (* (width game) 0.5) (* (height game) 0.5))\n              (origin! game :center)\n              (scale!  game 1)]))\n(reg-scene\n :animations\n (fn [game]\n   (let [player (add-player game)]\n     ;; (js/console.log \"PLAYER\" player)\n     ;; Idle Animation\n     (play player :idle)\n     ;; Left animation\n     (key-press game :left\n                (fn []\n                  (scale-x! player :x -1)\n                  (play player :run)))\n     ;; Right animation\n     (key-press game :right\n                (fn []\n                  (scale-x! player :x 1)\n                  (play player :run)))\n     ;; Right animation\n     (key-release game :left\n                  (fn []\n                    (play player :idle)))\n     (key-release game :right\n                  (fn []\n                    (play player :idle))))))\n\n(def level\n  [\"                                            \"\n   \"                                            \"\n   \"                                            \"\n   \"                                            \"\n   \"                                            \"\n   \"                                            \"\n   \"                                            \"\n   \"                                            \"\n   \"                                            \"\n   \"    ===                                     \"\n   \"                                            \"\n   \" >   +                                     <\"\n   \"============================================\"])\n\n(defn level-handler [game]\n  (let [config {:width  16\n                :height 16\n                := [(sprite game :tiles {:frame 65})\n                    (solid  game)]\n                :< [(sprite game :tiles {:frame 92})]\n                :> [(sprite game :tiles {:frame 93})]}\n        player (add! game [(sprite  game :tiles {:animation 0.1\n                                                 :frame 300})\n                           (pos!    game (* (width game) 0.5) (* (height game) 0.5))\n                           (origin! game :center)\n                           (scale!  game 1)\n                           (body    game)])\n        times-jumped (atom 0)]\n    (add-level! game level config)\n    (play player :idle)\n    ;; Players movement\n    (key-down game :left #(move player -100 0))\n    (key-down game :right #(move player 100 0))\n    ;; Jump\n    (key-press game :space\n               (fn []\n                 (swap! times-jumped inc)\n                 (jump player 350)))\n    (key-press game :up\n               (fn []\n                 (swap! times-jumped inc)\n                 (jump player 350)))\n    ;; Left animation\n    (key-press game :left\n               (fn []\n                 (scale-x! player :x -1)\n                 (play player :run)))\n    ;; Right animation\n    (key-press game :right\n               (fn []\n                 (scale-x! player :x 1)\n                 (play player :run)))\n    ;; Right animation\n    (key-release game :left\n                 #(play player :idle))\n    (key-release game :right\n                 #(play player :idle))\n\n    ;; TODO: Camera follow player\n    (action player (fn []\n                     (cam-pos game (pos player))))))\n(reg-scene :level level-handler)\n\n;; ==== Component ====\n\n\n(defn biggify-component []\n  (this-as player\n           (let [state (atom {:isBig true\n                              :timer 0})\n                 update-fn (partial swap! state)\n                 biggify (fn []\n                           #_(scale! player (vec2 game 1))\n                           (js/console.log \"PLAYER\" player))\n                 smallify (fn [] (js/console.log \"SMALLIFY\"))\n                 update (fn [])]\n             (-> {:biggify biggify\n                  :smallify smallify\n                  :update update}\n                 (merge @state)\n                 clj->js))))\n\n(defn component-handler [game]\n  (let [config {:width  16\n                :height 16\n                := [(sprite game :tiles {:frame 65})\n                    (solid  game)]\n                :< [(sprite game :tiles {:frame 92})]\n                :> [(sprite game :tiles {:frame 93})]}\n        player (->Player (add! game [(sprite  game :tiles {:animation 0.1\n                                                           :frame 300})\n                                     (pos!    game (* (width game) 0.5) (* (height game) 0.5))\n                                     (origin! game :center)\n                                     (scale!  game 1)\n                                     (body    game)\n                                     (biggify-component)]))\n        times-jumped (atom 0)]\n    ; (js/console.log \"isBig \" (isBig player))\n    (js/console.log \"isBig \" (big? player))\n    (biggify player)\n    (add-level! game level config)\n    (play player :idle)\n    ;; Players movement\n    (key-down game :left #(move player -100 0))\n    (key-down game :right #(move player 100 0))\n    ;; Jump\n    (key-press game :space\n               (fn []\n                 (swap! times-jumped inc)\n                 (jump player 350)))\n    (key-press game :up\n               (fn []\n                 (swap! times-jumped inc)\n                 (jump player 350)))\n    ;; Left animation\n    (key-press game :left\n               (fn []\n                 (scale-x! player :x -1)\n                 (play player :run)))\n    ;; Right animation\n    (key-press game :right\n               (fn []\n                 (scale-x! player :x 1)\n                 (play player :run)))\n    ;; Right animation\n    (key-release game :left\n                 #(play player :idle))\n    (key-release game :right\n                 #(play player :idle));; TODO: Camera follow player\n    (action player (fn []\n                     (cam-pos game (pos player))))))\n(reg-scene :component component-handler)\n\n(doc action)\n(reg-scene\n :main\n (fn [game]\n   #_(go! game :hello-world)\n   #_(go! game :collisions)\n   #_(go! game :animations)\n   #_(go! game :level)\n   (go! game :component)))\n\n(comment\n  (object? #js {}))\n\n(defn app []\n  (start! game :main))\n\n(comment\n  (js/console.log (clj->js  {:well/helloWorld true}))\n  (js/console.log {}))\n\n(comment\n  (doc load-sprite))\n"]}