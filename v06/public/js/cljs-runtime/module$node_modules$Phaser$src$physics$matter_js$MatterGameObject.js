shadow$provide.module$node_modules$Phaser$src$physics$matter_js$MatterGameObject=function(global,require,module,exports){var Components=require("module$node_modules$Phaser$src$physics$matter_js$components$index"),GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),Vector2=require("module$node_modules$Phaser$src$math$Vector2");module.exports=function(world,gameObject,options){void 0===options&&(options={});var x=gameObject.x,y=gameObject.y;gameObject.body={temp:!0,position:{x:x,
y:y}};[Components.Bounce,Components.Collision,Components.Force,Components.Friction,Components.Gravity,Components.Mass,Components.Sensor,Components.SetBody,Components.Sleep,Components.Static,Components.Transform,Components.Velocity].forEach(function(mixin){for(var key in mixin){var def=mixin[key];def.get&&"function"===typeof def.get||def.set&&"function"===typeof def.set?Object.defineProperty(gameObject,key,{get:mixin[key].get,set:mixin[key].set}):Object.defineProperty(gameObject,key,{value:mixin[key]})}});
gameObject.world=world;gameObject._tempVec2=new Vector2(x,y);(world=GetFastValue(options,"shape",null))||(world="rectangle");gameObject.setBody(world,options);return gameObject}}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$MatterGameObject.js.map
