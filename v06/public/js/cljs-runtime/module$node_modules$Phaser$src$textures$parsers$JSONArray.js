shadow$provide.module$node_modules$Phaser$src$textures$parsers$JSONArray=function(global,require,module,exports){var Clone=require("module$node_modules$Phaser$src$utils$object$Clone");module.exports=function(texture,sourceIndex,json){if(json.frames||json.textures){var source=texture.source[sourceIndex];texture.add("__BASE",sourceIndex,0,0,source.width,source.height);source=Array.isArray(json.textures)?json.textures[sourceIndex].frames:json.frames;for(var newFrame,i=0;i<source.length;i++){var src=
source[i];newFrame=texture.add(src.filename,sourceIndex,src.frame.x,src.frame.y,src.frame.w,src.frame.h);src.trimmed&&newFrame.setTrim(src.sourceSize.w,src.sourceSize.h,src.spriteSourceSize.x,src.spriteSourceSize.y,src.spriteSourceSize.w,src.spriteSourceSize.h);src.rotated&&(newFrame.rotated=!0,newFrame.updateUVsInverted());src.anchor&&(newFrame.customPivot=!0,newFrame.pivotX=src.anchor.x,newFrame.pivotY=src.anchor.y);newFrame.customData=Clone(src)}for(var dataKey in json)"frames"!==dataKey&&(Array.isArray(json[dataKey])?
texture.customData[dataKey]=json[dataKey].slice(0):texture.customData[dataKey]=json[dataKey]);return texture}console.warn("Invalid Texture Atlas JSON Array")}}
//# sourceMappingURL=module$node_modules$Phaser$src$textures$parsers$JSONArray.js.map
