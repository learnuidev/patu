{
"version":3,
"file":"module$node_modules$Phaser$src$geom$rectangle$PerimeterPoint.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,6DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOzH,IAAIC,MAAQH,OAAA,CAAQ,iDAAR,CAAZ,CACII,SAAWJ,OAAA,CAAQ,8CAAR,CA2CfC,OAAAC,QAAA,CA3BqBG,QAAS,CAACC,SAAD,CAAYC,KAAZ,CAAmBC,GAAnB,CAC9B,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,IAAIL,KAAnC,CAEAI,MAAA,CAAQH,QAAA,CAASG,KAAT,CAER,KAAIG,EAAIC,IAAAC,IAAA,CAASL,KAAT,CACJM,MAAAA,CAAIF,IAAAG,IAAA,CAASP,KAAT,CAER,KAAIQ,GAAU,CAAL,CAACF,KAAD,CAAUP,SAAAU,MAAV,CAA4B,CAA5B,CAAgCV,SAAAU,MAAhC,CAAkD,EAA3D,CACIC,GAAU,CAAL,CAACP,CAAD,CAAUJ,SAAAY,OAAV,CAA6B,CAA7B,CAAiCZ,SAAAY,OAAjC,CAAoD,EAEzDP,KAAAQ,IAAA,CAASJ,EAAT;AAAcL,CAAd,CAAJ,CAAuBC,IAAAQ,IAAA,CAASF,EAAT,CAAcJ,KAAd,CAAvB,CAEII,EAFJ,CAEUF,EAFV,CAEeL,CAFf,CAEoBG,KAFpB,CAMIE,EANJ,CAMUE,EANV,CAMeJ,KANf,CAMoBH,CAGpBF,IAAAY,EAAA,CAAQL,EAAR,CAAaT,SAAAe,QACbb,IAAAc,EAAA,CAAQL,EAAR,CAAaX,SAAAiB,QAEb,OAAOf,IAvBX,CAzByH;",
"sources":["node_modules/Phaser/src/geom/rectangle/PerimeterPoint.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$rectangle$PerimeterPoint\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\nvar DegToRad = require('../../math/DegToRad');\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Rectangle.PerimeterPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - [description]\r\n * @param {integer} angle - [description]\r\n * @param {Phaser.Geom.Point} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\r\nvar PerimeterPoint = function (rectangle, angle, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    angle = DegToRad(angle);\r\n\r\n    var s = Math.sin(angle);\r\n    var c = Math.cos(angle);\r\n\r\n    var dx = (c > 0) ? rectangle.width / 2 : rectangle.width / -2;\r\n    var dy = (s > 0) ? rectangle.height / 2 : rectangle.height / -2;\r\n\r\n    if (Math.abs(dx * s) < Math.abs(dy * c))\r\n    {\r\n        dy = (dx * s) / c;\r\n    }\r\n    else\r\n    {\r\n        dx = (dy * c) / s;\r\n    }\r\n\r\n    out.x = dx + rectangle.centerX;\r\n    out.y = dy + rectangle.centerY;\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = PerimeterPoint;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Point","DegToRad","PerimeterPoint","rectangle","angle","out","undefined","s","Math","sin","c","cos","dx","width","dy","height","abs","x","centerX","y","centerY"]
}
