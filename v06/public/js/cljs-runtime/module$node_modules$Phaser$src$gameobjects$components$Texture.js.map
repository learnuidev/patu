{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$components$Texture.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA4H1HD,MAAAC,QAAA,CA3GcC,CASVC,QAAS,IATCD,CAkBVE,MAAO,IAlBGF,CA4BVG,UAAW,CAAA,CA5BDH,CA2CVI,WAAYA,QAAS,CAACC,GAAD,CAAMH,KAAN,CACrB,CACI,IAAAD,QAAA,CAAe,IAAAK,MAAAC,IAAAC,SAAAC,IAAA,CAA4BJ,GAA5B,CAEf,OAAO,KAAAK,SAAA,CAAcR,KAAd,CAHX,CA5CUF,CAqEVU,SAAUA,QAAS,CAACR,KAAD,CAAQS,UAAR,CAAoBC,YAApB,CACnB,CACuBC,IAAAA,EAAnB,GAAIF,UAAJ,GAAgCA,UAAhC,CAA6C,CAAA,CAA7C,CACqBE,KAAAA,EAArB,GAAID,YAAJ,GAAkCA,YAAlC,CAAiD,CAAA,CAAjD,CAEA,KAAAV,MAAA,CAAa,IAAAD,QAAAQ,IAAA,CAAiBP,KAAjB,CAQT,KAAAY,YAAA,CANC,IAAAZ,MAAAa,SAAL,EAA6B,IAAAb,MAAAc,UAA7B,CAMI,IAAAF,YANJ;AArFIG,CAqFJ,CAEI,IAAAH,YAFJ,CAEwB,EAOpB,KAAAI,eAAJ,EAA2BP,UAA3B,EAEI,IAAAQ,eAAA,EAGA,KAAAC,iBAAJ,EAA6BR,YAA7B,GAEQ,IAAAV,MAAAmB,YAAJ,CAEI,IAAAC,UAAA,CAAe,IAAApB,MAAAqB,OAAf,CAAkC,IAAArB,MAAAsB,OAAlC,CAFJ,CAMI,IAAAC,oBAAA,EARR,CAYA,OAAO,KAhCX,CAtEUzB,CAjB4G;",
"sources":["node_modules/Phaser/src/gameobjects/components/Texture.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$components$Texture\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n//  bitmask flag for GameObject.renderMask\r\nvar _FLAG = 8; // 1000\r\n\r\n/**\r\n * Provides methods used for getting and setting the texture of a Game Object.\r\n *\r\n * @name Phaser.GameObjects.Components.Texture\r\n * @since 3.0.0\r\n */\r\n\r\nvar Texture = {\r\n\r\n    /**\r\n     * The Texture this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Texture#texture\r\n     * @type {Phaser.Textures.Texture|Phaser.Textures.CanvasTexture}\r\n     * @since 3.0.0\r\n     */\r\n    texture: null,\r\n\r\n    /**\r\n     * The Texture Frame this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Texture#frame\r\n     * @type {Phaser.Textures.Frame}\r\n     * @since 3.0.0\r\n     */\r\n    frame: null,\r\n\r\n    /**\r\n     * Internal flag. Not to be set by this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Texture#isCropped\r\n     * @type {boolean}\r\n     * @private\r\n     * @since 3.11.0\r\n     */\r\n    isCropped: false,\r\n\r\n    /**\r\n     * Sets the texture and frame this Game Object will use to render with.\r\n     *\r\n     * Textures are referenced by their string-based keys, as stored in the Texture Manager.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Texture#setTexture\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The key of the texture to be used, as stored in the Texture Manager.\r\n     * @param {(string|integer)} [frame] - The name or index of the frame within the Texture.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setTexture: function (key, frame)\r\n    {\r\n        this.texture = this.scene.sys.textures.get(key);\r\n\r\n        return this.setFrame(frame);\r\n    },\r\n\r\n    /**\r\n     * Sets the frame this Game Object will use to render with.\r\n     *\r\n     * The Frame has to belong to the current Texture being used.\r\n     *\r\n     * It can be either a string or an index.\r\n     *\r\n     * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n     * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Texture#setFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|integer)} frame - The name or index of the frame within the Texture.\r\n     * @param {boolean} [updateSize=true] - Should this call adjust the size of the Game Object?\r\n     * @param {boolean} [updateOrigin=true] - Should this call adjust the origin of the Game Object?\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFrame: function (frame, updateSize, updateOrigin)\r\n    {\r\n        if (updateSize === undefined) { updateSize = true; }\r\n        if (updateOrigin === undefined) { updateOrigin = true; }\r\n\r\n        this.frame = this.texture.get(frame);\r\n\r\n        if (!this.frame.cutWidth || !this.frame.cutHeight)\r\n        {\r\n            this.renderFlags &= ~_FLAG;\r\n        }\r\n        else\r\n        {\r\n            this.renderFlags |= _FLAG;\r\n        }\r\n\r\n        if (this._sizeComponent && updateSize)\r\n        {\r\n            this.setSizeToFrame();\r\n        }\r\n\r\n        if (this._originComponent && updateOrigin)\r\n        {\r\n            if (this.frame.customPivot)\r\n            {\r\n                this.setOrigin(this.frame.pivotX, this.frame.pivotY);\r\n            }\r\n            else\r\n            {\r\n                this.updateDisplayOrigin();\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Texture;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Texture","texture","frame","isCropped","setTexture","key","scene","sys","textures","get","setFrame","updateSize","updateOrigin","undefined","renderFlags","cutWidth","cutHeight","_FLAG","_sizeComponent","setSizeToFrame","_originComponent","customPivot","setOrigin","pivotX","pivotY","updateDisplayOrigin"]
}
