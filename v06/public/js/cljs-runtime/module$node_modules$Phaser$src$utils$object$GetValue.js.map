{
"version":3,
"file":"module$node_modules$Phaser$src$utils$object$GetValue.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiEjHD,MAAAC,QAAA,CA1CeC,QAAS,CAACC,MAAD,CAASC,GAAT,CAAcC,YAAd,CACxB,CACI,GAAKF,MAAL,EAAiC,QAAjC,GAAe,MAAOA,OAAtB,CAIK,CAAA,GAAIA,MAAAG,eAAA,CAAsBF,GAAtB,CAAJ,CAED,MAAOD,OAAA,CAAOC,GAAP,CAEN,IAAIA,GAAAG,QAAA,CAAY,GAAZ,CAAJ,CACL,CACQC,GAAAA,CAAOJ,GAAAK,MAAA,CAAU,GAAV,CAKX,KAHA,IAAIC,MAAQL,YAAZ,CAGSM,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,GAAAI,OAApB,CAAiCD,CAAA,EAAjC,CAEI,GAAIE,MAAAP,eAAA,CAAsBE,GAAA,CAAKG,CAAL,CAAtB,CAAJ,CAGID,KAEA,CAFQG,MAAA,CAAOL,GAAA,CAAKG,CAAL,CAAP,CAER,CAAAE,MAAA,CAASA,MAAA,CAAOL,GAAA,CAAKG,CAAL,CAAP,CALb,KAQA,CAEID,KAAA,CAAQL,YACR,MAHJ,CAOJ,MAAOK,MAvBX,CALK,CAFD,MAAOL,aAHf,CAxBiH;",
"sources":["node_modules/Phaser/src/utils/object/GetValue.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$object$GetValue\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n//  Source object\r\n//  The key as a string, or an array of keys, i.e. 'banner', or 'banner.hideBanner'\r\n//  The default value to use if the key doesn't exist\r\n\r\n/**\r\n * Retrieves a value from an object.\r\n *\r\n * @function Phaser.Utils.Objects.GetValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`) - `banner.hideBanner` would return the value of the `hideBanner` property from the object stored in the `banner` property of the `source` object.\r\n * @param {*} defaultValue - The value to return if the `key` isn't found in the `source` object.\r\n *\r\n * @return {*} The value of the requested key.\r\n */\r\nvar GetValue = function (source, key, defaultValue)\r\n{\r\n    if (!source || typeof source === 'number')\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (source.hasOwnProperty(key))\r\n    {\r\n        return source[key];\r\n    }\r\n    else if (key.indexOf('.'))\r\n    {\r\n        var keys = key.split('.');\r\n        var parent = source;\r\n        var value = defaultValue;\r\n\r\n        //  Use for loop here so we can break early\r\n        for (var i = 0; i < keys.length; i++)\r\n        {\r\n            if (parent.hasOwnProperty(keys[i]))\r\n            {\r\n                //  Yes it has a key property, let's carry on down\r\n                value = parent[keys[i]];\r\n\r\n                parent = parent[keys[i]];\r\n            }\r\n            else\r\n            {\r\n                //  Can't go any further, so reset to default\r\n                value = defaultValue;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n    else\r\n    {\r\n        return defaultValue;\r\n    }\r\n};\r\n\r\nmodule.exports = GetValue;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetValue","source","key","defaultValue","hasOwnProperty","indexOf","keys","split","value","i","length","parent"]
}
