{"version":3,"sources":["app/util.cljs"],"mappings":";;;;AAKA,AAAKA,AAAQ,AAAA,AAACC;AACd,AAAA,AAAMC;AAAN,AACE,AAACC,AAAMH,AAAQI;;AAEjB,AAAA,AAAMC,AAAaC,AAAKC;AAAxB,AACE,AAAAC,AAAC,AAAA,AAAU,AAAA,AAACC,AAAYH,AAAM,AAAA,AAAA,AAACI,AAAMH,AAAe,AAACL;AAArD,AAAA,AAAAM,AAAAA,AAAA,AAAAA,AAAA;;AAGF,AAAA,AAAMG,AAAiBL,AAAKM;AAA5B,AACE,AAAA,AAAA,AAAA,AAACH,AAAYH,AAA4BM;;AAG3C,AAAA,AAAMC,AAAMP,AAAKQ,AAAQF;AAAzB,AACE,AAACG,AAAOT,AAAKQ,AAAQF","names":["app.util/temp-id","cljs.core.atom","app.util/gen-temp-id","cljs.core.swap_BANG_","cljs.core/dec","app.util/new-entity!","conn","varmap","fexpr__51870","datascript.core.transact_BANG_","cljs.core.merge","app.util/retract-entity!","entity-id","app.util/pull","pattern","posh.reagent/pull"],"sourcesContent":["(ns app.util\n  (:require [posh.reagent :as p]\n            [datascript.core :as d]))\n\n;;\n(def temp-id (atom 0))\n(defn gen-temp-id []\n  (swap! temp-id dec))\n\n(defn new-entity! [conn varmap]\n  ((:tempids (d/transact! conn [(merge varmap {:db/id (gen-temp-id)})])) -1))\n\n;;\n(defn retract-entity! [conn entity-id]\n  (d/transact! conn [[:db.fn/retractEntity entity-id]]))\n\n;;\n(defn pull [conn pattern entity-id]\n  (p/pull conn pattern entity-id))\n"]}