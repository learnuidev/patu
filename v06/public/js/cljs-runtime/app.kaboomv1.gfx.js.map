{"version":3,"sources":["app/kaboomv1/gfx.cljs"],"mappings":"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","names":["app.kaboomv1.gfx/gfx-init","app.kaboomv1.math.mat4","app.kaboomv1.gfx/gfx","cljs.core.atom","app.kaboomv1.gfx/ex-obj","app.kaboomv1.gfx/create-texture","gl","app.kaboomv1.gfx/make-texture","w","h","data","id","js/app","js/app.kaboomv1","js/app.kaboomv1.gfx","js/app.kaboomv1.gfx.gl","app.kaboomv1.gfx/gl","p__28103","map__28104","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","app.kaboomv1.gfx/new-sprite","src","conf","cljs.core.conj","p__28106","map__28107","app.kaboomv1.gfx/load-sprite","new-sprite","cljs.core.swap_BANG_","app.kaboomv1.gfx/push-verts","verts","indices","cljs.core/update","cljs.core/conj","app.kaboomv1.gfx/sprite","app.kaboomv1.gfx/default-vert","app.kaboomv1.gfx/default-frag","app.kaboomv1.gfx/init-gl","gl-ctx","cljs.core/reset!","app.kaboomv1.gfx/reg-shader","template","shader-type","shader","temp__5735__auto__","warning-msg","js/console.log","js/console.warn","app.kaboomv1.gfx/make-vert","app.kaboomv1.gfx/make-frag","app.kaboomv1.gfx/attach-shader","app.kaboomv1.gfx/bind-attrib-location","index","type","app.kaboomv1.gfx/create-program","js/app.kaboomv1.gfx.get-info-log","method-table__4619__auto__","prefer-table__4620__auto__","method-cache__4621__auto__","cached-hierarchy__4622__auto__","hierarchy__4623__auto__","fexpr__28109","cljs.core/MultiFn","cljs.core.symbol","app.kaboomv1.gfx/get-info-log","_","app.kaboomv1.gfx/link-program","app.kaboomv1.gfx/create-program!","cljs.core/deref","app.kaboomv1.gfx/gid","var_args","G__28111","app.kaboomv1.gfx/use-program","js/Error","app.kaboomv1.gfx.use_program","app.kaboomv1.gfx/bind","app.kaboomv1.gfx/unbind","app.kaboomv1.gfx/send-float","name","val","loc","app.kaboomv1.gfx/send-vec2","x","y","app.kaboomv1.gfx/send-vec3","z","app.kaboomv1.gfx/send-vec4","app.kaboomv1.gfx/send-mat4","m","js/Float32Array","cljs.core/clj->js","app.kaboomv1.gfx/clear-color","r","b","g","a","app.kaboomv1.gfx/flush!","cljs.core/count","cljs.core/assoc","app.kaboomv1.gfx/frame-start","app.kaboomv1.gfx/frame-end","app.kaboomv1.gfx/init"],"sourcesContent":["(ns app.kaboomv1.gfx\n  (:require [app.kaboomv1.math :as math]))\n\n;;\n(def gfx-init\n  {:vbuf 0\n   :ibuf 0\n   :prog 0\n   :vqueue []\n   :iqueue []\n   :sprites {}\n   :transform (math/mat4)})\n\n(def gfx (atom gfx-init))\n;\n(def ex-obj #js {})\n\n(comment\n  (set! ex-obj -ID 1)\n  (set! ex-obj .- \"ID\" 1) ;; error\n  (aset ex-obj \"ID\" 1)\n  (aset ex-obj \"foo\" :foofoo)\n  (.-foo ex-obj))\n;; === Assets\n(defn create-texture [gl]\n  (.createTexture gl))\n\n(defn make-texture [gl w h data]\n  (let [id (create-texture gl)]\n    (.bindTexture gl (.-TEXTURE_2D gl) id)\n    (.texImage2D gl\n                 (.-TEXTURE_2D gl)\n                 0\n                 (.-RGBA gl)\n                 (.-RGBA gl)\n                 (.-UNSIGNED_BYTE gl)\n                 data)\n    (.bindTexture gl (.-TEXTURE_2D gl) nil)\n    {:id id\n     :width w\n     :height h\n     :bind (fn [gl]\n             (.bindTexture gl (.-TEXTURE_2D gl) id))\n     :unbind (fn [gl]\n               (.bindTexture gl (.-TEXTURE_2D gl) nil))}))\n\n(comment\n  (make-texture @gl 1 2 \"\"))\n;;\n(defonce gl (atom nil))\n\n(comment\n  (js/console.log @gl))\n\n(comment\n  (.bindTexture @gl (.-TEXTURE_2D gl) (.createTexture @gl))\n  (.createTexture @gl)\n  (.-TEXTURE_2D @gl)\n  (make-texture @gl 1 1 1))\n\n(defn new-sprite [gl {src :src\n                      conf :conf\n                      :or  {conf {:frames []\n                                  :anims {}}}}]\n  {:tex 1\n   :conf conf})\n(comment\n  (new-sprite @gl {}))\n\n(conj [] 1 2)\n(defn load-sprite [gl {:keys [id src conf]}]\n  (let [new-sprite (new-sprite gl {:src src\n                                   :conf conf})]\n    (swap! gfx :assoc-in [:sprites id] new-sprite)))\n\n(defn push-verts [verts indices]\n  (swap! gfx update :vqueue conj verts)\n  (swap! gfx update :iqueue conj indices))\n\n(defn sprite []\n  (push-verts\n   [;; pos           // normal      // uv     // color\n    0.0,  0.5, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0\n    -0.5, -0.5, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0\n    0.5, -0.5, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]\n   [0, 1, 2]))\n\n(comment\n  @gfx\n  (sprite))\n\n;; constants\n(def default-vert\n  \"\nattribute vec3 a_pos;\nattribute vec3 a_normal;\nattribute vec2 a_uv;\nattribute vec4 a_color;\nvarying vec3 v_pos;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec4 v_color;\nuniform mat4 u_model;\nuniform mat4 u_view;\nuniform mat4 u_proj;\nvoid main() {\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tv_normal = normalize(a_normal);\n\tgl_Position = vec4(v_pos, 1.0);\n}\")\n(def default-frag\n  \"\n  precision mediump float;\n  varying vec3 v_pos;\n  varying vec3 v_normal;\n  varying vec2 v_uv;\n  varying vec4 v_color;\n  uniform sampler2D u_tex;\n  uniform vec4 u_color;\n  void main() {\n  \tgl_FragColor = v_color * u_color;\n  \tif (gl_FragColor.a == 0.0) {\n  \t\tdiscard;\n  \t}\n  }\")\n\n(defn init-gl [gl-ctx]\n  (reset! gl gl-ctx))\n\n(defn reg-shader [gl template shader-type]\n  (let [shader (.createShader gl shader-type)]\n    (.shaderSource gl shader template)\n    (.compileShader gl shader)\n    (when-let [warning-msg (.getShaderInfoLog gl shader)]\n      (js/console.log warning-msg)\n      (js/console.warn warning-msg))\n    shader))\n(comment\n  (reg-shader @gl default-vert (.-VERTEX_SHADER @gl))\n  (reg-shader @gl default-frag (.-FRAGMENT_SHADER @gl))\n  (reg-shader @gl \"\" (.-FRAGMENT_SHADER @gl))\n  (reg-shader @gl default-frag 100))\n\n(defn make-vert [gl template]\n  (reg-shader gl template (.-VERTEX_SHADER gl)))\n\n(defn make-frag [gl template]\n  (reg-shader gl template (.-FRAGMENT_SHADER gl)))\n\n(defn attach-shader [gl id shader]\n  (.attachShader gl id shader));\n\n(defn bind-attrib-location [gl id index type]\n  (.bindAttribLocation gl id index type));\n\n(defn create-program [gl]\n  (.createProgram gl))\n\n(comment\n  (create-program @gl))\n\n(defmulti get-info-log (fn [gl id type] type))\n(defmethod get-info-log :program [gl id _]\n  (.getProgramInfoLog gl id))\n\n(defn link-program [gl id]\n  (.linkProgram gl id))\n\n(defn create-program! [gl]\n  (let [id (create-program gl)]\n    (attach-shader gl id (reg-shader gl default-vert (.-VERTEX_SHADER gl)))\n    (attach-shader gl id (reg-shader gl default-frag (.-FRAGMENT_SHADER gl)));\n    (bind-attrib-location gl id 0 \"a_pos\");\n    (bind-attrib-location gl id 1 \"a_normal\");\n    (bind-attrib-location gl id 2 \"a_uv\");\n    (bind-attrib-location gl id 3 \"a_color\")\n    (link-program gl id)\n    (when-let [warning-msg (get-info-log gl id :program)]\n      (js/console.warn warning-msg))\n    id));\n\n\n(comment \"Testing\")\n(when @gl\n  (def gid (create-program! @gl)))\n\n(when @gl\n  (js/console.log @gl))\n(defn use-program\n  ([gl] (use-program gl nil))\n  ([gl id]\n   (.useProgram gl id)))\n\n(defn bind [gl id]\n  (use-program gl id))\n\n(defn unbind [gl]\n  (use-program gl))\n\n(defn send-float [gl id name val]\n  (let [loc (.getUniformLocation gl id name)]\n    (.uniform1f gl loc val)))\n\n(defn send-vec2 [gl id name x y]\n  (let [loc (.getUniformLocation gl id name)]\n    (.uniform2f gl loc x y)))\n\n(defn send-vec3 [gl id name x y z]\n  (let [loc (.getUniformLocation gl id name)]\n    (.uniform3f gl loc x y z)))\n\n(defn send-vec4 [gl id name x y z w]\n  (let [loc (.getUniformLocation gl id name)]\n    (.uniform4f gl loc x y z w)))\n\n(defn send-mat4 [gl id name m]\n  (let [loc (.getUniformLocation gl id name)]\n    (.uniformMatrix4fv gl loc false loc (js/Float32Array. (clj->js m)))))\n\n(comment)\n\n(comment\n  (make-vert @gl default-vert)\n  (reg-shader @gl default-vert (.-VERTEX_SHADER @gl))\n  (create-program! @gl))\n\n(defn clear-color [gl r b g a]\n  (.clearColor gl r b g a))\n\n;;\n(defn flush! [gl id]\n  (.bindBuffer    gl (.-ARRAY_BUFFER gl) (:vbuf @gfx))\n  (.bufferSubData gl (.-ARRAY_BUFFER gl) 0 (js/Float32Array. (clj->js (:vqueue @gfx))))\n  (.bindBuffer    gl (.-ELEMENT_ARRAY_BUFFER gl) (:ibuf @gfx))\n  (.bufferSubData gl (.-ELEMENT_ARRAY_BUFFER gl) 0 (js/Float32Array. (clj->js (:iqueue @gfx))))\n  (bind gl id)\n  (send-vec4 gl id \"u_color\" 1.0 1.0 1.0 1.0)\n  ;;\n  (.vertexAttribPointer gl  0 3 (.-FLOAT gl) false 48 0)\n  (.enableVertexAttribArray gl 0)\n  (.vertexAttribPointer gl  1 3 (.-FLOAT gl) false 48 12)\n  (.enableVertexAttribArray gl 1)\n  (.vertexAttribPointer gl  2 3 (.-FLOAT gl) false 48 24)\n  (.enableVertexAttribArray gl 2)\n  (.vertexAttribPointer gl  3 3 (.-FLOAT gl) false 48 32)\n  (.enableVertexAttribArray gl 3)\n  ;;\n  (.drawElements gl (.-TRIANGLES gl), (count (:iqueue @gfx)) (.-UNSIGNED_SHORT gl) 0)\n  (unbind gl)\n  (.bindBuffer gl (.-ARRAY_BUFFER gl)         nil)\n  (.bindBuffer gl (.-ELEMENT_ARRAY_BUFFER gl) nil)\n  (swap! gfx assoc :vqueue [] :iqueue []))\n\n(defn frame-start [gl]\n  (.clear gl (.-COLOR_BUFFER_BIT gl)))\n\n(defn frame-end [gl id]\n  (flush! gl id))\n\n(defn init [gl]\n  (clear-color gl 0.0 0.0 0.0 1.0)\n  (swap! gfx assoc\n         :vbuf (.createBuffer gl)\n         :ibuf (.createBuffer gl))\n  (.bindBuffer gl (.-ARRAY_BUFFER gl)  (:vbuf @gfx))\n  (.bufferData gl (.-ARRAY_BUFFER gl) (* 65536 48) (.-DYNAMIC_DRAW gl))\n  (.bindBuffer gl (.-ARRAY_BUFFER gl) nil)\n\n  (.bindBuffer gl (.-ELEMENT_ARRAY_BUFFER gl) (:ibuf @gfx))\n  (.bufferData gl (.-ELEMENT_ARRAY_BUFFER gl) (* 65536 2) (.-DYNAMIC_DRAW gl))\n  (.bindBuffer gl (.-ELEMENT_ARRAY_BUFFER gl) nil)\n  ;; make program\n  (create-program! gl))\n\n(comment\n  (init @gl))\n"]}