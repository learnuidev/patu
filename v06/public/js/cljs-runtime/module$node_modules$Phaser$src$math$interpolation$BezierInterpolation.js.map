{
"version":3,
"file":"module$node_modules$Phaser$src$math$interpolation$BezierInterpolation.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlI,IAAIC,UAAYH,OAAA,CAAQ,+CAAR,CA0BhBC,OAAAC,QAAA,CAb0BE,QAAS,CAACC,CAAD,CAAIC,CAAJ,CACnC,CAII,IAHA,IAAIC,EAAI,CAAR,CACIC,EAAIH,CAAAI,OAAJD,CAAe,CADnB,CAGSE,EAAI,CAAb,CAAgBA,CAAhB,EAAqBF,CAArB,CAAwBE,CAAA,EAAxB,CAEIH,CAAA,EAAKI,IAAAC,IAAA,CAAS,CAAT,CAAaN,CAAb,CAAgBE,CAAhB,CAAoBE,CAApB,CAAL,CAA8BC,IAAAC,IAAA,CAASN,CAAT,CAAYI,CAAZ,CAA9B,CAA+CL,CAAA,CAAEK,CAAF,CAA/C,CAAsDP,SAAA,CAAUK,CAAV,CAAaE,CAAb,CAG1D,OAAOH,EATX,CArBkI;",
"sources":["node_modules/Phaser/src/math/interpolation/BezierInterpolation.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$interpolation$BezierInterpolation\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Bernstein = require('../Bernstein');\r\n\r\n/**\r\n * A bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.Bezier\r\n * @since 3.0.0\r\n *\r\n * @param {number[]} v - The input array of values to interpolate between.\r\n * @param {number} k - The percentage of interpolation, between 0 and 1.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nvar BezierInterpolation = function (v, k)\r\n{\r\n    var b = 0;\r\n    var n = v.length - 1;\r\n\r\n    for (var i = 0; i <= n; i++)\r\n    {\r\n        b += Math.pow(1 - k, n - i) * Math.pow(k, i) * v[i] * Bernstein(n, i);\r\n    }\r\n\r\n    return b;\r\n};\r\n\r\nmodule.exports = BezierInterpolation;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Bernstein","BezierInterpolation","v","k","b","n","length","i","Math","pow"]
}
