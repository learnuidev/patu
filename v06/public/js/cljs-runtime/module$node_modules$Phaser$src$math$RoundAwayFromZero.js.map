{
"version":3,
"file":"module$node_modules$Phaser$src$math$RoundAwayFromZero.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuBlHD,MAAAC,QAAA,CANwBC,QAAS,CAACC,KAAD,CACjC,CAEI,MAAgB,EAAT,CAACA,KAAD,CAAcC,IAAAC,KAAA,CAAUF,KAAV,CAAd,CAAiCC,IAAAE,MAAA,CAAWH,KAAX,CAF5C,CAlBkH;",
"sources":["node_modules/Phaser/src/math/RoundAwayFromZero.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$RoundAwayFromZero\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Round a given number so it is further away from zero. That is, positive numbers are rounded up, and negative numbers are rounded down.\r\n *\r\n * @function Phaser.Math.RoundAwayFromZero\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The number to round.\r\n *\r\n * @return {number} The rounded number, rounded away from zero.\r\n */\r\nvar RoundAwayFromZero = function (value)\r\n{\r\n    // \"Opposite\" of truncate.\r\n    return (value > 0) ? Math.ceil(value) : Math.floor(value);\r\n};\r\n\r\nmodule.exports = RoundAwayFromZero;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","RoundAwayFromZero","value","Math","ceil","floor"]
}
