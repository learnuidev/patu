{
"version":3,
"file":"module$node_modules$Phaser$src$geom$triangle$Centroid.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlH,IAAIC,MAAQH,OAAA,CAAQ,iDAAR,CA6BZC,OAAAC,QAAA,CAVeE,QAAS,CAACC,QAAD,CAAWC,GAAX,CACxB,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,IAAIH,KAAnC,CAEAG,IAAAE,EAAA,EAASH,QAAAI,GAAT,CAAuBJ,QAAAK,GAAvB,CAAqCL,QAAAM,GAArC,EAAoD,CACpDL,IAAAM,EAAA,EAASP,QAAAQ,GAAT,CAAuBR,QAAAS,GAAvB,CAAqCT,QAAAU,GAArC,EAAoD,CAEpD,OAAOT,IANX,CA3BkH;",
"sources":["node_modules/Phaser/src/geom/triangle/Centroid.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$triangle$Centroid\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\n\r\n//  The three medians (the lines drawn from the vertices to the bisectors of the opposite sides)\r\n//  meet in the centroid or center of mass (center of gravity).\r\n//  The centroid divides each median in a ratio of 2:1\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Triangle.Centroid\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - [description]\r\n * @param {(Phaser.Geom.Point|object)} [out] - [description]\r\n *\r\n * @return {(Phaser.Geom.Point|object)} [description]\r\n */\r\nvar Centroid = function (triangle, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    out.x = (triangle.x1 + triangle.x2 + triangle.x3) / 3;\r\n    out.y = (triangle.y1 + triangle.y2 + triangle.y3) / 3;\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Centroid;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Point","Centroid","triangle","out","undefined","x","x1","x2","x3","y","y1","y2","y3"]
}
