{
"version":3,
"file":"module$node_modules$Phaser$src$geom$point$Interpolate.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlH,IAAIC,MAAQH,OAAA,CAAQ,iDAAR,CA4BZC,OAAAC,QAAA,CAXkBE,QAAS,CAACC,MAAD,CAASC,MAAT,CAAiBC,CAAjB,CAAoBC,GAApB,CAC3B,CACcC,IAAAA,EAAV,GAAIF,CAAJ,GAAuBA,CAAvB,CAA2B,CAA3B,CACYE,KAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,IAAIL,KAAnC,CAEAK,IAAAE,EAAA,CAAQL,MAAAK,EAAR,EAAqBJ,MAAAI,EAArB,CAAgCL,MAAAK,EAAhC,EAA4CH,CAC5CC,IAAAG,EAAA,CAAQN,MAAAM,EAAR,EAAqBL,MAAAK,EAArB,CAAgCN,MAAAM,EAAhC,EAA4CJ,CAE5C,OAAOC,IAPX,CAzBkH;",
"sources":["node_modules/Phaser/src/geom/point/Interpolate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$point$Interpolate\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Point = require('./Point');\r\n\r\n/**\r\n * Interpolate two given Point objects, based on `t` value. Return result either as new Point if `out` parameter is omitted or load result into Point passed as `out` parameter and return it. For `out` parameter you can also use any object with public x/y properties.\r\n *\r\n * @function Phaser.Geom.Point.Interpolate\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Point} pointA - [description]\r\n * @param {Phaser.Geom.Point} pointB - [description]\r\n * @param {number} [t=0] - [description]\r\n * @param {(Phaser.Geom.Point|object)} [out] - [description]\r\n *\r\n * @return {(Phaser.Geom.Point|object)} [description]\r\n */\r\nvar Interpolate = function (pointA, pointB, t, out)\r\n{\r\n    if (t === undefined) { t = 0; }\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    out.x = pointA.x + ((pointB.x - pointA.x) * t);\r\n    out.y = pointA.y + ((pointB.y - pointA.y) * t);\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Interpolate;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Point","Interpolate","pointA","pointB","t","out","undefined","x","y"]
}
