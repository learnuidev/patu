{
"version":3,
"file":"module$node_modules$Phaser$src$physics$matter_js$components$Friction.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,qEAAA,CAAyF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgFjID,MAAAC,QAAA,CAnEeC,CAcXC,YAAaA,QAAS,CAACC,KAAD,CAAQC,GAAR,CAAaC,OAAb,CACtB,CACI,IAAAC,KAAAC,SAAA,CAAqBJ,KAETK,KAAAA,EAAZ,GAAIJ,GAAJ,GAEI,IAAAE,KAAAG,YAFJ,CAE4BL,GAF5B,CAKgBI,KAAAA,EAAhB,GAAIH,OAAJ,GAEI,IAAAC,KAAAI,eAFJ,CAE+BL,OAF/B,CAKA,OAAO,KAbX,CAfWJ,CAyCXU,eAAgBA,QAAS,CAACR,KAAD,CACzB,CACI,IAAAG,KAAAG,YAAA,CAAwBN,KAExB,OAAO,KAHX,CA1CWF,CA0DXW,kBAAmBA,QAAS,CAACT,KAAD,CAC5B,CACI,IAAAG,KAAAI,eAAA,CAA2BP,KAE3B,OAAO,KAHX,CA3DWF,CAbkH;",
"sources":["node_modules/Phaser/src/physics/matter-js/components/Friction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$matter_js$components$Friction\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * [description]\r\n *\r\n * @name Phaser.Physics.Matter.Components.Friction\r\n * @since 3.0.0\r\n */\r\nvar Friction = {\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Friction#setFriction\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - [description]\r\n     * @param {number} [air] - [description]\r\n     * @param {number} [fstatic] - [description]\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFriction: function (value, air, fstatic)\r\n    {\r\n        this.body.friction = value;\r\n\r\n        if (air !== undefined)\r\n        {\r\n            this.body.frictionAir = air;\r\n        }\r\n\r\n        if (fstatic !== undefined)\r\n        {\r\n            this.body.frictionStatic = fstatic;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Friction#setFrictionAir\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - [description]\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFrictionAir: function (value)\r\n    {\r\n        this.body.frictionAir = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Friction#setFrictionStatic\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - [description]\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFrictionStatic: function (value)\r\n    {\r\n        this.body.frictionStatic = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Friction;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Friction","setFriction","value","air","fstatic","body","friction","undefined","frictionAir","frictionStatic","setFrictionAir","setFrictionStatic"]
}
