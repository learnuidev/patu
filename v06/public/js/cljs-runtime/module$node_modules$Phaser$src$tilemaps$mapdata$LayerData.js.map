{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$mapdata$LayerData.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlHC,MAAAA,CAAQH,OAAA,CAAQ,4CAAR,CACZ,KAAII,aAAeJ,OAAA,CAAQ,0DAAR,CAefK,QAAAA,CAAY,IAAIF,MAAJ,CAAU,CAEtBG,WAEAD,QAAmB,CAACE,MAAD,CACnB,CACmBC,IAAAA,EAAf,GAAID,MAAJ,GAA4BA,MAA5B,CAAqC,EAArC,CASA,KAAAE,KAAA,CAAYL,YAAA,CAAaG,MAAb,CAAqB,MAArB,CAA6B,OAA7B,CASZ,KAAAG,EAAA,CAASN,YAAA,CAAaG,MAAb,CAAqB,GAArB,CAA0B,CAA1B,CAST,KAAAI,EAAA,CAASP,YAAA,CAAaG,MAAb,CAAqB,GAArB,CAA0B,CAA1B,CAST,KAAAK,MAAA,CAAaR,YAAA,CAAaG,MAAb,CAAqB,OAArB,CAA8B,CAA9B,CASb,KAAAM,OAAA;AAAcT,YAAA,CAAaG,MAAb,CAAqB,QAArB,CAA+B,CAA/B,CASd,KAAAO,UAAA,CAAiBV,YAAA,CAAaG,MAAb,CAAqB,WAArB,CAAkC,CAAlC,CASjB,KAAAQ,WAAA,CAAkBX,YAAA,CAAaG,MAAb,CAAqB,YAArB,CAAmC,CAAnC,CASlB,KAAAS,cAAA,CAAqBZ,YAAA,CAAaG,MAAb,CAAqB,eAArB,CAAsC,IAAAO,UAAtC,CASrB,KAAAG,eAAA,CAAsBb,YAAA,CAAaG,MAAb,CAAqB,gBAArB,CAAuC,IAAAQ,WAAvC,CAStB,KAAAG,cAAA,CAAqBd,YAAA,CAAaG,MAAb,CAAqB,eAArB,CAAsC,IAAAK,MAAtC,CAAmD,IAAAI,cAAnD,CASrB,KAAAG,eAAA,CAAsBf,YAAA,CAAaG,MAAb,CAAqB,gBAArB,CAAuC,IAAAM,OAAvC,CAAqD,IAAAI,eAArD,CAStB,KAAAG,MAAA,CAAahB,YAAA,CAAaG,MAAb,CAAqB,OAArB,CAA8B,CAA9B,CASb,KAAAc,QAAA;AAAejB,YAAA,CAAaG,MAAb,CAAqB,SAArB,CAAgC,CAAA,CAAhC,CASf,KAAAe,WAAA,CAAkBlB,YAAA,CAAaG,MAAb,CAAqB,YAArB,CAAmC,EAAnC,CASlB,KAAAgB,QAAA,CAAenB,YAAA,CAAaG,MAAb,CAAqB,SAArB,CAAgC,EAAhC,CASf,KAAAiB,eAAA,CAAsBpB,YAAA,CAAaG,MAAb,CAAqB,gBAArB,CAAuC,EAAvC,CAStB,KAAAkB,UAAA,CAAiBrB,YAAA,CAAaG,MAAb,CAAqB,WAArB,CAAkC,EAAlC,CASjB,KAAAmB,OAAA,CAActB,YAAA,CAAaG,MAAb,CAAqB,QAArB,CAA+B,EAA/B,CASd,KAAAoB,KAAA,CAAYvB,YAAA,CAAaG,MAAb,CAAqB,MAArB,CAA6B,EAA7B,CASZ,KAAAqB,aAAA,CAAoBxB,YAAA,CAAaG,MAAb,CAAqB,cAArB,CAAqC,IAArC,CArLxB,CALsB,CAAV,CA+LhBN,OAAAC,QAAA,CAAiBG,OAtNqG;",
"sources":["node_modules/Phaser/src/tilemaps/mapdata/LayerData.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$mapdata$LayerData\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\n\r\n/**\r\n * @classdesc\r\n * A class for representing data about about a layer in a map. Maps are parsed from CSV, Tiled,\r\n * etc. into this format. Tilemap, StaticTilemapLayer and DynamicTilemapLayer have a reference\r\n * to this data and use it to look up and perform operations on tiles.\r\n *\r\n * @class LayerData\r\n * @memberOf Phaser.Tilemaps\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {object} [config] - [description]\r\n */\r\nvar LayerData = new Class({\r\n\r\n    initialize:\r\n\r\n    function LayerData (config)\r\n    {\r\n        if (config === undefined) { config = {}; }\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#name\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.name = GetFastValue(config, 'name', 'layer');\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#x\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.x = GetFastValue(config, 'x', 0);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#y\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.y = GetFastValue(config, 'y', 0);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#width\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.width = GetFastValue(config, 'width', 0);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#height\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.height = GetFastValue(config, 'height', 0);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#tileWidth\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.tileWidth = GetFastValue(config, 'tileWidth', 0);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#tileHeight\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.tileHeight = GetFastValue(config, 'tileHeight', 0);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#baseTileWidth\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.baseTileWidth = GetFastValue(config, 'baseTileWidth', this.tileWidth);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#baseTileHeight\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.baseTileHeight = GetFastValue(config, 'baseTileHeight', this.tileHeight);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#widthInPixels\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.widthInPixels = GetFastValue(config, 'widthInPixels', this.width * this.baseTileWidth);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#heightInPixels\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.heightInPixels = GetFastValue(config, 'heightInPixels', this.height * this.baseTileHeight);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#alpha\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.alpha = GetFastValue(config, 'alpha', 1);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#visible\r\n         * @type {boolean}\r\n         * @since 3.0.0\r\n         */\r\n        this.visible = GetFastValue(config, 'visible', true);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#properties\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.properties = GetFastValue(config, 'properties', {});\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#indexes\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.indexes = GetFastValue(config, 'indexes', []);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#collideIndexes\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.collideIndexes = GetFastValue(config, 'collideIndexes', []);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#callbacks\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.callbacks = GetFastValue(config, 'callbacks', []);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#bodies\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.bodies = GetFastValue(config, 'bodies', []);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#data\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.data = GetFastValue(config, 'data', []);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#tilemapLayer\r\n         * @type {(Phaser.Tilemaps.DynamicTilemapLayer|Phaser.Tilemaps.StaticTilemapLayer)}\r\n         * @since 3.0.0\r\n         */\r\n        this.tilemapLayer = GetFastValue(config, 'tilemapLayer', null);\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = LayerData;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","GetFastValue","LayerData","initialize","config","undefined","name","x","y","width","height","tileWidth","tileHeight","baseTileWidth","baseTileHeight","widthInPixels","heightInPixels","alpha","visible","properties","indexes","collideIndexes","callbacks","bodies","data","tilemapLayer"]
}
