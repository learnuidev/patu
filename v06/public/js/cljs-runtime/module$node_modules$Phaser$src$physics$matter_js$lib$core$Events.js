shadow$provide.module$node_modules$Phaser$src$physics$matter_js$lib$core$Events=function(global,require,module,exports){var Events={};module.exports=Events;var Common=require("module$node_modules$Phaser$src$physics$matter_js$lib$core$Common");(function(){Events.on=function(object,eventNames,callback){eventNames=eventNames.split(" ");for(var name,i=0;i<eventNames.length;i++)name=eventNames[i],object.events=object.events||{},object.events[name]=object.events[name]||[],object.events[name].push(callback);
return callback};Events.off=function(object,eventNames,callback){if(eventNames){"function"===typeof eventNames&&(callback=eventNames,eventNames=Common.keys(object.events).join(" "));eventNames=eventNames.split(" ");for(var i=0;i<eventNames.length;i++){var callbacks=object.events[eventNames[i]],newCallbacks=[];if(callback&&callbacks)for(var j=0;j<callbacks.length;j++)callbacks[j]!==callback&&newCallbacks.push(callbacks[j]);object.events[eventNames[i]]=newCallbacks}}else object.events={}};Events.trigger=
function(object,eventNames,event){var callbacks,events=object.events;if(events&&0<Common.keys(events).length){event||(event={});eventNames=eventNames.split(" ");for(var i=0;i<eventNames.length;i++){var name=eventNames[i];if(callbacks=events[name]){var eventClone=Common.clone(event,!1);eventClone.name=name;eventClone.source=object;for(name=0;name<callbacks.length;name++)callbacks[name].apply(object,[eventClone])}}}}})()}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$lib$core$Events.js.map
