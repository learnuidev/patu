{
"version":3,
"file":"module$node_modules$Phaser$src$display$canvas$CanvasInterpolation.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,kEAAA,CAAsF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyD9HD,MAAAC,QAAA,CA9C0BC,CAYtBC,SAAUA,QAAS,CAACC,MAAD,CACnB,CACgBC,kGAAAA,MAAAA,CAAAA,GAAAA,CAEZC,QAAA,CAAc,QAAS,CAACC,IAAD,CACvB,CACIH,MAAAI,MAAA,CAAa,iBAAb,CAAA,CAAkCD,IADtC,CADA,CAKAH,OAAAI,MAAAC,oBAAA,CAAmC,kBAEnC,OAAOL,OAVX,CAbsBF,CAoCtBQ,WAAYA,QAAS,CAACN,MAAD,CACrB,CACIA,MAAAI,MAAA,CAAa,iBAAb,CAAA,CAAkC,MAClCJ,OAAAI,MAAAC,oBAAA;AAAmC,SAEnC,OAAOL,OAJX,CArCsBF,CAXoG;",
"sources":["node_modules/Phaser/src/display/canvas/CanvasInterpolation.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$display$canvas$CanvasInterpolation\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Display.Canvas.CanvasInterpolation\r\n * @since 3.0.0\r\n */\r\nvar CanvasInterpolation = {\r\n\r\n    /**\r\n     * Sets the CSS image-rendering property on the given canvas to be 'crisp' (aka 'optimize contrast' on webkit).\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasInterpolation.setCrisp\r\n     * @since 3.0.0\r\n     * \r\n     * @param {HTMLCanvasElement} canvas - The canvas object to have the style set on.\r\n     * \r\n     * @return {HTMLCanvasElement} The canvas.\r\n     */\r\n    setCrisp: function (canvas)\r\n    {\r\n        var types = [ 'optimizeSpeed', 'crisp-edges', '-moz-crisp-edges', '-webkit-optimize-contrast', 'optimize-contrast', 'pixelated' ];\r\n\r\n        types.forEach(function (type)\r\n        {\r\n            canvas.style['image-rendering'] = type;\r\n        });\r\n\r\n        canvas.style.msInterpolationMode = 'nearest-neighbor';\r\n\r\n        return canvas;\r\n    },\r\n\r\n    /**\r\n     * Sets the CSS image-rendering property on the given canvas to be 'bicubic' (aka 'auto').\r\n     *\r\n     * @function Phaser.Display.Canvas.CanvasInterpolation.setBicubic\r\n     * @since 3.0.0\r\n     * \r\n     * @param {HTMLCanvasElement} canvas - The canvas object to have the style set on.\r\n     * \r\n     * @return {HTMLCanvasElement} The canvas.\r\n     */\r\n    setBicubic: function (canvas)\r\n    {\r\n        canvas.style['image-rendering'] = 'auto';\r\n        canvas.style.msInterpolationMode = 'bicubic';\r\n\r\n        return canvas;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = CanvasInterpolation;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","CanvasInterpolation","setCrisp","canvas","types","forEach","type","style","msInterpolationMode","setBicubic"]
}
