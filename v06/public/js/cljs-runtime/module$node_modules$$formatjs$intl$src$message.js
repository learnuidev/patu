shadow$provide.module$node_modules$$formatjs$intl$src$message=function(global,require,module,exports){function setTimeZoneInOptions(opts,timeZone){return Object.keys(opts).reduce(function(all,k){all[k]=tslib_1.__assign({timeZone:timeZone},opts[k]);return all},{})}function deepMergeOptions(opts1,opts2){return Object.keys(tslib_1.__assign(tslib_1.__assign({},opts1),opts2)).reduce(function(all,k){all[k]=tslib_1.__assign(tslib_1.__assign({},opts1[k]||{}),opts2[k]||{});return all},{})}function deepMergeFormatsAndSetTimeZone(f1,
timeZone){if(!timeZone)return f1;var mfFormats=intl_messageformat_1.IntlMessageFormat.formats;return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({},mfFormats),f1),{date:deepMergeOptions(setTimeZoneInOptions(mfFormats.date,timeZone),setTimeZoneInOptions(f1.date||{},timeZone)),time:deepMergeOptions(setTimeZoneInOptions(mfFormats.time,timeZone),setTimeZoneInOptions(f1.time||{},timeZone))})}Object.defineProperty(exports,"__esModule",{value:!0});exports.formatMessage=void 0;var tslib_1=require("module$node_modules$tslib$tslib"),
ecma402_abstract_1=require("module$node_modules$$formatjs$ecma402_abstract$index"),intl_messageformat_1=require("module$node_modules$intl_messageformat$index"),error_1=require("module$node_modules$$formatjs$intl$src$error"),intl_messageformat_parser_1=require("module$node_modules$intl_messageformat_parser$index");exports.formatMessage=function(_a,state,messageDescriptor,values,opts){var locale=_a.locale,formats=_a.formats,messages=_a.messages,defaultLocale=_a.defaultLocale,defaultFormats=_a.defaultFormats,
onError=_a.onError,timeZone=_a.timeZone;_a=_a.defaultRichTextElements;void 0===messageDescriptor&&(messageDescriptor={id:""});var msgId=messageDescriptor.id,defaultMessage=messageDescriptor.defaultMessage;ecma402_abstract_1.invariant(!!msgId,"[@formatjs/intl] An `id` must be provided to format a message.");msgId=String(msgId);messages=messages&&Object.prototype.hasOwnProperty.call(messages,msgId)&&messages[msgId];if(Array.isArray(messages)&&1===messages.length&&messages[0].type===intl_messageformat_parser_1.TYPE.literal)return messages[0].value;
if(!values&&messages&&"string"===typeof messages&&!_a)return messages.replace(/'\{(.*?)\}'/gi,"{$1}");values=tslib_1.__assign(tslib_1.__assign({},_a),values||{});formats=deepMergeFormatsAndSetTimeZone(formats,timeZone);defaultFormats=deepMergeFormatsAndSetTimeZone(defaultFormats,timeZone);if(!messages){(!defaultMessage||locale&&locale.toLowerCase()!==defaultLocale.toLowerCase())&&onError(new error_1.MissingTranslationError(messageDescriptor,locale));if(defaultMessage)try{var formatter=state.getMessageFormat(defaultMessage,
defaultLocale,defaultFormats,opts);return formatter.format(values)}catch(e){return onError(new error_1.MessageFormatError('Error formatting default message for: "'+msgId+'", rendering default message verbatim',locale,messageDescriptor,e)),"string"===typeof defaultMessage?defaultMessage:msgId}return msgId}try{return formatter=state.getMessageFormat(messages,locale,formats,tslib_1.__assign({formatters:state},opts||{})),formatter.format(values)}catch(e$0){onError(new error_1.MessageFormatError('Error formatting message: "'+
msgId+'", using '+(defaultMessage?"default message":"id")+" as fallback.",locale,messageDescriptor,e$0))}if(defaultMessage)try{return formatter=state.getMessageFormat(defaultMessage,defaultLocale,defaultFormats,opts),formatter.format(values)}catch(e$1){onError(new error_1.MessageFormatError('Error formatting the default message for: "'+msgId+'", rendering message verbatim',locale,messageDescriptor,e$1))}return"string"===typeof messages?messages:"string"===typeof defaultMessage?defaultMessage:msgId}}
//# sourceMappingURL=module$node_modules$$formatjs$intl$src$message.js.map
