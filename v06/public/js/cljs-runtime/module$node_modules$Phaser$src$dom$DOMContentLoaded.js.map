{
"version":3,
"file":"module$node_modules$Phaser$src$dom$DOMContentLoaded.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOhH,IAAIC,GAAKH,OAAA,CAAQ,0CAAR,CAkDTC,OAAAC,QAAA,CAlCuBE,QAAS,CAACC,QAAD,CAChC,CACI,GAA4B,UAA5B,GAAIC,QAAAC,WAAJ,EAAkE,aAAlE,GAA0CD,QAAAC,WAA1C,CAEIF,QAAA,EAFJ,KAAA,CAOA,IAAIG,MAAQA,QAAS,EACrB,CACIF,QAAAG,oBAAA,CAA6B,aAA7B,CAA4CD,KAA5C,CAAmD,CAAA,CAAnD,CACAF,SAAAG,oBAAA,CAA6B,kBAA7B,CAAiDD,KAAjD,CAAwD,CAAA,CAAxD,CACAE,OAAAD,oBAAA,CAA2B,MAA3B,CAAmCD,KAAnC,CAA0C,CAAA,CAA1C,CAEAH,SAAA,EALJ,CAQKC,SAAAK,KAAL,CAISR,EAAAS,QAAJ;AAAkB,CAACT,EAAAU,SAAnB,CAGDP,QAAAQ,iBAAA,CAA0B,aAA1B,CAAyCN,KAAzC,CAAgD,CAAA,CAAhD,CAHC,EAODF,QAAAQ,iBAAA,CAA0B,kBAA1B,CAA8CN,KAA9C,CAAqD,CAAA,CAArD,CACA,CAAAE,MAAAI,iBAAA,CAAwB,MAAxB,CAAgCN,KAAhC,CAAuC,CAAA,CAAvC,CARC,CAJL,CAEIE,MAAAK,WAAA,CAAkBP,KAAlB,CAAyB,EAAzB,CAlBJ,CADJ,CAxBgH;",
"sources":["node_modules/Phaser/src/dom/DOMContentLoaded.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$dom$DOMContentLoaded\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar OS = require('../device/OS');\r\n\r\n/**\r\n * @callback ContentLoadedCallback\r\n */\r\n\r\n/**\r\n * Inspects the readyState of the document. If the document is already complete then it invokes the given callback.\r\n * If not complete it sets up several event listeners such as `deviceready`, and once those fire, it invokes the callback.\r\n * Called automatically by the Phaser.Game instance. Should not usually be accessed directly.\r\n *\r\n * @function Phaser.DOM.DOMContentLoaded\r\n * @since 3.0.0\r\n *\r\n * @param {ContentLoadedCallback} callback - The callback to be invoked when the device is ready and the DOM content is loaded.\r\n */\r\nvar DOMContentLoaded = function (callback)\r\n{\r\n    if (document.readyState === 'complete' || document.readyState === 'interactive')\r\n    {\r\n        callback();\r\n\r\n        return;\r\n    }\r\n\r\n    var check = function ()\r\n    {\r\n        document.removeEventListener('deviceready', check, true);\r\n        document.removeEventListener('DOMContentLoaded', check, true);\r\n        window.removeEventListener('load', check, true);\r\n\r\n        callback();\r\n    };\r\n\r\n    if (!document.body)\r\n    {\r\n        window.setTimeout(check, 20);\r\n    }\r\n    else if (OS.cordova && !OS.cocoonJS)\r\n    {\r\n        //  Ref. http://docs.phonegap.com/en/3.5.0/cordova_events_events.md.html#deviceready\r\n        document.addEventListener('deviceready', check, false);\r\n    }\r\n    else\r\n    {\r\n        document.addEventListener('DOMContentLoaded', check, true);\r\n        window.addEventListener('load', check, true);\r\n    }\r\n};\r\n\r\nmodule.exports = DOMContentLoaded;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","OS","DOMContentLoaded","callback","document","readyState","check","removeEventListener","window","body","cordova","cocoonJS","addEventListener","setTimeout"]
}
