{
"version":3,
"file":"module$node_modules$$formatjs$intl$src$dateTime.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@formatjs/intl/src/dateTime.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$intl$src$dateTime\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatTimeToParts = exports.formatDateToParts = exports.formatDateTimeRange = exports.formatTime = exports.formatDate = exports.getFormatter = void 0;\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"./utils\");\nvar error_1 = require(\"./error\");\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'fractionalSecondDigits',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n];\nfunction getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = tslib_1.__assign(tslib_1.__assign({}, (timeZone && { timeZone: timeZone })), (format && utils_1.getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = utils_1.filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second &&\n        !filteredOptions.timeStyle &&\n        !filteredOptions.dateStyle) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = tslib_1.__assign(tslib_1.__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexports.getFormatter = getFormatter;\nfunction formatDate(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new error_1.IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return String(date);\n}\nexports.formatDate = formatDate;\nfunction formatTime(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new error_1.IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return String(date);\n}\nexports.formatTime = formatTime;\nfunction formatDateTimeRange(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var from = _a[0], to = _a[1], _b = _a[2], options = _b === void 0 ? {} : _b;\n    var timeZone = config.timeZone, locale = config.locale, onError = config.onError;\n    var filteredOptions = utils_1.filterProps(options, DATE_TIME_FORMAT_OPTIONS, timeZone ? { timeZone: timeZone } : {});\n    try {\n        return getDateTimeFormat(locale, filteredOptions).formatRange(from, to);\n    }\n    catch (e) {\n        onError(new error_1.IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date time range.', e));\n    }\n    return String(from);\n}\nexports.formatDateTimeRange = formatDateTimeRange;\nfunction formatDateToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new error_1.IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return [];\n}\nexports.formatDateToParts = formatDateToParts;\nfunction formatTimeToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new error_1.IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return [];\n}\nexports.formatTimeToParts = formatTimeToParts;\n\n};"],
"names":["shadow$provide","global","require","module","exports","getFormatter","_a","type","getDateTimeFormat","options","locale","formats","onError","timeZone","format","defaults","tslib_1","__assign","utils_1","getNamedFormat","filteredOptions","filterProps","DATE_TIME_FORMAT_OPTIONS","hour","minute","second","timeStyle","dateStyle","Object","defineProperty","value","formatTimeToParts","formatDateToParts","formatDateTimeRange","formatTime","formatDate","error_1","config","_i","arguments","length","_b","date","Date","e","IntlError","String","from","to","formatRange","formatToParts"]
}
