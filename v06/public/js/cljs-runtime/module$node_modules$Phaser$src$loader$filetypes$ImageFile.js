shadow$provide.module$node_modules$Phaser$src$loader$filetypes$ImageFile=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var CONST=require("module$node_modules$Phaser$src$loader$const"),File=require("module$node_modules$Phaser$src$loader$File");exports=require("module$node_modules$Phaser$src$loader$FileTypesManager");var GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),IsPlainObject=require("module$node_modules$Phaser$src$utils$object$IsPlainObject"),
ImageFile=new global({Extends:File,initialize:function ImageFile(loader,key,url,xhrSettings,frameConfig){var extension="png";if(IsPlainObject(key)){frameConfig=key;key=GetFastValue(frameConfig,"key");url=GetFastValue(frameConfig,"url");var normalMapURL=GetFastValue(frameConfig,"normalMap");xhrSettings=GetFastValue(frameConfig,"xhrSettings");extension=GetFastValue(frameConfig,"extension",extension);frameConfig=GetFastValue(frameConfig,"frameConfig")}Array.isArray(url)&&(normalMapURL=url[1],url=url[0]);
File.call(this,loader,{type:"image",cache:loader.textureManager,extension:extension,responseType:"blob",key:key,url:url,xhrSettings:xhrSettings,config:frameConfig});normalMapURL&&(key=new ImageFile(loader,this.key,normalMapURL,xhrSettings,frameConfig),key.type="normalMap",this.setLink(key),loader.addFile(key))},onProcess:function(){this.state=CONST.FILE_PROCESSING;this.data=new Image;this.data.crossOrigin=this.crossOrigin;var _this=this;this.data.onload=function(){File.revokeObjectURL(_this.data);
_this.onProcessComplete()};this.data.onerror=function(){File.revokeObjectURL(_this.data);_this.onProcessError()};File.createObjectURL(this.data,this.xhrLoader.response,"image/png")},addToCache:function(){var linkFile=this.linkFile;if(linkFile&&linkFile.state===CONST.FILE_COMPLETE){var texture="image"===this.type?this.cache.addImage(this.key,this.data,linkFile.data):this.cache.addImage(linkFile.key,linkFile.data,this.data);this.pendingDestroy(texture);linkFile.pendingDestroy(texture)}else linkFile||
(texture=this.cache.addImage(this.key,this.data),this.pendingDestroy(texture))}});exports.register("image",function(key,url,xhrSettings){if(Array.isArray(key))for(url=0;url<key.length;url++)this.addFile(new ImageFile(this,key[url]));else this.addFile(new ImageFile(this,key,url,xhrSettings));return this});module.exports=ImageFile}
//# sourceMappingURL=module$node_modules$Phaser$src$loader$filetypes$ImageFile.js.map
