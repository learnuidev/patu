{
"version":3,
"file":"module$node_modules$Phaser$src$geom$point$GetCentroid.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlH,IAAIC,MAAQH,OAAA,CAAQ,iDAAR,CAkDZC,OAAAC,QAAA,CAnCkBE,QAAS,CAACC,MAAD,CAASC,GAAT,CAC3B,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,IAAIH,KAAnC,CAEA,IAAI,CAACK,KAAAC,QAAA,CAAcJ,MAAd,CAAL,CAEI,KAAUK,MAAJ,CAAU,8CAAV,CAAN,CAGJ,IAAIC,IAAMN,MAAAO,OAEV,IAAU,CAAV,CAAID,GAAJ,CAEI,KAAUD,MAAJ,CAAU,4CAAV,CAAN,CAEC,GAAY,CAAZ,GAAIC,GAAJ,CAEDL,GAAAO,EACA,CADQR,MAAA,CAAO,CAAP,CAAAQ,EACR,CAAAP,GAAAQ,EAAA,CAAQT,MAAA,CAAO,CAAP,CAAAS,EAHP,KAML,CACI,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,GAApB,CAAyBI,CAAA,EAAzB,CAEIT,GAAAO,EACA,EADSR,MAAA,CAAOU,CAAP,CAAAF,EACT;AAAAP,GAAAQ,EAAA,EAAST,MAAA,CAAOU,CAAP,CAAAD,EAGbR,IAAAO,EAAA,EAASF,GACTL,IAAAQ,EAAA,EAASH,GARb,CAWA,MAAOL,IA/BX,CAvBkH;",
"sources":["node_modules/Phaser/src/geom/point/GetCentroid.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$point$GetCentroid\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Point = require('./Point');\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Point.GetCentroid\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Point[]} points - [description]\r\n * @param {Phaser.Geom.Point} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\r\nvar GetCentroid = function (points, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    if (!Array.isArray(points))\r\n    {\r\n        throw new Error('GetCentroid points argument must be an array');\r\n    }\r\n\r\n    var len = points.length;\r\n\r\n    if (len < 1)\r\n    {\r\n        throw new Error('GetCentroid points array must not be empty');\r\n    }\r\n    else if (len === 1)\r\n    {\r\n        out.x = points[0].x;\r\n        out.y = points[0].y;\r\n    }\r\n    else\r\n    {\r\n        for (var i = 0; i < len; i++)\r\n        {\r\n            out.x += points[i].x;\r\n            out.y += points[i].y;\r\n        }\r\n\r\n        out.x /= len;\r\n        out.y /= len;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetCentroid;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Point","GetCentroid","points","out","undefined","Array","isArray","Error","len","length","x","y","i"]
}
