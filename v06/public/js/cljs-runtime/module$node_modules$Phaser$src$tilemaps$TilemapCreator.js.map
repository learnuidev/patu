{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$TilemapCreator.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO/GC,MAAAA,CAAoBH,OAAA,CAAQ,8DAAR,CACxB,KAAII,eAAiBJ,OAAA,CAAQ,wDAAR,CAgCrBG,OAAAE,SAAA,CAA2B,SAA3B,CAAsC,QAAS,CAACC,MAAD,CAC/C,CAEQC,MAAAA,CAAgBC,IAAAA,EAAZ,GAACF,MAAD,CAAyBA,MAAzB,CAAkC,EAE1C,OAAOF,eAAA,CACH,IAAAK,MADG,CAEHF,MAAAG,IAFG,CAGHH,MAAAI,UAHG,CAIHJ,MAAAK,WAJG,CAKHL,MAAAM,MALG,CAMHN,MAAAO,OANG,CAOHP,MAAAQ,KAPG,CAQHR,MAAAS,WARG,CAJX,CADA,CAxCmH;",
"sources":["node_modules/Phaser/src/tilemaps/TilemapCreator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$TilemapCreator\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar GameObjectCreator = require('../gameobjects/GameObjectCreator');\r\nvar ParseToTilemap = require('./ParseToTilemap');\r\n\r\n/**\r\n * @typedef {object} TilemapConfig\r\n * \r\n * @property {string} [key] - The key in the Phaser cache that corresponds to the loaded tilemap data.\r\n * @property {integer[][]} [data] - Instead of loading from the cache, you can also load directly from a 2D array of tile indexes.\r\n * @property {integer} [tileWidth=32] - The width of a tile in pixels.\r\n * @property {integer} [tileHeight=32] - The height of a tile in pixels.\r\n * @property {integer} [width=10] - The width of the map in tiles.\r\n * @property {integer} [height=10] - The height of the map in tiles.\r\n * @property {boolean} [insertNull=false] - Controls how empty tiles, tiles with an index of -1,\r\n * in the map data are handled. If `true`, empty locations will get a value of `null`. If `false`,\r\n * empty location will get a Tile object with an index of -1. If you've a large sparsely populated\r\n * map and the tile data doesn't need to change then setting this value to `true` will help with\r\n * memory consumption. However if your map is small or you need to update the tiles dynamically,\r\n * then leave the default value set.\r\n */\r\n\r\n/**\r\n * Creates a Tilemap from the given key or data, or creates a blank Tilemap if no key/data provided.\r\n * When loading from CSV or a 2D array, you should specify the tileWidth & tileHeight. When parsing\r\n * from a map from Tiled, the tileWidth, tileHeight, width & height will be pulled from the map\r\n * data. For an empty map, you should specify tileWidth, tileHeight, width & height.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#tilemap\r\n * @since 3.0.0\r\n * \r\n * @param {TilemapConfig} [config] - The config options for the Tilemap.\r\n * \r\n * @return {Phaser.Tilemaps.Tilemap}\r\n */\r\nGameObjectCreator.register('tilemap', function (config)\r\n{\r\n    // Defaults are applied in ParseToTilemap\r\n    var c = (config !== undefined) ? config : {};\r\n\r\n    return ParseToTilemap(\r\n        this.scene,\r\n        c.key,\r\n        c.tileWidth,\r\n        c.tileHeight,\r\n        c.width,\r\n        c.height,\r\n        c.data,\r\n        c.insertNull\r\n    );\r\n});\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GameObjectCreator","ParseToTilemap","register","config","c","undefined","scene","key","tileWidth","tileHeight","width","height","data","insertNull"]
}
