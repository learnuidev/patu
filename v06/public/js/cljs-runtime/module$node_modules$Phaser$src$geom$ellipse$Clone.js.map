{
"version":3,
"file":"module$node_modules$Phaser$src$geom$ellipse$Clone.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,kDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO9G,IAAIC,QAAUH,OAAA,CAAQ,qDAAR,CAiBdC,OAAAC,QAAA,CALYE,QAAS,CAACC,MAAD,CACrB,CACI,MAAO,KAAIF,OAAJ,CAAYE,MAAAC,EAAZ,CAAsBD,MAAAE,EAAtB,CAAgCF,MAAAG,MAAhC,CAA8CH,MAAAI,OAA9C,CADX,CApB8G;",
"sources":["node_modules/Phaser/src/geom/ellipse/Clone.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$ellipse$Clone\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar Ellipse = require('./Ellipse');\r\n\r\n/**\r\n * Creates a new Ellipse instance based on the values contained in the given source.\r\n *\r\n * @function Phaser.Geom.Ellipse.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} source - The Ellipse to be cloned. Can be an instance of an Ellipse or a ellipse-like object, with x, y, width and height properties.\r\n *\r\n * @return {Phaser.Geom.Ellipse} A clone of the source Ellipse.\r\n */\r\nvar Clone = function (source)\r\n{\r\n    return new Ellipse(source.x, source.y, source.width, source.height);\r\n};\r\n\r\nmodule.exports = Clone;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Ellipse","Clone","source","x","y","width","height"]
}
