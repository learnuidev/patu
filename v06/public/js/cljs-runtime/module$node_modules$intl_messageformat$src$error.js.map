{
"version":3,
"file":"module$node_modules$intl_messageformat$src$error.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/intl-messageformat/src/error.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$intl_messageformat$src$error\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MissingValueError = exports.InvalidValueTypeError = exports.InvalidValueError = exports.FormatError = exports.ErrorCode = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    tslib_1.__extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n    };\n    return FormatError;\n}(Error));\nexports.FormatError = FormatError;\nvar InvalidValueError = /** @class */ (function (_super) {\n    tslib_1.__extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexports.InvalidValueError = InvalidValueError;\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    tslib_1.__extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexports.InvalidValueTypeError = InvalidValueTypeError;\nvar MissingValueError = /** @class */ (function (_super) {\n    tslib_1.__extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", \"MISSING_VALUE\" /* MISSING_VALUE */, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexports.MissingValueError = MissingValueError;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","MissingValueError","InvalidValueTypeError","InvalidValueError","FormatError","ErrorCode","tslib_1","_super","msg","code","originalMessage","_this","call","__extends","prototype","toString","FormatError.prototype.toString","message","Error","variableId","options","keys","join","type"]
}
