{
"version":3,
"file":"module$node_modules$Phaser$src$actions$Call.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuCxGD,MAAAC,QAAA,CAZWC,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkBC,OAAlB,CACpB,CACI,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,KAAAI,OAApB,CAAkCD,CAAA,EAAlC,CAIIF,QAAAI,KAAA,CAAcH,OAAd,CAFWF,KAAAM,CAAMH,CAANG,CAEX,CAGJ,OAAON,MARX,CA5BwG;",
"sources":["node_modules/Phaser/src/actions/Call.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$actions$Call\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * @callback CallCallback\r\n *\r\n * @param {Phaser.GameObjects.GameObject} item - The Game Object to run the callback on.\r\n */\r\n\r\n/**\r\n * Takes an array of objects and passes each of them to the given callback.\r\n *\r\n * @function Phaser.Actions.Call\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {CallCallback} callback - The callback to be invoked. It will be passed just one argument: the item from the array.\r\n * @param {*} context - The scope in which the callback will be invoked.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that was passed to this Action.\r\n */\r\nvar Call = function (items, callback, context)\r\n{\r\n    for (var i = 0; i < items.length; i++)\r\n    {\r\n        var item = items[i];\r\n\r\n        callback.call(context, item);\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = Call;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Call","items","callback","context","i","length","call","item"]
}
