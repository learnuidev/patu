shadow$provide.module$node_modules$Phaser$src$tilemaps$staticlayer$StaticTilemapLayerCanvasRenderer=function(global,require,module,exports){module.exports=function(renderer,src,interpolationPercentage,camera,parentMatrix){src.cull(camera);interpolationPercentage=src.culledTiles;var tileCount=interpolationPercentage.length;if(0!==tileCount){var camMatrix=renderer._tempMatrix1,layerMatrix=renderer._tempMatrix2,calcMatrix=renderer._tempMatrix3;layerMatrix.applyITRS(src.x,src.y,src.rotation,src.scaleX,
src.scaleY);camMatrix.copyFrom(camera.matrix);parentMatrix?(camMatrix.multiplyWithOffset(parentMatrix,-camera.scrollX*src.scrollFactorX,-camera.scrollY*src.scrollFactorY),layerMatrix.e=src.x,layerMatrix.f=src.y):(layerMatrix.e-=camera.scrollX*src.scrollFactorX,layerMatrix.f-=camera.scrollY*src.scrollFactorY);camMatrix.multiply(layerMatrix,calcMatrix);renderer=renderer.currentContext;parentMatrix=src.gidMap;renderer.save();calcMatrix.copyToContext(renderer);calcMatrix=camera.alpha*src.alpha;renderer.globalAlpha=
camera.alpha*src.alpha;for(src=0;src<tileCount;src++)if(camera=interpolationPercentage[src],layerMatrix=parentMatrix[camera.index])if(camMatrix=layerMatrix.image.getSourceImage(),layerMatrix=layerMatrix.getTileTextureCoordinates(camera.index)){var halfWidth=camera.width/2,halfHeight=camera.height/2;renderer.save();renderer.translate(camera.pixelX+halfWidth,camera.pixelY+halfHeight);0!==camera.rotation&&renderer.rotate(camera.rotation);(camera.flipX||camera.flipY)&&renderer.scale(camera.flipX?-1:1,
camera.flipY?-1:1);renderer.globalAlpha=calcMatrix*camera.alpha;renderer.drawImage(camMatrix,layerMatrix.x,layerMatrix.y,camera.width,camera.height,-halfWidth,-halfHeight,camera.width,camera.height);renderer.restore()}renderer.restore()}}}
//# sourceMappingURL=module$node_modules$Phaser$src$tilemaps$staticlayer$StaticTilemapLayerCanvasRenderer.js.map
