{
"version":3,
"file":"module$node_modules$Phaser$src$math$GetSpeed.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,6CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuBzGD,MAAAC,QAAA,CALeC,QAAS,CAACC,QAAD,CAAWC,IAAX,CACxB,CACI,MAAQD,SAAR,CAAmBC,IAAnB,CAA2B,GAD/B,CAnByG;",
"sources":["node_modules/Phaser/src/math/GetSpeed.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$GetSpeed\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the speed required to cover a distance in the time given.\r\n *\r\n * @function Phaser.Math.GetSpeed\r\n * @since 3.0.0\r\n *\r\n * @param {number} distance - The distance to travel in pixels.\r\n * @param {integer} time - The time, in ms, to cover the distance in.\r\n *\r\n * @return {number} The amount you will need to increment the position by each step in order to cover the distance in the time given.\r\n */\r\nvar GetSpeed = function (distance, time)\r\n{\r\n    return (distance / time) / 1000;\r\n};\r\n\r\nmodule.exports = GetSpeed;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetSpeed","distance","time"]
}
