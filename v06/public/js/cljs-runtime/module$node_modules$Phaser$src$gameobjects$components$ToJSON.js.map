{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$components$ToJSON.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,6DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiFzHD,MAAAC,QAAA,CArCaC,QAAS,CAACC,UAAD,CACtB,CACI,IAAIC,IAAM,CACNC,KAAMF,UAAAE,KADA,CAENC,KAAMH,UAAAG,KAFA,CAGNC,EAAGJ,UAAAI,EAHG,CAINC,EAAGL,UAAAK,EAJG,CAKNC,MAAON,UAAAM,MALD,CAMNC,MAAO,CACHH,EAAGJ,UAAAQ,OADA,CAEHH,EAAGL,UAAAS,OAFA,CAND,CAUNC,OAAQ,CACJN,EAAGJ,UAAAW,QADC,CAEJN,EAAGL,UAAAY,QAFC,CAVF,CAcNC,MAAOb,UAAAa,MAdD,CAeNC,MAAOd,UAAAc,MAfD,CAgBNC,SAAUf,UAAAe,SAhBJ,CAiBNC,MAAOhB,UAAAgB,MAjBD,CAkBNC,QAASjB,UAAAiB,QAlBH,CAmBNC,UAAWlB,UAAAkB,UAnBL;AAoBNC,UAAWnB,UAAAmB,UApBL,CAqBNC,WAAY,EArBN,CAsBNC,SAAU,EAtBJ,CAuBNC,KAAM,EAvBA,CA0BNtB,WAAAuB,QAAJ,GAEItB,GAAAmB,WACA,CADiBpB,UAAAuB,QAAAC,IACjB,CAAAvB,GAAAoB,SAAA,CAAerB,UAAAyB,MAAAvB,KAHnB,CAMA,OAAOD,IAjCX,CA7CyH;",
"sources":["node_modules/Phaser/src/gameobjects/components/ToJSON.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$components$ToJSON\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * @typedef {object} JSONGameObject\r\n *\r\n * @property {string} name - The name of this Game Object.\r\n * @property {string} type - A textual representation of this Game Object, i.e. `sprite`.\r\n * @property {number} x - The x position of this Game Object.\r\n * @property {number} y - The y position of this Game Object.\r\n * @property {object} scale - The scale of this Game Object\r\n * @property {number} scale.x - The horizontal scale of this Game Object.\r\n * @property {number} scale.y - The vertical scale of this Game Object.\r\n * @property {object} origin - The origin of this Game Object.\r\n * @property {number} origin.x - The horizontal origin of this Game Object.\r\n * @property {number} origin.y - The vertical origin of this Game Object.\r\n * @property {boolean} flipX - The horizontally flipped state of the Game Object.\r\n * @property {boolean} flipY - The vertically flipped state of the Game Object.\r\n * @property {number} rotation - The angle of this Game Object in radians.\r\n * @property {number} alpha - The alpha value of the Game Object.\r\n * @property {boolean} visible - The visible state of the Game Object.\r\n * @property {integer} scaleMode - The Scale Mode being used by this Game Object.\r\n * @property {(integer|string)} blendMode - Sets the Blend Mode being used by this Game Object.\r\n * @property {string} textureKey - The texture key of this Game Object.\r\n * @property {string} frameKey - The frame key of this Game Object.\r\n * @property {object} data - The data of this Game Object.\r\n */\r\n\r\n/**\r\n * Build a JSON representation of the given Game Object.\r\n *\r\n * This is typically extended further by Game Object specific implementations.\r\n *\r\n * @method Phaser.GameObjects.Components.ToJSON\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The Game Object to export as JSON.\r\n *\r\n * @return {JSONGameObject} A JSON representation of the Game Object.\r\n */\r\nvar ToJSON = function (gameObject)\r\n{\r\n    var out = {\r\n        name: gameObject.name,\r\n        type: gameObject.type,\r\n        x: gameObject.x,\r\n        y: gameObject.y,\r\n        depth: gameObject.depth,\r\n        scale: {\r\n            x: gameObject.scaleX,\r\n            y: gameObject.scaleY\r\n        },\r\n        origin: {\r\n            x: gameObject.originX,\r\n            y: gameObject.originY\r\n        },\r\n        flipX: gameObject.flipX,\r\n        flipY: gameObject.flipY,\r\n        rotation: gameObject.rotation,\r\n        alpha: gameObject.alpha,\r\n        visible: gameObject.visible,\r\n        scaleMode: gameObject.scaleMode,\r\n        blendMode: gameObject.blendMode,\r\n        textureKey: '',\r\n        frameKey: '',\r\n        data: {}\r\n    };\r\n\r\n    if (gameObject.texture)\r\n    {\r\n        out.textureKey = gameObject.texture.key;\r\n        out.frameKey = gameObject.frame.name;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = ToJSON;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","ToJSON","gameObject","out","name","type","x","y","depth","scale","scaleX","scaleY","origin","originX","originY","flipX","flipY","rotation","alpha","visible","scaleMode","blendMode","textureKey","frameKey","data","texture","key","frame"]
}
