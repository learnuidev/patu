{
"version":3,
"file":"module$node_modules$Phaser$src$math$easing$elastic$InOut.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwDrHD,MAAAC,QAAA,CArCYC,QAAS,CAACC,CAAD,CAAIC,SAAJ,CAAeC,MAAf,CACrB,CACsBC,IAAAA,EAAlB,GAAIF,SAAJ,GAA+BA,SAA/B,CAA2C,EAA3C,CACeE,KAAAA,EAAf,GAAID,MAAJ,GAA4BA,MAA5B,CAAqC,EAArC,CAEA,IAAU,CAAV,GAAIF,CAAJ,CAEI,MAAO,EAEN,IAAU,CAAV,GAAIA,CAAJ,CAED,MAAO,EAIP,KAAII,EAAIF,MAAJE,CAAa,CAED,EAAhB,CAAIH,SAAJ,CAEIA,SAFJ,CAEgB,CAFhB,CAMIG,CANJ,CAMQF,MANR,CAMiBG,IAAAC,KAAA,CAAU,CAAV,CAAcL,SAAd,CANjB,EAM6C,CAN7C,CAMiDI,IAAAE,GANjD,CASA,OAAe,EAAf,EAAKP,CAAL,EAAU,CAAV,EAEW,GAFX,CAEmBC,SAFnB,CAE+BI,IAAAG,IAAA,CAAS,CAAT,CAAY,EAAZ,CAAkB,EAAAR,CAAlB,CAF/B,CAE4DK,IAAAI,IAAA,CAAoB,CAApB,EAAUT,CAAV,CAAcI,CAAd,EAAwBC,IAAAE,GAAxB,CAAmCL,MAAnC,CAF5D,CAMWD,SANX,CAMuBI,IAAAG,IAAA,CAAS,CAAT,CAAY,GAAZ,CAAmB,EAAAR,CAAnB,CANvB,CAMqDK,IAAAI,IAAA,CAAoB,CAApB,EAAUT,CAAV,CAAcI,CAAd,EAAwBC,IAAAE,GAAxB,CAAmCL,MAAnC,CANrD,CAMkG,EANlG,CAMwG,CA/BhH,CApBqH;",
"sources":["node_modules/Phaser/src/math/easing/elastic/InOut.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$easing$elastic$InOut\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Elastic ease-in/out.\r\n *\r\n * @function Phaser.Math.Easing.Elastic.InOut\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n * @param {number} [amplitude=0.1] - The amplitude of the elastic ease.\r\n * @param {number} [period=0.1] - [description]\r\n *\r\n * @return {number} The tweened value.\r\n */\r\nvar InOut = function (v, amplitude, period)\r\n{\r\n    if (amplitude === undefined) { amplitude = 0.1; }\r\n    if (period === undefined) { period = 0.1; }\r\n\r\n    if (v === 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v === 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        var s = period / 4;\r\n\r\n        if (amplitude < 1)\r\n        {\r\n            amplitude = 1;\r\n        }\r\n        else\r\n        {\r\n            s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\r\n        }\r\n\r\n        if ((v *= 2) < 1)\r\n        {\r\n            return -0.5 * (amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\r\n        }\r\n        else\r\n        {\r\n            return amplitude * Math.pow(2, -10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period) * 0.5 + 1;\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = InOut;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","InOut","v","amplitude","period","undefined","s","Math","asin","PI","pow","sin"]
}
