shadow$provide.module$node_modules$Phaser$src$gameobjects$bitmaptext$dynamic$DynamicBitmapTextCanvasRenderer=function(global,require,module,exports){var SetTransform=require("module$node_modules$Phaser$src$renderer$canvas$utils$SetTransform");module.exports=function(renderer,src,interpolationPercentage,camera,parentMatrix){interpolationPercentage=src.text;var textLength=interpolationPercentage.length,ctx=renderer.currentContext;if(0!==textLength&&SetTransform(renderer,ctx,src,camera,parentMatrix)){var textureFrame=
src.frame;renderer=src.displayCallback;parentMatrix=camera.scrollX*src.scrollFactorX;var cameraScrollY=camera.scrollY*src.scrollFactorY,chars=src.fontData.chars,lineHeight=src.fontData.lineHeight,xAdvance=0,yAdvance=0,indexCount=0,glyph,lastGlyph=null,lastCharCode=0,image=src.frame.source.image,textureX=textureFrame.cutX,textureY=textureFrame.cutY;0<src.cropWidth&&0<src.cropHeight&&(ctx.save(),ctx.beginPath(),ctx.rect(0,0,src.cropWidth,src.cropHeight),ctx.clip());for(var index=0;index<textLength;++index){var scale=
src.fontSize/src.fontData.size;var rotation=0;textureFrame=interpolationPercentage.charCodeAt(index);if(10===textureFrame)indexCount=xAdvance=0,yAdvance+=lineHeight,lastGlyph=null;else if(glyph=chars[textureFrame]){var glyphX=textureX+glyph.x;var glyphY=textureY+glyph.y;var glyphW=glyph.width;var glyphH=glyph.height;var x=indexCount+glyph.xOffset+xAdvance-src.scrollX;var y=glyph.yOffset+yAdvance-src.scrollY;null!==lastGlyph&&(lastGlyph=glyph.kerning[lastCharCode],x+=void 0!==lastGlyph?lastGlyph:0);
renderer&&(lastGlyph=renderer({tint:{topLeft:0,topRight:0,bottomLeft:0,bottomRight:0},index:index,charCode:textureFrame,x:x,y:y,scale:scale,rotation:0,data:glyph.data}),x=lastGlyph.x,y=lastGlyph.y,scale=lastGlyph.scale,rotation=lastGlyph.rotation);x*=scale;y*=scale;x-=parentMatrix;y-=cameraScrollY;camera.roundPixels&&(x|=0,y|=0);ctx.save();ctx.translate(x,y);ctx.rotate(rotation);ctx.scale(scale,scale);ctx.drawImage(image,glyphX,glyphY,glyphW,glyphH,0,0,glyphW,glyphH);ctx.restore();xAdvance+=glyph.xAdvance;
indexCount+=1;lastGlyph=glyph;lastCharCode=textureFrame}}0<src.cropWidth&&0<src.cropHeight&&ctx.restore();ctx.restore()}}}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$bitmaptext$dynamic$DynamicBitmapTextCanvasRenderer.js.map
