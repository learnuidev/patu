{
"version":3,
"file":"module$node_modules$Phaser$src$display$color$IntegerToRGB.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0CtHD,MAAAC,QAAA,CAvBmBC,QAAS,CAACC,KAAD,CAC5B,CACI,MAAY,SAAZ,CAAIA,KAAJ,CAGW,CACHC,EAAGD,KAAHC,GAAa,EADV,CAEHC,EAAGF,KAAHE,EAAY,EAAZA,CAAiB,GAFd,CAGHC,EAAGH,KAAHG,EAAY,CAAZA,CAAgB,GAHb,CAIHC,EAAGJ,KAAHI,CAAW,GAJR,CAHX,CAYW,CACHH,EAAG,GADA,CAEHC,EAAGF,KAAHE,EAAY,EAAZA,CAAiB,GAFd,CAGHC,EAAGH,KAAHG,EAAY,CAAZA,CAAgB,GAHb,CAIHC,EAAGJ,KAAHI,CAAW,GAJR,CAbf,CApBsH;",
"sources":["node_modules/Phaser/src/display/color/IntegerToRGB.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$display$color$IntegerToRGB\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n/**\r\n * Return the component parts of a color as an Object with the properties alpha, red, green, blue.\r\n *\r\n * Alpha will only be set if it exists in the given color (0xAARRGGBB)\r\n *\r\n * @function Phaser.Display.Color.IntegerToRGB\r\n * @since 3.0.0\r\n *\r\n * @param {integer} input - The color value to convert into a Color object.\r\n *\r\n * @return {ColorObject} An object with the red, green and blue values set in the r, g and b properties.\r\n */\r\nvar IntegerToRGB = function (color)\r\n{\r\n    if (color > 16777215)\r\n    {\r\n        //  The color value has an alpha component\r\n        return {\r\n            a: color >>> 24,\r\n            r: color >> 16 & 0xFF,\r\n            g: color >> 8 & 0xFF,\r\n            b: color & 0xFF\r\n        };\r\n    }\r\n    else\r\n    {\r\n        return {\r\n            a: 255,\r\n            r: color >> 16 & 0xFF,\r\n            g: color >> 8 & 0xFF,\r\n            b: color & 0xFF\r\n        };\r\n    }\r\n};\r\n\r\nmodule.exports = IntegerToRGB;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","IntegerToRGB","color","a","r","g","b"]
}
