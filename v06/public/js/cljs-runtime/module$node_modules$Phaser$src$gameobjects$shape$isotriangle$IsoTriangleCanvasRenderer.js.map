{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$shape$isotriangle$IsoTriangleCanvasRenderer.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,uFAAA,CAA2G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOnJ,IAAIC,gBAAkBH,OAAA,CAAQ,kEAAR,CAAtB,CACII,aAAeJ,OAAA,CAAQ,mEAAR,CAiGnBC,OAAAC,QAAA,CAhFgCG,QAAS,CAACC,QAAD,CAAWC,GAAX,CAAgBC,uBAAhB,CAAyCC,MAAzC,CAAiDC,YAAjD,CACzC,CACQC,uBAAAA,CAAML,QAAAM,eAEV,IAAIR,YAAA,CAAaE,QAAb,CAAuBK,uBAAvB;AAA4BJ,GAA5B,CAAiCE,MAAjC,CAAyCC,YAAzC,CAAJ,EAA8DH,GAAAM,SAA9D,CACA,CACQC,YAAAA,CAAOP,GAAAQ,MACPC,SAAAA,CAAST,GAAAS,OAETC,OAAAA,CAAQH,YAARG,CAAe,CACPH,aAARI,EAAeX,GAAAY,WAEnB,KAAIC,SAAWb,GAAAc,WAIXd,IAAAe,QAAJ,EAAmBF,QAAnB,GAEIjB,eAAA,CAAgBQ,uBAAhB,CAAqBJ,GAArB,CAA0BA,GAAAgB,QAA1B,CASA,CAPAZ,uBAAAa,UAAA,EAOA,CALAb,uBAAAc,OAAA,CAAW,CAACR,MAAZ,CAAmB,CAACD,QAApB,CAKA,CAJAL,uBAAAe,OAAA,CAAW,CAAX,CAAc,CAACR,YAAf,CAAuBF,QAAvB,CAIA,CAHAL,uBAAAe,OAAA,CAAWT,MAAX,CAAkB,CAACD,QAAnB,CAGA,CAFAL,uBAAAe,OAAA,CAAW,CAAX,CAAcR,YAAd,CAAsBF,QAAtB,CAEA,CAAAL,uBAAAgB,KAAA,EAXJ,CAgBIpB;GAAAqB,SAAJ,GAEIzB,eAAA,CAAgBQ,uBAAhB,CAAqBJ,GAArB,CAA0BA,GAAAsB,SAA1B,CAiBA,CAfAlB,uBAAAa,UAAA,EAeA,CAbIJ,QAAJ,CAEIT,uBAAAc,OAAA,CAAW,CAACR,MAAZ,CAAmB,CAACD,QAApB,CAFJ,CAQIL,uBAAAc,OAAA,CAAW,CAACR,MAAZ,CAAmB,CAAnB,CAKJ,CAVIN,uBAAAe,OAAA,CAAW,CAAX,CAAcR,YAAd,CAUJ,CATIP,uBAAAe,OAAA,CAAW,CAAX,CAAcR,YAAd,CAAsBF,QAAtB,CASJ,CAAAL,uBAAAgB,KAAA,EAnBJ,CAwBIpB,IAAAuB,UAAJ,GAEI3B,eAAA,CAAgBQ,uBAAhB,CAAqBJ,GAArB,CAA0BA,GAAAwB,UAA1B,CAiBA,CAfApB,uBAAAa,UAAA,EAeA,CAbIJ,QAAJ,CAEIT,uBAAAc,OAAA,CAAWR,MAAX;AAAkB,CAACD,QAAnB,CAFJ,CAQIL,uBAAAc,OAAA,CAAWR,MAAX,CAAkB,CAAlB,CAKJ,CAVIN,uBAAAe,OAAA,CAAW,CAAX,CAAcR,YAAd,CAUJ,CATIP,uBAAAe,OAAA,CAAW,CAAX,CAAcR,YAAd,CAAsBF,QAAtB,CASJ,CAAAL,uBAAAgB,KAAA,EAnBJ,CAnDJ,CAJJ,CA1BmJ;",
"sources":["node_modules/Phaser/src/gameobjects/shape/isotriangle/IsoTriangleCanvasRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$shape$isotriangle$IsoTriangleCanvasRenderer\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar FillStyleCanvas = require('../FillStyleCanvas');\r\nvar SetTransform = require('../../../renderer/canvas/utils/SetTransform');\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.IsoTriangle#renderCanvas\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.IsoTriangle} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar IsoTriangleCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    var ctx = renderer.currentContext;\r\n\r\n    if (SetTransform(renderer, ctx, src, camera, parentMatrix) && src.isFilled)\r\n    {\r\n        var size = src.width;\r\n        var height = src.height;\r\n    \r\n        var sizeA = size / 2;\r\n        var sizeB = size / src.projection;\r\n\r\n        var reversed = src.isReversed;\r\n\r\n        //  Top Face\r\n\r\n        if (src.showTop && reversed)\r\n        {\r\n            FillStyleCanvas(ctx, src, src.fillTop);\r\n\r\n            ctx.beginPath();\r\n\r\n            ctx.moveTo(-sizeA, -height);\r\n            ctx.lineTo(0, -sizeB - height);\r\n            ctx.lineTo(sizeA, -height);\r\n            ctx.lineTo(0, sizeB - height);\r\n\r\n            ctx.fill();\r\n        }\r\n\r\n        //  Left Face\r\n\r\n        if (src.showLeft)\r\n        {\r\n            FillStyleCanvas(ctx, src, src.fillLeft);\r\n\r\n            ctx.beginPath();\r\n\r\n            if (reversed)\r\n            {\r\n                ctx.moveTo(-sizeA, -height);\r\n                ctx.lineTo(0, sizeB);\r\n                ctx.lineTo(0, sizeB - height);\r\n            }\r\n            else\r\n            {\r\n                ctx.moveTo(-sizeA, 0);\r\n                ctx.lineTo(0, sizeB);\r\n                ctx.lineTo(0, sizeB - height);\r\n            }\r\n\r\n            ctx.fill();\r\n        }\r\n\r\n        //  Right Face\r\n\r\n        if (src.showRight)\r\n        {\r\n            FillStyleCanvas(ctx, src, src.fillRight);\r\n\r\n            ctx.beginPath();\r\n\r\n            if (reversed)\r\n            {\r\n                ctx.moveTo(sizeA, -height);\r\n                ctx.lineTo(0, sizeB);\r\n                ctx.lineTo(0, sizeB - height);\r\n            }\r\n            else\r\n            {\r\n                ctx.moveTo(sizeA, 0);\r\n                ctx.lineTo(0, sizeB);\r\n                ctx.lineTo(0, sizeB - height);\r\n            }\r\n\r\n            ctx.fill();\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = IsoTriangleCanvasRenderer;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","FillStyleCanvas","SetTransform","IsoTriangleCanvasRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","ctx","currentContext","isFilled","size","width","height","sizeA","sizeB","projection","reversed","isReversed","showTop","fillTop","beginPath","moveTo","lineTo","fill","showLeft","fillLeft","showRight","fillRight"]
}
