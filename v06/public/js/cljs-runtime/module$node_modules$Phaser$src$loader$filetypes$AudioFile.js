shadow$provide.module$node_modules$Phaser$src$loader$filetypes$AudioFile=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var CONST=require("module$node_modules$Phaser$src$const"),File=require("module$node_modules$Phaser$src$loader$File");exports=require("module$node_modules$Phaser$src$loader$FileTypesManager");var GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),HTML5AudioFile=require("module$node_modules$Phaser$src$loader$filetypes$HTML5AudioFile"),
IsPlainObject=require("module$node_modules$Phaser$src$utils$object$IsPlainObject"),AudioFile=new global({Extends:File,initialize:function(loader,key,urlConfig,xhrSettings,audioContext){if(IsPlainObject(key)){var config=key;key=GetFastValue(config,"key");xhrSettings=GetFastValue(config,"xhrSettings");audioContext=GetFastValue(config,"context",audioContext)}File.call(this,loader,{type:"audio",cache:loader.cacheManager.audio,extension:urlConfig.type,responseType:"arraybuffer",key:key,url:urlConfig.url,
xhrSettings:xhrSettings,config:{context:audioContext}})},onProcess:function(){this.state=CONST.FILE_PROCESSING;var _this=this;this.config.context.decodeAudioData(this.xhrLoader.response,function(audioBuffer){_this.data=audioBuffer;_this.onProcessComplete()},function(e){console.error("Error decoding audio: "+this.key+" - ",e?e.message:null);_this.onProcessError()});this.config.context=null}});AudioFile.create=function(loader,key,urls,config,xhrSettings){var game=loader.systems.game,audioConfig=game.config.audio,
deviceAudio=game.device.audio;IsPlainObject(key)&&(urls=GetFastValue(key,"url",[]),config=GetFastValue(key,"config",{}));return(urls=AudioFile.getAudioURL(game,urls))?!deviceAudio.webAudio||audioConfig&&audioConfig.disableWebAudio?new HTML5AudioFile(loader,key,urls,config):new AudioFile(loader,key,urls,xhrSettings,game.sound.context):null};AudioFile.getAudioURL=function(game,urls){Array.isArray(urls)||(urls=[urls]);for(var i=0;i<urls.length;i++){var url=GetFastValue(urls[i],"url",urls[i]);if(0===
url.indexOf("blob:")||0===url.indexOf("data:"))return url;var audioType=url.match(/\.([a-zA-Z0-9]+)($|\?)/);audioType=GetFastValue(urls[i],"type",audioType?audioType[1]:"").toLowerCase();if(game.device.audio[audioType])return{url:url,type:audioType}}return null};exports.register("audio",function(key,urls,config,xhrSettings){var game=this.systems.game,audioConfig=game.config.audio;game=game.device.audio;if(audioConfig&&audioConfig.noAudio||!game.webAudio&&!game.audioData)return this;if(Array.isArray(key))for(config=
0;config<key.length;config++)(urls=AudioFile.create(this,key[config]))&&this.addFile(urls);else(urls=AudioFile.create(this,key,urls,config,xhrSettings))&&this.addFile(urls);return this});module.exports=AudioFile}
//# sourceMappingURL=module$node_modules$Phaser$src$loader$filetypes$AudioFile.js.map
