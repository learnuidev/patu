{
"version":3,
"file":"module$node_modules$Phaser$src$display$color$GetColor.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwBlHD,MAAAC,QAAA,CALeC,QAAS,CAACC,GAAD,CAAMC,KAAN,CAAaC,IAAb,CACxB,CACI,MAAOF,IAAP,EAAc,EAAd,CAAmBC,KAAnB,EAA4B,CAA5B,CAAgCC,IADpC,CApBkH;",
"sources":["node_modules/Phaser/src/display/color/GetColor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$display$color$GetColor\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n/**\r\n * Given 3 separate color values this will return an integer representation of it.\r\n *\r\n * @function Phaser.Display.Color.GetColor\r\n * @since 3.0.0\r\n *\r\n * @param {integer} red - The red color value. A number between 0 and 255.\r\n * @param {integer} green - The green color value. A number between 0 and 255.\r\n * @param {integer} blue - The blue color value. A number between 0 and 255.\r\n *\r\n * @return {number} The combined color value.\r\n */\r\nvar GetColor = function (red, green, blue)\r\n{\r\n    return red << 16 | green << 8 | blue;\r\n};\r\n\r\nmodule.exports = GetColor;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetColor","red","green","blue"]
}
