{
"version":3,
"file":"module$node_modules$Phaser$src$device$Features.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/Phaser/src/device/Features.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$device$Features\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar OS = require('./OS');\r\nvar Browser = require('./Browser');\r\nvar CanvasPool = require('../display/canvas/CanvasPool');\r\n\r\n/**\r\n * Determines the features of the browser running this Phaser Game instance.\r\n * These values are read-only and populated during the boot sequence of the game.\r\n * They are then referenced by internal game systems and are available for you to access\r\n * via `this.sys.game.device.features` from within any Scene.\r\n * \r\n * @typedef {object} Phaser.Device.Features\r\n * @since 3.0.0\r\n * \r\n * @property {?boolean} canvasBitBltShift - True if canvas supports a 'copy' bitblt onto itself when the source and destination regions overlap.\r\n * @property {boolean} canvas - Is canvas available?\r\n * @property {boolean} file - Is file available?\r\n * @property {boolean} fileSystem - Is fileSystem available?\r\n * @property {boolean} getUserMedia - Does the device support the getUserMedia API?\r\n * @property {boolean} littleEndian - Is the device big or little endian? (only detected if the browser supports TypedArrays)\r\n * @property {boolean} localStorage - Is localStorage available?\r\n * @property {boolean} pointerLock - Is Pointer Lock available?\r\n * @property {boolean} support32bit - Does the device context support 32bit pixel manipulation using array buffer views?\r\n * @property {boolean} vibration - Does the device support the Vibration API?\r\n * @property {boolean} webGL - Is webGL available?\r\n * @property {boolean} worker - Is worker available?\r\n */\r\nvar Features = {\r\n\r\n    canvas: false,\r\n    canvasBitBltShift: null,\r\n    file: false,\r\n    fileSystem: false,\r\n    getUserMedia: true,\r\n    littleEndian: false,\r\n    localStorage: false,\r\n    pointerLock: false,\r\n    support32bit: false,\r\n    vibration: false,\r\n    webGL: false,\r\n    worker: false\r\n\r\n};\r\n\r\n// Check Little or Big Endian system.\r\n// @author Matt DesLauriers (@mattdesl)\r\nfunction checkIsLittleEndian ()\r\n{\r\n    var a = new ArrayBuffer(4);\r\n    var b = new Uint8Array(a);\r\n    var c = new Uint32Array(a);\r\n\r\n    b[0] = 0xa1;\r\n    b[1] = 0xb2;\r\n    b[2] = 0xc3;\r\n    b[3] = 0xd4;\r\n\r\n    if (c[0] === 0xd4c3b2a1)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (c[0] === 0xa1b2c3d4)\r\n    {\r\n        return false;\r\n    }\r\n    else\r\n    {\r\n        //  Could not determine endianness\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction init ()\r\n{\r\n    Features.canvas = !!window['CanvasRenderingContext2D'] || OS.cocoonJS;\r\n\r\n    try\r\n    {\r\n        Features.localStorage = !!localStorage.getItem;\r\n    }\r\n    catch (error)\r\n    {\r\n        Features.localStorage = false;\r\n    }\r\n\r\n    Features.file = !!window['File'] && !!window['FileReader'] && !!window['FileList'] && !!window['Blob'];\r\n    Features.fileSystem = !!window['requestFileSystem'];\r\n\r\n    var isUint8 = false;\r\n\r\n    var testWebGL = function ()\r\n    {\r\n        if (window['WebGLRenderingContext'])\r\n        {\r\n            try\r\n            {\r\n                var canvas = CanvasPool.createWebGL(this);\r\n\r\n                if (OS.cocoonJS)\r\n                {\r\n                    canvas.screencanvas = false;\r\n                }\r\n\r\n                var ctx = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n\r\n                var canvas2D = CanvasPool.create2D(this);\r\n\r\n                var ctx2D = canvas2D.getContext('2d');\r\n\r\n                //  Can't be done on a webgl context\r\n                var image = ctx2D.createImageData(1, 1);\r\n\r\n                //  Test to see if ImageData uses CanvasPixelArray or Uint8ClampedArray.\r\n                //  @author Matt DesLauriers (@mattdesl)\r\n                isUint8 = image.data instanceof Uint8ClampedArray;\r\n\r\n                CanvasPool.remove(canvas);\r\n                CanvasPool.remove(canvas2D);\r\n\r\n                return !!ctx;\r\n            }\r\n            catch (e)\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    Features.webGL = testWebGL();\r\n\r\n    Features.worker = !!window['Worker'];\r\n\r\n    Features.pointerLock = 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document;\r\n\r\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\r\n\r\n    window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\r\n\r\n    Features.getUserMedia = Features.getUserMedia && !!navigator.getUserMedia && !!window.URL;\r\n\r\n    // Older versions of firefox (< 21) apparently claim support but user media does not actually work\r\n    if (Browser.firefox && Browser.firefoxVersion < 21)\r\n    {\r\n        Features.getUserMedia = false;\r\n    }\r\n\r\n    // Excludes iOS versions as they generally wrap UIWebView (eg. Safari WebKit) and it\r\n    // is safer to not try and use the fast copy-over method.\r\n    if (!OS.iOS && (Browser.ie || Browser.firefox || Browser.chrome))\r\n    {\r\n        Features.canvasBitBltShift = true;\r\n    }\r\n\r\n    // Known not to work\r\n    if (Browser.safari || Browser.mobileSafari)\r\n    {\r\n        Features.canvasBitBltShift = false;\r\n    }\r\n\r\n    navigator.vibrate = navigator.vibrate || navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate;\r\n\r\n    if (navigator.vibrate)\r\n    {\r\n        Features.vibration = true;\r\n    }\r\n\r\n    if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && typeof Uint32Array !== 'undefined')\r\n    {\r\n        Features.littleEndian = checkIsLittleEndian();\r\n    }\r\n\r\n    Features.support32bit = (\r\n        typeof ArrayBuffer !== 'undefined' &&\r\n        typeof Uint8ClampedArray !== 'undefined' &&\r\n        typeof Int32Array !== 'undefined' &&\r\n        Features.littleEndian !== null &&\r\n        isUint8\r\n    );\r\n\r\n    return Features;\r\n}\r\n\r\nmodule.exports = init();\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","checkIsLittleEndian","a","ArrayBuffer","b","Uint8Array","c","Uint32Array","OS","Browser","CanvasPool","Features","canvas","canvasBitBltShift","file","fileSystem","getUserMedia","littleEndian","localStorage","pointerLock","support32bit","vibration","webGL","worker","init","window","cocoonJS","getItem","error","isUint8","testWebGL","createWebGL","screencanvas","ctx","getContext","canvas2D","create2D","ctx2D","createImageData","image","data","Uint8ClampedArray","remove","e","document","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","oGetUserMedia","URL","webkitURL","mozURL","msURL","firefox","firefoxVersion","iOS","ie","chrome","safari","mobileSafari","vibrate","webkitVibrate","mozVibrate","msVibrate","Int32Array"]
}
