{
"version":3,
"file":"module$kaboom$v06.js",
"lineCount":2967,
"mappings":"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",
"sources":["kaboom/v06.js"],
"sourcesContent":["function IDList() {\n  this.map = new Map();\n  this.lastID = 0;\n}\n\nIDList.prototype.push = function(v) {\n  const id = this.lastID;\n  this.map.set(id, v);\n  this.lastID++;\n  return id;\n};\n\nIDList.prototype.pushd = function(v) {\n  const id = this.push(v);\n  return () => this.delete(id);\n};\n\nIDList.prototype.set = function(id, value) {\n  return this.map.set(id, value);\n};\nIDList.prototype.get = function(id) {\n  return this.map.get(id);\n};\n\nIDList.prototype.forEach = function(cb) {\n  return this.map.forEach(cb);\n};\nIDList.prototype.values = function() {\n  return this.map.values();\n};\nfunction deg2rad(deg) {\n  return (deg * Math.PI) / 180;\n}\n\nfunction rad2deg(rad) {\n  return (rad * 180) / Math.PI;\n}\n\nfunction clamp(val, min, max) {\n  if (min > max) {\n    return clamp(val, max, min);\n  }\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction lerp(a, b, t) {\n  return a + (b - a) * t;\n}\n\nfunction map(v, l1, h1, l2, h2) {\n  return l2 + ((v - l1) / (h1 - l1)) * (h2 - l2);\n}\n\nfunction mapc(v, l1, h1, l2, h2) {\n  return clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nfunction vec2(...args) {\n  if (args.length === 0) {\n    return vec2(0, 0);\n  }\n\n  if (args.length === 1) {\n    if (typeof args[0] === \"number\") {\n      return vec2(args[0], args[0]);\n    } else if (isVec2(args[0])) {\n      return vec2(args[0].x, args[0].y);\n    } else if (Array.isArray(args[0]) && args[0].length === 2) {\n      return vec2.apply(null, args[0]);\n    }\n  }\n\n  return {\n    x: args[0],\n    y: args[1],\n    clone() {\n      return vec2(this.x, this.y);\n    },\n    add(...args) {\n      const p2 = vec2(...args);\n      return vec2(this.x + p2.x, this.y + p2.y);\n    },\n    sub(...args) {\n      const p2 = vec2(...args);\n      return vec2(this.x - p2.x, this.y - p2.y);\n    },\n    scale(...args) {\n      const s = vec2(...args);\n      return vec2(this.x * s.x, this.y * s.y);\n    },\n    dist(...args) {\n      const p2 = vec2(...args);\n      return Math.sqrt(\n        (this.x - p2.x) * (this.x - p2.x) + (this.y - p2.y) * (this.y - p2.y)\n      );\n    },\n    len() {\n      return this.dist(vec2(0, 0));\n    },\n    unit() {\n      return this.scale(1 / this.len());\n    },\n    normal() {\n      return vec2(this.y, -this.x);\n    },\n    dot(p2) {\n      return this.x * p2.x + this.y + p2.y;\n    },\n    angle(...args) {\n      const p2 = vec2(...args);\n      return Math.atan2(this.y - p2.y, this.x - p2.x);\n    },\n    lerp(p2, t) {\n      return vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n    },\n    toFixed(n) {\n      return vec2(this.x.toFixed(n), this.y.toFixed(n));\n    },\n    eq(other) {\n      return this.x === other.x && this.y === other.y;\n    },\n    str() {\n      return `(${this.x}, ${this.y})`;\n    }\n  };\n}\n\nfunction vec2FromAngle(a) {\n  return vec2(Math.cos(a), Math.sin(a));\n}\n\nfunction vec3(x, y, z) {\n  return {\n    x: x,\n    y: y,\n    z: z,\n    xy() {\n      return vec2(this.x, this.y);\n    }\n  };\n}\n\nfunction isVec2(p) {\n  return p !== undefined && p.x !== undefined && p.y !== undefined;\n}\n\nfunction isVec3(p) {\n  return (\n    p !== undefined &&\n    p.x !== undefined &&\n    p.y !== undefined &&\n    p.z !== undefined\n  );\n}\n\nfunction isColor(c) {\n  return (\n    c !== undefined &&\n    c.r !== undefined &&\n    c.g !== undefined &&\n    c.b !== undefined &&\n    c.a !== undefined\n  );\n}\n\nfunction isMat4(m) {\n  if (m !== undefined && Array.isArray(m.m) && m.m.length === 16) {\n    return m;\n  }\n}\n\nfunction rgb(...args) {\n  if (args.length === 0) {\n    return rgba();\n  } else if (args.length === 1) {\n    if (isColor(args[0])) {\n      return rgba(args[0]);\n    } else if (Array.isArray(args[0]) && args[0].length === 3) {\n      return rgb.apply(null, args[0]);\n    }\n  }\n  return rgba(args[0], args[1], args[2], 1);\n}\n\nfunction rgba(...args) {\n  if (args.length === 0) {\n    return rgba(1, 1, 1, 1);\n  } else if (args.length === 1) {\n    if (isColor(args[0])) {\n      return rgba(args[0].r, args[0].g, args[0].b, args[0].a);\n    } else if (Array.isArray(args[0]) && args[0].length === 4) {\n      return rgba.apply(null, args[0]);\n    }\n  }\n\n  return {\n    r: args[0],\n    g: args[1],\n    b: args[2],\n    a: args[3] ? args[3] : 1,\n    clone() {\n      return rgba(this.r, this.g, this.b, this.a);\n    },\n    lighten(a) {\n      return rgba(this.r + a, this.g + a, this.b + a, this.a);\n    },\n    darken(a) {\n      return this.lighten(-a);\n    },\n    invert() {\n      return rgba(1 - this.r, 1 - this.g, 1 - this.b, this.a);\n    },\n    isDark(p = 0.5) {\n      return this.r + this.g + this.b < 3 * p;\n    },\n    isLight(p = 0.5) {\n      return this.r + this.g + this.b > 3 * p;\n    },\n    eq(other) {\n      return (\n        this.r === other.r &&\n        this.g === other.g &&\n        this.b === other.g &&\n        this.a === other.a\n      );\n    }\n  };\n}\n\nfunction quad(x, y, w, h) {\n  return {\n    x: x,\n    y: y,\n    w: w,\n    h: h,\n    scale(other) {\n      return quad(\n        this.x + this.w * other.x,\n        this.y + this.h * other.y,\n        this.w * other.w,\n        this.h * other.h\n      );\n    },\n    clone() {\n      return quad(this.x, this.y, this.w, this.h);\n    },\n    eq(other) {\n      return (\n        this.x === other.x &&\n        this.y === other.y &&\n        this.w === other.w &&\n        this.h === other.h\n      );\n    }\n  };\n}\n\nfunction mat4(m) {\n  return {\n    m: m ? [...m] : [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\n\n    clone() {\n      return mat4(this.m);\n    },\n\n    mult(other) {\n      const out = [];\n\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          out[i * 4 + j] =\n            this.m[0 * 4 + j] * other.m[i * 4 + 0] +\n            this.m[1 * 4 + j] * other.m[i * 4 + 1] +\n            this.m[2 * 4 + j] * other.m[i * 4 + 2] +\n            this.m[3 * 4 + j] * other.m[i * 4 + 3];\n        }\n      }\n\n      return mat4(out);\n    },\n\n    multVec4(p) {\n      return {\n        x:\n          p.x * this.m[0] +\n          p.y * this.m[4] +\n          p.z * this.m[8] +\n          p.w * this.m[12],\n        y:\n          p.x * this.m[1] +\n          p.y * this.m[5] +\n          p.z * this.m[9] +\n          p.w * this.m[13],\n        z:\n          p.x * this.m[2] +\n          p.y * this.m[6] +\n          p.z * this.m[10] +\n          p.w * this.m[14],\n        w:\n          p.x * this.m[3] +\n          p.y * this.m[7] +\n          p.z * this.m[11] +\n          p.w * this.m[15]\n      };\n    },\n\n    multVec3(p) {\n      const p4 = this.multVec4({\n        x: p.x,\n        y: p.y,\n        z: p.z,\n        w: 1.0\n      });\n      return vec3(p4.x, p4.y, p4.z);\n    },\n\n    multVec2(p) {\n      return vec2(\n        p.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n        p.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13]\n      );\n    },\n\n    translate(p) {\n      return this.mult(\n        mat4([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, p.x, p.y, 0, 1])\n      );\n    },\n\n    scale(s) {\n      return this.mult(\n        mat4([s.x, 0, 0, 0, 0, s.y, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1])\n      );\n    },\n\n    rotateX(a) {\n      return this.mult(\n        mat4([\n          1,\n          0,\n          0,\n          0,\n          0,\n          Math.cos(a),\n          -Math.sin(a),\n          0,\n          0,\n          Math.sin(a),\n          Math.cos(a),\n          0,\n          0,\n          0,\n          0,\n          1\n        ])\n      );\n    },\n\n    rotateY(a) {\n      return this.mult(\n        mat4([\n          Math.cos(a),\n          0,\n          -Math.sin(a),\n          0,\n          0,\n          1,\n          0,\n          0,\n          Math.sin(a),\n          0,\n          Math.cos(a),\n          0,\n          0,\n          0,\n          0,\n          1\n        ])\n      );\n    },\n\n    rotateZ(a) {\n      return this.mult(\n        mat4([\n          Math.cos(a),\n          -Math.sin(a),\n          0,\n          0,\n          Math.sin(a),\n          Math.cos(a),\n          0,\n          0,\n          0,\n          0,\n          1,\n          0,\n          0,\n          0,\n          0,\n          1\n        ])\n      );\n    },\n\n    invert() {\n      const out = [];\n\n      const f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n      const f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n      const f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n      const f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n      const f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n      const f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n      const f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n      const f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n      const f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n      const f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n      const f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n      const f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n      const f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n      const f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n      const f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n      const f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n      const f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n      const f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n      const f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n      out[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n      out[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n      out[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n      out[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n      out[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n      out[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n      out[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n      out[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n      out[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n      out[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n      out[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n      out[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n      out[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n      out[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n      out[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n      out[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n      const det =\n        this.m[0] * out[0] +\n        this.m[1] * out[4] +\n        this.m[2] * out[8] +\n        this.m[3] * out[12];\n\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          out[i * 4 + j] *= 1.0 / det;\n        }\n      }\n\n      return mat4(out);\n    }\n  };\n}\n\n// easy sine wave\nfunction wave(lo, hi, t) {\n  return lo + ((Math.sin(t) + 1) / 2) * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\nconst defRNG = makeRng(Date.now());\n\nfunction makeRng(seed) {\n  return {\n    seed: seed,\n    gen(...args) {\n      if (args.length === 0) {\n        // generate 0 - 1\n        this.seed = (A * this.seed + C) % M;\n        return this.seed / M;\n      } else if (args.length === 1) {\n        if (typeof args[0] === \"number\") {\n          return this.gen(0, args[0]);\n        } else if (isVec2(args[0])) {\n          return this.gen(vec2(0, 0), args[0]);\n        } else if (isColor(args[0])) {\n          return this.gen(rgba(0, 0, 0, 0), args[0]);\n        }\n      } else if (args.length === 2) {\n        if (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n          return this.gen() * (args[1] - args[0]) + args[0];\n        } else if (isVec2(args[0]) && isVec2(args[1])) {\n          return vec2(\n            this.gen(args[0].x, args[1].x),\n            this.gen(args[0].y, args[1].y)\n          );\n        } else if (isColor(args[0]) && isColor(args[1])) {\n          return rgba(\n            this.gen(args[0].r, args[1].r),\n            this.gen(args[0].g, args[1].g),\n            this.gen(args[0].b, args[1].b),\n            this.gen(args[0].a, args[1].a)\n          );\n        }\n      }\n    }\n  };\n}\n\nfunction randSeed(seed) {\n  if (seed != null) {\n    defRNG.seed = seed;\n  }\n  return defRNG.seed;\n}\n\nfunction rand(...args) {\n  // @ts-ignore\n  return defRNG.gen(...args);\n}\n\nfunction chance(p) {\n  return rand() <= p;\n}\n\nfunction choose(list) {\n  return list[Math.floor(rand(list.length))];\n}\n\nfunction colRectRect(r1, r2) {\n  return (\n    r1.p2.x >= r2.p1.x &&\n    r1.p1.x <= r2.p2.x &&\n    r1.p2.y >= r2.p1.y &&\n    r1.p1.y <= r2.p2.y\n  );\n}\n\nfunction overlapRectRect(r1, r2) {\n  return (\n    r1.p2.x > r2.p1.x &&\n    r1.p1.x < r2.p2.x &&\n    r1.p2.y > r2.p1.y &&\n    r1.p1.y < r2.p2.y\n  );\n}\n\nfunction colLineLine(l1, l2) {\n  const a =\n    ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) -\n      (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) /\n    ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) -\n      (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n  const b =\n    ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) -\n      (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) /\n    ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) -\n      (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n  return a >= 0.0 && a <= 1.0 && b >= 0.0 && b <= 1.0;\n}\n\nfunction colRectLine(r, l) {\n  if (colRectPt(r, l.p1) || colRectPt(r, l.p2)) {\n    return true;\n  }\n  return (\n    colLineLine(l, makeLine(r.p1, vec2(r.p2.x, r.p1.y))) ||\n    colLineLine(l, makeLine(vec2(r.p2.x, r.p1.y), r.p2)) ||\n    colLineLine(l, makeLine(r.p2, vec2(r.p1.x, r.p2.y))) ||\n    colLineLine(l, makeLine(vec2(r.p1.x, r.p2.y), r.p1))\n  );\n}\n\nfunction colRectPt(r, pt) {\n  return pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y < r.p2.y;\n}\n\nfunction makeLine(p1, p2) {\n  return {\n    p1: p1.clone(),\n    p2: p2.clone()\n  };\n}\n\n// ==== **MATH** ===\n\n// ==== **UTILS** ===\nfunction deepEq(o1, o2) {\n  const t1 = typeof o1;\n  const t2 = typeof o2;\n  if (t1 !== t2) {\n    return false;\n  }\n  if (t1 === \"object\" && t2 === \"object\") {\n    const k1 = Object.keys(o1);\n    const k2 = Object.keys(o2);\n    if (k1.length !== k2.length) {\n      return false;\n    }\n    for (const k of k1) {\n      const v1 = o1[k];\n      const v2 = o2[k];\n      if (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n        if (!deepEq(v1, v2)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  return o1 === o2;\n}\n// ==== **UTILS** ===\n\n// ==== **GFX** ===\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nfunction originPt(orig) {\n  switch (orig) {\n    case \"topleft\":\n      return vec2(-1, -1);\n    case \"top\":\n      return vec2(0, -1);\n    case \"topright\":\n      return vec2(1, -1);\n    case \"left\":\n      return vec2(-1, 0);\n    case \"center\":\n      return vec2(0, 0);\n    case \"right\":\n      return vec2(1, 0);\n    case \"botleft\":\n      return vec2(-1, 1);\n    case \"bot\":\n      return vec2(0, 1);\n    case \"botright\":\n      return vec2(1, 1);\n    default:\n      return orig;\n  }\n}\n\nfunction gfxInit(gl, gconf) {\n  const texFilter = (() => {\n    switch (gconf.texFilter) {\n      case \"linear\":\n        return gl.LINEAR;\n      case \"nearest\":\n        return gl.NEAREST;\n      default:\n        return gl.NEAREST;\n    }\n  })();\n\n  const gfx = (() => {\n    const defProg = makeProgram(DEF_VERT, DEF_FRAG);\n    const emptyTex = makeTex(\n      new ImageData(new Uint8ClampedArray([255, 255, 255, 255]), 1, 1)\n    );\n\n    const c = gconf.clearColor ?? rgba(0, 0, 0, 1);\n\n    gl.clearColor(c.r, c.g, c.b, c.a);\n    gl.enable(gl.BLEND);\n    gl.blendFuncSeparate(\n      gl.SRC_ALPHA,\n      gl.ONE_MINUS_SRC_ALPHA,\n      gl.ONE,\n      gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    const vbuf = gl.createBuffer();\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n    gl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    const ibuf = gl.createBuffer();\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    const bgTex = makeTex(\n      new ImageData(\n        new Uint8ClampedArray([\n          128,\n          128,\n          128,\n          255,\n          190,\n          190,\n          190,\n          255,\n          190,\n          190,\n          190,\n          255,\n          128,\n          128,\n          128,\n          255\n        ]),\n        2,\n        2\n      )\n    );\n\n    return {\n      drawCalls: 0,\n      lastDrawCalls: 0,\n      defProg: defProg,\n      curProg: defProg,\n      defTex: emptyTex,\n      curTex: emptyTex,\n      curUniform: {},\n      vbuf: vbuf,\n      ibuf: ibuf,\n      vqueue: [],\n      iqueue: [],\n      transform: mat4(),\n      transformStack: [],\n      clearColor: c,\n      bgTex: bgTex\n    };\n  })();\n\n  frameStart();\n  frameEnd();\n\n  function powerOfTwo(n) {\n    return (Math.log(n) / Math.log(2)) % 1 === 0;\n  }\n\n  function makeTex(data) {\n    const id = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, id);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, texFilter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, texFilter);\n\n    // TODO\n    const wrap = (() => {\n      if (powerOfTwo(data.width) && powerOfTwo(data.height)) {\n        return gl.REPEAT;\n      } else {\n        return gl.CLAMP_TO_EDGE;\n      }\n    })();\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    return {\n      width: data.width,\n      height: data.height,\n      bind() {\n        gl.bindTexture(gl.TEXTURE_2D, id);\n      },\n      unbind() {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n      }\n    };\n  }\n\n  function makeProgram(vertSrc = DEF_VERT, fragSrc = DEF_FRAG) {\n    let msg;\n    const vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n    const fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    gl.shaderSource(vertShader, vcode);\n    gl.shaderSource(fragShader, fcode);\n    gl.compileShader(vertShader);\n    gl.compileShader(fragShader);\n\n    if ((msg = gl.getShaderInfoLog(vertShader))) {\n      throw new Error(msg);\n    }\n\n    if ((msg = gl.getShaderInfoLog(fragShader))) {\n      throw new Error(msg);\n    }\n\n    const id = gl.createProgram();\n\n    gl.attachShader(id, vertShader);\n    gl.attachShader(id, fragShader);\n\n    gl.bindAttribLocation(id, 0, \"a_pos\");\n    gl.bindAttribLocation(id, 1, \"a_uv\");\n    gl.bindAttribLocation(id, 2, \"a_color\");\n\n    gl.linkProgram(id);\n\n    if ((msg = gl.getProgramInfoLog(id))) {\n      // for some reason on safari it always has a \"\\n\" msg\n      if (msg !== \"\\n\") {\n        throw new Error(msg);\n      }\n    }\n\n    return {\n      bind() {\n        gl.useProgram(id);\n      },\n\n      unbind() {\n        gl.useProgram(null);\n      },\n\n      bindAttribs() {\n        gl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n        gl.enableVertexAttribArray(0);\n        gl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n        gl.enableVertexAttribArray(1);\n        gl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n        gl.enableVertexAttribArray(2);\n      },\n\n      send(uniform) {\n        this.bind();\n        // TODO: slow for vec2\n        for (const name in uniform) {\n          const val = uniform[name];\n          const loc = gl.getUniformLocation(id, name);\n          if (typeof val === \"number\") {\n            gl.uniform1f(loc, val);\n          } else if (isMat4(val)) {\n            // @ts-ignore\n            gl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n          } else if (isColor(val)) {\n            // @ts-ignore\n            gl.uniform4f(loc, val.r, val.g, val.b, val.a);\n          } else if (isVec3(val)) {\n            // @ts-ignore\n            gl.uniform3f(loc, val.x, val.y, val.z);\n          } else if (isVec2(val)) {\n            // @ts-ignore\n            gl.uniform2f(loc, val.x, val.y);\n          }\n        }\n        this.unbind();\n      }\n    };\n  }\n\n  function makeFont(tex, gw, gh, chars) {\n    const cols = tex.width / gw;\n    const rows = tex.height / gh;\n    const qw = 1.0 / cols;\n    const qh = 1.0 / rows;\n    const map = {};\n    const charMap = chars.split(\"\").entries();\n\n    for (const [i, ch] of charMap) {\n      map[ch] = vec2((i % cols) * qw, Math.floor(i / cols) * qh);\n    }\n\n    return {\n      tex: tex,\n      map: map,\n      qw: qw,\n      qh: qh\n    };\n  }\n\n  // TODO: expose\n  function drawRaw(\n    verts,\n    indices,\n    tex = gfx.defTex,\n    prog = gfx.defProg,\n    uniform = {}\n  ) {\n    tex = tex ?? gfx.defTex;\n    prog = prog ?? gfx.defProg;\n\n    // flush on texture / shader change and overflow\n    if (\n      tex !== gfx.curTex ||\n      prog !== gfx.curProg ||\n      !deepEq(gfx.curUniform, uniform) ||\n      gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT ||\n      gfx.iqueue.length + indices.length > QUEUE_COUNT\n    ) {\n      flush();\n    }\n\n    gfx.curTex = tex;\n    gfx.curProg = prog;\n    gfx.curUniform = uniform;\n\n    const nIndices = indices.map(i => {\n      return i + gfx.vqueue.length / STRIDE;\n    });\n\n    const nVerts = verts\n      .map(v => {\n        const pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n        return [\n          pt.x,\n          pt.y,\n          v.pos.z,\n          v.uv.x,\n          v.uv.y,\n          v.color.r,\n          v.color.g,\n          v.color.b,\n          v.color.a\n        ];\n      })\n      .flat();\n\n    nIndices.forEach(i => gfx.iqueue.push(i));\n    nVerts.forEach(v => gfx.vqueue.push(v));\n  }\n\n  function flush() {\n    if (\n      !gfx.curTex ||\n      !gfx.curProg ||\n      gfx.vqueue.length === 0 ||\n      gfx.iqueue.length === 0\n    ) {\n      return;\n    }\n\n    gfx.curProg.send(gfx.curUniform);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n    gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n    gfx.curProg.bind();\n    gfx.curProg.bindAttribs();\n    gfx.curTex.bind();\n    gl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n    gfx.curTex.unbind();\n    gfx.curProg.unbind();\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    gfx.iqueue = [];\n    gfx.vqueue = [];\n\n    gfx.drawCalls++;\n  }\n\n  function frameStart() {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    if (!gconf.clearColor) {\n      drawQuad({\n        width: width(),\n        height: height(),\n        quad: quad(\n          0,\n          0,\n          (width() * scale()) / BG_GRID_SIZE,\n          (height() * scale()) / BG_GRID_SIZE\n        ),\n        tex: gfx.bgTex\n      });\n    }\n\n    gfx.drawCalls = 0;\n    gfx.transformStack = [];\n    gfx.transform = mat4();\n  }\n\n  function frameEnd() {\n    flush();\n    gfx.lastDrawCalls = gfx.drawCalls;\n  }\n\n  function drawCalls() {\n    return gfx.lastDrawCalls;\n  }\n\n  function toNDC(pt) {\n    return vec2((pt.x / width()) * 2 - 1, (-pt.y / height()) * 2 + 1);\n  }\n\n  // TODO: don't use push as prefix for these\n  function pushMatrix(m) {\n    gfx.transform = m.clone();\n  }\n\n  function pushTranslate(p) {\n    if (!p || (p.x === 0 && p.y === 0)) {\n      return;\n    }\n    gfx.transform = gfx.transform.translate(p);\n  }\n\n  function pushScale(p) {\n    if (!p || (p.x === 1 && p.y === 1)) {\n      return;\n    }\n    gfx.transform = gfx.transform.scale(p);\n  }\n\n  function pushRotateX(a) {\n    if (!a) {\n      return;\n    }\n    gfx.transform = gfx.transform.rotateX(a);\n  }\n\n  function pushRotateY(a) {\n    if (!a) {\n      return;\n    }\n    gfx.transform = gfx.transform.rotateY(a);\n  }\n\n  function pushRotateZ(a) {\n    if (!a) {\n      return;\n    }\n    gfx.transform = gfx.transform.rotateZ(a);\n  }\n\n  function pushTransform() {\n    gfx.transformStack.push(gfx.transform.clone());\n  }\n\n  function popTransform() {\n    if (gfx.transformStack.length > 0) {\n      gfx.transform = gfx.transformStack.pop();\n    }\n  }\n\n  // TODO: clean\n  // draw a textured quad\n  function drawQuad(conf = {}) {\n    const w = conf.width || 0;\n    const h = conf.height || 0;\n    const pos = conf.pos || vec2(0, 0);\n    const origin = originPt(conf.origin || DEF_ORIGIN);\n    const offset = origin.scale(vec2(w, h).scale(-0.5));\n    const scale = vec2(conf.scale ?? 1);\n    const rot = conf.rot || 0;\n    const q = conf.quad || quad(0, 0, 1, 1);\n    const z = 1 - (conf.z ?? 0);\n    const color = conf.color || rgba(1, 1, 1, 1);\n\n    pushTransform();\n    pushTranslate(pos);\n    pushRotateZ(rot);\n    pushScale(scale);\n    pushTranslate(offset);\n\n    drawRaw(\n      [\n        {\n          pos: vec3(-w / 2, h / 2, z),\n          uv: vec2(conf.flipX ? q.x + q.w : q.x, conf.flipY ? q.y : q.y + q.h),\n          color: color\n        },\n        {\n          pos: vec3(-w / 2, -h / 2, z),\n          uv: vec2(conf.flipX ? q.x + q.w : q.x, conf.flipY ? q.y + q.h : q.y),\n          color: color\n        },\n        {\n          pos: vec3(w / 2, -h / 2, z),\n          uv: vec2(conf.flipX ? q.x : q.x + q.w, conf.flipY ? q.y + q.h : q.y),\n          color: color\n        },\n        {\n          pos: vec3(w / 2, h / 2, z),\n          uv: vec2(conf.flipX ? q.x : q.x + q.w, conf.flipY ? q.y : q.y + q.h),\n          color: color\n        }\n      ],\n      [0, 1, 3, 1, 2, 3],\n      conf.tex,\n      conf.prog,\n      conf.uniform\n    );\n\n    popTransform();\n  }\n\n  function drawTexture(tex, conf = {}) {\n    const q = conf.quad ?? quad(0, 0, 1, 1);\n    const w = tex.width * q.w;\n    const h = tex.height * q.h;\n    const scale = vec2(1);\n\n    if (conf.tiled) {\n      // TODO: draw fract\n      const repX = Math.ceil((conf.width || w) / w);\n      const repY = Math.ceil((conf.height || h) / h);\n      const origin = originPt(conf.origin || DEF_ORIGIN)\n        .add(vec2(1, 1))\n        .scale(0.5);\n      const offset = origin.scale(repX * w, repY * h);\n\n      // TODO: rotation\n      for (let i = 0; i < repX; i++) {\n        for (let j = 0; j < repY; j++) {\n          drawQuad({\n            ...conf,\n            pos: (conf.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n            scale: scale.scale(conf.scale || vec2(1)),\n            tex: tex,\n            quad: q,\n            width: w,\n            height: h,\n            origin: \"topleft\"\n          });\n        }\n      }\n    } else {\n      // TODO: should this ignore scale?\n      if (conf.width && conf.height) {\n        scale.x = conf.width / w;\n        scale.y = conf.height / h;\n      } else if (conf.width) {\n        scale.x = conf.width / w;\n        scale.y = scale.x;\n      } else if (conf.height) {\n        scale.y = conf.height / h;\n        scale.x = scale.y;\n      }\n\n      drawQuad({\n        ...conf,\n        scale: scale.scale(conf.scale || vec2(1)),\n        tex: tex,\n        quad: q,\n        width: w,\n        height: h\n      });\n    }\n  }\n\n  function drawRect(pos, w, h, conf = {}) {\n    drawQuad({\n      ...conf,\n      pos: pos,\n      width: w,\n      height: h\n    });\n  }\n\n  function drawRectStroke(pos, w, h, conf = {}) {\n    const offset = originPt(conf.origin || DEF_ORIGIN)\n      .scale(vec2(w, h))\n      .scale(0.5);\n    const p1 = pos.add(vec2(-w / 2, -h / 2)).sub(offset);\n    const p2 = pos.add(vec2(-w / 2, h / 2)).sub(offset);\n    const p3 = pos.add(vec2(w / 2, h / 2)).sub(offset);\n    const p4 = pos.add(vec2(w / 2, -h / 2)).sub(offset);\n\n    drawLine(p1, p2, conf);\n    drawLine(p2, p3, conf);\n    drawLine(p3, p4, conf);\n    drawLine(p4, p1, conf);\n  }\n\n  function drawLine(p1, p2, conf = {}) {\n    const w = conf.width || 1;\n    const h = p1.dist(p2);\n    const rot = Math.PI / 2 - p1.angle(p2);\n\n    drawQuad({\n      ...conf,\n      pos: p1.add(p2).scale(0.5),\n      width: w,\n      height: h,\n      rot: rot,\n      origin: \"center\"\n    });\n  }\n\n  // TODO: not drawing\n  function drawTri(p1, p2, p3, conf = {}) {\n    const z = conf.z;\n    const color = conf.color || rgb(1, 1, 1);\n    drawRaw(\n      [\n        {\n          pos: vec3(p1.x, p1.y, z),\n          uv: vec2(0, 0),\n          color: color\n        },\n        {\n          pos: vec3(p2.x, p2.y, z),\n          uv: vec2(0, 0),\n          color: color\n        },\n        {\n          pos: vec3(p3.x, p3.y, z),\n          uv: vec2(0, 0),\n          color: color\n        }\n      ],\n      [0, 1, 2],\n      gfx.defTex,\n      conf.prog,\n      conf.uniform\n    );\n  }\n\n  // format text and return a list of chars with their calculated position\n  function fmtText(text, font, conf = {}) {\n    const chars = (text + \"\").split(\"\");\n    const gw = font.qw * font.tex.width;\n    const gh = font.qh * font.tex.height;\n    const size = conf.size || gh;\n    const scale = vec2(size / gh).scale(vec2(conf.scale || 1));\n    const cw = scale.x * gw;\n    const ch = scale.y * gh;\n    let curX = 0;\n    let th = ch;\n    let tw = 0;\n    const flines = [];\n    let curLine = [];\n    let lastSpace = null;\n    let cursor = 0;\n\n    while (cursor < chars.length) {\n      let char = chars[cursor];\n\n      // check new line\n      if (char === \"\\n\") {\n        // always new line on '\\n'\n        th += ch;\n        curX = 0;\n        lastSpace = null;\n        flines.push(curLine);\n        curLine = [];\n      } else if (conf.width ? curX + cw > conf.width : false) {\n        // new line on last word if width exceeds\n        th += ch;\n        curX = 0;\n        if (lastSpace != null) {\n          cursor -= curLine.length - lastSpace;\n          char = chars[cursor];\n          curLine = curLine.slice(0, lastSpace);\n        }\n        lastSpace = null;\n        flines.push(curLine);\n        curLine = [];\n      }\n\n      // push char\n      if (char !== \"\\n\") {\n        curLine.push(char);\n        curX += cw;\n        if (char === \" \") {\n          lastSpace = curLine.length;\n        }\n      }\n\n      tw = Math.max(tw, curX);\n      cursor++;\n    }\n\n    flines.push(curLine);\n\n    if (conf.width) {\n      tw = conf.width;\n    }\n\n    // whole text offset\n    const fchars = [];\n    const pos = vec2(conf.pos || 0);\n    const offset = originPt(conf.origin || DEF_ORIGIN).scale(0.5);\n    // this math is complicated i forgot how it works instantly\n    const ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n    const oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\n    flines.forEach((line, ln) => {\n      // line offset\n      const oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n      line.forEach((char, cn) => {\n        const qpos = font.map[char];\n        const x = cn * cw;\n        const y = ln * ch;\n        if (qpos) {\n          fchars.push({\n            tex: font.tex,\n            quad: quad(qpos.x, qpos.y, font.qw, font.qh),\n            ch: char,\n            pos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n            color: conf.color,\n            origin: conf.origin,\n            scale: scale,\n            z: conf.z\n          });\n        }\n      });\n    });\n\n    return {\n      width: tw,\n      height: th,\n      chars: fchars\n    };\n  }\n\n  function drawText(txt, font, conf = {}) {\n    drawFmtText(fmtText(txt, font, conf));\n  }\n\n  // TODO: rotation\n  function drawFmtText(ftext) {\n    for (const ch of ftext.chars) {\n      drawQuad({\n        tex: ch.tex,\n        width: ch.tex.width * ch.quad.w,\n        height: ch.tex.height * ch.quad.h,\n        pos: ch.pos,\n        scale: ch.scale,\n        color: ch.color,\n        quad: ch.quad,\n        // TODO: topleft\n        origin: \"center\",\n        z: ch.z\n      });\n    }\n  }\n\n  // get current canvas width\n  function width() {\n    return gl.drawingBufferWidth / scale();\n  }\n\n  // get current canvas height\n  function height() {\n    return gl.drawingBufferHeight / scale();\n  }\n\n  function scale() {\n    return gconf.scale ?? 1;\n  }\n\n  function clearColor() {\n    return gfx.clearColor.clone();\n  }\n\n  // TODO: type this\n  return {\n    width,\n    height,\n    scale,\n    makeTex,\n    makeProgram,\n    makeFont,\n    drawTexture,\n    drawText,\n    drawFmtText,\n    drawRect,\n    drawRectStroke,\n    drawLine,\n    drawTri,\n    fmtText,\n    frameStart,\n    frameEnd,\n    pushTransform,\n    popTransform,\n    pushMatrix,\n    drawCalls,\n    clearColor\n  };\n}\n// === 3 **GFX** ===\n\n// === 4 **APP** ===\nfunction processBtnState(s) {\n  if (s === \"pressed\" || s === \"rpressed\") {\n    return \"down\";\n  }\n  if (s === \"released\") {\n    return \"up\";\n  }\n  return s;\n}\n\nfunction appInit(gconf = {}) {\n  const app = {\n    canvas: gconf.canvas\n      ? gconf.canvas\n      : (() => {\n          const canvas = document.createElement(\"canvas\");\n          (gconf.root ? gconf.root : document.body).appendChild(canvas);\n          return canvas;\n        })(),\n    keyStates: {},\n    charInputted: [],\n    mouseMoved: false,\n    mouseState: \"up\",\n    mousePos: vec2(0, 0),\n    mouseDeltaPos: vec2(0, 0),\n    time: 0,\n    realTime: 0,\n    skipTime: false,\n    dt: 0.0,\n    scale: gconf.scale ? gconf.scale : 1,\n    isTouch: false,\n    loopID: null,\n    stopped: false,\n    fps: 0,\n    fpsBuf: [],\n    fpsTimer: 0\n  };\n\n  const keyMap = {\n    ArrowLeft: \"left\",\n    ArrowRight: \"right\",\n    ArrowUp: \"up\",\n    ArrowDown: \"down\",\n    \" \": \"space\"\n  };\n\n  const preventDefaultKeys = [\n    \"space\",\n    \"left\",\n    \"right\",\n    \"up\",\n    \"down\",\n    \"tab\",\n    \"f1\",\n    \"f2\",\n    \"f3\",\n    \"f4\",\n    \"f5\",\n    \"f6\",\n    \"f7\",\n    \"f8\",\n    \"f9\",\n    \"f10\",\n    \"f11\"\n  ];\n\n  if (gconf.fullscreen) {\n    app.canvas.width = window.innerWidth;\n    app.canvas.height = window.innerHeight;\n  } else {\n    app.canvas.width = (gconf.width || 640) * app.scale;\n    app.canvas.height = (gconf.height || 480) * app.scale;\n  }\n\n  const styles = [\"outline: none\", \"cursor: default\"];\n\n  if (gconf.crisp) {\n    styles.push(\"image-rendering: pixelated\");\n    styles.push(\"image-rendering: crisp-edges\");\n  }\n\n  // @ts-ignore\n  app.canvas.style = styles.join(\";\");\n  app.canvas.setAttribute(\"tabindex\", \"0\");\n\n  const gl = app.canvas.getContext(\"webgl\", {\n    antialias: true,\n    depth: true,\n    stencil: true,\n    alpha: true,\n    preserveDrawingBuffer: true\n  });\n\n  app.isTouch =\n    \"ontouchstart\" in window ||\n    navigator.maxTouchPoints > 0 ||\n    navigator.msMaxTouchPoints > 0;\n\n  app.canvas.addEventListener(\"mousemove\", e => {\n    app.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n    app.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n    app.mouseMoved = true;\n  });\n\n  app.canvas.addEventListener(\"mousedown\", () => {\n    app.mouseState = \"pressed\";\n  });\n\n  app.canvas.addEventListener(\"mouseup\", () => {\n    app.mouseState = \"released\";\n  });\n\n  app.canvas.addEventListener(\"keydown\", e => {\n    const k = keyMap[e.key] || e.key.toLowerCase();\n\n    if (preventDefaultKeys.includes(k)) {\n      e.preventDefault();\n    }\n\n    if (k.length === 1) {\n      app.charInputted.push(k);\n    }\n\n    if (k === \"space\") {\n      app.charInputted.push(\" \");\n    }\n\n    if (e.repeat) {\n      app.keyStates[k] = \"rpressed\";\n    } else {\n      app.keyStates[k] = \"pressed\";\n    }\n  });\n\n  app.canvas.addEventListener(\"keyup\", e => {\n    const k = keyMap[e.key] || e.key.toLowerCase();\n    app.keyStates[k] = \"released\";\n  });\n\n  app.canvas.addEventListener(\"touchstart\", e => {\n    if (!gconf.touchToMouse) return;\n    // disable long tap context menu\n    e.preventDefault();\n    const t = e.touches[0];\n    app.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n    app.mouseState = \"pressed\";\n  });\n\n  app.canvas.addEventListener(\"touchmove\", e => {\n    if (!gconf.touchToMouse) return;\n    // disable scrolling\n    e.preventDefault();\n    const t = e.touches[0];\n    app.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n    app.mouseMoved = true;\n  });\n\n  app.canvas.addEventListener(\"touchend\", e => {\n    if (!gconf.touchToMouse) return;\n    app.mouseState = \"released\";\n  });\n\n  app.canvas.addEventListener(\"touchcancel\", e => {\n    if (!gconf.touchToMouse) return;\n    app.mouseState = \"released\";\n  });\n\n  document.addEventListener(\"visibilitychange\", () => {\n    switch (document.visibilityState) {\n      case \"visible\":\n        // prevent a surge of dt() when switch back after the tab being hidden for a while\n        app.skipTime = true;\n        // TODO\n        //  \t\t\t\taudio.ctx().resume();\n        break;\n      case \"hidden\":\n        //  \t\t\t\taudio.ctx().suspend();\n        break;\n    }\n  });\n\n  function mousePos() {\n    return app.mousePos.clone();\n  }\n\n  function mouseDeltaPos() {\n    return app.mouseDeltaPos.clone();\n  }\n\n  function mouseClicked() {\n    return app.mouseState === \"pressed\";\n  }\n\n  function mouseDown() {\n    return app.mouseState === \"pressed\" || app.mouseState === \"down\";\n  }\n\n  function mouseReleased() {\n    return app.mouseState === \"released\";\n  }\n\n  function mouseMoved() {\n    return app.mouseMoved;\n  }\n\n  function keyPressed(k) {\n    return app.keyStates[k] === \"pressed\";\n  }\n\n  function keyPressedRep(k) {\n    return app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n  }\n\n  function keyDown(k) {\n    return (\n      app.keyStates[k] === \"pressed\" ||\n      app.keyStates[k] === \"rpressed\" ||\n      app.keyStates[k] === \"down\"\n    );\n  }\n\n  function keyReleased(k) {\n    return app.keyStates[k] === \"released\";\n  }\n\n  function charInputted() {\n    return [...app.charInputted];\n  }\n\n  // get delta time between last frame\n  function dt() {\n    return app.dt;\n  }\n\n  // get current running time\n  function time() {\n    return app.time;\n  }\n\n  function fps() {\n    return app.fps;\n  }\n\n  // get a base64 png image of canvas\n  function screenshot() {\n    return app.canvas.toDataURL();\n  }\n\n  function cursor(c) {\n    if (c) {\n      app.canvas.style.cursor = c ? c : \"default\";\n    }\n    return app.canvas.style.cursor;\n  }\n\n  function run(f) {\n    const frame = t => {\n      const realTime = t / 1000;\n      const realDt = realTime - app.realTime;\n\n      app.realTime = realTime;\n\n      if (!app.skipTime) {\n        app.dt = realDt;\n        app.time += app.dt;\n        app.fpsBuf.push(1 / app.dt);\n        app.fpsTimer += app.dt;\n        if (app.fpsTimer >= 1) {\n          app.fpsTimer = 0;\n          app.fps = Math.round(\n            app.fpsBuf.reduce((a, b) => a + b) / app.fpsBuf.length\n          );\n          app.fpsBuf = [];\n        }\n      }\n\n      app.skipTime = false;\n\n      f();\n\n      for (const k in app.keyStates) {\n        app.keyStates[k] = processBtnState(app.keyStates[k]);\n      }\n\n      app.mouseState = processBtnState(app.mouseState);\n      app.charInputted = [];\n      app.mouseMoved = false;\n\n      if (!app.stopped) {\n        app.loopID = requestAnimationFrame(frame);\n      }\n    };\n\n    app.loopID = requestAnimationFrame(frame);\n  }\n\n  function quit() {\n    cancelAnimationFrame(app.loopID);\n    app.stopped = true;\n  }\n\n  return {\n    gl,\n    mousePos,\n    mouseDeltaPos,\n    keyDown,\n    keyPressed,\n    keyPressedRep,\n    keyReleased,\n    mouseDown,\n    mouseClicked,\n    mouseReleased,\n    mouseMoved,\n    charInputted,\n    cursor,\n    dt,\n    time,\n    fps,\n    screenshot,\n    run,\n    quit,\n    focused: () => document.activeElement === app.canvas,\n    focus: () => app.canvas.focus(),\n    canvas: app.canvas,\n    isTouch: app.isTouch,\n    scale: app.scale\n  };\n}\n// === 4 **APP** ===\n\n// === 5 **AUDIO** ===\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\n// console.log(\"BURP BYTES\", burpBytes);\n\n// @ts-ignore\n\nfunction audioInit() {\n  const audio = (() => {\n    // @ts-ignore\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    const gainNode = ctx.createGain();\n    const masterNode = gainNode;\n\n    masterNode.connect(ctx.destination);\n\n    return {\n      ctx,\n      gainNode,\n      masterNode\n    };\n  })();\n\n  let burpBuf;\n\n  // Disabled for now\n  // audio.ctx.decodeAudioData(\n  //   burpBytes.buffer.slice(0),\n  //   (buf) => {\n  //     burpBuf = buf;\n  //   },\n  //   () => {\n  //     throw new Error(\"failed to make burp\");\n  //   }\n  // );\n\n  // get / set master volume\n  function volume(v) {\n    if (v !== undefined) {\n      audio.gainNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n    }\n    return audio.gainNode.gain.value;\n  }\n\n  // plays a sound, returns a control handle\n  function play(\n    sound,\n    conf = {\n      loop: false,\n      volume: 1,\n      speed: 1,\n      detune: 0,\n      seek: 0\n    }\n  ) {\n    let stopped = false;\n    let srcNode = audio.ctx.createBufferSource();\n\n    srcNode.buffer = sound;\n    srcNode.loop = conf.loop ? true : false;\n\n    const gainNode = audio.ctx.createGain();\n\n    srcNode.connect(gainNode);\n    gainNode.connect(audio.masterNode);\n\n    const pos = conf.seek ? conf.seek : 0;\n\n    srcNode.start(0, pos);\n\n    let startTime = audio.ctx.currentTime - pos;\n    let stopTime = null;\n\n    const handle = {\n      stop() {\n        if (stopped) {\n          return;\n        }\n        this.pause();\n        startTime = audio.ctx.currentTime;\n      },\n\n      play(seek) {\n        if (!stopped) {\n          return;\n        }\n\n        const oldNode = srcNode;\n\n        srcNode = audio.ctx.createBufferSource();\n        srcNode.buffer = oldNode.buffer;\n        srcNode.loop = oldNode.loop;\n        srcNode.playbackRate.value = oldNode.playbackRate.value;\n\n        if (srcNode.detune) {\n          srcNode.detune.value = oldNode.detune.value;\n        }\n\n        srcNode.connect(gainNode);\n\n        const pos = seek ? seek : this.time();\n\n        srcNode.start(0, pos);\n        startTime = audio.ctx.currentTime - pos;\n        stopped = false;\n        stopTime = null;\n      },\n\n      pause() {\n        if (stopped) {\n          return;\n        }\n        srcNode.stop();\n        stopped = true;\n        stopTime = audio.ctx.currentTime;\n      },\n\n      paused() {\n        return stopped;\n      },\n\n      stopped() {\n        return stopped;\n      },\n\n      // TODO: affect time()\n      speed(val) {\n        if (val !== undefined) {\n          srcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n        }\n        return srcNode.playbackRate.value;\n      },\n\n      detune(val) {\n        if (!srcNode.detune) {\n          return 0;\n        }\n        if (val !== undefined) {\n          srcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n        }\n        return srcNode.detune.value;\n      },\n\n      volume(val) {\n        if (val !== undefined) {\n          gainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n        }\n        return gainNode.gain.value;\n      },\n\n      loop() {\n        srcNode.loop = true;\n      },\n\n      unloop() {\n        srcNode.loop = false;\n      },\n\n      duration() {\n        return sound.duration;\n      },\n\n      time() {\n        if (stopped) {\n          return stopTime - startTime;\n        } else {\n          return audio.ctx.currentTime - startTime;\n        }\n      }\n    };\n\n    handle.speed(conf.speed);\n    handle.detune(conf.detune);\n    handle.volume(conf.volume);\n\n    return handle;\n  }\n\n  function ctx() {\n    return audio.ctx;\n  }\n\n  function burp(conf) {\n    return play(burpBuf, conf);\n  }\n\n  return {\n    ctx,\n    volume,\n    play,\n    burp\n  };\n}\n// === 5 **AUDIO** ===\n// === 6 **ASSETS** ===\nconst unsciiSrc =\n  \"https://raw.githubusercontent.com/replit/kaboom/master/src/assets/unscii_8x8.png\";\nconst markSrc =\n  \"https://raw.githubusercontent.com/replit/kaboom/master/src/assets/mark.png\";\n\nconst ASCII_CHARS =\n  \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst DEF_FONT = \"unscii\";\n\nfunction loadImg(src) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = \"anonymous\";\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      resolve(img);\n    };\n    img.onerror = () => {\n      reject(`failed to load ${src}`);\n    };\n  });\n}\n\nfunction isDataUrl(src) {\n  return src.startsWith(\"data:\");\n}\n\nfunction assetsInit(gfx, audio, gconf = {}) {\n  const assets = {\n    lastLoaderID: 0,\n    loadRoot: \"\",\n    loaders: {},\n    sprites: {},\n    sounds: {},\n    fonts: {},\n    shaders: {}\n  };\n\n  function addLoader(prom) {\n    const id = assets.lastLoaderID;\n    assets.loaders[id] = false;\n    assets.lastLoaderID++;\n    prom\n      .catch(gconf.errHandler ? gconf.errHandler : console.error)\n      .finally(() => (assets.loaders[id] = true));\n  }\n\n  // get current load progress\n  function loadProgress() {\n    let total = 0;\n    let loaded = 0;\n\n    for (const id in assets.loaders) {\n      total += 1;\n      if (assets.loaders[id]) {\n        loaded += 1;\n      }\n    }\n\n    return loaded / total;\n  }\n\n  // global load path prefix\n  function loadRoot(path) {\n    if (path !== undefined) {\n      assets.loadRoot = path;\n    }\n    return assets.loadRoot;\n  }\n\n  // load a bitmap font to asset manager\n  function loadFont(name, src, gw, gh, chars = ASCII_CHARS) {\n    const loader = new Promise((resolve, reject) => {\n      const path = isDataUrl(src) ? src : assets.loadRoot + src;\n      loadImg(path)\n        .then(img => {\n          const font = gfx.makeFont(gfx.makeTex(img), gw, gh, chars);\n          assets.fonts[name] = font;\n          resolve(font);\n        })\n        .catch(reject);\n    });\n\n    addLoader(loader);\n\n    return loader;\n  }\n\n  // TODO: use getSprite() functions for async settings\n  // load a sprite to asset manager\n  function loadSprite(\n    name,\n    src,\n    conf = {\n      sliceX: 1,\n      sliceY: 1,\n      anims: {}\n    }\n  ) {\n    // synchronously load sprite from local pixel data\n    function loadRawSprite(\n      name,\n      src,\n      conf = {\n        sliceX: 1,\n        sliceY: 1,\n        gridWidth: 0,\n        gridHeight: 0,\n        anims: {}\n      }\n    ) {\n      const frames = [];\n      const tex = gfx.makeTex(src);\n      const sliceX = conf.sliceX || tex.width / (conf.gridWidth || tex.width);\n      const sliceY =\n        conf.sliceY || tex.height / (conf.gridHeight || tex.height);\n      const qw = 1 / sliceX;\n      const qh = 1 / sliceY;\n\n      for (let j = 0; j < sliceY; j++) {\n        for (let i = 0; i < sliceX; i++) {\n          frames.push(quad(i * qw, j * qh, qw, qh));\n        }\n      }\n\n      const sprite = {\n        tex: tex,\n        frames: frames,\n        anims: conf.anims || {}\n      };\n\n      assets.sprites[name] = sprite;\n\n      return sprite;\n    }\n\n    const loader = new Promise((resolve, reject) => {\n      if (!src) {\n        return reject(`expected sprite src for \"${name}\"`);\n      }\n\n      // from url\n      if (typeof src === \"string\") {\n        const path = isDataUrl(src) ? src : assets.loadRoot + src;\n        loadImg(path)\n          .then(img => {\n            resolve(loadRawSprite(name, img, conf));\n          })\n          .catch(reject);\n      } else {\n        resolve(loadRawSprite(name, src, conf));\n      }\n    });\n\n    addLoader(loader);\n\n    return loader;\n  }\n\n  function loadShader(name, vert, frag, isUrl = false) {\n    function loadRawShader(name, vert, frag) {\n      const shader = gfx.makeProgram(vert, frag);\n      assets.shaders[name] = shader;\n      return shader;\n    }\n\n    const loader = new Promise((resolve, reject) => {\n      if (!vert && !frag) {\n        return reject(\"no shader\");\n      }\n\n      function resolveUrl(url) {\n        return url\n          ? fetch(assets.loadRoot + url)\n              .then(r => {\n                if (r.ok) {\n                  return r.text();\n                } else {\n                  throw new Error(`failed to load ${url}`);\n                }\n              })\n              .catch(reject)\n          : new Promise(r => r(null));\n      }\n\n      if (isUrl) {\n        Promise.all([resolveUrl(vert), resolveUrl(frag)])\n          .then(([vcode, fcode]) => {\n            resolve(loadRawShader(name, vcode, fcode));\n          })\n          .catch(reject);\n      } else {\n        try {\n          resolve(loadRawShader(name, vert, frag));\n        } catch (err) {\n          reject(err);\n        }\n      }\n    });\n\n    addLoader(loader);\n\n    return loader;\n  }\n\n  // TODO: accept dataurl\n  // load a sound to asset manager\n  function loadSound(name, src) {\n    const url = assets.loadRoot + src;\n\n    const loader = new Promise((resolve, reject) => {\n      if (!src) {\n        return reject(`expected sound src for \"${name}\"`);\n      }\n\n      // from url\n      if (typeof src === \"string\") {\n        fetch(url)\n          .then(res => {\n            if (res.ok) {\n              return res.arrayBuffer();\n            } else {\n              throw new Error(`failed to load ${url}`);\n            }\n          })\n          .then(data => {\n            return new Promise((resolve2, reject2) => {\n              audio.ctx().decodeAudioData(data, resolve2, reject2);\n            });\n          })\n          .then(buf => {\n            assets.sounds[name] = buf;\n            resolve(buf);\n          })\n          .catch(reject);\n      }\n    });\n\n    addLoader(loader);\n\n    return loader;\n  }\n\n  function defFont() {\n    return assets.fonts[DEF_FONT];\n  }\n\n  // default font unscii http://pelulamu.net/unscii/\n  loadFont(DEF_FONT, unsciiSrc, 8, 8);\n\n  loadSprite(\"mark\", markSrc);\n\n  return {\n    loadRoot,\n    loadSprite,\n    loadSound,\n    loadFont,\n    loadShader,\n    loadProgress,\n    addLoader,\n    defFont,\n    sprites: assets.sprites,\n    fonts: assets.fonts,\n    sounds: assets.sounds,\n    shaders: assets.shaders\n  };\n}\n\n// === 6 **ASSETS** ===\n\n// === 7 **LOGGER** ===\nconst LOG_SIZE = 16;\n\nfunction loggerInit(\n  gfx,\n  assets,\n  conf = {\n    max: 8\n  }\n) {\n  let logs = [];\n  const max = conf.max ? conf.max : 8;\n\n  // TODO: draw rects first to reduce draw calls\n  // TODO: make log and progress bar fixed size independent of global scale\n  function draw() {\n    if (logs.length > max) {\n      logs = logs.slice(0, max);\n    }\n\n    const pos = vec2(0, gfx.height());\n\n    logs.forEach((log, i) => {\n      const txtAlpha = map(i, 0, max, 1, 0.5);\n      const bgAlpha = map(i, 0, max, 0.8, 0.2);\n\n      const col = (() => {\n        // eslint-disable-next-line default-case\n        switch (log.type) {\n          case \"info\":\n            return rgba(1, 1, 1, txtAlpha);\n          case \"error\":\n            return rgba(1, 0, 0.5, txtAlpha);\n        }\n      })();\n\n      const ftext = gfx.fmtText(log.msg, assets.defFont(), {\n        pos: pos,\n        origin: \"botleft\",\n        color: col,\n        size: LOG_SIZE / gfx.scale(),\n        width: gfx.width()\n      });\n\n      gfx.drawRect(pos, ftext.width, ftext.height, {\n        origin: \"botleft\",\n        color: rgba(0, 0, 0, bgAlpha)\n      });\n\n      gfx.drawFmtText(ftext);\n      pos.y -= ftext.height;\n    });\n  }\n\n  function error(msg) {\n    console.error(msg);\n    logs.unshift({\n      type: \"error\",\n      msg: msg\n    });\n  }\n\n  function info(msg) {\n    logs.unshift({\n      type: \"info\",\n      msg: msg\n    });\n  }\n\n  function clear() {\n    logs = [];\n  }\n\n  return {\n    info,\n    error,\n    draw,\n    clear\n  };\n}\n// === 6 **LOGGER** ===\n// === 7 **NET** ===\nfunction netInit(url) {\n  const handlers = {};\n  const sendQueue = [];\n\n  let socket = null;\n\n  function connected() {\n    return socket !== null && socket.readyState === 1;\n  }\n\n  function connect() {\n    const ws = new WebSocket(url);\n\n    return (\n      new Promise() <\n      WebSocket >\n      ((resolve, reject) => {\n        ws.onopen = () => {\n          resolve(ws);\n          socket = ws;\n          for (const msg of sendQueue) {\n            ws.send(msg);\n          }\n        };\n\n        ws.onerror = () => {\n          reject(`failed to connect to ${url}`);\n        };\n\n        ws.onmessage = e => {\n          const msg = JSON.parse(e.data);\n          if (handlers[msg.type]) {\n            for (const handler of handlers[msg.type]) {\n              handler(msg.id, msg.data);\n            }\n          }\n        };\n      })\n    );\n  }\n\n  function recv(type, handler) {\n    if (!handlers[type]) {\n      handlers[type] = [];\n    }\n    handlers[type].push(handler);\n  }\n\n  function send(type, data) {\n    const msg = JSON.stringify({\n      type: type,\n      data: data\n    });\n    if (socket) {\n      socket.send(msg);\n    } else {\n      sendQueue.push(msg);\n    }\n  }\n\n  function close() {\n    if (socket) {\n      socket.close();\n    }\n  }\n\n  return {\n    connect,\n    close,\n    connected,\n    recv,\n    send\n  };\n}\n// === 7 **NET** ===\n\n// === 8 **KABOOM** ===\n// class IDList extends Map {\n//   constructor(...args) {\n//     super(...args);\n//     this.lastID = 0;\n//   }\n//   push(v) {\n//     const id = this.lastID;\n//     this.set(id, v);\n//     this.lastID++;\n//     return id;\n//   }\n//   pushd(v) {\n//     const id = this.push(v);\n//     return () => this.delete(id);\n//   }\n// }\n\nconst kaboom = (\n  gconf = {\n    width: 640,\n    height: 480,\n    scale: 1,\n    fullscreen: false,\n    debug: false,\n    crisp: false,\n    canvas: null,\n    connect: null,\n    logMax: 8,\n    root: document.body\n  }\n) => {\n  // CUSTOM CODE ===\n  let state = {\n    components: {}\n  };\n  const reg_comp = (id, comps) => {\n    if (comps) {\n      let firstComp = comps[0];\n      if (Array.isArray(firstComp)) {\n        let calculatedComps = comps.map(comp => {\n          if (!Array.isArray(comp)) {\n            return comp;\n          }\n          const [key, prop, propB] = comp;\n          switch (key) {\n            case \"sprite\":\n              return sprite(prop);\n            case \"pos\":\n              return pos(prop[0], prop[1]);\n            case \"scale\":\n              return scale(prop);\n            case \"text\":\n              return text(prop, propB);\n            case \"body\":\n              return body();\n            case \"solid\":\n              return solid();\n            default:\n              return {};\n          }\n        });\n\n        state.components[id] = add(calculatedComps);\n      } else {\n        const comp = add(comps);\n        state.components[id] = comp;\n      }\n    } else {\n      let calculatedComps = id.map(comp => {\n        if (!Array.isArray(comp)) {\n          return comp;\n        } else {\n          const [key, prop, propB] = comp;\n          switch (key) {\n            case \"sprite\":\n              return sprite(prop);\n            case \"pos\":\n              return pos(prop[0], prop[1]);\n            case \"scale\":\n              return scale(prop);\n            case \"text\":\n              return text(prop, propB);\n            default:\n              return {};\n          }\n        }\n      });\n\n      console.log(\"calculatedComps\", calculatedComps);\n\n      return add(calculatedComps);\n    }\n  };\n\n  // window.reg_comp = reg_comp;\n  function get_comp(id, defaultVal) {\n    var val = state.components[id];\n    if (val) {\n      return val;\n    }\n\n    return get(id);\n  }\n\n  // CUSTOM CODE ===\n\n  const app = appInit({\n    width: gconf.width,\n    height: gconf.height,\n    scale: gconf.scale,\n    fullscreen: gconf.fullscreen,\n    crisp: gconf.crisp,\n    canvas: gconf.canvas,\n    root: gconf.root,\n    touchToMouse: gconf.touchToMouse ? gconf.touchToMouse : true\n  });\n\n  const gfx = gfxInit(app.gl, {\n    clearColor: gconf.clearColor ? rgba(gconf.clearColor) : undefined,\n    scale: gconf.scale,\n    texFilter: gconf.texFilter\n  });\n\n  const audio = audioInit();\n  const assets = assetsInit(gfx, audio, {\n    errHandler: err => {\n      logger.error(err);\n    }\n  });\n\n  const logger = loggerInit(gfx, assets, {\n    max: gconf.logMax\n  });\n\n  const net = gconf.connect ? netInit(gconf.connect) : null;\n\n  const NetMsg = {\n    AddObj: \"ADD_OBJ\",\n    UpdateObj: \"UPDATE_OBJ\",\n    DestroyObj: \"DESTROY_OBJ\",\n    Disconnect: \"DISCONNECT\"\n  };\n\n  function sync(obj) {\n    if (!net) {\n      throw new Error(\"not connected to any websockets\");\n    }\n    game.travelers.push(obj._id);\n    send(NetMsg.AddObj, obj._data());\n  }\n\n  if (net) {\n    recv(NetMsg.AddObj, (id, data) => {\n      if (!game.visitors[id]) {\n        game.visitors[id] = {};\n      }\n      // TODO: reconstruct\n      //  \t\tconst obj = add(data);\n      //  \t\tscene.visitors[id][data.id] = obj._id;\n    });\n\n    recv(NetMsg.DestroyObj, (id, data) => {\n      if (!game.visitors[id]) {\n        return;\n      }\n      const oid = game.visitors[id][data.id];\n      if (oid != null) {\n        destroy(game.objs.get(oid));\n        delete game.visitors[id][data.id];\n      }\n    });\n\n    recv(NetMsg.Disconnect, (id, data) => {\n      if (game.visitors[id]) {\n        for (const oid of Object.values(game.visitors[id])) {\n          destroy(game.objs.get(oid));\n        }\n        delete game.visitors[id];\n      }\n    });\n  }\n\n  function recv(ty, handler) {\n    if (!net) {\n      throw new Error(\"not connected to any websockets\");\n    }\n    net.recv(ty, (data, id) => {\n      try {\n        handler(data, id);\n      } catch (err) {\n        logger.error(err);\n      }\n    });\n  }\n\n  function send(ty, data) {\n    if (!net) {\n      throw new Error(\"not connected to any websockets\");\n    }\n    net.send(ty, data);\n  }\n\n  function dt() {\n    return app.dt() * debug.timeScale;\n  }\n\n  // TODO: clean\n  function play(id, conf = {}) {\n    const pb = audio.play(\n      new AudioBuffer({\n        length: 1,\n        numberOfChannels: 1,\n        sampleRate: 44100\n      })\n    );\n    ready(() => {\n      const sound = assets.sounds[id];\n      if (!sound) {\n        throw new Error(`sound not found: \"${id}\"`);\n      }\n      const pb2 = audio.play(sound, conf);\n      for (const k in pb2) {\n        pb[k] = pb2[k];\n      }\n    });\n    return pb;\n  }\n\n  function isCamLayer(layer) {\n    return !(\n      game.layers[layer ? layer : game.defLayer] &&\n      game.layers[layer ? layer : game.defLayer].noCam\n    );\n  }\n\n  // check input state last frame\n  function mousePos(layer) {\n    return isCamLayer(layer) ? game.camMousePos : app.mousePos();\n  }\n\n  function drawSprite(id, conf = {}) {\n    const spr = (() => {\n      if (typeof id === \"string\") {\n        return assets.sprites[id];\n      } else {\n        return id;\n      }\n    })();\n    if (!spr) {\n      throw new Error(`sprite not found: \"${id}\"`);\n    }\n    const q = spr.frames[conf.frame ? conf.frame : 0];\n    gfx.drawTexture(spr.tex, {\n      ...conf,\n      quad: q.scale(conf.quad || quad(0, 0, 1, 1))\n    });\n  }\n\n  // TODO: DrawTextComf\n  function drawText(txt, conf = {}) {\n    // @ts-ignore\n    const fid = conf.font ? conf.font : DEF_FONT;\n    const font = assets.fonts[fid];\n    if (!font) {\n      throw new Error(`font not found: ${fid}`);\n    }\n    gfx.drawText(txt, font, conf);\n  }\n\n  const DEF_GRAVITY = 980;\n  const DEF_ORIGIN = \"topleft\";\n\n  const game = {\n    loaded: false,\n\n    // event callbacks\n    events: {},\n    objEvents: {},\n\n    actions: new IDList(),\n    renders: new IDList(),\n\n    // in game pool\n    objs: new IDList(),\n    timers: new IDList(),\n\n    // cam\n    cam: {\n      pos: vec2(gfx.width() / 2, gfx.height() / 2),\n      scale: vec2(1, 1),\n      angle: 0,\n      shake: 0\n    },\n\n    camMousePos: app.mousePos(),\n    camMatrix: mat4(),\n\n    // misc\n    layers: {},\n    defLayer: null,\n    gravity: DEF_GRAVITY,\n    data: {},\n\n    // net\n    travelers: [],\n    visitors: {},\n\n    on(ev, cb) {\n      if (!this.events[ev]) {\n        this.events[ev] = new IDList();\n      }\n      return this.events[ev].pushd(cb);\n    },\n\n    trigger(ev, ...args) {\n      if (this.events[ev]) {\n        this.events[ev].forEach(cb => cb(...args));\n      }\n    },\n\n    scenes: {}\n  };\n\n  function layers(list, def) {\n    list.forEach((name, idx) => {\n      game.layers[name] = {\n        alpha: 1,\n        order: idx + 1,\n        noCam: false\n      };\n    });\n\n    if (def) {\n      game.defLayer = def;\n    }\n  }\n\n  function camPos(...pos) {\n    if (pos.length > 0) {\n      game.cam.pos = vec2(...pos);\n    }\n    return game.cam.pos.clone();\n  }\n\n  function camScale(...scale) {\n    if (scale.length > 0) {\n      game.cam.scale = vec2(...scale);\n    }\n    return game.cam.scale.clone();\n  }\n\n  function camRot(angle) {\n    if (angle !== undefined) {\n      game.cam.angle = angle;\n    }\n    return game.cam.angle;\n  }\n\n  function camShake(intensity) {\n    game.cam.shake = intensity;\n  }\n\n  function camIgnore(layers) {\n    layers.forEach(name => {\n      if (game.layers[name]) {\n        game.layers[name].noCam = true;\n      }\n    });\n  }\n\n  const COMP_EVENTS = new Set([\n    \"add\",\n    \"load\",\n    \"update\",\n    \"draw\",\n    \"destroy\",\n    \"inspect\"\n  ]);\n\n  // TODO: make tags also comp?\n  function add(comps) {\n    const compStates = {};\n    const customState = {};\n    const events = {};\n    const tags = [];\n\n    const obj = {\n      _id: null,\n      hidden: false,\n      paused: false,\n\n      // use a comp\n      use(comp) {\n        if (comp === undefined) {\n          return;\n        }\n\n        const ty = typeof comp;\n\n        // tags\n        if (ty === \"string\") {\n          tags.push(comp);\n          return;\n        }\n\n        if (ty !== \"object\") {\n          throw new Error(`invalid comp type: ${ty}`);\n        }\n\n        let stateContainer = customState;\n\n        if (comp.id) {\n          compStates[comp.id] = {};\n          stateContainer = compStates[comp.id];\n        }\n\n        for (const k in comp) {\n          if (k === \"id\" || k === \"require\") {\n            continue;\n          }\n\n          // event / custom method\n          if (typeof comp[k] === \"function\") {\n            const func = comp[k].bind(this, state.components);\n            if (COMP_EVENTS.has(k)) {\n              this.on(k, func);\n              continue;\n            } else {\n              stateContainer[k] = func;\n            }\n          } else {\n            stateContainer[k] = comp[k];\n          }\n\n          // TODO: slow?\n          // fields\n          if (!this[k]) {\n            Object.defineProperty(this, k, {\n              get() {\n                if (comp.id) {\n                  return compStates[comp.id][k];\n                } else {\n                  return customState[k];\n                }\n              },\n              set(val) {\n                if (comp.id) {\n                  compStates[comp.id][k] = val;\n                } else {\n                  customState[k] = val;\n                }\n              }\n            });\n          }\n        }\n      },\n\n      c(id) {\n        return compStates[id];\n      },\n\n      // if obj is current in scene\n      exists() {\n        return this._id !== undefined;\n      },\n\n      // if obj has certain tag\n      is(tag) {\n        if (tag === \"*\") {\n          return true;\n        }\n        if (Array.isArray(tag)) {\n          for (const t of tag) {\n            if (!tags.includes(t)) {\n              return false;\n            }\n          }\n          return true;\n        }\n        return tags.includes(tag);\n      },\n\n      on(ev, cb) {\n        if (!events[ev]) {\n          events[ev] = new IDList();\n        }\n        return events[ev].pushd(cb);\n      },\n\n      action(cb) {\n        return this.on(\"update\", cb);\n      },\n\n      trigger(ev, ...args) {\n        if (events[ev]) {\n          events[ev].forEach(cb => cb.call(this, ...args));\n        }\n\n        const gEvents = game.objEvents[ev];\n\n        if (gEvents) {\n          gEvents.forEach(e => {\n            if (this.is(e.tag)) {\n              e.cb(this, ...args);\n            }\n          });\n        }\n      },\n\n      rmTag(t) {\n        const idx = tags.indexOf(t);\n        if (idx > -1) {\n          tags.splice(idx, 1);\n        }\n      },\n\n      _inspect() {\n        const info = [];\n\n        if (events[\"inspect\"]) {\n          for (const inspect of events[\"inspect\"].values()) {\n            info.push(inspect());\n          }\n        }\n\n        return {\n          tags: tags,\n          info: info\n        };\n      },\n\n      destroy() {\n        destroy(this);\n      }\n    };\n\n    for (const comp of comps) {\n      obj.use(comp);\n    }\n\n    obj._id = game.objs.push(obj);\n    obj.trigger(\"add\");\n    ready(() => obj.trigger(\"load\"));\n\n    // check comp dependencies\n    for (const id in compStates) {\n      const comp = compStates[id];\n      const deps = comp.require || [];\n      for (const dep of deps) {\n        if (!obj.c(dep)) {\n          throw new Error(`comp '${id}' requires comp '${dep}'`);\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function readd(obj) {\n    if (!obj.exists()) {\n      return;\n    }\n\n    game.objs.delete(obj._id);\n    const id = game.objs.push(obj);\n    obj._id = id;\n\n    return obj;\n  }\n\n  // add an event to a tag\n  function on(event, tag, cb) {\n    if (!game.objEvents[event]) {\n      game.objEvents[event] = new IDList();\n    }\n    return game.objEvents[event].pushd({\n      tag: tag,\n      cb: cb\n    });\n  }\n\n  // add update event to a tag or global update\n  function action(tag, cb) {\n    if (typeof tag === \"function\" && cb === undefined) {\n      return game.actions.pushd(tag);\n    } else if (typeof tag === \"string\") {\n      return on(\"update\", tag, cb);\n    }\n  }\n\n  // add draw event to a tag or global draw\n  function render(tag, cb) {\n    if (typeof tag === \"function\" && cb === undefined) {\n      return game.renders.pushd(tag);\n    } else if (typeof tag === \"string\") {\n      return on(\"update\", tag, cb);\n    }\n  }\n\n  // add an event that runs with objs with t1 collides with objs with t2\n  function collides(t1, t2, f) {\n    return action(t1, o1 => {\n      o1._checkCollisions(t2, o2 => {\n        f(o1, o2);\n      });\n    });\n  }\n\n  // add an event that runs with objs with t1 overlaps with objs with t2\n  function overlaps(t1, t2, f) {\n    return action(t1, o1 => {\n      o1._checkOverlaps(t2, o2 => {\n        f(o1, o2);\n      });\n    });\n  }\n\n  // add an event that runs when objs with tag t is clicked\n  function clicks(t, f) {\n    return action(t, o => {\n      if (o.isClicked()) {\n        f(o);\n      }\n    });\n  }\n\n  // add an event that'd be run after t\n  function wait(t, f) {\n    return new Promise(resolve => {\n      game.timers.push({\n        time: t,\n        cb: () => {\n          if (f) {\n            f();\n          }\n          resolve();\n        }\n      });\n    });\n  }\n\n  // add an event that's run every t seconds\n  function loop(t, f) {\n    let stopped = false;\n\n    const newF = () => {\n      if (stopped) {\n        return;\n      }\n      f();\n      wait(t, newF);\n    };\n\n    newF();\n\n    return () => (stopped = true);\n  }\n\n  // input callbacks\n  function keyDownPvt(k, f) {\n    if (Array.isArray(k)) {\n      const cancellers = k.map(key => keyDown(key, f));\n      return () => cancellers.forEach(cb => cb());\n    } else {\n      return game.on(\"input\", () => app.keyDown(k) && f());\n    }\n  }\n\n  function keyDown(id, cb) {\n    return keyDownPvt(id, cb.bind(null, state.components));\n  }\n\n  function keyPress(k, f) {\n    if (Array.isArray(k)) {\n      const cancellers = k.map(key => keyPress(key, f));\n      return () => cancellers.forEach(cb => cb());\n    } else {\n      return game.on(\"input\", () => app.keyPressed(k) && f());\n    }\n  }\n\n  function keyPressRep(k, f) {\n    if (Array.isArray(k)) {\n      const cancellers = k.map(key => keyPressRep(key, f));\n      return () => cancellers.forEach(cb => cb());\n    } else {\n      return game.on(\"input\", () => app.keyPressedRep(k) && f());\n    }\n  }\n\n  function keyRelease(k, f) {\n    if (Array.isArray(k)) {\n      const cancellers = k.map(key => keyRelease(key, f));\n      return () => cancellers.forEach(cb => cb());\n    } else {\n      return game.on(\"input\", () => app.keyReleased(k) && f());\n    }\n  }\n\n  // TODO: these mousePos() are from last frame\n  function mouseDown(f) {\n    return game.on(\"input\", () => app.mouseDown() && f(mousePos()));\n  }\n\n  function mouseClick(f) {\n    return game.on(\"input\", () => app.mouseClicked() && f(mousePos()));\n  }\n\n  function mouseRelease(f) {\n    return game.on(\"input\", () => app.mouseReleased() && f(mousePos()));\n  }\n\n  // TODO: pass delta pos\n  function mouseMove(f) {\n    return game.on(\n      \"input\",\n      () => app.mouseMoved() && f(mousePos(), app.mouseDeltaPos())\n    );\n  }\n\n  function charInput(f) {\n    return game.on(\"input\", () => app.charInputted().forEach(ch => f(ch)));\n  }\n\n  // TODO\n  app.canvas.addEventListener(\"touchstart\", e => {\n    [...e.changedTouches].forEach(t => {\n      game.trigger(\n        \"touchStart\",\n        t.identifier,\n        vec2(t.clientX, t.clientY).scale(1 / app.scale)\n      );\n    });\n  });\n\n  app.canvas.addEventListener(\"touchmove\", e => {\n    [...e.changedTouches].forEach(t => {\n      game.trigger(\n        \"touchMove\",\n        t.identifier,\n        vec2(t.clientX, t.clientY).scale(1 / app.scale)\n      );\n    });\n  });\n\n  app.canvas.addEventListener(\"touchmove\", e => {\n    [...e.changedTouches].forEach(t => {\n      game.trigger(\n        \"touchEnd\",\n        t.identifier,\n        vec2(t.clientX, t.clientY).scale(1 / app.scale)\n      );\n    });\n  });\n\n  function touchStart(f) {\n    return game.on(\"touchStart\", f);\n  }\n\n  function touchMove(f) {\n    return game.on(\"touchMove\", f);\n  }\n\n  function touchEnd(f) {\n    return game.on(\"touchEnd\", f);\n  }\n\n  // TODO: cache sorted list\n  // get all objects with tag\n  function get(t) {\n    const objs = [...game.objs.values()].sort((o1, o2) => {\n      const l1 =\n        game.layers[o1.layer ? o1.layer : game.defLayer] &&\n        game.layers[o1.layer ? o1.layer : game.defLayer].order\n          ? game.layers[o1.layer ? o1.layer : game.defLayer].order\n          : 0;\n      const l2 =\n        game.layers[o2.layer ? o2.layer : game.defLayer] &&\n        game.layers[o2.layer ? o2.layer : game.defLayer].order\n          ? game.layers[o2.layer ? o2.layer : game.defLayer].order\n          : 0;\n      return l1 - l2;\n    });\n\n    if (!t) {\n      return objs;\n    } else {\n      return objs.filter(obj => obj.is(t));\n    }\n  }\n\n  // apply a function to all objects currently in game with tag t\n  function every(t, f) {\n    if (typeof t === \"function\" && f === undefined) {\n      return get().map(t);\n    } else if (typeof t === \"string\") {\n      return get(t).map(f);\n    }\n  }\n\n  // every but in reverse order\n  function revery(t, f) {\n    if (typeof t === \"function\" && f === undefined) {\n      return get()\n        .reverse()\n        .map(t);\n    } else if (typeof t === \"string\") {\n      return get(t)\n        .reverse()\n        .map(f);\n    }\n  }\n\n  // destroy an obj\n  function destroy(obj) {\n    if (!obj.exists()) {\n      return;\n    }\n\n    obj.trigger(\"destroy\");\n    game.objs.delete(obj._id);\n    delete obj._id;\n  }\n\n  // destroy all obj with the tag\n  function destroyAll(t) {\n    every(t, obj => {\n      destroy(obj);\n    });\n  }\n\n  // get / set gravity\n  function gravity(g) {\n    if (g !== undefined) {\n      game.gravity = g;\n    }\n    return game.gravity;\n  }\n\n  // TODO: cleaner pause logic\n  function gameFrame(ignorePause) {\n    game.trigger(\"nextFrame\");\n    delete game.events[\"nextFrame\"];\n\n    const doUpdate = ignorePause || !debug.paused;\n\n    if (doUpdate) {\n      // update timers\n      game.timers.forEach((t, id) => {\n        t.time -= dt();\n        if (t.time <= 0) {\n          t.cb();\n          game.timers.delete(id);\n        }\n      });\n    }\n\n    // update every obj\n    revery(obj => {\n      if (!obj.paused && doUpdate) {\n        obj.trigger(\"update\");\n      }\n    });\n\n    if (doUpdate) {\n      game.actions.forEach(a => a());\n    }\n\n    // calculate camera matrix\n    const size = vec2(gfx.width(), gfx.height());\n    const cam = game.cam;\n    const shake = vec2FromAngle(rand(0, Math.PI * 2)).scale(cam.shake);\n\n    cam.shake = lerp(cam.shake, 0, 5 * dt());\n    game.camMatrix = mat4()\n      .translate(size.scale(0.5))\n      .scale(cam.scale)\n      .rotateZ(cam.angle)\n      .translate(size.scale(-0.5))\n      .translate(\n        cam.pos\n          .scale(-1)\n          .add(size.scale(0.5))\n          .add(shake)\n      );\n\n    // draw every obj\n    every(obj => {\n      if (!obj.hidden) {\n        gfx.pushTransform();\n\n        if (isCamLayer(obj.layer)) {\n          gfx.pushMatrix(game.camMatrix);\n        }\n\n        obj.trigger(\"draw\");\n        gfx.popTransform();\n      }\n    });\n\n    game.renders.forEach(r => r());\n  }\n\n  function drawInspect() {\n    let inspecting = null;\n    const font = assets.defFont();\n    const lcolor = rgba(gconf.inspectColor ? gconf.inspectColor : [0, 1, 1, 1]);\n\n    function drawInspectTxt(pos, txt, scale) {\n      const pad = vec2(4).scale(1 / scale);\n\n      const ftxt = gfx.fmtText(txt, font, {\n        size: 12 / scale,\n        pos: pos.add(vec2(pad.x, pad.y))\n      });\n\n      gfx.drawRect(pos, ftxt.width + pad.x * 2, ftxt.height + pad.x * 2, {\n        color: rgba(0, 0, 0, 1)\n      });\n\n      gfx.drawFmtText(ftxt);\n    }\n\n    function drawObj(obj, f) {\n      const isCam = isCamLayer(obj.layer);\n      const scale =\n        gfx.scale() * (isCam ? (game.cam.scale.x + game.cam.scale.y) / 2 : 1);\n      if (isCam) {\n        gfx.pushTransform();\n        gfx.pushMatrix(game.camMatrix);\n      }\n      f(scale);\n      if (isCam) {\n        gfx.popTransform();\n      }\n    }\n\n    revery(obj => {\n      if (!obj.area) {\n        return;\n      }\n\n      if (obj.hidden) {\n        return;\n      }\n\n      drawObj(obj, scale => {\n        if (!inspecting) {\n          if (obj.isHovered()) {\n            inspecting = obj;\n          }\n        }\n\n        const lwidth = (inspecting === obj ? 6 : 2) / scale;\n        const a = obj._worldArea();\n        const w = a.p2.x - a.p1.x;\n        const h = a.p2.y - a.p1.y;\n\n        gfx.drawRectStroke(a.p1, w, h, {\n          width: lwidth,\n          color: lcolor\n        });\n      });\n    });\n\n    if (inspecting) {\n      drawObj(inspecting, scale => {\n        const mpos = mousePos(inspecting.layer);\n        const lines = [];\n        const data = inspecting._inspect();\n\n        for (const tag of data.tags) {\n          lines.push(`\"${tag}\"`);\n        }\n\n        for (const info of data.info) {\n          for (const field in info) {\n            lines.push(`${field}: ${info[field]}`);\n          }\n        }\n\n        drawInspectTxt(mpos, lines.join(\"\\n\"), scale);\n      });\n    }\n\n    drawInspectTxt(vec2(0), app.fps() + \"\", gfx.scale());\n  }\n\n  // TODO: have velocity here?\n  function pos(...args) {\n    return {\n      id: \"pos\",\n      pos: vec2(...args),\n\n      // TODO: check physics here?\n      move(...args) {\n        const p = vec2(...args);\n        const dx = p.x * dt();\n        const dy = p.y * dt();\n\n        this.pos.x += dx;\n        this.pos.y += dy;\n      },\n\n      screenPos() {\n        return game.camMatrix.multVec2(this.pos);\n      },\n\n      inspect() {\n        return {\n          pos: `(${~~this.pos.x}, ${~~this.pos.y})`\n        };\n      }\n    };\n  }\n\n  // TODO: allow single number assignment\n  function scale(...args) {\n    if (args.length === 0) {\n      return scale(1);\n    }\n    return {\n      id: \"scale\",\n      scale: vec2(...args)\n    };\n  }\n\n  function rotate(r) {\n    return {\n      id: \"rotate\",\n      angle: r ? r : 0\n    };\n  }\n\n  function color(...args) {\n    return {\n      id: \"color\",\n      color: rgba(...args)\n    };\n  }\n\n  function origin(o) {\n    return {\n      id: \"origin\",\n      origin: o\n    };\n  }\n\n  function layer(l) {\n    return {\n      id: \"layer\",\n      layer: l,\n      inspect() {\n        return {\n          layer: this.layer ? this.layer : game.defLayer\n        };\n      }\n    };\n  }\n\n  function isSameLayer(o1, o2) {\n    return (\n      (o1.layer ? o1.layer : game.defLayer) ===\n      (o2.layer ? o2.layer : game.defLayer)\n    );\n  }\n\n  // TODO: active flag\n  // TODO: tell which size collides\n  // TODO: dynamic update when size change\n  function area(p1, p2) {\n    const colliding = {};\n    const overlapping = {};\n\n    return {\n      id: \"area\",\n\n      area: {\n        p1: p1,\n        p2: p2\n      },\n\n      areaWidth() {\n        const { p1, p2 } = this._worldArea();\n        return p2.x - p1.x;\n      },\n\n      areaHeight() {\n        const { p1, p2 } = this._worldArea();\n        return p2.y - p1.y;\n      },\n\n      isClicked() {\n        return app.mouseClicked() && this.isHovered();\n      },\n\n      isHovered() {\n        if (app.isTouch) {\n          return app.mouseDown() && this.hasPt(mousePos(this.layer));\n        } else {\n          return this.hasPt(mousePos(this.layer));\n        }\n      },\n\n      isCollided(other) {\n        if (!other.area) {\n          return false;\n        }\n\n        if (!isSameLayer(this, other)) {\n          return false;\n        }\n\n        const a1 = this._worldArea();\n        const a2 = other._worldArea();\n\n        return colRectRect(a1, a2);\n      },\n\n      isOverlapped(other) {\n        if (!other.area) {\n          return false;\n        }\n\n        if (!isSameLayer(this, other)) {\n          return false;\n        }\n\n        const a1 = this._worldArea();\n        const a2 = other._worldArea();\n\n        return overlapRectRect(a1, a2);\n      },\n\n      clicks(f) {\n        this.action(() => {\n          if (this.isClicked()) {\n            f();\n          }\n        });\n      },\n\n      hovers(f) {\n        this.action(() => {\n          if (this.isHovered()) {\n            f();\n          }\n        });\n      },\n\n      collides(tag, f) {\n        this.action(() => {\n          this._checkCollisions(tag, f);\n        });\n      },\n\n      overlaps(tag, f) {\n        this.action(() => {\n          this._checkOverlaps(tag, f);\n        });\n      },\n\n      hasPt(pt) {\n        const a = this._worldArea();\n        return colRectPt(\n          {\n            p1: a.p1,\n            p2: a.p2\n          },\n          pt\n        );\n      },\n\n      // TODO: make overlap events still trigger\n      // push an obj out of another if they're overlapped\n      pushOut(obj) {\n        if (obj === this) {\n          return null;\n        }\n\n        if (!obj.area) {\n          return null;\n        }\n\n        if (!isSameLayer(this, obj)) {\n          return null;\n        }\n\n        const a1 = this._worldArea();\n        const a2 = obj._worldArea();\n\n        if (!colRectRect(a1, a2)) {\n          return null;\n        }\n\n        const disLeft = a1.p2.x - a2.p1.x;\n        const disRight = a2.p2.x - a1.p1.x;\n        const disTop = a1.p2.y - a2.p1.y;\n        const disBottom = a2.p2.y - a1.p1.y;\n        const min = Math.min(disLeft, disRight, disTop, disBottom);\n\n        // eslint-disable-next-line default-case\n        switch (min) {\n          case disLeft:\n            this.pos.x -= disLeft;\n            return {\n              obj: obj,\n              side: \"right\",\n              dis: -disLeft\n            };\n          case disRight:\n            this.pos.x += disRight;\n            return {\n              obj: obj,\n              side: \"left\",\n              dis: disRight\n            };\n          case disTop:\n            this.pos.y -= disTop;\n            return {\n              obj: obj,\n              side: \"bottom\",\n              dis: -disTop\n            };\n          case disBottom:\n            this.pos.y += disBottom;\n            return {\n              obj: obj,\n              side: \"top\",\n              dis: disBottom\n            };\n        }\n\n        return null;\n      },\n\n      // push object out of other solid objects\n      pushOutAll() {\n        return every(\n          other => (other.solid ? this.pushOut(other) : null)\n        ).filter(res => res != null);\n      },\n\n      _checkCollisions(tag, f) {\n        every(tag, obj => {\n          if (this === obj) {\n            return;\n          }\n          if (colliding[obj._id]) {\n            return;\n          }\n          if (this.isCollided(obj)) {\n            f(obj);\n            colliding[obj._id] = obj;\n          }\n        });\n\n        for (const id in colliding) {\n          const obj = colliding[id];\n          if (!this.isCollided(obj)) {\n            delete colliding[id];\n          }\n        }\n      },\n\n      // TODO: repetitive with collides\n      _checkOverlaps(tag, f) {\n        every(tag, obj => {\n          if (this === obj) {\n            return;\n          }\n          if (overlapping[obj._id]) {\n            return;\n          }\n          if (this.isOverlapped(obj)) {\n            f(obj);\n            overlapping[obj._id] = obj;\n          }\n        });\n\n        for (const id in overlapping) {\n          const obj = overlapping[id];\n          if (!this.isOverlapped(obj)) {\n            delete overlapping[id];\n          }\n        }\n      },\n\n      // TODO: cache\n      // TODO: use matrix mult for more accuracy and rotation?\n      _worldArea() {\n        const a = this.area;\n        const pos = this.pos || vec2(0);\n        const scale = this.scale || vec2(1);\n        const p1 = pos.add(a.p1.scale(scale));\n        const p2 = pos.add(a.p2.scale(scale));\n\n        const area = {\n          p1: vec2(Math.min(p1.x, p2.x), Math.min(p1.y, p2.y)),\n          p2: vec2(Math.max(p1.x, p2.x), Math.max(p1.y, p2.y))\n        };\n\n        return area;\n      }\n    };\n  }\n\n  function getAreaFromSize(w, h, o) {\n    const size = vec2(w, h);\n    const offset = originPt(o || DEF_ORIGIN)\n      .scale(size)\n      .scale(-0.5);\n    return area(offset.sub(size.scale(0.5)), offset.add(size.scale(0.5)));\n  }\n\n  // TODO: clean\n  function sprite(id, conf = {}) {\n    let spr = null;\n    let curAnim = null;\n\n    function calcTexScale(tex, q, w, h) {\n      const scale = vec2(1, 1);\n      if (w && h) {\n        scale.x = w / (tex.width * q.w);\n        scale.y = h / (tex.height * q.h);\n      } else if (w) {\n        scale.x = w / (tex.width * q.w);\n        scale.y = scale.x;\n      } else if (h) {\n        scale.y = h / (tex.height * q.h);\n        scale.x = scale.y;\n      }\n      return scale;\n    }\n\n    return {\n      id: \"sprite\",\n      // TODO: allow update\n      width: 0,\n      height: 0,\n      animSpeed: conf.animSpeed || 0.1,\n      frame: conf.frame || 0,\n      quad: conf.quad || quad(0, 0, 1, 1),\n\n      add() {\n        if (!conf.noArea) {\n          this.use(area(vec2(0), vec2(0)));\n        }\n      },\n\n      load() {\n        spr = assets.sprites[id];\n\n        if (!spr) {\n          throw new Error(`sprite not found: \"${id}\"`);\n        }\n\n        let q = { ...spr.frames[0] };\n\n        if (conf.quad) {\n          q = q.scale(conf.quad);\n        }\n\n        const scale = calcTexScale(spr.tex, q, conf.width, conf.height);\n\n        this.width = spr.tex.width * q.w * scale.x;\n        this.height = spr.tex.height * q.h * scale.y;\n\n        if (!conf.noArea) {\n          // TODO: this could overwrite existing internal states\n          this.use(getAreaFromSize(this.width, this.height, this.origin));\n        }\n      },\n\n      draw() {\n        drawSprite(spr, {\n          pos: this.pos,\n          scale: this.scale,\n          rot: this.angle,\n          color: this.color,\n          frame: this.frame,\n          origin: this.origin,\n          quad: this.quad,\n          prog: assets.shaders[this.shader],\n          uniform: this.uniform,\n          flipX: conf.flipX,\n          flipY: conf.flipY,\n          tiled: conf.tiled,\n          width: conf.width,\n          height: conf.height\n        });\n      },\n\n      update() {\n        if (!curAnim) {\n          return;\n        }\n\n        const anim = spr.anims[curAnim.name];\n\n        curAnim.timer += dt();\n\n        if (curAnim.timer >= this.animSpeed) {\n          // TODO: anim dir\n          this.frame++;\n          if (this.frame > anim.to) {\n            if (curAnim.loop) {\n              this.frame = anim.from;\n            } else {\n              this.frame--;\n              this.stop();\n            }\n          }\n          if (curAnim) {\n            curAnim.timer -= this.animSpeed;\n          }\n        }\n      },\n\n      play(name, loop = true) {\n        if (!spr) {\n          ready(() => {\n            this.play(name, loop);\n          });\n          return;\n        }\n\n        const anim = spr.anims[name];\n\n        if (!anim) {\n          throw new Error(`anim not found: ${name}`);\n        }\n\n        if (curAnim) {\n          this.stop();\n        }\n\n        curAnim = {\n          name: name,\n          loop: loop,\n          timer: 0\n        };\n\n        this.frame = anim.from;\n        this.trigger(\"animPlay\", name);\n      },\n\n      stop() {\n        if (!curAnim) {\n          return;\n        }\n        const prevAnim = curAnim.name;\n        curAnim = null;\n        this.trigger(\"animEnd\", prevAnim);\n      },\n\n      changeSprite(id) {\n        if (!spr) {\n          ready(() => {\n            this.changeSprite(id);\n          });\n          return;\n        }\n\n        spr = assets.sprites[id];\n\n        if (!spr) {\n          throw new Error(`sprite not found: \"${id}\"`);\n        }\n\n        const q = { ...spr.frames[0] };\n\n        if (conf.quad) {\n          q.x += conf.quad.x * q.w;\n          q.y += conf.quad.y * q.h;\n          q.w *= conf.quad.w;\n          q.h *= conf.quad.h;\n        }\n\n        this.width = spr.tex.width * q.w;\n        this.height = spr.tex.height * q.h;\n\n        if (!conf.noArea) {\n          this.use(getAreaFromSize(this.width, this.height, this.origin));\n        }\n\n        curAnim = null;\n        this.frame = 0;\n      },\n\n      numFrames() {\n        if (!spr) {\n          return 0;\n        }\n        return spr.frames.length;\n      },\n\n      curAnim() {\n        return curAnim && curAnim.name;\n      },\n\n      flipX(b) {\n        conf.flipX = b;\n      },\n\n      flipY(b) {\n        conf.flipY = b;\n      },\n\n      inspect() {\n        const info = {};\n        if (curAnim) {\n          info.curAnim = `\"${curAnim.name}\"`;\n        }\n        return info;\n      }\n    };\n  }\n\n  function text(t, size, conf = {}) {\n    return {\n      id: \"text\",\n      text: t,\n      textSize: size || 16,\n      font: conf.font,\n      // TODO: calc these at init\n      width: 0,\n      height: 0,\n\n      add() {\n        if (conf.area) {\n          this.use(area(vec2(0), vec2(0)));\n        }\n      },\n\n      load() {\n        // add default area\n        if (conf.area) {\n          const font = assets.fonts[this.font ? this.font : DEF_FONT];\n          const ftext = gfx.fmtText(this.text + \"\", font, {\n            pos: this.pos,\n            scale: this.scale,\n            rot: this.angle,\n            size: this.textSize,\n            origin: this.origin,\n            color: this.color,\n            width: conf.width\n          });\n          this.width = ftext.width / ((this.scale && this.scale.x) || 1);\n          this.height = ftext.height / ((this.scale && this.scale.y) || 1);\n          this.use(getAreaFromSize(this.width, this.height, this.origin));\n        }\n      },\n\n      draw() {\n        const font = assets.fonts[this.font ? this.font : DEF_FONT];\n\n        const ftext = gfx.fmtText(this.text + \"\", font, {\n          pos: this.pos,\n          scale: this.scale,\n          rot: this.angle,\n          size: this.textSize,\n          origin: this.origin,\n          color: this.color,\n          width: conf.width\n        });\n\n        this.width = ftext.width;\n        this.height = ftext.height;\n\n        gfx.drawFmtText(ftext);\n      }\n    };\n  }\n\n  function rect(w, h, conf = {}) {\n    return {\n      id: \"rect\",\n      width: w,\n      height: h,\n\n      add() {\n        // add default area\n        if (!this.area && !conf.noArea) {\n          this.use(getAreaFromSize(this.width, this.height, this.origin));\n        }\n      },\n\n      draw() {\n        gfx.drawRect(this.pos, this.width, this.height, {\n          scale: this.scale,\n          rot: this.angle,\n          color: this.color,\n          origin: this.origin,\n          prog: assets.shaders[this.shader],\n          uniform: this.uniform\n        });\n      }\n    };\n  }\n\n  function solid() {\n    return {\n      id: \"solid\",\n      solid: true\n    };\n  }\n\n  // maximum y velocity with body()\n  const DEF_MAX_VEL = 960;\n  const DEF_JUMP_FORCE = 480;\n\n  function body(conf = {}) {\n    let velY = 0;\n    let curPlatform = null;\n    let lastPlatformPos = null;\n    const maxVel = conf.maxVel ? conf.maxVel : DEF_MAX_VEL;\n\n    return {\n      id: \"body\",\n      jumpForce: conf.jumpForce ? conf.jumpForce : DEF_JUMP_FORCE,\n\n      update() {\n        this.move(0, velY);\n\n        const targets = this.pushOutAll();\n        let justOff = false;\n\n        // check if loses current platform\n        if (curPlatform) {\n          if (!curPlatform.exists() || !this.isCollided(curPlatform)) {\n            curPlatform = null;\n            lastPlatformPos = null;\n            justOff = true;\n          } else {\n            if (lastPlatformPos) {\n              // sticky platform\n              this.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n              lastPlatformPos = curPlatform.pos.clone();\n            }\n          }\n        }\n\n        if (!curPlatform) {\n          velY = Math.min(velY + gravity() * dt(), maxVel);\n\n          // check if grounded to a new platform\n          for (const target of targets) {\n            if (target.side === \"bottom\" && velY > 0) {\n              curPlatform = target.obj;\n              velY = 0;\n              // TODO: might not have pos\n              lastPlatformPos = curPlatform.pos.clone();\n              if (!justOff) {\n                this.trigger(\"grounded\", curPlatform);\n              }\n            } else if (target.side === \"top\" && velY < 0) {\n              velY = 0;\n              this.trigger(\"headbutt\", target.obj);\n            }\n          }\n        }\n      },\n\n      curPlatform() {\n        return curPlatform;\n      },\n\n      grounded() {\n        return curPlatform !== null;\n      },\n\n      falling() {\n        return velY > 0;\n      },\n\n      jump(force) {\n        curPlatform = null;\n        velY = -force || -this.jumpForce;\n      }\n    };\n  }\n\n  function shader(id, uniform = {}) {\n    const prog = assets.shaders[id];\n    return {\n      id: \"shader\",\n      shader: id,\n      uniform: uniform\n    };\n  }\n\n  const debug = {\n    paused: false,\n    inspect: false,\n    timeScale: 1,\n    showLog: true,\n    fps: app.fps,\n    objCount() {\n      return game.objs.size;\n    },\n    stepFrame() {\n      gameFrame(true);\n    },\n    drawCalls: gfx.drawCalls,\n    clearLog: logger.clear,\n    log: logger.info,\n    error: logger.error\n  };\n\n  function gridder(level, p) {\n    return {\n      id: \"gridder\",\n      gridPos: p.clone(),\n\n      setGridPos(p) {\n        this.gridPos = p.clone();\n        this.pos = vec2(\n          level.offset().x + this.gridPos.x * level.gridWidth(),\n          level.offset().y + this.gridPos.y * level.gridHeight()\n        );\n      },\n\n      moveLeft() {\n        this.setGridPos(this.gridPos.add(vec2(-1, 0)));\n      },\n\n      moveRight() {\n        this.setGridPos(this.gridPos.add(vec2(1, 0)));\n      },\n\n      moveUp() {\n        this.setGridPos(this.gridPos.add(vec2(0, -1)));\n      },\n\n      moveDown() {\n        this.setGridPos(this.gridPos.add(vec2(0, 1)));\n      }\n    };\n  }\n\n  function addLevel(map, conf) {\n    const objs = [];\n    const offset = vec2(conf.pos || 0);\n    let longRow = 0;\n\n    const level = {\n      offset() {\n        return offset.clone();\n      },\n\n      gridWidth() {\n        return conf.width;\n      },\n\n      gridHeight() {\n        return conf.height;\n      },\n\n      getPos(...args) {\n        const p = vec2(...args);\n        return vec2(offset.x + p.x * conf.width, offset.y + p.y * conf.height);\n      },\n\n      spawn(sym, p) {\n        const comps = (() => {\n          if (Array.isArray(sym)) {\n            return sym;\n          } else if (conf[sym]) {\n            if (typeof conf[sym] === \"function\") {\n              return conf[sym]();\n            } else if (Array.isArray(conf[sym])) {\n              return [...conf[sym]];\n            }\n          } else if (conf.any) {\n            return conf.any(sym);\n          }\n        })();\n\n        if (!comps) {\n          return;\n        }\n\n        comps.push(\n          pos(offset.x + p.x * conf.width, offset.y + p.y * conf.height)\n        );\n\n        const obj = add(comps);\n\n        objs.push(obj);\n\n        obj.use(gridder(this, p));\n\n        return obj;\n      },\n\n      width() {\n        return longRow * conf.width;\n      },\n\n      height() {\n        return map.length * conf.height;\n      },\n\n      destroy() {\n        for (const obj of objs) {\n          destroy(obj);\n        }\n      }\n    };\n\n    map.forEach((row, i) => {\n      const syms = row.split(\"\");\n\n      longRow = Math.max(syms.length, longRow);\n\n      syms.forEach((sym, j) => {\n        level.spawn(sym, vec2(j, i));\n      });\n    });\n\n    return level;\n  }\n\n  function commonProps(props) {\n    return [\n      pos(props.pos ? props.pos : vec2(0)),\n      rotate(props.rot ? prop.rot : 0),\n      scale(vec2(props.scale ? props.scale : 1)),\n      color(props.color ? props.color : rgb(1, 1, 1)),\n      origin(props.origin)\n    ];\n  }\n\n  function addSprite(name, props = {}) {\n    return add([\n      sprite(name, props),\n      props.body && body(),\n      props.solid && solid(),\n      props.layer && layer(props.layer),\n      props.origin && origin(props.origin),\n      props.data,\n      ...commonProps(props),\n      ...(props.tags || [])\n    ]);\n  }\n\n  function addRect(w, h, props = {}) {\n    return add([\n      rect(w, h, props),\n      props.body && body(),\n      props.solid && solid(),\n      props.layer && layer(props.layer),\n      props.origin && origin(props.origin),\n      props.data,\n      ...commonProps(props),\n      ...(props.tags || [])\n    ]);\n  }\n\n  function addText(txt, size, props = {}) {\n    return add([\n      text(txt, size, props),\n      props.body && body(),\n      props.solid && solid(),\n      props.layer && layer(props.layer),\n      props.origin && origin(props.origin),\n      props.data,\n      ...commonProps(props),\n      ...(props.tags || [])\n    ]);\n  }\n\n  function ready(cb) {\n    if (game.loaded) {\n      cb();\n    } else {\n      game.on(\"load\", cb);\n    }\n  }\n\n  function scene(id, def) {\n    game.scenes[id] = def;\n  }\n\n  function go(id, ...args) {\n    game.on(\"nextFrame\", () => {\n      game.events = {};\n\n      game.objEvents = {\n        add: new IDList(),\n        update: new IDList(),\n        draw: new IDList(),\n        destroy: new IDList()\n      };\n\n      game.actions = new IDList();\n      game.renders = new IDList();\n      game.objs = new IDList();\n      game.timers = new IDList();\n\n      // cam\n      game.cam = {\n        pos: vec2(gfx.width() / 2, gfx.height() / 2),\n        scale: vec2(1, 1),\n        angle: 0,\n        shake: 0\n      };\n\n      game.camMousePos = app.mousePos();\n      game.camMatrix = mat4();\n\n      game.layers = {};\n      game.defLayer = null;\n      game.gravity = DEF_GRAVITY;\n\n      game.scenes[id](...args);\n\n      if (gconf.debug) {\n        regDebugInput();\n      }\n    });\n  }\n\n  function getData(key, def) {\n    try {\n      return JSON.parse(window.localStorage[key]);\n    } catch {\n      if (def) {\n        setData(key, def);\n        return def;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  function setData(key, data) {\n    window.localStorage[key] = JSON.stringify(data);\n  }\n\n  const ctx = {\n    // asset load - 6/6\n    loadRoot: assets.loadRoot, // assets/load-root\n    loadSprite: assets.loadSprite, // assets/load-sprite\n    loadSound: assets.loadSound, // assets/load-sound\n    loadFont: assets.loadFont, // assets/load-font\n    loadShader: assets.loadShader, // assets/load-shader\n    addLoader: assets.addLoader, // assets/add-loader\n    // query\n    width: gfx.width, // gfx/width\n    height: gfx.height, // gfx/height\n    dt: dt, // app/dt\n    time: app.time, // app/time!\n    screenshot: app.screenshot, // app/screenshot\n    focused: app.focused, // app/focused?\n    focus: app.focus, // app/focus\n    cursor: app.cursor, // app/cursor\n    ready,\n    isTouch: () => app.isTouch,\n    // misc\n    layers,\n    camPos,\n    camScale,\n    camRot,\n    camShake,\n    camIgnore,\n    gravity,\n    // obj\n    add,\n    readd,\n    destroy,\n    destroyAll,\n    get,\n    every,\n    revery,\n    // net\n    sync,\n    send,\n    recv,\n    // comps\n    pos,\n    scale,\n    rotate,\n    color,\n    origin,\n    layer,\n    area,\n    sprite,\n    text,\n    rect,\n    solid,\n    body,\n    shader,\n    // group events\n    on,\n    action,\n    render,\n    collides,\n    overlaps,\n    clicks,\n    // input\n    keyDown,\n    keyPress,\n    keyPressRep,\n    keyRelease,\n    mouseDown,\n    mouseClick,\n    mouseRelease,\n    mouseMove,\n    charInput,\n    touchStart,\n    touchMove,\n    touchEnd,\n    mousePos,\n    mouseDeltaPos: app.mouseDeltaPos,\n    keyIsDown: app.keyDown,\n    keyIsPressed: app.keyPressed,\n    keyIsPressedRep: app.keyPressedRep,\n    keyIsReleased: app.keyReleased,\n    mouseIsDown: app.mouseDown,\n    mouseIsClicked: app.mouseClicked,\n    mouseIsReleased: app.mouseReleased,\n    mouseIsMoved: app.mouseMoved,\n    // timer\n    loop,\n    wait,\n    // audio\n    play,\n    volume: audio.volume,\n    burp: audio.burp,\n    // math\n    makeRng,\n    rand,\n    randSeed,\n    vec2,\n    rgb,\n    rgba,\n    quad,\n    choose,\n    chance,\n    lerp,\n    map,\n    mapc,\n    wave,\n    deg2rad,\n    rad2deg,\n    // raw draw\n    drawSprite,\n    drawText,\n    drawRect: gfx.drawRect,\n    drawRectStroke: gfx.drawRectStroke,\n    drawLine: gfx.drawLine,\n    drawTri: gfx.drawTri,\n    // debug\n    debug,\n    // level\n    addLevel,\n    // helpers\n    addSprite,\n    addRect,\n    addText,\n    // scene\n    scene,\n    go,\n    // storage\n    getData,\n    setData,\n    // custom\n    state,\n    reg_comp,\n    get_comp\n  };\n\n  if (gconf.plugins) {\n    for (const src of gconf.plugins) {\n      const map = src(ctx);\n      for (const k in map) {\n        ctx[k] = map[k];\n      }\n    }\n  }\n\n  if (gconf.global) {\n    for (const k in ctx) {\n      window[k] = ctx[k];\n    }\n  }\n\n  app.run(() => {\n    gfx.frameStart();\n\n    if (!game.loaded) {\n      // if assets are not fully loaded, draw a progress bar\n      const progress = assets.loadProgress();\n\n      if (progress === 1) {\n        game.loaded = true;\n        game.trigger(\"load\");\n        if (net) {\n          net.connect().catch(logger.error);\n        }\n      } else {\n        const w = gfx.width() / 2;\n        const h = 24 / gfx.scale();\n        const pos = vec2(gfx.width() / 2, gfx.height() / 2).sub(\n          vec2(w / 2, h / 2)\n        );\n        gfx.drawRect(vec2(0), gfx.width(), gfx.height(), {\n          color: rgb(0, 0, 0)\n        });\n        gfx.drawRectStroke(pos, w, h, { width: 4 / gfx.scale() });\n        gfx.drawRect(pos, w * progress, h);\n      }\n    } else {\n      try {\n        // TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n        game.camMousePos = game.camMatrix.invert().multVec2(app.mousePos());\n        game.trigger(\"input\");\n        gameFrame();\n\n        if (debug.inspect) {\n          drawInspect();\n        }\n      } catch (e) {\n        logger.error(e.stack);\n        app.quit();\n      }\n\n      if (debug.showLog) {\n        logger.draw();\n      }\n    }\n\n    gfx.frameEnd();\n  });\n\n  function regDebugInput() {\n    keyPress(\"f1\", () => {\n      debug.inspect = !debug.inspect;\n    });\n\n    keyPress(\"f2\", () => {\n      debug.clearLog();\n    });\n\n    keyPress(\"f8\", () => {\n      debug.paused = !debug.paused;\n      logger.info(`${debug.paused ? \"paused\" : \"unpaused\"}`);\n    });\n\n    keyPress(\"f7\", () => {\n      debug.timeScale = clamp(debug.timeScale - 0.2, 0, 2);\n      logger.info(`time scale: ${debug.timeScale.toFixed(1)}`);\n    });\n\n    keyPress(\"f9\", () => {\n      debug.timeScale = clamp(debug.timeScale + 0.2, 0, 2);\n      logger.info(`time scale: ${debug.timeScale.toFixed(1)}`);\n    });\n\n    keyPress(\"f10\", () => {\n      debug.stepFrame();\n      logger.info(`stepped frame`);\n    });\n  }\n\n  if (gconf.debug) {\n    regDebugInput();\n  }\n\n  app.focus();\n\n  return ctx;\n};\n\nexport default kaboom;\n"],
"names":["IDList","map","Map","lastID","prototype","push","IDList.prototype.push","v","id","set","pushd","IDList.prototype.pushd","delete","IDList.prototype.set","value","get","IDList.prototype.get","forEach","IDList.prototype.forEach","cb","values","IDList.prototype.values","deg2rad","deg","Math","PI","rad2deg","rad","clamp","val","min","max","lerp","a","b","t","l1","h1","l2","h2","mapc","vec2","args","length","isVec2","x","y","Array","isArray","apply","clone","add","p2","sub","scale","s","dist","sqrt","len","unit","normal","dot","angle","atan2","toFixed","n","eq","other","str","vec2FromAngle","cos","sin","vec3","z","xy","p","undefined","isVec3","isColor","c","r","g","isMat4","m","rgb","rgba","lighten","darken","invert","isDark","isLight","quad","w","h","mat4","mult","out","i","j","multVec4","multVec3","p4","multVec2","translate","rotateX","rotateY","rotateZ","f00","f01","f02","f03","f04","f05","f06","f07","f08","f09","f10","f11","f12","f13","f14","f15","f16","f17","f18","det","wave","lo","hi","A","C","M","defRNG","makeRng","Date","now","seed","gen","randSeed","rand","chance","choose","list","floor","colRectRect","r1","r2","p1","overlapRectRect","colLineLine","colRectLine","l","colRectPt","makeLine","pt","deepEq","o1","o2","t1","t2","k1","Object","keys","k2","k","v1","v2","DEF_ORIGIN","STRIDE","QUEUE_COUNT","BG_GRID_SIZE","VERT_TEMPLATE","FRAG_TEMPLATE","DEF_VERT","DEF_FRAG","originPt","orig","gfxInit","gl","gconf","powerOfTwo","log","makeTex","data","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","texFilter","TEXTURE_MAG_FILTER","wrap","width","height","REPEAT","CLAMP_TO_EDGE","TEXTURE_WRAP_S","TEXTURE_WRAP_T","bind","unbind","makeProgram","vertSrc","fragSrc","msg","vcode","replace","fcode","vertShader","createShader","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderInfoLog","Error","createProgram","attachShader","bindAttribLocation","linkProgram","getProgramInfoLog","useProgram","bindAttribs","vertexAttribPointer","FLOAT","enableVertexAttribArray","send","uniform","name","loc","getUniformLocation","uniform1f","uniformMatrix4fv","Float32Array","uniform4f","uniform3f","uniform2f","makeFont","tex","gw","gh","chars","cols","rows","qw","qh","charMap","split","entries","ch","drawRaw","verts","indices","prog","gfx","defTex","defProg","curTex","curProg","curUniform","vqueue","iqueue","flush","nIndices","nVerts","toNDC","transform","pos","uv","color","flat","bindBuffer","ARRAY_BUFFER","vbuf","bufferSubData","ELEMENT_ARRAY_BUFFER","ibuf","Uint16Array","drawElements","TRIANGLES","UNSIGNED_SHORT","drawCalls","frameStart","clear","COLOR_BUFFER_BIT","clearColor","drawQuad","bgTex","transformStack","frameEnd","lastDrawCalls","pushMatrix","pushTranslate","pushScale","pushRotateX","pushRotateY","pushRotateZ","pushTransform","popTransform","pop","conf","origin","offset","rot","q","flipX","flipY","drawTexture","tiled","repX","ceil","repY","drawRect","drawRectStroke","p3","drawLine","drawTri","fmtText","text","font","size","cw","curX","th","tw","flines","curLine","lastSpace","cursor","char","slice","fchars","ox","oy","line","ln","oxl","cn","qpos","drawText","txt","drawFmtText","ftext","drawingBufferWidth","drawingBufferHeight","LINEAR","NEAREST","emptyTex","ImageData","Uint8ClampedArray","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","createBuffer","bufferData","DYNAMIC_DRAW","processBtnState","appInit","mousePos","app","mouseDeltaPos","mouseClicked","mouseState","mouseDown","mouseReleased","mouseMoved","keyPressed","keyStates","keyPressedRep","keyDown","keyReleased","charInputted","dt","time","fps","screenshot","canvas","toDataURL","style","run","f","frame","realTime","realDt","skipTime","fpsBuf","fpsTimer","round","reduce","stopped","loopID","requestAnimationFrame","quit","cancelAnimationFrame","document","createElement","appendChild","root","body","isTouch","keyMap","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","preventDefaultKeys","fullscreen","window","innerWidth","innerHeight","styles","crisp","join","setAttribute","getContext","antialias","depth","stencil","alpha","preserveDrawingBuffer","navigator","maxTouchPoints","msMaxTouchPoints","addEventListener","e","offsetX","offsetY","movementX","movementY","key","toLowerCase","includes","preventDefault","repeat","touchToMouse","touches","clientX","clientY","visibilityState","focused","activeElement","focus","MIN_GAIN","MAX_GAIN","MIN_SPEED","MAX_SPEED","MIN_DETUNE","MAX_DETUNE","audioInit","volume","audio","gainNode","gain","play","sound","loop","speed","detune","seek","srcNode","ctx","createBufferSource","buffer","createGain","connect","masterNode","start","startTime","currentTime","stopTime","handle","stop","pause","oldNode","playbackRate","paused","unloop","duration","burp","burpBuf","AudioContext","webkitAudioContext","destination","unsciiSrc","markSrc","ASCII_CHARS","DEF_FONT","loadImg","src","img","Image","crossOrigin","Promise","resolve","reject","onload","img.onload","onerror","img.onerror","isDataUrl","startsWith","assetsInit","addLoader","prom","assets","lastLoaderID","loaders","catch","errHandler","console","error","finally","loadProgress","total","loaded","loadRoot","path","loadFont","loader","then","fonts","loadSprite","loadRawSprite","sliceX","sliceY","gridWidth","gridHeight","anims","frames","sprite","sprites","loadShader","vert","frag","isUrl","loadRawShader","shader","shaders","resolveUrl","url","fetch","ok","all","err","loadSound","res","arrayBuffer","resolve2","reject2","decodeAudioData","buf","sounds","defFont","LOG_SIZE","loggerInit","draw","logs","txtAlpha","bgAlpha","col","type","unshift","info","netInit","connected","socket","readyState","ws","WebSocket","onopen","ws.onopen","sendQueue","ws.onerror","onmessage","ws.onmessage","JSON","parse","handlers","handler","recv","stringify","close","kaboom","get_comp","defaultVal","state","components","sync","obj","net","game","travelers","_id","NetMsg","AddObj","_data","ty","logger","debug","timeScale","pb","AudioBuffer","numberOfChannels","sampleRate","ready","pb2","isCamLayer","layer","layers","defLayer","noCam","camMousePos","drawSprite","spr","fid","def","idx","order","camPos","cam","camScale","camRot","camShake","intensity","shake","camIgnore","comps","compStates","customState","events","tags","hidden","use","comp","stateContainer","func","COMP_EVENTS","has","on","defineProperty","exists","is","tag","ev","action","trigger","call","gEvents","objEvents","rmTag","indexOf","splice","_inspect","inspect","destroy","objs","deps","require","dep","readd","event","actions","render","renders","collides","_checkCollisions","overlaps","_checkOverlaps","clicks","o","isClicked","wait","timers","newF","keyDownPvt","cancellers","keyPress","keyPressRep","keyRelease","mouseClick","mouseRelease","mouseMove","charInput","touchStart","touchMove","touchEnd","sort","filter","every","revery","reverse","destroyAll","gravity","gameFrame","ignorePause","doUpdate","camMatrix","drawInspect","drawInspectTxt","pad","ftxt","drawObj","isCam","inspecting","lcolor","inspectColor","area","isHovered","lwidth","_worldArea","mpos","lines","field","move","dx","dy","screenPos","rotate","isSameLayer","colliding","overlapping","areaWidth","areaHeight","hasPt","isCollided","a1","a2","isOverlapped","hovers","pushOut","disLeft","disRight","disTop","disBottom","side","dis","pushOutAll","solid","getAreaFromSize","calcTexScale","curAnim","animSpeed","noArea","load","update","anim","timer","to","from","prevAnim","changeSprite","numFrames","textSize","rect","velY","curPlatform","lastPlatformPos","maxVel","DEF_MAX_VEL","jumpForce","DEF_JUMP_FORCE","targets","justOff","target","grounded","falling","jump","force","gridder","level","gridPos","setGridPos","moveLeft","moveRight","moveUp","moveDown","addLevel","longRow","getPos","spawn","sym","any","row","syms","commonProps","props","prop","addSprite","addRect","addText","scene","scenes","go","DEF_GRAVITY","regDebugInput","getData","localStorage","setData","clearLog","stepFrame","logMax","reg_comp","firstComp","calculatedComps","propB","UpdateObj","DestroyObj","Disconnect","visitors","oid","Set","changedTouches","identifier","showLog","objCount","keyIsDown","keyIsPressed","keyIsPressedRep","keyIsReleased","mouseIsDown","mouseIsClicked","mouseIsReleased","mouseIsMoved","plugins","global","progress","stack","$jscompDefaultExport","$jscomp$tmp$exports$module$name"]
}
