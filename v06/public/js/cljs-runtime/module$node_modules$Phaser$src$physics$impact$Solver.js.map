{
"version":3,
"file":"module$node_modules$Phaser$src$physics$impact$Solver.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOjH,IAAIC,SAAWH,OAAA,CAAQ,wDAAR,CAAf,CACII,UAAYJ,OAAA,CAAQ,yDAAR,CADhB,CAEIK,UAAYL,OAAA,CAAQ,yDAAR,CA2DhBC,OAAAC,QAAA,CA/CaI,QAAS,CAACC,KAAD,CAAQC,KAAR,CAAeC,KAAf,CACtB,CACI,IAAIC,KAAO,IAEX,IAAIF,KAAAG,SAAJ,GAAuBR,QAAAS,KAAvB,EAAwCH,KAAAE,SAAxC,GAA2DR,QAAAU,MAA3D,CAEIH,IAAA,CAAOF,KAFX,KAIK,IAAIC,KAAAE,SAAJ;AAAuBR,QAAAS,KAAvB,EAAwCJ,KAAAG,SAAxC,GAA2DR,QAAAU,MAA3D,CAEDH,IAAA,CAAOD,KAGPD,MAAAM,KAAAC,EAAJ,CAAmBP,KAAAQ,KAAAD,EAAnB,CAAkCN,KAAAK,KAAAC,EAAlC,EAAkDP,KAAAM,KAAAC,EAAlD,CAAiEN,KAAAK,KAAAC,EAAjE,CAAgFN,KAAAO,KAAAD,EAAhF,EAEQP,KAAAM,KAAAG,EAAJ,CAAmBR,KAAAK,KAAAG,EAAnB,CAEIZ,SAAA,CAAUE,KAAV,CAAiBC,KAAjB,CAAwBC,KAAxB,CAA+BC,IAA/B,CAFJ,CAMIL,SAAA,CAAUE,KAAV,CAAiBE,KAAjB,CAAwBD,KAAxB,CAA+BE,IAA/B,CAMJ,CAHAF,KAAAU,YAAA,CAAkBT,KAAlB,CAAyB,GAAzB,CAGA,CAFAA,KAAAS,YAAA,CAAkBV,KAAlB,CAAyB,GAAzB,CAEA,CAAAD,KAAAY,KAAA,CAAW,SAAX,CAAsBX,KAAtB,CAA6BC,KAA7B,CAAoC,GAApC,CAdJ,EAgBSD,KAAAM,KAAAG,EAhBT,CAgBwBT,KAAAQ,KAAAC,EAhBxB,CAgBuCR,KAAAK,KAAAG,EAhBvC,EAgBuDT,KAAAM,KAAAG,EAhBvD,CAgBsER,KAAAK,KAAAG,EAhBtE,CAgBqFR,KAAAO,KAAAC,EAhBrF,GAkBQT,KAAAM,KAAAC,EAAJ,CAAmBN,KAAAK,KAAAC,EAAnB,CAEIX,SAAA,CAAUG,KAAV,CAAiBC,KAAjB,CAAwBC,KAAxB,CAA+BC,IAA/B,CAFJ,CAMIN,SAAA,CAAUG,KAAV,CAAiBE,KAAjB,CAAwBD,KAAxB,CAA+BE,IAA/B,CAMJ;AAHAF,KAAAU,YAAA,CAAkBT,KAAlB,CAAyB,GAAzB,CAGA,CAFAA,KAAAS,YAAA,CAAkBV,KAAlB,CAAyB,GAAzB,CAEA,CAAAD,KAAAY,KAAA,CAAW,SAAX,CAAsBX,KAAtB,CAA6BC,KAA7B,CAAoC,GAApC,CA9BJ,CAZJ,CAtBiH;",
"sources":["node_modules/Phaser/src/physics/impact/Solver.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$impact$Solver\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar COLLIDES = require('./COLLIDES');\r\nvar SeperateX = require('./SeperateX');\r\nvar SeperateY = require('./SeperateY');\r\n\r\n/**\r\n * Impact Physics Solver\r\n *\r\n * @function Phaser.Physics.Impact.Solver\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Impact.World} world - [description]\r\n * @param {Phaser.Physics.Impact.Body} bodyA - [description]\r\n * @param {Phaser.Physics.Impact.Body} bodyB - [description]\r\n */\r\nvar Solver = function (world, bodyA, bodyB)\r\n{\r\n    var weak = null;\r\n\r\n    if (bodyA.collides === COLLIDES.LITE || bodyB.collides === COLLIDES.FIXED)\r\n    {\r\n        weak = bodyA;\r\n    }\r\n    else if (bodyB.collides === COLLIDES.LITE || bodyA.collides === COLLIDES.FIXED)\r\n    {\r\n        weak = bodyB;\r\n    }\r\n\r\n    if (bodyA.last.x + bodyA.size.x > bodyB.last.x && bodyA.last.x < bodyB.last.x + bodyB.size.x)\r\n    {\r\n        if (bodyA.last.y < bodyB.last.y)\r\n        {\r\n            SeperateY(world, bodyA, bodyB, weak);\r\n        }\r\n        else\r\n        {\r\n            SeperateY(world, bodyB, bodyA, weak);\r\n        }\r\n\r\n        bodyA.collideWith(bodyB, 'y');\r\n        bodyB.collideWith(bodyA, 'y');\r\n\r\n        world.emit('collide', bodyA, bodyB, 'y');\r\n    }\r\n    else if (bodyA.last.y + bodyA.size.y > bodyB.last.y && bodyA.last.y < bodyB.last.y + bodyB.size.y)\r\n    {\r\n        if (bodyA.last.x < bodyB.last.x)\r\n        {\r\n            SeperateX(world, bodyA, bodyB, weak);\r\n        }\r\n        else\r\n        {\r\n            SeperateX(world, bodyB, bodyA, weak);\r\n        }\r\n\r\n        bodyA.collideWith(bodyB, 'x');\r\n        bodyB.collideWith(bodyA, 'x');\r\n\r\n        world.emit('collide', bodyA, bodyB, 'x');\r\n    }\r\n};\r\n\r\nmodule.exports = Solver;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","COLLIDES","SeperateX","SeperateY","Solver","world","bodyA","bodyB","weak","collides","LITE","FIXED","last","x","size","y","collideWith","emit"]
}
