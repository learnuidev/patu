shadow$provide.module$node_modules$$formatjs$ecma402_abstract$NumberFormat$format_to_parts=function(global,require,module,exports){function paritionNumberIntoParts(symbols,numberResult,notation,exponent,numberingSystem,useGrouping,decimalNumberPattern){var result=[],n=numberResult.formattedString;numberResult=numberResult.roundedNumber;if(isNaN(numberResult))return[{type:"nan",value:n}];if(!isFinite(numberResult))return[{type:"infinity",value:n}];var digitReplacementTable=digitMapping[numberingSystem];
digitReplacementTable&&(n=n.replace(/\d/g,function(digit){return digitReplacementTable[+digit]||digit}));var decimalSepIndex=n.indexOf(".");if(0<decimalSepIndex){numberingSystem=n.slice(0,decimalSepIndex);var fraction=n.slice(decimalSepIndex+1)}else numberingSystem=n;if(useGrouping&&("compact"!==notation||1E4<=numberResult)){useGrouping=symbols.group;n=[];var patternGroups=decimalNumberPattern.split(".")[0].split(",");decimalSepIndex=decimalNumberPattern=3;1<patternGroups.length&&(decimalNumberPattern=
patternGroups[patternGroups.length-1].length);2<patternGroups.length&&(decimalSepIndex=patternGroups[patternGroups.length-2].length);patternGroups=numberingSystem.length-decimalNumberPattern;if(0<patternGroups){n.push(numberingSystem.slice(patternGroups,patternGroups+decimalNumberPattern));for(patternGroups-=decimalSepIndex;0<patternGroups;patternGroups-=decimalSepIndex)n.push(numberingSystem.slice(patternGroups,patternGroups+decimalSepIndex));n.push(numberingSystem.slice(0,patternGroups+decimalSepIndex))}else n.push(numberingSystem);
for(;0<n.length;)numberingSystem=n.pop(),result.push({type:"integer",value:numberingSystem}),0<n.length&&result.push({type:"group",value:useGrouping})}else result.push({type:"integer",value:numberingSystem});void 0!==fraction&&result.push({type:"decimal",value:symbols.decimal},{type:"fraction",value:fraction});"scientific"!==notation&&"engineering"!==notation||!isFinite(numberResult)||(result.push({type:"exponentSeparator",value:symbols.exponential}),0>exponent&&(result.push({type:"exponentMinusSign",
value:symbols.minusSign}),exponent=-exponent),symbols=ToRawFixed_1.ToRawFixed(exponent,0,0),result.push({type:"exponentInteger",value:symbols.formattedString}));return result}function getPatternForSign(pattern,sign){0>pattern.indexOf(";")&&(pattern=pattern+";-"+pattern);var _a=pattern.split(";");pattern=_a[0];_a=_a[1];switch(sign){case 0:return pattern;case -1:return _a;default:return 0<=_a.indexOf("-")?_a.replace(/-/g,"+"):"+"+pattern}}function selectPlural(pl,x,rules){return rules[pl.select(x)]||
rules.other}Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$tslib$tslib");var ToRawFixed_1=require("module$node_modules$$formatjs$ecma402_abstract$NumberFormat$ToRawFixed"),digitMapping=global.__importStar(require("module$node_modules$$formatjs$ecma402_abstract$NumberFormat$digit_mapping_json"));require=/[\$\+<->\^`\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20BF\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B98-\u2BFF\u2CE5-\u2CEA\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFB\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uFB29\uFBB2-\uFBC1\uFDFC\uFDFD\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9B\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDE8\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD10-\uDD6C\uDD70-\uDDAC\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED5\uDEE0-\uDEEC\uDEF0-\uDEFA\uDF00-\uDF73\uDF80-\uDFD8\uDFE0-\uDFEB]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDD00-\uDD0B\uDD0D-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDE53\uDE60-\uDE6D\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95]/;
var CARET_S_UNICODE_REGEX=new RegExp("^"+require.source),S_DOLLAR_UNICODE_REGEX=new RegExp(require.source+"$"),CLDR_NUMBER_PATTERN=/[#0](?:[\.,][#0]+)*/g;exports.default=function(numberResult,data,pl,options){var sign=numberResult.sign,exponent=numberResult.exponent,magnitude=numberResult.magnitude,notation=options.notation,style=options.style,numberingSystem=options.numberingSystem,defaultNumberingSystem=data.numbers.nu[0],compactNumberPattern=null;if("compact"===notation&&magnitude)a:{var compactDisplay=
options.compactDisplay,_a;magnitude=numberResult.roundedNumber;compactNumberPattern=numberResult.sign;var magnitudeKey=String(Math.pow(10,numberResult.magnitude)),defaultNumberingSystem$jscomp$0=data.numbers.nu[0];if("currency"===style&&"name"!==options.currencyDisplay){var byNumberingSystem=data.numbers.currency;compactDisplay=null===(_a=(byNumberingSystem[numberingSystem]||byNumberingSystem[defaultNumberingSystem$jscomp$0]).short)||void 0===_a?void 0:_a[magnitudeKey];if(!compactDisplay){compactNumberPattern=
null;break a}_a=selectPlural(pl,magnitude,compactDisplay)}else{byNumberingSystem=data.numbers.decimal;_a=(byNumberingSystem[numberingSystem]||byNumberingSystem[defaultNumberingSystem$jscomp$0])[compactDisplay][magnitudeKey];if(!_a){compactNumberPattern=null;break a}_a=selectPlural(pl,magnitude,_a)}compactNumberPattern="0"===_a?null:_a=getPatternForSign(_a,compactNumberPattern).replace(/([^\s;\-\+\d¤]+)/g,"{c:$1}").replace(/0+/,"0")}var nonNameCurrencyPart;if("currency"===style&&"name"!==options.currencyDisplay)if(nonNameCurrencyPart=
data.currencies[options.currency])switch(options.currencyDisplay){case "code":nonNameCurrencyPart=options.currency;break;case "symbol":nonNameCurrencyPart=nonNameCurrencyPart.symbol;break;default:nonNameCurrencyPart=nonNameCurrencyPart.narrow}else nonNameCurrencyPart=options.currency;compactNumberPattern?sign=compactNumberPattern:"decimal"===style||"unit"===style||"currency"===style&&"name"===options.currencyDisplay?sign=getPatternForSign((data.numbers.decimal[numberingSystem]||data.numbers.decimal[defaultNumberingSystem]).standard,
sign):"currency"===style?(_a=data.numbers.currency[numberingSystem]||data.numbers.currency[defaultNumberingSystem],sign=getPatternForSign(_a[options.currencySign],sign)):sign=getPatternForSign(data.numbers.percent[numberingSystem]||data.numbers.percent[defaultNumberingSystem],sign);magnitude=CLDR_NUMBER_PATTERN.exec(sign)[0];sign=sign.replace(CLDR_NUMBER_PATTERN,"{0}").replace(/'(.)'/g,"$1");"currency"===style&&"name"!==options.currencyDisplay&&(_a=data.numbers.currency[numberingSystem]||data.numbers.currency[defaultNumberingSystem],
(compactDisplay=_a.currencySpacing.afterInsertBetween)&&!S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)&&(sign=sign.replace("¤{0}","¤"+compactDisplay+"{0}")),(_a=_a.currencySpacing.beforeInsertBetween)&&!CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)&&(sign=sign.replace("{0}¤","{0}"+_a+"¤")));compactDisplay=sign.split(/({c:[^}]+}|\{0\}|[¤%\-\+])/g);sign=[];magnitudeKey=data.numbers.symbols[numberingSystem]||data.numbers.symbols[defaultNumberingSystem];for(defaultNumberingSystem$jscomp$0=0;defaultNumberingSystem$jscomp$0<
compactDisplay.length;defaultNumberingSystem$jscomp$0++)if(_a=compactDisplay[defaultNumberingSystem$jscomp$0])switch(_a){case "{0}":sign.push.apply(sign,paritionNumberIntoParts(magnitudeKey,numberResult,notation,exponent,numberingSystem,!compactNumberPattern&&options.useGrouping,magnitude));break;case "-":sign.push({type:"minusSign",value:magnitudeKey.minusSign});break;case "+":sign.push({type:"plusSign",value:magnitudeKey.plusSign});break;case "%":sign.push({type:"percentSign",value:magnitudeKey.percentSign});
break;case "¤":sign.push({type:"currency",value:nonNameCurrencyPart});break;default:/^\{c:/.test(_a)?sign.push({type:"compact",value:_a.substring(3,_a.length-1)}):sign.push({type:"literal",value:_a})}switch(style){case "currency":if("name"===options.currencyDisplay){notation=(data.numbers.currency[numberingSystem]||data.numbers.currency[defaultNumberingSystem]).unitPattern;data=(data=data.currencies[options.currency])?selectPlural(pl,numberResult.roundedNumber*Math.pow(10,exponent),data.displayName):
options.currency;pl=[];numberResult=0;for(exponent=notation.split(/(\{[01]\})/g);numberResult<exponent.length;numberResult++)switch(_a=exponent[numberResult],_a){case "{0}":pl.push.apply(pl,sign);break;case "{1}":pl.push({type:"currency",value:data});break;default:_a&&pl.push({type:"literal",value:_a})}return pl}return sign;case "unit":notation=options.unit;options=options.unitDisplay;data.units.simple[notation]?notation=selectPlural(pl,numberResult.roundedNumber*Math.pow(10,exponent),data.units.simple[notation][options]):
(style=notation.split("-per-"),notation=style[1],numberResult=selectPlural(pl,numberResult.roundedNumber*Math.pow(10,exponent),data.units.simple[style[0]][options]),(exponent=data.units.simple[notation].perUnit[options])?notation=exponent.replace("{0}",numberResult):(exponent=data.units.compound.per[options],pl=selectPlural(pl,1,data.units.simple[notation][options]),notation=notation=exponent.replace("{0}",numberResult).replace("{1}",pl.replace("{0}",""))));pl=[];data=0;for(numberResult=notation.split(/(\s*\{0\}\s*)/);data<
numberResult.length;data++)_a=numberResult[data],(exponent=/^(\s*)\{0\}(\s*)$/.exec(_a))?(exponent[1]&&pl.push({type:"literal",value:exponent[1]}),pl.push.apply(pl,sign),exponent[2]&&pl.push({type:"literal",value:exponent[2]})):_a&&pl.push({type:"unit",value:_a});return pl;default:return sign}}}
//# sourceMappingURL=module$node_modules$$formatjs$ecma402_abstract$NumberFormat$format_to_parts.js.map
