shadow$provide.module$node_modules$Phaser$src$tilemaps$dynamiclayer$DynamicTilemapLayerCanvasRenderer=function(global,require,module,exports){module.exports=function(renderer,src,interpolationPercentage,camera,parentMatrix){src.cull(camera);interpolationPercentage=src.culledTiles;var tileCount=interpolationPercentage.length;if(0!==tileCount){var camMatrix=renderer._tempMatrix1,layerMatrix=renderer._tempMatrix2,calcMatrix=renderer._tempMatrix3;layerMatrix.applyITRS(src.x,src.y,src.rotation,src.scaleX,
src.scaleY);camMatrix.copyFrom(camera.matrix);parentMatrix?(camMatrix.multiplyWithOffset(parentMatrix,-camera.scrollX*src.scrollFactorX,-camera.scrollY*src.scrollFactorY),layerMatrix.e=src.x,layerMatrix.f=src.y):(layerMatrix.e-=camera.scrollX*src.scrollFactorX,layerMatrix.f-=camera.scrollY*src.scrollFactorY);camMatrix.multiply(layerMatrix,calcMatrix);renderer=renderer.currentContext;parentMatrix=src.gidMap;renderer.save();calcMatrix.copyToContext(renderer);src=camera.alpha*src.alpha;for(camera=0;camera<
tileCount;camera++)if(calcMatrix=interpolationPercentage[camera],layerMatrix=parentMatrix[calcMatrix.index])if(camMatrix=layerMatrix.image.getSourceImage(),layerMatrix=layerMatrix.getTileTextureCoordinates(calcMatrix.index)){var halfWidth=calcMatrix.width/2,halfHeight=calcMatrix.height/2;renderer.save();renderer.translate(calcMatrix.pixelX+halfWidth,calcMatrix.pixelY+halfHeight);0!==calcMatrix.rotation&&renderer.rotate(calcMatrix.rotation);(calcMatrix.flipX||calcMatrix.flipY)&&renderer.scale(calcMatrix.flipX?
-1:1,calcMatrix.flipY?-1:1);renderer.globalAlpha=src*calcMatrix.alpha;renderer.drawImage(camMatrix,layerMatrix.x,layerMatrix.y,calcMatrix.width,calcMatrix.height,-halfWidth,-halfHeight,calcMatrix.width,calcMatrix.height);renderer.restore()}renderer.restore()}}}
//# sourceMappingURL=module$node_modules$Phaser$src$tilemaps$dynamiclayer$DynamicTilemapLayerCanvasRenderer.js.map
