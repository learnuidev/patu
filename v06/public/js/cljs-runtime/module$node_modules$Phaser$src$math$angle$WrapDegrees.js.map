{
"version":3,
"file":"module$node_modules$Phaser$src$math$angle$WrapDegrees.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlH,IAAIC,KAAOH,OAAA,CAAQ,0CAAR,CAmBXC,OAAAC,QAAA,CALkBE,QAAS,CAACC,KAAD,CAC3B,CACI,MAAOF,KAAA,CAAKE,KAAL,CAAY,IAAZ,CAAkB,GAAlB,CADX,CAtBkH;",
"sources":["node_modules/Phaser/src/math/angle/WrapDegrees.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$angle$WrapDegrees\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Wrap = require('../Wrap');\r\n\r\n/**\r\n * Wrap an angle in degrees.\r\n *\r\n * Wraps the angle to a value in the range of -180 to 180.\r\n *\r\n * @function Phaser.Math.Angle.WrapDegrees\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in degrees.\r\n *\r\n * @return {number} The wrapped angle, in degrees.\r\n */\r\nvar WrapDegrees = function (angle)\r\n{\r\n    return Wrap(angle, -180, 180);\r\n};\r\n\r\nmodule.exports = WrapDegrees;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Wrap","WrapDegrees","angle"]
}
