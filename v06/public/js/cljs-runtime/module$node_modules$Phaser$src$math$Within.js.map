{
"version":3,
"file":"module$node_modules$Phaser$src$math$Within.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwBvGD,MAAAC,QAAA,CALaC,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAOC,SAAP,CACtB,CACI,MAAQC,KAAAC,IAAA,CAASJ,CAAT,CAAaC,CAAb,CAAR,EAA2BC,SAD/B,CApBuG;",
"sources":["node_modules/Phaser/src/math/Within.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$Within\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Checks if the two values are within the given `tolerance` of each other.\r\n *\r\n * @function Phaser.Math.Within\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value to use in the calculation.\r\n * @param {number} b - The second value to use in the calculation.\r\n * @param {number} tolerance - The tolerance. Anything equal to or less than this value is considered as being within range.\r\n *\r\n * @return {boolean} Returns `true` if `a` is less than or equal to the tolerance of `b`.\r\n */\r\nvar Within = function (a, b, tolerance)\r\n{\r\n    return (Math.abs(a - b) <= tolerance);\r\n};\r\n\r\nmodule.exports = Within;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Within","a","b","tolerance","Math","abs"]
}
