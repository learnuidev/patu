{
"version":3,
"file":"module$node_modules$$formatjs$intl$src$displayName.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE/GC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,kBAAA,CAA4B,IAAK,EACjC,KAAIC,QAAUP,OAAA,CAAQ,8CAAR,CAAd,CACIQ,qBAAuBR,OAAA,CAAQ,8CAAR,CAD3B,CAEIS,QAAUT,OAAA,CAAQ,8CAAR,CAFd,CAGIU,qBAAuB,CACvB,eADuB,CAEvB,OAFuB,CAGvB,MAHuB,CAIvB,UAJuB,CAoB3BR,QAAAI,kBAAA,CAdAA,QAA0B,CAACK,EAAD;AAAKC,eAAL,CAAsBP,KAAtB,CAA6BQ,OAA7B,CAAsC,CAAA,IACxDC,OAASH,EAAAG,OAAWC,GAAAA,CAAUJ,EAAAI,QACfC,KAAAC,aACnB,EACIF,EAAA,CAAQ,IAAIP,oBAAAU,YAAJ,CAAqC,mHAArC,CAA4J,kBAA5J,CAAR,CAEAC,QAAAA,CAAkBZ,OAAAa,YAAA,CAAoBP,OAApB,CAA6BH,oBAA7B,CACtB,IAAI,CACA,MAAOE,gBAAA,CAAgBE,MAAhB,CAAwBK,OAAxB,CAAAE,GAAA,CAA4ChB,KAA5C,CADP,CAGJ,MAAOiB,CAAP,CAAU,CACNP,EAAA,CAAQ,IAAIN,OAAAc,UAAJ,CAAsB,cAAtB,CAAyD,gCAAzD,CAA2FD,CAA3F,CAAR,CADM,CAVkD,CAb+C;",
"sources":["node_modules/@formatjs/intl/src/displayName.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$intl$src$displayName\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatDisplayName = void 0;\nvar utils_1 = require(\"./utils\");\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar error_1 = require(\"./error\");\nvar DISPLAY_NAMES_OPTONS = [\n    'localeMatcher',\n    'style',\n    'type',\n    'fallback',\n];\nfunction formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new intl_messageformat_1.FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = utils_1.filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new error_1.IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting display name.', e));\n    }\n}\nexports.formatDisplayName = formatDisplayName;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","formatDisplayName","utils_1","intl_messageformat_1","error_1","DISPLAY_NAMES_OPTONS","_a","getDisplayNames","options","locale","onError","Intl","DisplayNames","FormatError","filteredOptions","filterProps","of","e","IntlError"]
}
