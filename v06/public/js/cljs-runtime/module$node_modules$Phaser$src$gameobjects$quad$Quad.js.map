{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$quad$Quad.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/Phaser/src/gameobjects/quad/Quad.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$quad$Quad\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Mesh = require('../mesh/Mesh');\r\n\r\n/**\r\n * @classdesc\r\n * A Quad Game Object.\r\n *\r\n * A Quad is a Mesh Game Object pre-configured with two triangles arranged into a rectangle, with a single\r\n * texture spread across them.\r\n *\r\n * You can manipulate the corner points of the quad via the getters and setters such as `topLeftX`, and also\r\n * change their alpha and color values. The quad itself can be moved by adjusting the `x` and `y` properties.\r\n *\r\n * @class Quad\r\n * @extends Phaser.GameObjects.Mesh\r\n * @memberOf Phaser.GameObjects\r\n * @constructor\r\n * @webglOnly\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Quad belongs.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\r\nvar Quad = new Class({\r\n\r\n    Extends: Mesh,\r\n\r\n    initialize:\r\n\r\n    function Quad (scene, x, y, texture, frame)\r\n    {\r\n        //  0----3\r\n        //  |\\  B|\r\n        //  | \\  |\r\n        //  |  \\ |\r\n        //  | A \\|\r\n        //  |    \\\r\n        //  1----2\r\n\r\n        var vertices = [\r\n            0, 0, // tl\r\n            0, 0, // bl\r\n            0, 0, // br\r\n            0, 0, // tl\r\n            0, 0, // br\r\n            0, 0 // tr\r\n        ];\r\n\r\n        var uv = [\r\n            0, 0, // tl\r\n            0, 1, // bl\r\n            1, 1, // br\r\n            0, 0, // tl\r\n            1, 1, // br\r\n            1, 0 // tr\r\n        ];\r\n\r\n        var colors = [\r\n            0xffffff, // tl\r\n            0xffffff, // bl\r\n            0xffffff, // br\r\n            0xffffff, // tl\r\n            0xffffff, // br\r\n            0xffffff // tr\r\n        ];\r\n\r\n        var alphas = [\r\n            1, // tl\r\n            1, // bl\r\n            1, // br\r\n            1, // tl\r\n            1, // br\r\n            1 // tr\r\n        ];\r\n\r\n        Mesh.call(this, scene, x, y, vertices, uv, colors, alphas, texture, frame);\r\n\r\n        this.resetPosition();\r\n    },\r\n\r\n    /**\r\n     * Sets the frame this Game Object will use to render with.\r\n     *\r\n     * The Frame has to belong to the current Texture being used.\r\n     *\r\n     * It can be either a string or an index.\r\n     *\r\n     * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n     * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#setFrame\r\n     * @since 3.11.0\r\n     *\r\n     * @param {(string|integer)} frame - The name or index of the frame within the Texture.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFrame: function (frame)\r\n    {\r\n        this.frame = this.texture.get(frame);\r\n\r\n        if (!this.frame.cutWidth || !this.frame.cutHeight)\r\n        {\r\n            this.renderFlags &= ~8;\r\n        }\r\n        else\r\n        {\r\n            this.renderFlags |= 8;\r\n        }\r\n\r\n        frame = this.frame;\r\n\r\n        //   TL\r\n        this.uv[0] = frame.u0;\r\n        this.uv[1] = frame.v0;\r\n\r\n        //   BL\r\n        this.uv[2] = frame.u0;\r\n        this.uv[3] = frame.v1;\r\n\r\n        //   BR\r\n        this.uv[4] = frame.u1;\r\n        this.uv[5] = frame.v1;\r\n\r\n        //   TL\r\n        this.uv[6] = frame.u0;\r\n        this.uv[7] = frame.v0;\r\n\r\n        //   BR\r\n        this.uv[8] = frame.u1;\r\n        this.uv[9] = frame.v1;\r\n\r\n        //   TR\r\n        this.uv[10] = frame.u1;\r\n        this.uv[11] = frame.v0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * The top-left x vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topLeftX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topLeftX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + this.vertices[0];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[0] = value - this.x;\r\n            this.vertices[6] = value - this.x;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-left y vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topLeftY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topLeftY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + this.vertices[1];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[1] = value - this.y;\r\n            this.vertices[7] = value - this.y;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-right x vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topRightX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topRightX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + this.vertices[10];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[10] = value - this.x;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-right y vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topRightY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topRightY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + this.vertices[11];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[11] = value - this.y;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-left x vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomLeftX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomLeftX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + this.vertices[2];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[2] = value - this.x;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-left y vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomLeftY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomLeftY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + this.vertices[3];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[3] = value - this.y;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-right x vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomRightX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomRightX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + this.vertices[4];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[4] = value - this.x;\r\n            this.vertices[8] = value - this.x;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-right y vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomRightY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomRightY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + this.vertices[5];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[5] = value - this.y;\r\n            this.vertices[9] = value - this.y;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-left alpha value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topLeftAlpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topLeftAlpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.alphas[0];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.alphas[0] = value;\r\n            this.alphas[3] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-right alpha value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topRightAlpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topRightAlpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.alphas[5];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.alphas[5] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-left alpha value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomLeftAlpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomLeftAlpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.alphas[1];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.alphas[1] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-right alpha value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomRightAlpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomRightAlpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.alphas[2];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.alphas[2] = value;\r\n            this.alphas[4] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-left color value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topLeftColor\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topLeftColor: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.colors[0];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.colors[0] = value;\r\n            this.colors[3] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-right color value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topRightColor\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topRightColor: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.colors[5];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.colors[5] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-left color value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomLeftColor\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomLeftColor: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.colors[1];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.colors[1] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-right color value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomRightColor\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomRightColor: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.colors[2];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.colors[2] = value;\r\n            this.colors[4] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the top-left vertex position of this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#setTopLeft\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal coordinate of the vertex.\r\n     * @param {number} y - The vertical coordinate of the vertex.\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    setTopLeft: function (x, y)\r\n    {\r\n        this.topLeftX = x;\r\n        this.topLeftY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the top-right vertex position of this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#setTopRight\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal coordinate of the vertex.\r\n     * @param {number} y - The vertical coordinate of the vertex.\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    setTopRight: function (x, y)\r\n    {\r\n        this.topRightX = x;\r\n        this.topRightY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the bottom-left vertex position of this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#setBottomLeft\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal coordinate of the vertex.\r\n     * @param {number} y - The vertical coordinate of the vertex.\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    setBottomLeft: function (x, y)\r\n    {\r\n        this.bottomLeftX = x;\r\n        this.bottomLeftY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the bottom-right vertex position of this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#setBottomRight\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal coordinate of the vertex.\r\n     * @param {number} y - The vertical coordinate of the vertex.\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    setBottomRight: function (x, y)\r\n    {\r\n        this.bottomRightX = x;\r\n        this.bottomRightY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the positions of the four corner vertices of this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#resetPosition\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    resetPosition: function ()\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var halfWidth = Math.floor(this.width / 2);\r\n        var halfHeight = Math.floor(this.height / 2);\r\n\r\n        this.setTopLeft(x - halfWidth, y - halfHeight);\r\n        this.setTopRight(x + halfWidth, y - halfHeight);\r\n        this.setBottomLeft(x - halfWidth, y + halfHeight);\r\n        this.setBottomRight(x + halfWidth, y + halfHeight);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the alpha values used by this Quad back to 1.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#resetAlpha\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    resetAlpha: function ()\r\n    {\r\n        var alphas = this.alphas;\r\n\r\n        alphas[0] = 1;\r\n        alphas[1] = 1;\r\n        alphas[2] = 1;\r\n        alphas[3] = 1;\r\n        alphas[4] = 1;\r\n        alphas[5] = 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the color values used by this Quad back to 0xffffff.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#resetColors\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    resetColors: function ()\r\n    {\r\n        var colors = this.colors;\r\n\r\n        colors[0] = 0xffffff;\r\n        colors[1] = 0xffffff;\r\n        colors[2] = 0xffffff;\r\n        colors[3] = 0xffffff;\r\n        colors[4] = 0xffffff;\r\n        colors[5] = 0xffffff;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the position, alpha and color values used by this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#reset\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    reset: function ()\r\n    {\r\n        this.resetPosition();\r\n\r\n        this.resetAlpha();\r\n\r\n        return this.resetColors();\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Quad;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","Mesh","Quad","Extends","initialize","scene","x","y","texture","frame","call","vertices","uv","colors","alphas","resetPosition","setFrame","get","renderFlags","cutWidth","cutHeight","u0","v0","v1","u1","topLeftX","set","value","topLeftY","topRightX","topRightY","bottomLeftX","bottomLeftY","bottomRightX","bottomRightY","topLeftAlpha","topRightAlpha","bottomLeftAlpha","bottomRightAlpha","topLeftColor","topRightColor","bottomLeftColor","bottomRightColor","setTopLeft","setTopRight","setBottomLeft","setBottomRight","halfWidth","Math","floor","width","halfHeight","height","resetAlpha","resetColors","reset"]
}
