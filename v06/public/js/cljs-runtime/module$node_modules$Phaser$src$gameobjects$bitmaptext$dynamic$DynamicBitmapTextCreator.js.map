{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$bitmaptext$dynamic$DynamicBitmapTextCreator.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uFAAA,CAA2G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOnJ,IAAIC,WAAaH,OAAA,CAAQ,iFAAR,CAAjB,CACII,gBAAkBJ,OAAA,CAAQ,4DAAR,CAClBK,OAAAA,CAAoBL,OAAA,CAAQ,8DAAR,CACxB,KAAIM,iBAAmBN,OAAA,CAAQ,8DAAR,CAwBvBK;MAAAE,SAAA,CAA2B,mBAA3B,CAAgD,QAAS,CAACC,MAAD,CAASC,UAAT,CACzD,CACmBC,IAAAA,EAAf,GAAIF,MAAJ,GAA4BA,MAA5B,CAAqC,EAArC,CAEA,KAAIG,KAAOL,gBAAA,CAAiBE,MAAjB,CAAyB,MAAzB,CAAiC,EAAjC,CAAX,CACII,KAAON,gBAAA,CAAiBE,MAAjB,CAAyB,MAAzB,CAAiC,EAAjC,CADX,CAEIK,KAAOP,gBAAA,CAAiBE,MAAjB,CAAyB,MAAzB,CAAiC,CAAA,CAAjC,CAEPM,KAAAA,CAAa,IAAIX,UAAJ,CAAe,IAAAY,MAAf,CAA2B,CAA3B,CAA8B,CAA9B,CAAiCJ,IAAjC,CAAuCC,IAAvC,CAA6CC,IAA7C,CAEEH,KAAAA,EAAnB,GAAID,UAAJ,GAEID,MAAAQ,IAFJ,CAEiBP,UAFjB,CAKAL,gBAAA,CAAgB,IAAAW,MAAhB,CAA4BD,IAA5B,CAAwCN,MAAxC,CAEA,OAAOM,KAhBX,CADA,CAlCmJ;",
"sources":["node_modules/Phaser/src/gameobjects/bitmaptext/dynamic/DynamicBitmapTextCreator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$bitmaptext$dynamic$DynamicBitmapTextCreator\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar BitmapText = require('./DynamicBitmapText');\r\nvar BuildGameObject = require('../../BuildGameObject');\r\nvar GameObjectCreator = require('../../GameObjectCreator');\r\nvar GetAdvancedValue = require('../../../utils/object/GetAdvancedValue');\r\n\r\n/**\r\n * @typedef {object} BitmapTextConfig\r\n * @extends GameObjectConfig\r\n *\r\n * @property {string} [font=''] - The key of the font to use from the BitmapFont cache.\r\n * @property {string} [text=''] - The string, or array of strings, to be set as the content of this Bitmap Text.\r\n * @property {(number|false)} [size=false] - The font size to set.\r\n */\r\n\r\n/**\r\n * Creates a new Dynamic Bitmap Text Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Dynamic Bitmap Text Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#dynamicBitmapText\r\n * @since 3.0.0\r\n *\u00b2\r\n * @param {BitmapTextConfig} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.DynamicBitmapText} The Game Object that was created.\r\n */\r\nGameObjectCreator.register('dynamicBitmapText', function (config, addToScene)\r\n{\r\n    if (config === undefined) { config = {}; }\r\n\r\n    var font = GetAdvancedValue(config, 'font', '');\r\n    var text = GetAdvancedValue(config, 'text', '');\r\n    var size = GetAdvancedValue(config, 'size', false);\r\n\r\n    var bitmapText = new BitmapText(this.scene, 0, 0, font, text, size);\r\n\r\n    if (addToScene !== undefined)\r\n    {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    BuildGameObject(this.scene, bitmapText, config);\r\n\r\n    return bitmapText;\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectCreator context.\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","BitmapText","BuildGameObject","GameObjectCreator","GetAdvancedValue","register","config","addToScene","undefined","font","text","size","bitmapText","scene","add"]
}
