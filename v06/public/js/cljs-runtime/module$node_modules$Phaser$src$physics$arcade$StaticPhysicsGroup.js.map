{
"version":3,
"file":"module$node_modules$Phaser$src$physics$arcade$StaticPhysicsGroup.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,iEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO7H,IAAIC,aAAeH,OAAA,CAAQ,4DAAR,CACfI,OAAAA,CAAQJ,OAAA,CAAQ,4CAAR,CACZ,KAAIK,MAAQL,OAAA,CAAQ,qDAAR,CAAZ,CACIM,MAAQN,OAAA,CAAQ,wDAAR,CADZ,CAEIO,cAAgBP,OAAA,CAAQ,2DAAR,CAqBhBQ,QAAAA;AAAqB,IAAIJ,MAAJ,CAAU,CAE/BK,QAASH,KAFsB,CAI/BI,WAEAF,QAA4B,CAACG,KAAD,CAAQC,KAAR,CAAeC,QAAf,CAAyBC,MAAzB,CAC5B,CACSD,QAAL,EAAkBC,MAAlB,CASSP,aAAA,CAAcM,QAAd,CAAJ,EAGDC,MAMA,CANSD,QAMT,CALAA,QAKA,CALW,IAKX,CAHAC,MAAAC,eAGA,CAHwB,IAAAC,sBAGxB,CAFAF,MAAAG,eAEA,CAFwB,IAAAC,sBAExB,CADAJ,MAAAK,uBACA,CADgC,IAAAC,8BAChC,CAAAN,MAAAO,UAAA,CAAmBlB,YATlB,EAWImB,KAAAC,QAAA,CAAcV,QAAd,CAXJ,EAW+BN,aAAA,CAAcM,QAAA,CAAS,CAAT,CAAd,CAX/B,GAcDC,MAGA,CAHSD,QAGT,CAFAA,QAEA,CAFW,IAEX,CAAAC,MAAAU,QAAA,CAAe,QAAS,CAACC,YAAD,CACxB,CACIA,YAAAV,eAAA,CAA8B,IAAAC,sBAC9BS;YAAAR,eAAA,CAA8B,IAAAC,sBAC9BO,aAAAN,uBAAA,CAAsC,IAAAC,8BACtCK,aAAAJ,UAAA,CAAyBlB,YAJ7B,CADA,CAjBC,CATL,CAEIW,MAFJ,CAEa,CACLC,eAAgB,IAAAC,sBADX,CAELC,eAAgB,IAAAC,sBAFX,CAGLC,uBAAwB,IAAAC,8BAHnB,CAILC,UAAWlB,YAJN,CAwCb,KAAAQ,MAAA,CAAaA,KAUb,KAAAe,YAAA,CAAmBrB,KAAAsB,YAEnBrB,MAAAsB,KAAA,CAAW,IAAX,CAAiBhB,KAAjB,CAAwBC,QAAxB,CAAkCC,MAAlC,CAvDJ,CAP+B,CA2E/BE,sBAAuBA,QAAS,CAACa,KAAD,CAChC,CACSA,KAAAC,KAAL,EAEI,IAAAnB,MAAAoB,WAAA,CAAsBF,KAAtB;AAA6BxB,KAAAsB,YAA7B,CAHR,CA5E+B,CA6F/BT,sBAAuBA,QAAS,CAACW,KAAD,CAChC,CACQA,KAAAC,KAAJ,EAEI,IAAAnB,MAAAqB,YAAA,CAAuBH,KAAvB,CAHR,CA9F+B,CA+G/BT,8BAA+BA,QAAS,EACxC,CACI,IAAAa,QAAA,EADJ,CAhH+B,CA+H/BA,QAASA,QAAS,EAClB,CAGI,IAFA,IAAIpB,SAAW,IAAAA,SAAAqB,QAAf,CAESC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBtB,QAAAuB,OAApB,CAAqCD,CAAA,EAArC,CAEItB,QAAA,CAASsB,CAAT,CAAAL,KAAAO,MAAA,EAGJ,OAAO,KARX,CAhI+B,CAAV,CA6IzBpC,OAAAC,QAAA,CAAiBM,OA7K4G;",
"sources":["node_modules/Phaser/src/physics/arcade/StaticPhysicsGroup.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$arcade$StaticPhysicsGroup\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar ArcadeSprite = require('./ArcadeSprite');\r\nvar Class = require('../../utils/Class');\r\nvar CONST = require('./const');\r\nvar Group = require('../../gameobjects/group/Group');\r\nvar IsPlainObject = require('../../utils/object/IsPlainObject');\r\n\r\n/**\r\n * @classdesc\r\n * An Arcade Physics Static Group object.\r\n *\r\n * All Game Objects created by this Group will automatically be given static Arcade Physics bodies.\r\n *\r\n * Its dynamic counterpart is {@link Phaser.Physics.Arcade.Group}.\r\n *\r\n * @class StaticGroup\r\n * @extends Phaser.GameObjects.Group\r\n * @memberOf Phaser.Physics.Arcade\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.World} world - The physics simulation.\r\n * @param {Phaser.Scene} scene - The scene this group belongs to.\r\n * @param {(Phaser.GameObjects.GameObject[]|GroupConfig|GroupCreateConfig)} [children] - Game Objects to add to this group; or the `config` argument.\r\n * @param {GroupConfig|GroupCreateConfig} [config] - Settings for this group.\r\n */\r\nvar StaticPhysicsGroup = new Class({\r\n\r\n    Extends: Group,\r\n\r\n    initialize:\r\n\r\n    function StaticPhysicsGroup (world, scene, children, config)\r\n    {\r\n        if (!children && !config)\r\n        {\r\n            config = {\r\n                createCallback: this.createCallbackHandler,\r\n                removeCallback: this.removeCallbackHandler,\r\n                createMultipleCallback: this.createMultipleCallbackHandler,\r\n                classType: ArcadeSprite\r\n            };\r\n        }\r\n        else if (IsPlainObject(children))\r\n        {\r\n            //  children is a plain object, so swizzle them:\r\n            config = children;\r\n            children = null;\r\n\r\n            config.createCallback = this.createCallbackHandler;\r\n            config.removeCallback = this.removeCallbackHandler;\r\n            config.createMultipleCallback = this.createMultipleCallbackHandler;\r\n            config.classType = ArcadeSprite;\r\n        }\r\n        else if (Array.isArray(children) && IsPlainObject(children[0]))\r\n        {\r\n            //  children is an array of plain objects\r\n            config = children;\r\n            children = null;\r\n\r\n            config.forEach(function (singleConfig)\r\n            {\r\n                singleConfig.createCallback = this.createCallbackHandler;\r\n                singleConfig.removeCallback = this.removeCallbackHandler;\r\n                singleConfig.createMultipleCallback = this.createMultipleCallbackHandler;\r\n                singleConfig.classType = ArcadeSprite;\r\n            });\r\n        }\r\n\r\n        /**\r\n         * The physics simulation.\r\n         *\r\n         * @name Phaser.Physics.Arcade.StaticGroup#world\r\n         * @type {Phaser.Physics.Arcade.World}\r\n         * @since 3.0.0\r\n         */\r\n        this.world = world;\r\n\r\n        /**\r\n         * The scene this group belongs to.\r\n         *\r\n         * @name Phaser.Physics.Arcade.StaticGroup#physicsType\r\n         * @type {integer}\r\n         * @default STATIC_BODY\r\n         * @since 3.0.0\r\n         */\r\n        this.physicsType = CONST.STATIC_BODY;\r\n\r\n        Group.call(this, scene, children, config);\r\n    },\r\n\r\n    /**\r\n     * Adds a static physics body to the new group member (if it lacks one) and adds it to the simulation.\r\n     *\r\n     * @method Phaser.Physics.Arcade.StaticGroup#createCallbackHandler\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject} child - The new group member.\r\n     *\r\n     * @see Phaser.Physics.Arcade.World#enableBody\r\n     */\r\n    createCallbackHandler: function (child)\r\n    {\r\n        if (!child.body)\r\n        {\r\n            this.world.enableBody(child, CONST.STATIC_BODY);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Disables the group member's physics body, removing it from the simulation.\r\n     *\r\n     * @method Phaser.Physics.Arcade.StaticGroup#removeCallbackHandler\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject} child - The group member being removed.\r\n     *\r\n     * @see Phaser.Physics.Arcade.World#disableBody\r\n     */\r\n    removeCallbackHandler: function (child)\r\n    {\r\n        if (child.body)\r\n        {\r\n            this.world.disableBody(child);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Refreshes the group.\r\n     *\r\n     * @method Phaser.Physics.Arcade.StaticGroup#createMultipleCallbackHandler\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject[]} entries - The newly created group members.\r\n     *\r\n     * @see Phaser.Physics.Arcade.StaticGroup#refresh\r\n     */\r\n    createMultipleCallbackHandler: function ()\r\n    {\r\n        this.refresh();\r\n    },\r\n\r\n    /**\r\n     * Resets each Body to the position of its parent Game Object.\r\n     * Body sizes aren't changed (use {@link Phaser.Physics.Arcade.Components.Enable#refreshBody} for that).\r\n     *\r\n     * @method Phaser.Physics.Arcade.StaticGroup#refresh\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Physics.Arcade.StaticGroup} This group.\r\n     *\r\n     * @see Phaser.Physics.Arcade.StaticBody#reset\r\n     */\r\n    refresh: function ()\r\n    {\r\n        var children = this.children.entries;\r\n\r\n        for (var i = 0; i < children.length; i++)\r\n        {\r\n            children[i].body.reset();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = StaticPhysicsGroup;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","ArcadeSprite","Class","CONST","Group","IsPlainObject","StaticPhysicsGroup","Extends","initialize","world","scene","children","config","createCallback","createCallbackHandler","removeCallback","removeCallbackHandler","createMultipleCallback","createMultipleCallbackHandler","classType","Array","isArray","forEach","singleConfig","physicsType","STATIC_BODY","call","child","body","enableBody","disableBody","refresh","entries","i","length","reset"]
}
