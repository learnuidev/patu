shadow$provide.module$node_modules$Phaser$src$loader$filetypes$PackFile=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var CONST=require("module$node_modules$Phaser$src$loader$const");exports=require("module$node_modules$Phaser$src$loader$FileTypesManager");var JSONFile=require("module$node_modules$Phaser$src$loader$filetypes$JSONFile"),PackFile=new global({Extends:JSONFile,initialize:function(loader,key,url,xhrSettings,dataKey){JSONFile.call(this,
loader,key,url,xhrSettings,dataKey);this.type="packfile"},onProcess:function(){this.state!==CONST.FILE_POPULATED&&(this.state=CONST.FILE_PROCESSING,this.data=JSON.parse(this.xhrLoader.responseText));this.loader.addPack(this.data,this.config);this.onProcessComplete()}});exports.register("pack",function(key,url,packKey,xhrSettings){if(Array.isArray(key))for(url=0;url<key.length;url++)this.addFile(new PackFile(this,key[url]));else this.addFile(new PackFile(this,key,url,xhrSettings,packKey));return this});
module.exports=PackFile}
//# sourceMappingURL=module$node_modules$Phaser$src$loader$filetypes$PackFile.js.map
