shadow$provide.module$node_modules$Phaser$src$physics$arcade$Factory=function(global,require,module,exports){var ArcadeImage=require("module$node_modules$Phaser$src$physics$arcade$ArcadeImage"),ArcadeSprite=require("module$node_modules$Phaser$src$physics$arcade$ArcadeSprite");global=require("module$node_modules$Phaser$src$utils$Class");var CONST=require("module$node_modules$Phaser$src$physics$arcade$const"),PhysicsGroup=require("module$node_modules$Phaser$src$physics$arcade$PhysicsGroup"),StaticPhysicsGroup=
require("module$node_modules$Phaser$src$physics$arcade$StaticPhysicsGroup");require=new global({initialize:function(world){this.world=world;this.scene=world.scene;this.sys=world.scene.sys},collider:function(object1,object2,collideCallback,processCallback,callbackContext){return this.world.addCollider(object1,object2,collideCallback,processCallback,callbackContext)},overlap:function(object1,object2,collideCallback,processCallback,callbackContext){return this.world.addOverlap(object1,object2,collideCallback,
processCallback,callbackContext)},existing:function(gameObject,isStatic){this.world.enableBody(gameObject,isStatic?CONST.STATIC_BODY:CONST.DYNAMIC_BODY);return gameObject},staticImage:function(x,y,key,frame){x=new ArcadeImage(this.scene,x,y,key,frame);this.sys.displayList.add(x);this.world.enableBody(x,CONST.STATIC_BODY);return x},image:function(x,y,key,frame){x=new ArcadeImage(this.scene,x,y,key,frame);this.sys.displayList.add(x);this.world.enableBody(x,CONST.DYNAMIC_BODY);return x},staticSprite:function(x,
y,key,frame){x=new ArcadeSprite(this.scene,x,y,key,frame);this.sys.displayList.add(x);this.sys.updateList.add(x);this.world.enableBody(x,CONST.STATIC_BODY);return x},sprite:function(x,y,key,frame){x=new ArcadeSprite(this.scene,x,y,key,frame);this.sys.displayList.add(x);this.sys.updateList.add(x);this.world.enableBody(x,CONST.DYNAMIC_BODY);return x},staticGroup:function(children,config){return this.sys.updateList.add(new StaticPhysicsGroup(this.world,this.world.scene,children,config))},group:function(children,
config){return this.sys.updateList.add(new PhysicsGroup(this.world,this.world.scene,children,config))},destroy:function(){this.sys=this.scene=this.world=null}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$arcade$Factory.js.map
