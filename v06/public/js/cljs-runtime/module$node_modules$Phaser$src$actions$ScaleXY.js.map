{
"version":3,
"file":"module$node_modules$Phaser$src$actions$ScaleXY.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO3G,IAAIC,iBAAmBH,OAAA,CAAQ,yDAAR,CAkCvBC,OAAAC,QAAA,CATcE,QAAS,CAACC,KAAD,CAAQC,MAAR,CAAgBC,MAAhB,CAAwBC,KAAxB,CAA+BC,KAA/B,CAAsCC,KAAtC,CAA6CC,SAA7C,CACvB,CACI,GAAeC,IAAAA,EAAf,GAAIL,MAAJ,EAAuC,IAAvC,GAA4BA,MAA5B,CAA+CA,MAAA,CAASD,MAExDH,iBAAA,CAAiBE,KAAjB,CAAwB,QAAxB,CAAkCC,MAAlC,CAA0CE,KAA1C,CAAiDE,KAAjD,CAAwDC,SAAxD,CAEA,OAAOR,iBAAA,CAAiBE,KAAjB,CAAwB,QAAxB,CAAkCE,MAAlC,CAA0CE,KAA1C,CAAiDC,KAAjD,CAAwDC,SAAxD,CALX,CAjC2G;",
"sources":["node_modules/Phaser/src/actions/ScaleXY.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$actions$ScaleXY\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar PropertyValueInc = require('./PropertyValueInc');\r\n\r\n/**\r\n * Takes an array of Game Objects, or any objects that have public `scaleX` and `scaleY` properties,\r\n * and then adds the given value to each of them.\r\n *\r\n * The optional `stepX` and `stepY` properties are applied incrementally, multiplied by each item in the array.\r\n *\r\n * To use this with a Group: `ScaleXY(group.getChildren(), scaleX, scaleY, stepX, stepY)`\r\n *\r\n * @function Phaser.Actions.ScaleXY\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {number} scaleX - The amount to be added to the `scaleX` property.\r\n * @param {number} [scaleY] - The amount to be added to the `scaleY` property. If `undefined` or `null` it uses the `scaleX` value.\r\n * @param {number} [stepX=0] - This is added to the `scaleX` amount, multiplied by the iteration counter.\r\n * @param {number} [stepY=0] - This is added to the `y` amount, multiplied by the iteration counter.\r\n * @param {integer} [index=0] - An optional offset to start searching from within the items array.\r\n * @param {integer} [direction=1] - The direction to iterate through the array. 1 is from beginning to end, -1 from end to beginning.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that were passed to this Action.\r\n */\r\nvar ScaleXY = function (items, scaleX, scaleY, stepX, stepY, index, direction)\r\n{\r\n    if (scaleY === undefined || scaleY === null) { scaleY = scaleX; }\r\n\r\n    PropertyValueInc(items, 'scaleX', scaleX, stepX, index, direction);\r\n\r\n    return PropertyValueInc(items, 'scaleY', scaleY, stepY, index, direction);\r\n};\r\n\r\nmodule.exports = ScaleXY;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","PropertyValueInc","ScaleXY","items","scaleX","scaleY","stepX","stepY","index","direction","undefined"]
}
