{
"version":3,
"file":"module$node_modules$Phaser$src$math$RotateAroundDistance.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+BrHD,MAAAC,QAAA,CAV2BC,QAAS,CAACC,KAAD,CAAQC,CAAR,CAAWC,CAAX,CAAcC,KAAd,CAAqBC,QAArB,CACpC,CACYD,KAAJE,EAAYC,IAAAC,MAAA,CAAWP,KAAAE,EAAX,CAAqBA,CAArB,CAAwBF,KAAAC,EAAxB,CAAkCA,CAAlC,CAEhBD,MAAAC,EAAA,CAAUA,CAAV,CAAeG,QAAf,CAA0BE,IAAAE,IAAA,CAASH,KAAT,CAC1BL,MAAAE,EAAA,CAAUA,CAAV,CAAeE,QAAf,CAA0BE,IAAAG,IAAA,CAASJ,KAAT,CAE1B,OAAOL,MANX,CAtBqH;",
"sources":["node_modules/Phaser/src/math/RotateAroundDistance.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$RotateAroundDistance\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Math.RotateAroundDistance\r\n * @since 3.0.0\r\n *\r\n * @param {(Phaser.Geom.Point|object)} point - The point to be rotated.\r\n * @param {number} x - The horizontal coordinate to rotate around.\r\n * @param {number} y - The vertical coordinate to rotate around.\r\n * @param {number} angle - The angle of rotation in radians.\r\n * @param {number} distance - [description]\r\n *\r\n * @return {Phaser.Geom.Point} The given point.\r\n */\r\nvar RotateAroundDistance = function (point, x, y, angle, distance)\r\n{\r\n    var t = angle + Math.atan2(point.y - y, point.x - x);\r\n\r\n    point.x = x + (distance * Math.cos(t));\r\n    point.y = y + (distance * Math.sin(t));\r\n\r\n    return point;\r\n};\r\n\r\nmodule.exports = RotateAroundDistance;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","RotateAroundDistance","point","x","y","angle","distance","t","Math","atan2","cos","sin"]
}
