shadow$provide.module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Bounds=function(global,require,module,exports){var Bounds={};module.exports=Bounds;(function(){Bounds.create=function(vertices){var bounds={min:{x:0,y:0},max:{x:0,y:0}};vertices&&Bounds.update(bounds,vertices);return bounds};Bounds.update=function(bounds,vertices,velocity){bounds.min.x=Infinity;bounds.max.x=-Infinity;bounds.min.y=Infinity;bounds.max.y=-Infinity;for(var i=0;i<vertices.length;i++){var vertex=vertices[i];vertex.x>
bounds.max.x&&(bounds.max.x=vertex.x);vertex.x<bounds.min.x&&(bounds.min.x=vertex.x);vertex.y>bounds.max.y&&(bounds.max.y=vertex.y);vertex.y<bounds.min.y&&(bounds.min.y=vertex.y)}velocity&&(0<velocity.x?bounds.max.x+=velocity.x:bounds.min.x+=velocity.x,0<velocity.y?bounds.max.y+=velocity.y:bounds.min.y+=velocity.y)};Bounds.contains=function(bounds,point){return point.x>=bounds.min.x&&point.x<=bounds.max.x&&point.y>=bounds.min.y&&point.y<=bounds.max.y};Bounds.overlaps=function(boundsA,boundsB){return boundsA.min.x<=
boundsB.max.x&&boundsA.max.x>=boundsB.min.x&&boundsA.max.y>=boundsB.min.y&&boundsA.min.y<=boundsB.max.y};Bounds.translate=function(bounds,vector){bounds.min.x+=vector.x;bounds.max.x+=vector.x;bounds.min.y+=vector.y;bounds.max.y+=vector.y};Bounds.shift=function(bounds,position){var deltaX=bounds.max.x-bounds.min.x,deltaY=bounds.max.y-bounds.min.y;bounds.min.x=position.x;bounds.max.x=position.x+deltaX;bounds.min.y=position.y;bounds.max.y=position.y+deltaY}})()}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Bounds.js.map
