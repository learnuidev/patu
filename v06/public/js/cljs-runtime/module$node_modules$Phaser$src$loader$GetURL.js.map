{
"version":3,
"file":"module$node_modules$Phaser$src$loader$GetURL.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,6CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmCzGD,MAAAC,QAAA,CAjBaC,QAAS,CAACC,IAAD,CAAOC,OAAP,CACtB,CACI,MAAKD,KAAAE,IAAL,CAKIF,IAAAE,IAAAC,MAAA,CAAe,4CAAf,CAAJ,CAEWH,IAAAE,IAFX,CAMWD,OANX,CAMqBD,IAAAE,IAXrB,CAEW,CAAA,CAHf,CAnByG;",
"sources":["node_modules/Phaser/src/loader/GetURL.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$loader$GetURL\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Given a File and a baseURL value this returns the URL the File will use to download from.\r\n *\r\n * @function Phaser.Loader.GetURL\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Loader.File} file - The File object.\r\n * @param {string} baseURL - A default base URL.\r\n *\r\n * @return {string} The URL the File will use.\r\n */\r\nvar GetURL = function (file, baseURL)\r\n{\r\n    if (!file.url)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    if (file.url.match(/^(?:blob:|data:|http:\\/\\/|https:\\/\\/|\\/\\/)/))\r\n    {\r\n        return file.url;\r\n    }\r\n    else\r\n    {\r\n        return baseURL + file.url;\r\n    }\r\n};\r\n\r\nmodule.exports = GetURL;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetURL","file","baseURL","url","match"]
}
