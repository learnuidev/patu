{
"version":3,
"file":"module$node_modules$Phaser$src$display$color$ComponentToHex.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,4DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwBxHD,MAAAC,QAAA,CAPqBC,QAAS,CAACC,KAAD,CAC9B,CACQC,KAAAA,CAAMD,KAAAE,SAAA,CAAe,EAAf,CAEV,OAAuB,EAAhB,GAACD,KAAAE,OAAD,CAAqB,GAArB,CAA2BF,KAA3B,CAAiCA,KAH5C,CAlBwH;",
"sources":["node_modules/Phaser/src/display/color/ComponentToHex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$display$color$ComponentToHex\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n/**\r\n * Returns a string containing a hex representation of the given color component.\r\n *\r\n * @function Phaser.Display.Color.ComponentToHex\r\n * @since 3.0.0\r\n *\r\n * @param {integer} color - The color channel to get the hex value for, must be a value between 0 and 255.\r\n *\r\n * @return {string} A string of length 2 characters, i.e. 255 = ff, 100 = 64.\r\n */\r\nvar ComponentToHex = function (color)\r\n{\r\n    var hex = color.toString(16);\r\n\r\n    return (hex.length === 1) ? '0' + hex : hex;\r\n};\r\n\r\nmodule.exports = ComponentToHex;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","ComponentToHex","color","hex","toString","length"]
}
