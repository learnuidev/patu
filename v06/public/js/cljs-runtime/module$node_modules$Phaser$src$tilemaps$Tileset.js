shadow$provide.module$node_modules$Phaser$src$tilemaps$Tileset=function(global,require,module,exports){global=new (require("module$node_modules$Phaser$src$utils$Class"))({initialize:function(name,firstgid,tileWidth,tileHeight,tileMargin,tileSpacing,tileProperties,tileData){if(void 0===tileWidth||0>=tileWidth)tileWidth=32;if(void 0===tileHeight||0>=tileHeight)tileHeight=32;void 0===tileMargin&&(tileMargin=0);void 0===tileSpacing&&(tileSpacing=0);void 0===tileProperties&&(tileProperties={});void 0===
tileData&&(tileData={});this.name=name;this.firstgid=firstgid;this.tileWidth=tileWidth;this.tileHeight=tileHeight;this.tileMargin=tileMargin;this.tileSpacing=tileSpacing;this.tileProperties=tileProperties;this.tileData=tileData;this.glTexture=this.image=null;this.total=this.columns=this.rows=0;this.texCoordinates=[]},getTileProperties:function(tileIndex){return this.containsTileIndex(tileIndex)?this.tileProperties[tileIndex-this.firstgid]:null},getTileData:function(tileIndex){return this.containsTileIndex(tileIndex)?
this.tileData[tileIndex-this.firstgid]:null},getTileCollisionGroup:function(tileIndex){return(tileIndex=this.getTileData(tileIndex))&&tileIndex.objectgroup?tileIndex.objectgroup:null},containsTileIndex:function(tileIndex){return tileIndex>=this.firstgid&&tileIndex<this.firstgid+this.total},getTileTextureCoordinates:function(tileIndex){return this.containsTileIndex(tileIndex)?this.texCoordinates[tileIndex-this.firstgid]:null},setImage:function(texture){this.image=texture;this.glTexture=texture.get().source.glTexture;
this.updateTileData(this.image.source[0].width,this.image.source[0].height);return this},setTileSize:function(tileWidth,tileHeight){void 0!==tileWidth&&(this.tileWidth=tileWidth);void 0!==tileHeight&&(this.tileHeight=tileHeight);this.image&&this.updateTileData(this.image.source[0].width,this.image.source[0].height);return this},setSpacing:function(margin,spacing){void 0!==margin&&(this.tileMargin=margin);void 0!==spacing&&(this.tileSpacing=spacing);this.image&&this.updateTileData(this.image.source[0].width,
this.image.source[0].height);return this},updateTileData:function(imageWidth,imageHeight){imageHeight=(imageHeight-2*this.tileMargin+this.tileSpacing)/(this.tileHeight+this.tileSpacing);imageWidth=(imageWidth-2*this.tileMargin+this.tileSpacing)/(this.tileWidth+this.tileSpacing);0===imageHeight%1&&0===imageWidth%1||console.warn("Image tile area not tile size multiple in: "+this.name);imageHeight=Math.floor(imageHeight);imageWidth=Math.floor(imageWidth);this.rows=imageHeight;this.columns=imageWidth;
this.total=imageHeight*imageWidth;this.texCoordinates.length=0;imageHeight=imageWidth=this.tileMargin;for(var y=0;y<this.rows;y++){for(var x=0;x<this.columns;x++)this.texCoordinates.push({x:imageWidth,y:imageHeight}),imageWidth+=this.tileWidth+this.tileSpacing;imageWidth=this.tileMargin;imageHeight+=this.tileHeight+this.tileSpacing}return this}});module.exports=global}
//# sourceMappingURL=module$node_modules$Phaser$src$tilemaps$Tileset.js.map
