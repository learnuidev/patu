{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$parsers$ParseCSV.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOrH,IAAIC,QAAUH,OAAA,CAAQ,iDAAR,CAAd,CACII,aAAeJ,OAAA,CAAQ,8DAAR,CAkCnBC,OAAAC,QAAA,CAbeG,QAAS,CAACC,IAAD,CAAOC,IAAP,CAAaC,SAAb,CAAwBC,UAAxB,CAAoCC,UAApC,CACxB,CACQC,IAAAA,CAAUJ,IAAAK,KAAA,EAAAC,MAAA,CAEH,IAFG,CAAAC,IAAA,CAGL,QAAS,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAAF,MAAA,CAAU,GAAV,CAAT,CAHV,CAKVC,KAAAA,CAAMV,YAAA,CAAaE,IAAb,CAAmBK,IAAnB,CAA4BH,SAA5B,CAAuCC,UAAvC,CAAmDC,UAAnD,CACVI,KAAAE,OAAA,CAAab,OAAAc,IAEb,OAAOH,KATX,CA9BqH;",
"sources":["node_modules/Phaser/src/tilemaps/parsers/ParseCSV.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$parsers$ParseCSV\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Formats = require('../Formats');\r\nvar Parse2DArray = require('./Parse2DArray');\r\n\r\n/**\r\n * Parses a CSV string of tile indexes into a new MapData object with a single layer.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.ParseCSV\r\n * @since 3.0.0\r\n *\r\n * @param {string} name - The name of the tilemap, used to set the name on the MapData.\r\n * @param {string} data - CSV string of tile indexes.\r\n * @param {integer} tileWidth - The width of a tile in pixels.\r\n * @param {integer} tileHeight - The height of a tile in pixels.\r\n * @param {boolean} insertNull - Controls how empty tiles, tiles with an index of -1, in the map\r\n * data are handled. If `true`, empty locations will get a value of `null`. If `false`, empty\r\n * location will get a Tile object with an index of -1. If you've a large sparsely populated map and\r\n * the tile data doesn't need to change then setting this value to `true` will help with memory\r\n * consumption. However if your map is small or you need to update the tiles dynamically, then leave\r\n * the default value set.\r\n *\r\n * @return {Phaser.Tilemaps.MapData} The resulting MapData object.\r\n */\r\nvar ParseCSV = function (name, data, tileWidth, tileHeight, insertNull)\r\n{\r\n    var array2D = data\r\n        .trim()\r\n        .split('\\n')\r\n        .map(function (row) { return row.split(','); });\r\n\r\n    var map = Parse2DArray(name, array2D, tileWidth, tileHeight, insertNull);\r\n    map.format = Formats.CSV;\r\n\r\n    return map;\r\n};\r\n\r\nmodule.exports = ParseCSV;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Formats","Parse2DArray","ParseCSV","name","data","tileWidth","tileHeight","insertNull","array2D","trim","split","map","row","format","CSV"]
}
