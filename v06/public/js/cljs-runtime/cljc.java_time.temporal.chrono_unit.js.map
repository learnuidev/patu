{"version":3,"sources":["cljc/java_time/temporal/chrono_unit.cljc"],"mappings":";;;;AACA,AAAKA,AAAO,AAAGC;AACf,AAAKC,AAAQ,AAAGD;AAChB,AAAKE,AAAO,AAAGF;AACf,AAAKG,AAAU,AAAGH;AAClB,AAAKI,AAAU,AAAGJ;AAClB,AAAKK,AAAM,AAAGL;AACd,AAAKM,AAAQ,AAAGN;AAChB,AAAKO,AAAK,AAAGP;AACb,AAAKQ,AAAU,AAAGR;AAClB,AAAKS,AAAM,AAAGT;AACd,AAAKU,AAAM,AAAGV;AACd,AAAKW,AAAK,AAAGX;AACb,AAAKY,AAAQ,AAAGZ;AAChB,AAAKa,AAAO,AAAGb;AACf,AAAKc,AAAM,AAAGd;AACd,AAAKe,AAAQ,AAAGf;AAChB,AAAA,AAAmBgB;AAAnB,AAA0E,AAAGhB;;AAC7E,AAAA,AAAA,AAAAiB,AAAmBE;AAAnB,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAmBD,AAA8IE;AAAjK,AAAuL,AAAGrB,AAAsCqB;;;AAAhO,AAAA,AAAA,AAAmBF,AAAuQG,AAAsCC;AAAhU,AAAsV,AAAGvB,AAAsCsB,AAAoBC;;;AAAnZ,AAAA,AAAA,AAAmBJ;;AAAnB,AACA,AAAA,AAAmBK,AAAoHC;AAAvI,AAAiJ,AAAUA;;AAC3J,AAAA,AAAmBC,AAAkIC;AAArJ,AAA+J,AAAsBA;;AACrL,AAAA,AAAmBC,AAAqHC;AAAxI,AAAkJ,AAAWA;;AAC7J,AAAA,AAAmBC,AAA0HC;AAA7I,AAAuJ,AAAcA;;AACrK,AAAA,AAAmBC,AAAkKC,AAAsCC,AAAsCC;AAAjQ,AAA2Q,AAAQF,AAASC,AAAgCC;;AAC5T,AAAA,AAAmBC,AAAgHC;AAAnI,AAA6I,AAAOA;;AACpJ,AAAA,AAAmBC,AAA0JC,AAAsCC;AAAnN,AAAoP,AAAgBD,AAASC;;AAC7Q,AAAA,AAAmBC,AAA8HC;AAAjJ,AAA2J,AAA2BA;;AACtL,AAAA,AAAmBC,AAAmKC,AAAsCC,AAA6DC;AAAzR,AAA0T,AAAUF,AAASC,AAAgCC;;AAC7W,AAAA,AAAmBC,AAAsHC;AAAzI,AAAmJ,AAAWA;;AAC9J,AAAA,AAAmBC,AAA8JC,AAASC;AAA1L,AAA6M,AAA2CD,AAASC;;AACjQ,AAAA,AAAmBC,AAA0HC;AAA7I,AAAuJ,AAAqBA;;AAC5K,AAAA,AAAmBC,AAAsIC,AAA2BC;AAApL,AAA0M,AAASD,AAASC;;AAC5N,AAAA,AAAmBC,AAA0HC;AAA7I,AAAuJ,AAAcA","names":["cljc.java-time.temporal.chrono-unit/millis","java.time.temporal/ChronoUnit","cljc.java-time.temporal.chrono-unit/minutes","cljc.java-time.temporal.chrono-unit/micros","cljc.java-time.temporal.chrono-unit/half-days","cljc.java-time.temporal.chrono-unit/millennia","cljc.java-time.temporal.chrono-unit/years","cljc.java-time.temporal.chrono-unit/decades","cljc.java-time.temporal.chrono-unit/days","cljc.java-time.temporal.chrono-unit/centuries","cljc.java-time.temporal.chrono-unit/weeks","cljc.java-time.temporal.chrono-unit/hours","cljc.java-time.temporal.chrono-unit/eras","cljc.java-time.temporal.chrono-unit/seconds","cljc.java-time.temporal.chrono-unit/months","cljc.java-time.temporal.chrono-unit/nanos","cljc.java-time.temporal.chrono-unit/forever","cljc.java-time.temporal.chrono-unit/values","var_args","G__27539","cljc.java-time.temporal.chrono-unit/value-of","js/Error","java-lang-String4740","java-lang-Class4741","java-lang-String4742","cljc.java-time.temporal.chrono-unit/ordinal","this4743","cljc.java-time.temporal.chrono-unit/is-duration-estimated","this4744","cljc.java-time.temporal.chrono-unit/to-string","this4745","cljc.java-time.temporal.chrono-unit/is-date-based","this4746","cljc.java-time.temporal.chrono-unit/add-to","this4747","java-time-temporal-Temporal4748","long4749","cljc.java-time.temporal.chrono-unit/name","this4750","cljc.java-time.temporal.chrono-unit/is-supported-by","this4751","java-time-temporal-Temporal4752","cljc.java-time.temporal.chrono-unit/get-declaring-class","this4753","cljc.java-time.temporal.chrono-unit/between","this4754","java-time-temporal-Temporal4755","java-time-temporal-Temporal4756","cljc.java-time.temporal.chrono-unit/hash-code","this4757","cljc.java-time.temporal.chrono-unit/compare-to","this4758","G__4759","cljc.java-time.temporal.chrono-unit/get-duration","this4760","cljc.java-time.temporal.chrono-unit/equals","this4761","java-lang-Object4762","cljc.java-time.temporal.chrono-unit/is-time-based","this4763"],"sourcesContent":["(ns cljc.java-time.temporal.chrono-unit (:require [cljs.java-time.interop :as jti] #? (:cljs [java.time.temporal :refer [ChronoUnit]])) (:refer-clojure :exclude [get range format min max next name resolve]) #? (:clj (:import [java.time.temporal ChronoUnit])))\r\n(def millis (. java.time.temporal.ChronoUnit -MILLIS))\r\n(def minutes (. java.time.temporal.ChronoUnit -MINUTES))\r\n(def micros (. java.time.temporal.ChronoUnit -MICROS))\r\n(def half-days (. java.time.temporal.ChronoUnit -HALF_DAYS))\r\n(def millennia (. java.time.temporal.ChronoUnit -MILLENNIA))\r\n(def years (. java.time.temporal.ChronoUnit -YEARS))\r\n(def decades (. java.time.temporal.ChronoUnit -DECADES))\r\n(def days (. java.time.temporal.ChronoUnit -DAYS))\r\n(def centuries (. java.time.temporal.ChronoUnit -CENTURIES))\r\n(def weeks (. java.time.temporal.ChronoUnit -WEEKS))\r\n(def hours (. java.time.temporal.ChronoUnit -HOURS))\r\n(def eras (. java.time.temporal.ChronoUnit -ERAS))\r\n(def seconds (. java.time.temporal.ChronoUnit -SECONDS))\r\n(def months (. java.time.temporal.ChronoUnit -MONTHS))\r\n(def nanos (. java.time.temporal.ChronoUnit -NANOS))\r\n(def forever (. java.time.temporal.ChronoUnit -FOREVER))\r\n(clojure.core/defn values {:arglists (quote ([]))} (^\"java.lang.Class\" [] (. java.time.temporal.ChronoUnit values)))\r\n(clojure.core/defn value-of {:arglists (quote ([\"java.lang.String\"] [\"java.lang.Class\" \"java.lang.String\"]))} (^java.time.temporal.ChronoUnit [^java.lang.String java-lang-String4740] (. java.time.temporal.ChronoUnit valueOf java-lang-String4740)) (^java.lang.Enum [^java.lang.Class java-lang-Class4741 ^java.lang.String java-lang-String4742] (. java.time.temporal.ChronoUnit valueOf java-lang-Class4741 java-lang-String4742)))\r\n(clojure.core/defn ordinal {:arglists (quote ([\"java.time.temporal.ChronoUnit\"]))} (^java.lang.Integer [^java.time.temporal.ChronoUnit this4743] (.ordinal this4743)))\r\n(clojure.core/defn is-duration-estimated {:arglists (quote ([\"java.time.temporal.ChronoUnit\"]))} (^java.lang.Boolean [^java.time.temporal.ChronoUnit this4744] (.isDurationEstimated this4744)))\r\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.temporal.ChronoUnit\"]))} (^java.lang.String [^java.time.temporal.ChronoUnit this4745] (.toString this4745)))\r\n(clojure.core/defn is-date-based {:arglists (quote ([\"java.time.temporal.ChronoUnit\"]))} (^java.lang.Boolean [^java.time.temporal.ChronoUnit this4746] (.isDateBased this4746)))\r\n(clojure.core/defn add-to {:arglists (quote ([\"java.time.temporal.ChronoUnit\" \"java.time.temporal.Temporal\" \"long\"]))} (^java.time.temporal.Temporal [^java.time.temporal.ChronoUnit this4747 ^java.time.temporal.Temporal java-time-temporal-Temporal4748 ^long long4749] (.addTo this4747 java-time-temporal-Temporal4748 long4749)))\r\n(clojure.core/defn name {:arglists (quote ([\"java.time.temporal.ChronoUnit\"]))} (^java.lang.String [^java.time.temporal.ChronoUnit this4750] (.name this4750)))\r\n(clojure.core/defn is-supported-by {:arglists (quote ([\"java.time.temporal.ChronoUnit\" \"java.time.temporal.Temporal\"]))} (^java.lang.Boolean [^java.time.temporal.ChronoUnit this4751 ^java.time.temporal.Temporal java-time-temporal-Temporal4752] (.isSupportedBy this4751 java-time-temporal-Temporal4752)))\r\n(clojure.core/defn get-declaring-class {:arglists (quote ([\"java.time.temporal.ChronoUnit\"]))} (^java.lang.Class [^java.time.temporal.ChronoUnit this4753] (jti/getter declaringClass this4753)))\r\n(clojure.core/defn between {:arglists (quote ([\"java.time.temporal.ChronoUnit\" \"java.time.temporal.Temporal\" \"java.time.temporal.Temporal\"]))} (^long [^java.time.temporal.ChronoUnit this4754 ^java.time.temporal.Temporal java-time-temporal-Temporal4755 ^java.time.temporal.Temporal java-time-temporal-Temporal4756] (.between this4754 java-time-temporal-Temporal4755 java-time-temporal-Temporal4756)))\r\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.temporal.ChronoUnit\"]))} (^java.lang.Integer [^java.time.temporal.ChronoUnit this4757] (.hashCode this4757)))\r\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.temporal.ChronoUnit\" \"java.lang.Object\"] [\"java.time.temporal.ChronoUnit\" \"java.lang.Enum\"]))} (^java.lang.Integer [this4758 G__4759] #? (:cljs (.compareTo ^java.time.temporal.ChronoUnit this4758 G__4759) :clj (clojure.core/cond (clojure.core/and (clojure.core/instance? (java.lang.Class/forName \"java.lang.Object\") G__4759)) (clojure.core/let [G__4759 ^\"java.lang.Object\" G__4759] (.compareTo ^java.time.temporal.ChronoUnit this4758 G__4759)) (clojure.core/and (clojure.core/instance? (java.lang.Class/forName \"java.lang.Enum\") G__4759)) (clojure.core/let [G__4759 ^\"java.lang.Enum\" G__4759] (.compareTo ^java.time.temporal.ChronoUnit this4758 G__4759)) :else (throw (java.lang.IllegalArgumentException. \"no corresponding java.time method with these args\"))))))\r\n(clojure.core/defn get-duration {:arglists (quote ([\"java.time.temporal.ChronoUnit\"]))} (^java.time.Duration [^java.time.temporal.ChronoUnit this4760] (jti/getter duration this4760)))\r\n(clojure.core/defn equals {:arglists (quote ([\"java.time.temporal.ChronoUnit\" \"java.lang.Object\"]))} (^java.lang.Boolean [^java.time.temporal.ChronoUnit this4761 ^java.lang.Object java-lang-Object4762] (.equals this4761 java-lang-Object4762)))\r\n(clojure.core/defn is-time-based {:arglists (quote ([\"java.time.temporal.ChronoUnit\"]))} (^java.lang.Boolean [^java.time.temporal.ChronoUnit this4763] (.isTimeBased this4763)))\r\n"]}