{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$staticlayer$StaticTilemapLayerWebGLRenderer.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,oFAAA,CAAwG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkEhJD,MAAAC,QAAA,CA1CsCC,QAAS,CAACC,QAAD,CAAWC,GAAX,CAAgBC,uBAAhB,CAAyCC,MAAzC,CAC/C,CACQC,uBAAAA,CAAWH,GAAAI,QAEf,KAAIC,SAAWL,GAAAK,SAAf,CACIC,qBAAuBD,QAAAE,aAE3BR,SAAAS,YAAA,CAAqBH,QAArB,CAEAA,SAAAI,cAAA,EACAJ,SAAAK,eAAA,CAAwBV,GAAAW,EAAxB,CAAiCT,MAAAU,QAAjC,CAAkDZ,GAAAa,cAAlD,CAAsEb,GAAAc,EAAtE,CAA+EZ,MAAAa,QAA/E,CAAgGf,GAAAgB,cAAhG,CAAoH,CAApH,CACAX,SAAAY,WAAA,CAAoBjB,GAAAkB,OAApB;AAAgClB,GAAAmB,OAAhC,CAA4C,CAA5C,CACAd,SAAAe,WAAA,CAAoBlB,MAAAmB,OAAAA,OAApB,CAEA,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBnB,uBAAAoB,OAApB,CAAqCD,CAAA,EAArC,CAEItB,GAAAwB,OAAA,CAAWtB,MAAX,CAAmBoB,CAAnB,CAEA,CAAyB,CAAzB,CAAItB,GAAAyB,YAAA,CAAgBH,CAAhB,CAAJ,GAEQvB,QAAA2B,gBAWJ,EAXuE,CAWvE,CAXgC3B,QAAA2B,gBAAAD,YAWhC,EATI1B,QAAA4B,MAAA,EASJ,CANAtB,QAAAE,aAMA,CANwBP,GAAAO,aAAA,CAAiBe,CAAjB,CAMxB,CAJAvB,QAAAS,YAAA,CAAqBH,QAArB,CAIA,CAFAN,QAAA6B,aAAA,CAAsBzB,uBAAA,CAASmB,CAAT,CAAAO,UAAtB,CAA6C,CAA7C,CAEA,CAAA9B,QAAA+B,GAAAC,WAAA,CAAuB1B,QAAA2B,SAAvB,CAA0C,CAA1C,CAA6ChC,GAAAyB,YAAA,CAAgBH,CAAhB,CAA7C,CAbJ,CAkBJjB,SAAAE,aAAA,CAAwBD,oBAExBD,SAAA4B,aAAA,EACA5B,SAAAI,cAAA,EAtCJ,CAzBgJ;",
"sources":["node_modules/Phaser/src/tilemaps/staticlayer/StaticTilemapLayerWebGLRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$staticlayer$StaticTilemapLayerWebGLRenderer\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * \r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n * \r\n * A Static Tilemap Layer renders immediately and does not use any batching.\r\n *\r\n * @method Phaser.Tilemaps.StaticTilemapLayer#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.Tilemaps.StaticTilemapLayer} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n */\r\nvar StaticTilemapLayerWebGLRenderer = function (renderer, src, interpolationPercentage, camera)\r\n{\r\n    var tilesets = src.tileset;\r\n\r\n    var pipeline = src.pipeline;\r\n    var pipelineVertexBuffer = pipeline.vertexBuffer;\r\n\r\n    renderer.setPipeline(pipeline);\r\n\r\n    pipeline.modelIdentity();\r\n    pipeline.modelTranslate(src.x - (camera.scrollX * src.scrollFactorX), src.y - (camera.scrollY * src.scrollFactorY), 0);\r\n    pipeline.modelScale(src.scaleX, src.scaleY, 1);\r\n    pipeline.viewLoad2D(camera.matrix.matrix);\r\n\r\n    for (var i = 0; i < tilesets.length; i++)\r\n    {\r\n        src.upload(camera, i);\r\n\r\n        if (src.vertexCount[i] > 0)\r\n        {\r\n            if (renderer.currentPipeline && renderer.currentPipeline.vertexCount > 0)\r\n            {\r\n                renderer.flush();\r\n            }\r\n        \r\n            pipeline.vertexBuffer = src.vertexBuffer[i];\r\n        \r\n            renderer.setPipeline(pipeline);\r\n        \r\n            renderer.setTexture2D(tilesets[i].glTexture, 0);\r\n        \r\n            renderer.gl.drawArrays(pipeline.topology, 0, src.vertexCount[i]);\r\n        }\r\n    }\r\n\r\n    //  Restore the pipeline\r\n    pipeline.vertexBuffer = pipelineVertexBuffer;\r\n\r\n    pipeline.viewIdentity();\r\n    pipeline.modelIdentity();\r\n};\r\n\r\nmodule.exports = StaticTilemapLayerWebGLRenderer;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","StaticTilemapLayerWebGLRenderer","renderer","src","interpolationPercentage","camera","tilesets","tileset","pipeline","pipelineVertexBuffer","vertexBuffer","setPipeline","modelIdentity","modelTranslate","x","scrollX","scrollFactorX","y","scrollY","scrollFactorY","modelScale","scaleX","scaleY","viewLoad2D","matrix","i","length","upload","vertexCount","currentPipeline","flush","setTexture2D","glTexture","gl","drawArrays","topology","viewIdentity"]
}
