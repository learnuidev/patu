{"version":3,"sources":["app/kaboomv5/math/other.cljs"],"mappings":";;;;AAKA,AAAA,AAAMA,AAAKC;AAAX,AACE,AAAA,AAAMA;;AAGR;;;;;;;;;AAAA,AAAMC,AAQHC;AARH,AASE,AAACC,AAAeD;;AAClB,AAMA;;;;;;;;;AAAA,AAAME,AAQHC;AARH,AASE,AAACC,AAAeD;;AAClB,AAIA;;;;;;;;;AAAA,AAAME,AAQHC,AAAMC,AAAIC;AARb,AASE,AAAI,AAAGD,AAAIC;AACT,AAACH,AAAAA,AAAAA,AAAMC,AAAAA,AAAME,AAAAA,AAAID,AAAAA;;AACjB,AAACE,AAAWH,AAAMC,AAAIC;;;AAG1B;;;;;;;;;;AAAA,AAAME,AASHC,AAAEC,AAAEC;AATP,AAUE,AAACC,AAAUH,AAAEC,AAAEC;;AACjB","names":["app.kaboomv5.math.other/neg","num","app.kaboomv5.math.other/deg->rad","deg","goog.math/toRadians","app.kaboomv5.math.other/rad->deg","rad","goog.math/toDegrees","app.kaboomv5.math.other/clamp","value","min","max","goog.math/clamp","app.kaboomv5.math.other/lerp","a","b","x","goog.math/lerp"],"sourcesContent":["(ns app.kaboomv5.math.other\n  (:require [goog.math :as math]\n            [clojure.repl :refer [doc]]))\n\n;; 0\n(defn neg [num]\n  (* -1 num))\n\n;; 1\n(defn deg->rad\n  \"Converts radians to degrees.\n    Parameters:\n    - angleRadians  number\n                Angle in radians.\n    Returns: number\n             Angle in degrees.\n    ex: (deg->rad 1) => 0.017453292519943295\"\n  [deg]\n  (math/toRadians deg))\n(comment\n  (doc deg->rad)\n  (deg->rad 1)\n  (math/toRadians 1))\n\n;; 2\n(defn rad->deg\n  \"Converts radians to degrees.\n   Parameters\n   - angleRadians(number): Angle in radians.\n   Returns\n   - number: Angle in degrees.\n   ex: (rad->deg (/ 22 7)) => 180.07244989825872\n   \"\n  [rad]\n  (math/toDegrees rad))\n(comment\n  (math/toDegrees (/ 22 7)))\n\n;; 3\n(defn clamp\n  \"Takes a number and clamps it to within the provided bounds.\n   Parameters\n   - value(number): The input number.\n   - min  (number): The minimum value to return.\n   - max  (number): The maximum value to return.\n   Returns\n   - number: The input number if it is within bounds, or the nearest number within the bounds.\"\n  [value min max]\n  (if (> min max)\n    (clamp value max min)\n    (math/clamp value min max)))\n\n;; 4\n(defn lerp\n  \"Performs linear interpolation between values a and b.\n  Returns the value between a and b proportional to x (when x is between 0 and 1.\n  When x is outside this range, the return value is a linear extrapolation).\n  Parameters:\n   - a: number\n   - b: number\n   - x: The proportion between a and b\n  \"\n  [a b x]\n  (math/lerp a b x))\n(comment\n  (lerp 1 2 4))\n"]}