{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$particles$GravityWell.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/Phaser/src/gameobjects/particles/GravityWell.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$particles$GravityWell\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\n\r\n/**\r\n * @typedef {object} GravityWellConfig\r\n *\r\n * @property {number} [x=0] - The x coordinate of the Gravity Well, in world space.\r\n * @property {number} [y=0] - The y coordinate of the Gravity Well, in world space.\r\n * @property {number} [power=0] - The power of the Gravity Well.\r\n * @property {number} [epsilon=100] - [description]\r\n * @property {number} [gravity=50] - The gravitational force of this Gravity Well.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * [description]\r\n *\r\n * @class GravityWell\r\n * @memberOf Phaser.GameObjects.Particles\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {(number|GravityWellConfig)} [x=0] - The x coordinate of the Gravity Well, in world space.\r\n * @param {number} [y=0] - The y coordinate of the Gravity Well, in world space.\r\n * @param {number} [power=0] - The power of the Gravity Well.\r\n * @param {number} [epsilon=100] - [description]\r\n * @param {number} [gravity=50] - The gravitational force of this Gravity Well.\r\n */\r\nvar GravityWell = new Class({\r\n\r\n    initialize:\r\n\r\n    function GravityWell (x, y, power, epsilon, gravity)\r\n    {\r\n        if (typeof x === 'object')\r\n        {\r\n            var config = x;\r\n\r\n            x = GetFastValue(config, 'x', 0);\r\n            y = GetFastValue(config, 'y', 0);\r\n            power = GetFastValue(config, 'power', 0);\r\n            epsilon = GetFastValue(config, 'epsilon', 100);\r\n            gravity = GetFastValue(config, 'gravity', 50);\r\n        }\r\n        else\r\n        {\r\n            if (x === undefined) { x = 0; }\r\n            if (y === undefined) { y = 0; }\r\n            if (power === undefined) { power = 0; }\r\n            if (epsilon === undefined) { epsilon = 100; }\r\n            if (gravity === undefined) { gravity = 50; }\r\n        }\r\n\r\n        /**\r\n         * The x coordinate of the Gravity Well, in world space.\r\n         *\r\n         * @name Phaser.GameObjects.Particles.GravityWell#x\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.x = x;\r\n\r\n        /**\r\n         * The y coordinate of the Gravity Well, in world space.\r\n         *\r\n         * @name Phaser.GameObjects.Particles.GravityWell#y\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.y = y;\r\n\r\n        /**\r\n         * The active state of the Gravity Well. An inactive Gravity Well will not influence any particles.\r\n         *\r\n         * @name Phaser.GameObjects.Particles.GravityWell#active\r\n         * @type {boolean}\r\n         * @default true\r\n         * @since 3.0.0\r\n         */\r\n        this.active = true;\r\n\r\n        /**\r\n         * Internal gravity value.\r\n         *\r\n         * @name Phaser.GameObjects.Particles.GravityWell#_gravity\r\n         * @type {number}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._gravity = gravity;\r\n\r\n        /**\r\n         * Internal power value.\r\n         *\r\n         * @name Phaser.GameObjects.Particles.GravityWell#_power\r\n         * @type {number}\r\n         * @private\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this._power = 0;\r\n\r\n        /**\r\n         * Internal epsilon value.\r\n         *\r\n         * @name Phaser.GameObjects.Particles.GravityWell#_epsilon\r\n         * @type {number}\r\n         * @private\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this._epsilon = 0;\r\n\r\n        /**\r\n         * The power of the Gravity Well.\r\n         *\r\n         * @name Phaser.GameObjects.Particles.GravityWell#power\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.power = power;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.GameObjects.Particles.GravityWell#epsilon\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.epsilon = epsilon;\r\n    },\r\n\r\n    /**\r\n     * Takes a Particle and updates it based on the properties of this Gravity Well.\r\n     *\r\n     * @method Phaser.GameObjects.Particles.GravityWell#update\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.Particles.Particle} particle - The Particle to update.\r\n     * @param {number} delta - The delta time in ms.\r\n     * @param {number} step - The delta value divided by 1000.\r\n     */\r\n    update: function (particle, delta)\r\n    {\r\n        var x = this.x - particle.x;\r\n        var y = this.y - particle.y;\r\n        var dSq = x * x + y * y;\r\n\r\n        if (dSq === 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var d = Math.sqrt(dSq);\r\n\r\n        if (dSq < this._epsilon)\r\n        {\r\n            dSq = this._epsilon;\r\n        }\r\n\r\n        var factor = ((this._power * delta) / (dSq * d)) * 100;\r\n\r\n        particle.velocityX += x * factor;\r\n        particle.velocityY += y * factor;\r\n    },\r\n\r\n    epsilon: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.sqrt(this._epsilon);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._epsilon = value * value;\r\n        }\r\n\r\n    },\r\n\r\n    power: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._power / this._gravity;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._power = value * this._gravity;\r\n        }\r\n\r\n    },\r\n\r\n    gravity: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._gravity;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var pwr = this.power;\r\n            this._gravity = value;\r\n            this.power = pwr;\r\n        }\r\n\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = GravityWell;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","GetFastValue","GravityWell","initialize","x","y","power","epsilon","gravity","config","undefined","active","_gravity","_epsilon","_power","update","particle","delta","dSq","d","Math","sqrt","factor","velocityX","velocityY","get","set","value","pwr"]
}
