{
"version":3,
"file":"module$node_modules$Phaser$src$device$Input.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOpGC,MAAAA,CAAKH,OAAA,CAAQ,0CAAR,CACLI,QAAAA,CAAUJ,OAAA,CAAQ,+CAAR,CAgBVK,QAAAA,CAAQ,CAERC,SAAU,CAAA,CAFF,CAGRC,UAAW,CAAA,CAHH,CAIRC,MAAO,CAAA,CAJC,CAKRC,WAAY,IALJ,CAWR,IAAI,cAAJ,EAAsBC,SAAAC,gBAAtB,EAAmDC,SAAAC,eAAnD,EAA2G,CAA3G,EAA+ED,SAAAC,eAA/E,CAEIR,OAAAG,MAAA,CAAc,CAAA,CAGlB,IAAII,SAAAE,iBAAJ,EAAkCF,SAAAG,eAAlC,CAEIV,OAAAE,UAAA,CAAkB,CAAA,CAGlBK,UAAAI,YAAJ,GAEIX,OAAAC,SAFJ;AAEqB,CAAA,CAFrB,CAKKH,OAAAc,SAAL,GAGQ,SAAJ,EAAiBC,OAAjB,EAA4Bd,OAAAe,GAA5B,EAA0C,YAA1C,EAA0DD,OAA1D,CAGIb,OAAAI,WAHJ,CAGuB,OAHvB,CAKS,cAAJ,EAAsBS,OAAtB,CAGDb,OAAAI,WAHC,CAGkB,YAHlB,CAKIL,OAAAgB,QALJ,EAKuB,kBALvB,EAK6CF,OAL7C,GAQDb,OAAAI,WARC,CAQkB,gBARlB,CART,CAuBJR,OAAAC,QAAA,CAHWG,OAtE6F;",
"sources":["node_modules/Phaser/src/device/Input.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$device$Input\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar OS = require('./OS');\r\nvar Browser = require('./Browser');\r\n\r\n/**\r\n * Determines the input support of the browser running this Phaser Game instance.\r\n * These values are read-only and populated during the boot sequence of the game.\r\n * They are then referenced by internal game systems and are available for you to access\r\n * via `this.sys.game.device.input` from within any Scene.\r\n * \r\n * @typedef {object} Phaser.Device.Input\r\n * @since 3.0.0\r\n * \r\n * @property {?string} wheelType - The newest type of Wheel/Scroll event supported: 'wheel', 'mousewheel', 'DOMMouseScroll'\r\n * @property {boolean} gamepads - Is navigator.getGamepads available?\r\n * @property {boolean} mspointer - Is mspointer available?\r\n * @property {boolean} touch - Is touch available?\r\n */\r\nvar Input = {\r\n\r\n    gamepads: false,\r\n    mspointer: false,\r\n    touch: false,\r\n    wheelEvent: null\r\n    \r\n};\r\n\r\nfunction init ()\r\n{\r\n    if ('ontouchstart' in document.documentElement || (navigator.maxTouchPoints && navigator.maxTouchPoints >= 1))\r\n    {\r\n        Input.touch = true;\r\n    }\r\n\r\n    if (navigator.msPointerEnabled || navigator.pointerEnabled)\r\n    {\r\n        Input.mspointer = true;\r\n    }\r\n\r\n    if (navigator.getGamepads)\r\n    {\r\n        Input.gamepads = true;\r\n    }\r\n\r\n    if (!OS.cocoonJS)\r\n    {\r\n        // See https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n        if ('onwheel' in window || (Browser.ie && 'WheelEvent' in window))\r\n        {\r\n            // DOM3 Wheel Event: FF 17+, IE 9+, Chrome 31+, Safari 7+\r\n            Input.wheelEvent = 'wheel';\r\n        }\r\n        else if ('onmousewheel' in window)\r\n        {\r\n            // Non-FF legacy: IE 6-9, Chrome 1-31, Safari 5-7.\r\n            Input.wheelEvent = 'mousewheel';\r\n        }\r\n        else if (Browser.firefox && 'MouseScrollEvent' in window)\r\n        {\r\n            // FF prior to 17. This should probably be scrubbed.\r\n            Input.wheelEvent = 'DOMMouseScroll';\r\n        }\r\n    }\r\n\r\n    return Input;\r\n}\r\n\r\nmodule.exports = init();\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","OS","Browser","Input","gamepads","mspointer","touch","wheelEvent","document","documentElement","navigator","maxTouchPoints","msPointerEnabled","pointerEnabled","getGamepads","cocoonJS","window","ie","firefox"]
}
