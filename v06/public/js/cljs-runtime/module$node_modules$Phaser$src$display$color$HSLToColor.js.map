{
"version":3,
"file":"module$node_modules$Phaser$src$display$color$HSLToColor.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOpH,IAAIC,MAAQH,OAAA,CAAQ,oDAAR,CAAZ,CACII,eAAiBJ,OAAA,CAAQ,6DAAR,CAoCrBC,OAAAC,QAAA,CAtBiBG,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAC1B,CAEI,IAAIC,EAAID,CAAR,CACIE,EAAIF,CADR,CAEIG,EAAIH,CAEE,EAAV,GAAID,CAAJ,GAEQK,CAKJ,CALa,EAAL,CAACJ,CAAD,CAAYA,CAAZ,EAAiB,CAAjB,CAAqBD,CAArB,EAA0BC,CAA1B,CAA8BD,CAA9B,CAAkCC,CAAlC,CAAsCD,CAK9C,CAJIM,CAIJ,CAJQ,CAIR,CAJYL,CAIZ,CAJgBI,CAIhB,CAFAH,CAEA,CAFIL,cAAA,CAAeS,CAAf,CAAkBD,CAAlB,CAAqBN,CAArB,CAAyB,CAAzB,CAA6B,CAA7B,CAEJ,CADAI,CACA,CADIN,cAAA,CAAeS,CAAf,CAAkBD,CAAlB,CAAqBN,CAArB,CACJ,CAAAK,CAAA,CAAIP,cAAA,CAAeS,CAAf,CAAkBD,CAAlB,CAAqBN,CAArB,CAAyB,CAAzB,CAA6B,CAA7B,CAPR,CAYA,OAAOQ,CAFKC,IAAIZ,KAETW,SAAA,CAAcL,CAAd,CAAiBC,CAAjB,CAAoBC,CAApB,CAAuB,CAAvB,CAlBX,CAvBoH;",
"sources":["node_modules/Phaser/src/display/color/HSLToColor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$display$color$HSLToColor\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar Color = require('./Color');\nvar HueToComponent = require('./HueToComponent');\n\n/**\n * Converts HSL (hue, saturation and lightness) values to a Phaser Color object.\n *\n * @function Phaser.Display.Color.HSLToColor\n * @since 3.0.0\n *\n * @param {number} h - The hue value in the range 0 to 1.\n * @param {number} s - The saturation value in the range 0 to 1.\n * @param {number} l - The lightness value in the range 0 to 1.\n *\n * @return {Phaser.Display.Color} A Color object created from the results of the h, s and l values.\n */\nvar HSLToColor = function (h, s, l)\n{\n    // achromatic by default\n    var r = l;\n    var g = l;\n    var b = l;\n\n    if (s !== 0)\n    {\n        var q = (l < 0.5) ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n\n        r = HueToComponent(p, q, h + 1 / 3);\n        g = HueToComponent(p, q, h);\n        b = HueToComponent(p, q, h - 1 / 3);\n    }\n\n    var color = new Color();\n\n    return color.setGLTo(r, g, b, 1);\n};\n\nmodule.exports = HSLToColor;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Color","HueToComponent","HSLToColor","h","s","l","r","g","b","q","p","setGLTo","color"]
}
