shadow$provide.module$node_modules$$formatjs$intl$src$create_intl=function(global,require,module,exports){function messagesContainAst(messages){messages=messages?messages[Object.keys(messages)[0]]:void 0;return"object"===typeof messages&&!!messages}Object.defineProperty(exports,"__esModule",{value:!0});exports.createIntl=void 0;var tslib_1=require("module$node_modules$tslib$tslib"),utils_1=require("module$node_modules$$formatjs$intl$src$utils"),error_1=require("module$node_modules$$formatjs$intl$src$error"),
number_1=require("module$node_modules$$formatjs$intl$src$number"),relativeTime_1=require("module$node_modules$$formatjs$intl$src$relativeTime"),dateTime_1=require("module$node_modules$$formatjs$intl$src$dateTime"),plural_1=require("module$node_modules$$formatjs$intl$src$plural"),message_1=require("module$node_modules$$formatjs$intl$src$message"),list_1=require("module$node_modules$$formatjs$intl$src$list"),displayName_1=require("module$node_modules$$formatjs$intl$src$displayName");exports.createIntl=
function(config,cache){cache=utils_1.createFormatters(cache);var resolvedConfig=tslib_1.__assign(tslib_1.__assign({},utils_1.DEFAULT_INTL_CONFIG),config),locale=resolvedConfig.locale,defaultLocale=resolvedConfig.defaultLocale,onError=resolvedConfig.onError;locale?!Intl.NumberFormat.supportedLocalesOf(locale).length&&onError?onError(new error_1.MissingDataError('Missing locale data for locale: "'+locale+'" in Intl.NumberFormat. Using default locale: "'+defaultLocale+'" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details')):
!Intl.DateTimeFormat.supportedLocalesOf(locale).length&&onError&&onError(new error_1.MissingDataError('Missing locale data for locale: "'+locale+'" in Intl.DateTimeFormat. Using default locale: "'+defaultLocale+'" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details')):(onError&&onError(new error_1.InvalidConfigError('"locale" was not configured, using "'+defaultLocale+'" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details')),resolvedConfig.locale=
resolvedConfig.defaultLocale||"en");resolvedConfig.defaultRichTextElements&&!messagesContainAst(resolvedConfig.messages||{})&&console.warn('[@formatjs/intl] "defaultRichTextElements" was specified but "message" was not pre-compiled. \nPlease consider using "@formatjs/cli" to pre-compile your messages for performance.\nFor more details see https://formatjs.io/docs/getting-started/message-distribution');return tslib_1.__assign(tslib_1.__assign({},resolvedConfig),{formatters:cache,formatNumber:number_1.formatNumber.bind(null,
resolvedConfig,cache.getNumberFormat),formatNumberToParts:number_1.formatNumberToParts.bind(null,resolvedConfig,cache.getNumberFormat),formatRelativeTime:relativeTime_1.formatRelativeTime.bind(null,resolvedConfig,cache.getRelativeTimeFormat),formatDate:dateTime_1.formatDate.bind(null,resolvedConfig,cache.getDateTimeFormat),formatDateToParts:dateTime_1.formatDateToParts.bind(null,resolvedConfig,cache.getDateTimeFormat),formatTime:dateTime_1.formatTime.bind(null,resolvedConfig,cache.getDateTimeFormat),
formatDateTimeRange:dateTime_1.formatDateTimeRange.bind(null,resolvedConfig,cache.getDateTimeFormat),formatTimeToParts:dateTime_1.formatTimeToParts.bind(null,resolvedConfig,cache.getDateTimeFormat),formatPlural:plural_1.formatPlural.bind(null,resolvedConfig,cache.getPluralRules),formatMessage:message_1.formatMessage.bind(null,resolvedConfig,cache),formatList:list_1.formatList.bind(null,resolvedConfig,cache.getListFormat),formatDisplayName:displayName_1.formatDisplayName.bind(null,resolvedConfig,cache.getDisplayNames),
__addMessages:function(messages){var existingMessagesContainAst=messagesContainAst(resolvedConfig.messages),mergingMessagesContainAst=messagesContainAst(messages);if(config.onError&&(existingMessagesContainAst&&!mergingMessagesContainAst||!existingMessagesContainAst&&mergingMessagesContainAst))config.onError(new error_1.InvalidConfigError("Cannot mix AST \x26 non-AST messages for locale "+resolvedConfig.locale));resolvedConfig.messages=tslib_1.__assign(tslib_1.__assign({},resolvedConfig.messages),
messages)}})}}
//# sourceMappingURL=module$node_modules$$formatjs$intl$src$create_intl.js.map
