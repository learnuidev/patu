shadow$provide.module$node_modules$Phaser$src$physics$matter_js$lib$core$Metrics=function(global,require,module,exports){var Metrics={};module.exports=Metrics;var Composite=require("module$node_modules$Phaser$src$physics$matter_js$lib$body$Composite"),Common=require("module$node_modules$Phaser$src$physics$matter_js$lib$core$Common");(function(){Metrics.create=function(options){return Common.extend({extended:!1,narrowDetections:0,narrowphaseTests:0,narrowReuse:0,narrowReuseCount:0,midphaseTests:0,
broadphaseTests:0,narrowEff:1E-4,midEff:1E-4,broadEff:1E-4,collisions:0,buckets:0,bodies:0,pairs:0},!1,options)};Metrics.reset=function(metrics){metrics.extended&&(metrics.narrowDetections=0,metrics.narrowphaseTests=0,metrics.narrowReuse=0,metrics.narrowReuseCount=0,metrics.midphaseTests=0,metrics.broadphaseTests=0,metrics.narrowEff=0,metrics.midEff=0,metrics.broadEff=0,metrics.collisions=0,metrics.buckets=0,metrics.pairs=0,metrics.bodies=0)};Metrics.update=function(metrics,engine){if(metrics.extended){var bodies=
Composite.allBodies(engine.world);metrics.collisions=metrics.narrowDetections;metrics.pairs=engine.pairs.list.length;metrics.bodies=bodies.length;metrics.midEff=(metrics.narrowDetections/(metrics.midphaseTests||1)).toFixed(2);metrics.narrowEff=(metrics.narrowDetections/(metrics.narrowphaseTests||1)).toFixed(2);metrics.broadEff=(1-metrics.broadphaseTests/(bodies.length||1)).toFixed(2);metrics.narrowReuse=(metrics.narrowReuseCount/(metrics.narrowphaseTests||1)).toFixed(2)}}})()}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$lib$core$Metrics.js.map
