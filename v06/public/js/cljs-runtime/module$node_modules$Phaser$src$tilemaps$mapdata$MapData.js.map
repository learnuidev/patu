{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$mapdata$MapData.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOhHC,MAAAA,CAAQH,OAAA,CAAQ,4CAAR,CACZ,KAAII,aAAeJ,OAAA,CAAQ,0DAAR,CAefK,QAAAA,CAAU,IAAIF,MAAJ,CAAU,CAEpBG,WAEAD,QAAiB,CAACE,MAAD,CACjB,CACmBC,IAAAA,EAAf,GAAID,MAAJ,GAA4BA,MAA5B,CAAqC,EAArC,CASA,KAAAE,KAAA,CAAYL,YAAA,CAAaG,MAAb,CAAqB,MAArB,CAA6B,KAA7B,CASZ,KAAAG,MAAA,CAAaN,YAAA,CAAaG,MAAb,CAAqB,OAArB,CAA8B,CAA9B,CASb,KAAAI,OAAA,CAAcP,YAAA,CAAaG,MAAb,CAAqB,QAArB,CAA+B,CAA/B,CASd,KAAAK,UAAA,CAAiBR,YAAA,CAAaG,MAAb,CAAqB,WAArB;AAAkC,CAAlC,CASjB,KAAAM,WAAA,CAAkBT,YAAA,CAAaG,MAAb,CAAqB,YAArB,CAAmC,CAAnC,CASlB,KAAAO,cAAA,CAAqBV,YAAA,CAAaG,MAAb,CAAqB,eAArB,CAAsC,IAAAG,MAAtC,CAAmD,IAAAE,UAAnD,CASrB,KAAAG,eAAA,CAAsBX,YAAA,CAAaG,MAAb,CAAqB,gBAArB,CAAuC,IAAAI,OAAvC,CAAqD,IAAAE,WAArD,CAStB,KAAAG,OAAA,CAAcZ,YAAA,CAAaG,MAAb,CAAqB,QAArB,CAA+B,IAA/B,CASd,KAAAU,YAAA,CAAmBb,YAAA,CAAaG,MAAb,CAAqB,aAArB,CAAoC,YAApC,CASnB,KAAAW,YAAA,CAAmBd,YAAA,CAAaG,MAAb,CAAqB,aAArB,CAAoC,YAApC,CASnB,KAAAY,QAAA,CAAef,YAAA,CAAaG,MAAb,CAAqB,SAArB,CAAgC,GAAhC,CASf,KAAAa,WAAA,CAAkBhB,YAAA,CAAaG,MAAb,CAAqB,YAArB,CAAmC,EAAnC,CASlB;IAAAc,OAAA,CAAcjB,YAAA,CAAaG,MAAb,CAAqB,QAArB,CAA+B,EAA/B,CASd,KAAAe,OAAA,CAAclB,YAAA,CAAaG,MAAb,CAAqB,QAArB,CAA+B,EAA/B,CASd,KAAAgB,QAAA,CAAenB,YAAA,CAAaG,MAAb,CAAqB,SAArB,CAAgC,EAAhC,CASf,KAAAiB,UAAA,CAAiBpB,YAAA,CAAaG,MAAb,CAAqB,WAArB,CAAkC,EAAlC,CASjB,KAAAkB,SAAA,CAAgBrB,YAAA,CAAaG,MAAb,CAAqB,UAArB,CAAiC,EAAjC,CAShB,KAAAmB,iBAAA,CAAwBtB,YAAA,CAAaG,MAAb,CAAqB,kBAArB,CAAyC,EAAzC,CASxB,KAAAoB,MAAA,CAAavB,YAAA,CAAaG,MAAb,CAAqB,OAArB,CAA8B,EAA9B,CA5KjB,CALoB,CAAV,CAsLdN,OAAAC,QAAA,CAAiBG,OA7MmG;",
"sources":["node_modules/Phaser/src/tilemaps/mapdata/MapData.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$mapdata$MapData\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\n\r\n/**\r\n * @classdesc\r\n * A class for representing data about a map. Maps are parsed from CSV, Tiled, etc. into this\r\n * format. A Tilemap object get a copy of this data and then unpacks the needed properties into\r\n * itself.\r\n *\r\n * @class MapData\r\n * @memberOf Phaser.Tilemaps\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {object} [config] - [description]\r\n */\r\nvar MapData = new Class({\r\n\r\n    initialize:\r\n\r\n    function MapData (config)\r\n    {\r\n        if (config === undefined) { config = {}; }\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#name\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.name = GetFastValue(config, 'name', 'map');\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#width\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.width = GetFastValue(config, 'width', 0);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#height\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.height = GetFastValue(config, 'height', 0);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#tileWidth\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.tileWidth = GetFastValue(config, 'tileWidth', 0);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#tileHeight\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.tileHeight = GetFastValue(config, 'tileHeight', 0);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#widthInPixels\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.widthInPixels = GetFastValue(config, 'widthInPixels', this.width * this.tileWidth);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#heightInPixels\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.heightInPixels = GetFastValue(config, 'heightInPixels', this.height * this.tileHeight);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#format\r\n         * @type {integer}\r\n         * @since 3.0.0\r\n         */\r\n        this.format = GetFastValue(config, 'format', null);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#orientation\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.orientation = GetFastValue(config, 'orientation', 'orthogonal');\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#renderOrder\r\n         * @type {string}\r\n         * @since 3.12.0\r\n         */\r\n        this.renderOrder = GetFastValue(config, 'renderOrder', 'right-down');\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#version\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.version = GetFastValue(config, 'version', '1');\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#properties\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.properties = GetFastValue(config, 'properties', {});\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#layers\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.layers = GetFastValue(config, 'layers', []);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#images\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.images = GetFastValue(config, 'images', []);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#objects\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.objects = GetFastValue(config, 'objects', {});\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#collision\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.collision = GetFastValue(config, 'collision', {});\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#tilesets\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.tilesets = GetFastValue(config, 'tilesets', []);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#imageCollections\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.imageCollections = GetFastValue(config, 'imageCollections', []);\r\n\r\n        /**\r\n         * [description]\r\n         * \r\n         * @name Phaser.Tilemaps.MapData#tiles\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.tiles = GetFastValue(config, 'tiles', []);\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = MapData;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","GetFastValue","MapData","initialize","config","undefined","name","width","height","tileWidth","tileHeight","widthInPixels","heightInPixels","format","orientation","renderOrder","version","properties","layers","images","objects","collision","tilesets","imageCollections","tiles"]
}
