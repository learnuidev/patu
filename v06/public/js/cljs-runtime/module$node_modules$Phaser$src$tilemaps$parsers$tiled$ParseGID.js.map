{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$parsers$tiled$ParseGID.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,+DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoF3HD,MAAAC,QAAA,CA9DeC,QAAS,CAACC,GAAD,CACxB,CACI,IAAIC,kBAAoB,CAAA,EAAQD,GAAR,CAjBHE,UAiBG,CAAxB,CACIC,gBAAkB,CAAA,EAAQH,GAAR,CAjBHI,UAiBG,CADtB,CAEIC,oBAAsB,CAAA,EAAQL,GAAR,CAjBFM,SAiBE,CAF1B,CAMIC,SAAW,CANf,CAOIC,QAAU,CAAA,CAEVP,kBAAJ,EAAyBE,eAAzB,EAA4CE,mBAA5C,EAEIE,QACA,CADWE,IAAAC,GACX,CADqB,CACrB,CAAAF,OAAA,CAAU,CAAA,CAHd,EAKSP,iBAAJ,EAAyBE,eAAzB,EAA4C,CAACE,mBAA7C,EAEDE,QACA,CADWE,IAAAC,GACX,CAAAF,OAAA,CAAU,CAAA,CAHT,EAKIP,iBAAJ,EAAyB,CAACE,eAA1B,EAA6CE,mBAA7C;CAEDE,QACA,CADWE,IAAAC,GACX,CADqB,CACrB,CAAAF,OAAA,CAAU,CAAA,CAHT,EAKIP,CAAAA,iBAAJ,EAA0BE,eAA1B,EAA8CE,mBAA9C,CAKI,CAACJ,iBAAL,EAA0BE,eAA1B,EAA6CE,mBAA7C,EAEDE,QACA,CADW,CACX,CADeE,IAAAC,GACf,CADyB,CACzB,CAAAF,OAAA,CAAU,CAAA,CAHT,EAKKP,iBAAL,EAA0BE,CAAAA,eAA1B,EAA8CE,mBAA9C,CAKKJ,iBAAL,EAA2BE,eAA3B,EAA8CE,CAAAA,mBAA9C,CAKKJ,iBALL,EAK2BE,eAL3B,EAK+CE,mBAL/C,GAODE,QACA,CADW,CACX,CAAAC,OAAA,CAAU,CAAA,CART,GAEDD,QACA,CADW,CACX,CADeE,IAAAC,GACf,CADyB,CACzB,CAAAF,OAAA,CAAU,CAAA,CAHT,CALA,EAEDD,QACA,CADWE,IAAAC,GACX,CAAAF,OAAA,CAAU,CAAA,CAHT,CAVA,EAEDD,QACA,CADW,CACX,CAAAC,OAAA,CAAU,CAAA,CAHT,CA0BL,OAAO,CACHR,IAhDEA,GAgDFA,CAhDQ,SA+CL,CAEHC,kBAAmBA,iBAFhB;AAGHE,gBAAiBA,eAHd,CAIHE,oBAAqBA,mBAJlB,CAKHE,SAAUA,QALP,CAMHC,QAASA,OANN,CAnDX,CAvB2H;",
"sources":["node_modules/Phaser/src/tilemaps/parsers/tiled/ParseGID.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$parsers$tiled$ParseGID\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar FLIPPED_HORIZONTAL = 0x80000000;\r\nvar FLIPPED_VERTICAL = 0x40000000;\r\nvar FLIPPED_ANTI_DIAGONAL = 0x20000000; // Top-right is swapped with bottom-left corners\r\n\r\n/**\r\n * See Tiled documentation on tile flipping:\r\n * http://docs.mapeditor.org/en/latest/reference/tmx-map-format/\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Tiled.ParseGID\r\n * @since 3.0.0\r\n *\r\n * @param {number} gid - [description]\r\n *\r\n * @return {object} [description]\r\n */\r\nvar ParseGID = function (gid)\r\n{\r\n    var flippedHorizontal = Boolean(gid & FLIPPED_HORIZONTAL);\r\n    var flippedVertical = Boolean(gid & FLIPPED_VERTICAL);\r\n    var flippedAntiDiagonal = Boolean(gid & FLIPPED_ANTI_DIAGONAL);\r\n    gid = gid & ~(FLIPPED_HORIZONTAL | FLIPPED_VERTICAL | FLIPPED_ANTI_DIAGONAL);\r\n\r\n    // Parse the flip flags into something Phaser can use\r\n    var rotation = 0;\r\n    var flipped = false;\r\n\r\n    if (flippedHorizontal && flippedVertical && flippedAntiDiagonal)\r\n    {\r\n        rotation = Math.PI / 2;\r\n        flipped = true;\r\n    }\r\n    else if (flippedHorizontal && flippedVertical && !flippedAntiDiagonal)\r\n    {\r\n        rotation = Math.PI;\r\n        flipped = false;\r\n    }\r\n    else if (flippedHorizontal && !flippedVertical && flippedAntiDiagonal)\r\n    {\r\n        rotation = Math.PI / 2;\r\n        flipped = false;\r\n    }\r\n    else if (flippedHorizontal && !flippedVertical && !flippedAntiDiagonal)\r\n    {\r\n        rotation = 0;\r\n        flipped = true;\r\n    }\r\n    else if (!flippedHorizontal && flippedVertical && flippedAntiDiagonal)\r\n    {\r\n        rotation = 3 * Math.PI / 2;\r\n        flipped = false;\r\n    }\r\n    else if (!flippedHorizontal && flippedVertical && !flippedAntiDiagonal)\r\n    {\r\n        rotation = Math.PI;\r\n        flipped = true;\r\n    }\r\n    else if (!flippedHorizontal && !flippedVertical && flippedAntiDiagonal)\r\n    {\r\n        rotation = 3 * Math.PI / 2;\r\n        flipped = true;\r\n    }\r\n    else if (!flippedHorizontal && !flippedVertical && !flippedAntiDiagonal)\r\n    {\r\n        rotation = 0;\r\n        flipped = false;\r\n    }\r\n\r\n    return {\r\n        gid: gid,\r\n        flippedHorizontal: flippedHorizontal,\r\n        flippedVertical: flippedVertical,\r\n        flippedAntiDiagonal: flippedAntiDiagonal,\r\n        rotation: rotation,\r\n        flipped: flipped\r\n    };\r\n};\r\n\r\nmodule.exports = ParseGID;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","ParseGID","gid","flippedHorizontal","FLIPPED_HORIZONTAL","flippedVertical","FLIPPED_VERTICAL","flippedAntiDiagonal","FLIPPED_ANTI_DIAGONAL","rotation","flipped","Math","PI"]
}
