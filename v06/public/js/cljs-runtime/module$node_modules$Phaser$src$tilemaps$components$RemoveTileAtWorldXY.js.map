{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$components$RemoveTileAtWorldXY.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOnI,IAAIC,aAAeH,OAAA,CAAQ,iEAAR,CAAnB,CACII,aAAeJ,OAAA,CAAQ,iEAAR,CADnB,CAEIK,aAAeL,OAAA,CAAQ,iEAAR,CA0BnBC,OAAAC,QAAA,CAP0BI,QAAS,CAACC,MAAD,CAASC,MAAT,CAAiBC,eAAjB,CAAkCC,gBAAlC,CAAoDC,MAApD,CAA4DC,KAA5D,CACnC,CACQC,MAAAA,CAAQT,YAAA,CAAaG,MAAb;AAAqB,CAAA,CAArB,CAA2BI,MAA3B,CAAmCC,KAAnC,CACRE,OAAAA,CAAQT,YAAA,CAAaG,MAAb,CAAqB,CAAA,CAArB,CAA2BG,MAA3B,CAAmCC,KAAnC,CACZ,OAAOT,aAAA,CAAaU,MAAb,CAAoBC,MAApB,CAA2BL,eAA3B,CAA4CC,gBAA5C,CAA8DE,KAA9D,CAHX,CA7BmI;",
"sources":["node_modules/Phaser/src/tilemaps/components/RemoveTileAtWorldXY.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$components$RemoveTileAtWorldXY\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar RemoveTileAt = require('./RemoveTileAt');\r\nvar WorldToTileX = require('./WorldToTileX');\r\nvar WorldToTileY = require('./WorldToTileY');\r\n\r\n/**\r\n * Removes the tile at the given world coordinates in the specified layer and updates the layer's\r\n * collision information.\r\n *\r\n * @function Phaser.Tilemaps.Components.RemoveTileAtWorldXY\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {number} worldX - The x coordinate, in pixels.\r\n * @param {number} worldY - The y coordinate, in pixels.\r\n * @param {boolean} [replaceWithNull=true] - If true, this will replace the tile at the specified location with null instead of a Tile with an index of -1.\r\n * @param {boolean} [recalculateFaces=true] - `true` if the faces data should be recalculated.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when calculating the tile index from the world values.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n *\r\n * @return {Phaser.Tilemaps.Tile} The Tile object that was removed.\r\n */\r\nvar RemoveTileAtWorldXY = function (worldX, worldY, replaceWithNull, recalculateFaces, camera, layer)\r\n{\r\n    var tileX = WorldToTileX(worldX, true, camera, layer);\r\n    var tileY = WorldToTileY(worldY, true, camera, layer);\r\n    return RemoveTileAt(tileX, tileY, replaceWithNull, recalculateFaces, layer);\r\n};\r\n\r\nmodule.exports = RemoveTileAtWorldXY;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","RemoveTileAt","WorldToTileX","WorldToTileY","RemoveTileAtWorldXY","worldX","worldY","replaceWithNull","recalculateFaces","camera","layer","tileX","tileY"]
}
