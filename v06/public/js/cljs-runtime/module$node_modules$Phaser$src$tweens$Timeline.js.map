{
"version":3,
"file":"module$node_modules$Phaser$src$tweens$Timeline.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/Phaser/src/tweens/Timeline.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tweens$Timeline\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar EventEmitter = require('eventemitter3');\r\nvar TweenBuilder = require('./builders/TweenBuilder');\r\nvar TWEEN_CONST = require('./tween/const');\r\n\r\n/**\r\n * @classdesc\r\n * [description]\r\n *\r\n * @class Timeline\r\n * @memberOf Phaser.Tweens\r\n * @extends Phaser.Events.EventEmitter\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Tweens.TweenManager} manager - [description]\r\n */\r\nvar Timeline = new Class({\r\n\r\n    Extends: EventEmitter,\r\n\r\n    initialize:\r\n\r\n    function Timeline (manager)\r\n    {\r\n        EventEmitter.call(this);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tweens.Timeline#manager\r\n         * @type {Phaser.Tweens.TweenManager}\r\n         * @since 3.0.0\r\n         */\r\n        this.manager = manager;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tweens.Timeline#isTimeline\r\n         * @type {boolean}\r\n         * @default true\r\n         * @since 3.0.0\r\n         */\r\n        this.isTimeline = true;\r\n\r\n        /**\r\n         * An array of Tween objects, each containing a unique property and target being tweened.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#data\r\n         * @type {array}\r\n         * @default []\r\n         * @since 3.0.0\r\n         */\r\n        this.data = [];\r\n\r\n        /**\r\n         * data array doesn't usually change, so we can cache the length\r\n         *\r\n         * @name Phaser.Tweens.Timeline#totalData\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalData = 0;\r\n\r\n        /**\r\n         * If true then duration, delay, etc values are all frame totals.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#useFrames\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.useFrames = false;\r\n\r\n        /**\r\n         * Scales the time applied to this Tween. A value of 1 runs in real-time. A value of 0.5 runs 50% slower, and so on.\r\n         * Value isn't used when calculating total duration of the tween, it's a run-time delta adjustment only.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#timeScale\r\n         * @type {number}\r\n         * @default 1\r\n         * @since 3.0.0\r\n         */\r\n        this.timeScale = 1;\r\n\r\n        /**\r\n         * Loop this tween? Can be -1 for an infinite loop, or an integer.\r\n         * When enabled it will play through ALL TweenDatas again (use TweenData.repeat to loop a single TD)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#loop\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.loop = 0;\r\n\r\n        /**\r\n         * Time in ms/frames before the tween loops.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#loopDelay\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.loopDelay = 0;\r\n\r\n        /**\r\n         * How many loops are left to run?\r\n         *\r\n         * @name Phaser.Tweens.Timeline#loopCounter\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.loopCounter = 0;\r\n\r\n        /**\r\n         * Time in ms/frames before the 'onComplete' event fires. This never fires if loop = true (as it never completes)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#completeDelay\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.completeDelay = 0;\r\n\r\n        /**\r\n         * Countdown timer (used by loopDelay and completeDelay)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#countdown\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.countdown = 0;\r\n\r\n        /**\r\n         * The current state of the tween\r\n         *\r\n         * @name Phaser.Tweens.Timeline#state\r\n         * @type {integer}\r\n         * @since 3.0.0\r\n         */\r\n        this.state = TWEEN_CONST.PENDING_ADD;\r\n\r\n        /**\r\n         * The state of the tween when it was paused (used by Resume)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#_pausedState\r\n         * @type {integer}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._pausedState = TWEEN_CONST.PENDING_ADD;\r\n\r\n        /**\r\n         * Does the Tween start off paused? (if so it needs to be started with Tween.play)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#paused\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.paused = false;\r\n\r\n        /**\r\n         * Elapsed time in ms/frames of this run through the Tween.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#elapsed\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.elapsed = 0;\r\n\r\n        /**\r\n         * Total elapsed time in ms/frames of the entire Tween, including looping.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#totalElapsed\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalElapsed = 0;\r\n\r\n        /**\r\n         * Time in ms/frames for the whole Tween to play through once, excluding loop amounts and loop delays.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#duration\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.duration = 0;\r\n\r\n        /**\r\n         * Value between 0 and 1. The amount through the Tween, excluding loops.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#progress\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.progress = 0;\r\n\r\n        /**\r\n         * Time in ms/frames for all Tweens to complete (including looping)\r\n         *\r\n         * @name Phaser.Tweens.Timeline#totalDuration\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalDuration = 0;\r\n\r\n        /**\r\n         * Value between 0 and 1. The amount through the entire Tween, including looping.\r\n         *\r\n         * @name Phaser.Tweens.Timeline#totalProgress\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalProgress = 0;\r\n\r\n        this.callbacks = {\r\n            onComplete: null,\r\n            onLoop: null,\r\n            onStart: null,\r\n            onUpdate: null,\r\n            onYoyo: null\r\n        };\r\n\r\n        this.callbackScope;\r\n    },\r\n\r\n    /**\r\n     * Sets the value of the time scale applied to this Timeline. A value of 1 runs in real-time. A value of 0.5 runs 50% slower, and so on.\r\n     * Value isn't used when calculating total duration of the tween, it's a run-time delta adjustment only.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#setTimeScale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The time scale value to set.\r\n     *\r\n     * @return {Phaser.Tweens.Timeline} This Timeline object.\r\n     */\r\n    setTimeScale: function (value)\r\n    {\r\n        this.timeScale = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Gets the value of the time scale applied to this Timeline. A value of 1 runs in real-time. A value of 0.5 runs 50% slower, and so on. \r\n     *\r\n     * @method Phaser.Tweens.Timeline#getTimeScale\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The value of the time scale applied to this Tween.\r\n     */\r\n    getTimeScale: function ()\r\n    {\r\n        return this.timeScale;\r\n    },\r\n\r\n    /**\r\n     * Check whether or not the Timeline is playing.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#isPlaying\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if this Timeline is active, otherwise `false`.\r\n     */\r\n    isPlaying: function ()\r\n    {\r\n        return (this.state === TWEEN_CONST.ACTIVE);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#add\r\n     * @since 3.0.0\r\n     *\r\n     * @param {object} config - [description]\r\n     *\r\n     * @return {Phaser.Tweens.Timeline} This Timeline object.\r\n     */\r\n    add: function (config)\r\n    {\r\n        return this.queue(TweenBuilder(this, config));\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#queue\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - [description]\r\n     *\r\n     * @return {Phaser.Tweens.Timeline} This Timeline object.\r\n     */\r\n    queue: function (tween)\r\n    {\r\n        if (!this.isPlaying())\r\n        {\r\n            tween.parent = this;\r\n            tween.parentIsTimeline = true;\r\n\r\n            this.data.push(tween);\r\n\r\n            this.totalData = this.data.length;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#hasOffset\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - [description]\r\n     *\r\n     * @return {boolean} [description]\r\n     */\r\n    hasOffset: function (tween)\r\n    {\r\n        return (tween.offset !== null);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#isOffsetAbsolute\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - [description]\r\n     *\r\n     * @return {boolean} [description]\r\n     */\r\n    isOffsetAbsolute: function (value)\r\n    {\r\n        return (typeof(value) === 'number');\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#isOffsetRelative\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} value - [description]\r\n     *\r\n     * @return {boolean} [description]\r\n     */\r\n    isOffsetRelative: function (value)\r\n    {\r\n        var t = typeof(value);\r\n\r\n        if (t === 'string')\r\n        {\r\n            var op = value[0];\r\n\r\n            if (op === '-' || op === '+')\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#getRelativeOffset\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} value - [description]\r\n     * @param {number} base - [description]\r\n     *\r\n     * @return {number} [description]\r\n     */\r\n    getRelativeOffset: function (value, base)\r\n    {\r\n        var op = value[0];\r\n        var num = parseFloat(value.substr(2));\r\n        var result = base;\r\n\r\n        switch (op)\r\n        {\r\n            case '+':\r\n                result += num;\r\n                break;\r\n\r\n            case '-':\r\n                result -= num;\r\n                break;\r\n        }\r\n\r\n        //  Cannot ever be < 0\r\n        return Math.max(0, result);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#calcDuration\r\n     * @since 3.0.0\r\n     */\r\n    calcDuration: function ()\r\n    {\r\n        var prevEnd = 0;\r\n        var totalDuration = 0;\r\n        var offsetDuration = 0;\r\n\r\n        for (var i = 0; i < this.totalData; i++)\r\n        {\r\n            var tween = this.data[i];\r\n\r\n            tween.init();\r\n\r\n            if (this.hasOffset(tween))\r\n            {\r\n                if (this.isOffsetAbsolute(tween.offset))\r\n                {\r\n                    //  An actual number, so it defines the start point from the beginning of the timeline\r\n                    tween.calculatedOffset = tween.offset;\r\n\r\n                    if (tween.offset === 0)\r\n                    {\r\n                        offsetDuration = 0;\r\n                    }\r\n                }\r\n                else if (this.isOffsetRelative(tween.offset))\r\n                {\r\n                    //  A relative offset (i.e. '-=1000', so starts at 'offset' ms relative to the PREVIOUS Tweens ending time)\r\n                    tween.calculatedOffset = this.getRelativeOffset(tween.offset, prevEnd);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                //  Sequential\r\n                tween.calculatedOffset = offsetDuration;\r\n            }\r\n\r\n            prevEnd = tween.totalDuration + tween.calculatedOffset;\r\n\r\n            totalDuration += tween.totalDuration;\r\n            offsetDuration += tween.totalDuration;\r\n        }\r\n\r\n        //  Excludes loop values\r\n        this.duration = totalDuration;\r\n\r\n        this.loopCounter = (this.loop === -1) ? 999999999999 : this.loop;\r\n\r\n        if (this.loopCounter > 0)\r\n        {\r\n            this.totalDuration = this.duration + this.completeDelay + ((this.duration + this.loopDelay) * this.loopCounter);\r\n        }\r\n        else\r\n        {\r\n            this.totalDuration = this.duration + this.completeDelay;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#init\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} [description]\r\n     */\r\n    init: function ()\r\n    {\r\n        this.calcDuration();\r\n\r\n        this.progress = 0;\r\n        this.totalProgress = 0;\r\n\r\n        if (this.paused)\r\n        {\r\n            this.state = TWEEN_CONST.PAUSED;\r\n\r\n            return false;\r\n        }\r\n        else\r\n        {\r\n            return true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#resetTweens\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} resetFromLoop - [description]\r\n     */\r\n    resetTweens: function (resetFromLoop)\r\n    {\r\n        for (var i = 0; i < this.totalData; i++)\r\n        {\r\n            var tween = this.data[i];\r\n\r\n            tween.play(resetFromLoop);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets a callback for the Tween Manager.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#setCallback\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} type - [description]\r\n     * @param {function} callback - [description]\r\n     * @param {array} [params] - [description]\r\n     * @param {object} [scope] - [description]\r\n     *\r\n     * @return {Phaser.Tweens.Timeline} This Timeline object.\r\n     */\r\n    setCallback: function (type, callback, params, scope)\r\n    {\r\n        if (Timeline.TYPES.indexOf(type) !== -1)\r\n        {\r\n            this.callbacks[type] = { func: callback, scope: scope, params: params };\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Delegates #makeActive to the Tween manager.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#makeActive\r\n     * @since 3.3.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - The tween object to make active.\r\n     *\r\n     * @return {Phaser.Tweens.TweenManager} The Timeline's Tween Manager object.\r\n     */\r\n    makeActive: function (tween)\r\n    {\r\n        return this.manager.makeActive(tween);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#play\r\n     * @since 3.0.0\r\n     */\r\n    play: function ()\r\n    {\r\n        if (this.state === TWEEN_CONST.ACTIVE)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (this.paused)\r\n        {\r\n            this.paused = false;\r\n\r\n            this.manager.makeActive(this);\r\n\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            this.resetTweens(false);\r\n\r\n            this.state = TWEEN_CONST.ACTIVE;\r\n        }\r\n\r\n        var onStart = this.callbacks.onStart;\r\n\r\n        if (onStart)\r\n        {\r\n            onStart.func.apply(onStart.scope, onStart.params);\r\n        }\r\n\r\n        this.emit('start', this);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#nextState\r\n     * @since 3.0.0\r\n     */\r\n    nextState: function ()\r\n    {\r\n        if (this.loopCounter > 0)\r\n        {\r\n            //  Reset the elapsed time\r\n            //  TODO: Probably ought to be set to the remainder from elapsed - duration\r\n            //  as the tweens nearly always over-run by a few ms due to rAf\r\n\r\n            this.elapsed = 0;\r\n            this.progress = 0;\r\n\r\n            this.loopCounter--;\r\n\r\n            var onLoop = this.callbacks.onLoop;\r\n\r\n            if (onLoop)\r\n            {\r\n                onLoop.func.apply(onLoop.scope, onLoop.params);\r\n            }\r\n\r\n            this.emit('loop', this, this.loopCounter);\r\n\r\n            this.resetTweens(true);\r\n\r\n            if (this.loopDelay > 0)\r\n            {\r\n                this.countdown = this.loopDelay;\r\n                this.state = TWEEN_CONST.LOOP_DELAY;\r\n            }\r\n            else\r\n            {\r\n                this.state = TWEEN_CONST.ACTIVE;\r\n            }\r\n        }\r\n        else if (this.completeDelay > 0)\r\n        {\r\n            this.countdown = this.completeDelay;\r\n            this.state = TWEEN_CONST.COMPLETE_DELAY;\r\n        }\r\n        else\r\n        {\r\n            var onComplete = this.callbacks.onComplete;\r\n\r\n            if (onComplete)\r\n            {\r\n                onComplete.func.apply(onComplete.scope, onComplete.params);\r\n            }\r\n\r\n            this.emit('complete', this);\r\n\r\n            this.state = TWEEN_CONST.PENDING_REMOVE;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Returns 'true' if this Timeline has finished and should be removed from the Tween Manager.\r\n     * Otherwise, returns false.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#update\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} timestamp - [description]\r\n     * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n     *\r\n     * @return {boolean} Returns `true` if this Timeline has finished and should be removed from the Tween Manager.\r\n     */\r\n    update: function (timestamp, delta)\r\n    {\r\n        if (this.state === TWEEN_CONST.PAUSED)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var rawDelta = delta;\r\n\r\n        if (this.useFrames)\r\n        {\r\n            delta = 1 * this.manager.timeScale;\r\n        }\r\n\r\n        delta *= this.timeScale;\r\n\r\n        this.elapsed += delta;\r\n        this.progress = Math.min(this.elapsed / this.duration, 1);\r\n\r\n        this.totalElapsed += delta;\r\n        this.totalProgress = Math.min(this.totalElapsed / this.totalDuration, 1);\r\n\r\n        switch (this.state)\r\n        {\r\n            case TWEEN_CONST.ACTIVE:\r\n\r\n                var stillRunning = this.totalData;\r\n\r\n                for (var i = 0; i < this.totalData; i++)\r\n                {\r\n                    var tween = this.data[i];\r\n\r\n                    if (tween.update(timestamp, rawDelta))\r\n                    {\r\n                        stillRunning--;\r\n                    }\r\n                }\r\n\r\n                var onUpdate = this.callbacks.onUpdate;\r\n\r\n                if (onUpdate)\r\n                {\r\n                    onUpdate.func.apply(onUpdate.scope, onUpdate.params);\r\n                }\r\n\r\n                this.emit('update', this);\r\n\r\n                //  Anything still running? If not, we're done\r\n                if (stillRunning === 0)\r\n                {\r\n                    this.nextState();\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.LOOP_DELAY:\r\n\r\n                this.countdown -= delta;\r\n\r\n                if (this.countdown <= 0)\r\n                {\r\n                    this.state = TWEEN_CONST.ACTIVE;\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.COMPLETE_DELAY:\r\n\r\n                this.countdown -= delta;\r\n\r\n                if (this.countdown <= 0)\r\n                {\r\n                    var onComplete = this.callbacks.onComplete;\r\n\r\n                    if (onComplete)\r\n                    {\r\n                        onComplete.func.apply(onComplete.scope, onComplete.params);\r\n                    }\r\n\r\n                    this.emit('complete', this);\r\n\r\n                    this.state = TWEEN_CONST.PENDING_REMOVE;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        return (this.state === TWEEN_CONST.PENDING_REMOVE);\r\n    },\r\n\r\n    /**\r\n     * Stops the Tween immediately, whatever stage of progress it is at and flags it for removal by the TweenManager.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#stop\r\n     * @since 3.0.0\r\n     */\r\n    stop: function ()\r\n    {\r\n        this.state = TWEEN_CONST.PENDING_REMOVE;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#pause\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Tweens.Timeline} This Timeline object.\r\n     */\r\n    pause: function ()\r\n    {\r\n        if (this.state === TWEEN_CONST.PAUSED)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.paused = true;\r\n\r\n        this._pausedState = this.state;\r\n\r\n        this.state = TWEEN_CONST.PAUSED;\r\n\r\n        this.emit('pause', this);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#resume\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Tweens.Timeline} This Timeline object.\r\n     */\r\n    resume: function ()\r\n    {\r\n        if (this.state === TWEEN_CONST.PAUSED)\r\n        {\r\n            this.paused = false;\r\n\r\n            this.state = this._pausedState;\r\n        }\r\n\r\n        this.emit('resume', this);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Timeline#hasTarget\r\n     * @since 3.0.0\r\n     *\r\n     * @param {object} target - [description]\r\n     *\r\n     * @return {boolean} [description]\r\n     */\r\n    hasTarget: function (target)\r\n    {\r\n        for (var i = 0; i < this.data.length; i++)\r\n        {\r\n            if (this.data[i].hasTarget(target))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Stops all the Tweens in the Timeline immediately, whatever stage of progress they are at and flags them for removal by the TweenManager.\r\n     *\r\n     * @method Phaser.Tweens.Timeline#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        for (var i = 0; i < this.data.length; i++)\r\n        {\r\n            this.data[i].stop();\r\n        }\r\n\r\n    }\r\n});\r\n\r\nTimeline.TYPES = [ 'onStart', 'onUpdate', 'onLoop', 'onComplete', 'onYoyo' ];\r\n\r\nmodule.exports = Timeline;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","EventEmitter","TweenBuilder","TWEEN_CONST","Timeline","Extends","initialize","manager","call","isTimeline","data","totalData","useFrames","timeScale","countdown","completeDelay","loopCounter","loopDelay","loop","_pausedState","state","PENDING_ADD","paused","totalProgress","totalDuration","progress","duration","totalElapsed","elapsed","callbacks","onComplete","onLoop","onStart","onUpdate","onYoyo","callbackScope","setTimeScale","value","getTimeScale","isPlaying","ACTIVE","add","config","queue","tween","parent","parentIsTimeline","push","length","hasOffset","offset","isOffsetAbsolute","isOffsetRelative","t","op","getRelativeOffset","base","num","parseFloat","substr","result","Math","max","calcDuration","prevEnd","offsetDuration","i","init","calculatedOffset","PAUSED","resetTweens","resetFromLoop","play","setCallback","type","callback","params","scope","TYPES","indexOf","func","makeActive","apply","emit","nextState","LOOP_DELAY","COMPLETE_DELAY","PENDING_REMOVE","update","timestamp","delta","rawDelta","min","stillRunning","stop","pause","resume","hasTarget","target","destroy"]
}
