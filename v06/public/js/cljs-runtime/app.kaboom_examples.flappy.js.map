{"version":3,"sources":["app/kaboom_examples/flappy.cljs"],"mappings":"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","names":["app.kaboom-examples.flappy/pipe-open","app.kaboom-examples.flappy/pipe-min-height","app.kaboom-examples.flappy/jump-force","app.kaboom-examples.flappy/speed","app.kaboom-examples.flappy/ceiling","app.kaboom.patu.core.init","js/document.getElementById","app.kaboom.patu.loaders.load_root","app.kaboom.patu.loaders.load_sprite","app.kaboom.patu.loaders/load-sound","app.kaboom.patu.events/reg-event","_","h1","app.kaboom.patu.core/randd","app.kaboom.patu.core/height","app.kaboom.patu.core/dispatch","app.kaboom.patu.core/width","app.kaboom-examples.flappy/add-score","score","p__31431","vec__31432","cljs.core.nth","pipe","pid","sid","player","app.kaboom.patu.core/get-component","cljs.core._EQ_","p__31436","vec__31437","id","app.kaboom.patu.core.go","p__31440","vec__31441","or__4126__auto__","p__31444","vec__31445","cid","force","app.kaboom.patu.components/jump!","app.kaboom.patu.audio/play","app.kaboom-examples.flappy/main-init","app.kaboom-examples.flappy/main-action","p1__31448#","app.kaboom.patu.events/dispatch","app.kaboom.patu.core/reg-scene","app.kaboom-examples.flappy/lose-init","app.kaboom-examples.flappy/lose-action","vec__31449","x","y","app.kaboom.patu.core/center","app.kaboom-examples.flappy/app","app.kaboom.patu.core/start"],"sourcesContent":["(ns app.kaboom-examples.flappy\n  (:require\n   [clojure.repl :refer [doc]]\n   ;; Main Libs (5) ===\n   [app.kaboom.patu.core :as p]\n   [app.kaboom.patu.loaders :as l]       ;; Loaders\n   [app.kaboom.patu.audio :as a]         ;; Audio\n   [app.kaboom.patu.components :as c]    ;; Component Helpers\n   [app.kaboom.patu.events :refer [reg-event dispatch]]    ;; Event System))\n   [\"/kaboom.js\" :default k]))\n\n(comment\n  (k))\n(comment\n  (js/console.log (.clamp patu 1 2 4)))\n(comment\n  ((js->clj patu :keywordize-keys true)))\n;; 0 Constants\n(def pipe-open  80);\n(def pipe-min-height  16)\n(def jump-force  320)\n(def speed  120)\n(def ceiling  -60)\n\n;; 1 Game Init\n(p/init {:canvas (js/document.getElementById \"app\")\n         :global true\n         :scale 2\n         :debug true\n         :clearColor [0 0 0 1]})\n\n;; 2 Load Game Assets\n(l/load-root \"https://kaboomjs.com/pub/examples/\")\n(l/load-sprite :sprite/bg, \"img/bg.png\");\n(l/load-sprite :sprite/birdy, \"img/birdy.png\");\n(l/load-sprite :sprite/pipe, \"img/pipe.png\");\n(l/load-sound :sound/score \"sounds/score.mp3\")\n(l/load-sound :sound/wooosh \"sounds/wooosh.mp3\")\n(l/load-sound :sound/hit \"sounds/hit.mp3\")\n\n;; 3 Write dem event handlers (re-frame syntax)\n;; Events ===\n(reg-event\n :game/spawn-pipes\n (fn [_ _]\n   (let [h1 (p/randd pipe-min-height (- (p/height) (+ pipe-min-height pipe-open 10)))]\n     (p/dispatch [:component/add-n\n                  [[:sprite :sprite/pipe]\n                   [:origin :botleft]\n                   [:pos [(p/width) h1]]\n                   [:prop :pipe]] ;; \"give it tags to easier define behaviors see below\"\n                  [[:sprite :sprite/pipe]\n                   [:origin :botleft]\n                   [:scale 1 -1]\n                   [:pos [(p/width) (+ h1 pipe-open 20)]]\n                   [:prop :pipe]\n                   [:prop {:passed false}]]])))) ;; \"raw table just assigns every field to the game obj\"\n\n(defn add-score [score]\n  (set! score -value (inc (.-value score)));\n  (set! score -text (.-value score)));\n\n(reg-event\n :pipe/handle-lifecycle\n (fn [_ [_ pipe pid sid]]\n   (let [player (p/get-component pid)\n         score  (p/get-component sid)]\n     (.move pipe (* -1 speed) 0)\n     (when (and (= (.-passed pipe) false)\n                (<= (+ (.. pipe -pos -x) (.-width pipe))\n                    (.. player -pos -x)))\n       (set! pipe -passed true)\n       (add-score score)))))\n\n(reg-event\n :player/check-ffall\n (fn [_ [_ id score]]\n   (let [player (p/get-component id)]\n     (when (> (.. player -pos -y) (p/height))\n       (p/go :scene/lose score))\n     (when (<= (.. player -pos -y) ceiling)\n       (p/go :scene/lose score)))))\n\n(reg-event\n :scene/go\n (fn [_ [_ sid score]]\n   (p/go sid (or score 0))))\n\n(reg-event\n :comp/jump\n (fn [_ [_ cid force]]\n   (let [player (p/get-component cid)]\n     (c/jump! player force)\n     (a/play :sound/wooosh))))\n\n;; 4. A Scenes --- Main Scene - 4.1 Scene Init Function\n(defn main-init []\n  [[:game/gravity 1200]\n   [:game/layers [:bg :game, :ui] :game]\n   [:cam/ignore [:ui]]\n   [:comp/reg-n\n    [:layer/bg [[:sprite :sprite/bg]\n                [:scale (/ (p/width) 240) (/ (p/height) 240)]\n                [:layer :bg]]]\n    [:player [[:sprite :sprite/birdy]\n              [:pos 120 0]\n              [:scale 1]\n              [:body {:jumpForce 320}]\n              [:origin :center]\n              [:prop {:speed 160}]]]\n    [:ui/score [[:text \"0\" 16]\n                [:pos 9 9]\n                [:layer :ui]\n                [:prop {:value  0}]]]]])\n;; 4.2 Scene Event Handler\n(defn main-action []\n  (let [score (p/get-component :ui/score)]\n    [[:evt/key-press :space          #(dispatch [:comp/jump :player jump-force])]\n     [:game/loop     1               #(dispatch [:game/spawn-pipes])]\n     [:evt/action    :player         #(dispatch [:player/check-ffall :player (.-value score)])]\n     [:evt/action    :pipe           #(dispatch [:pipe/handle-lifecycle % :player :ui/score])]\n     [:evt/collides  [:player :pipe] #(dispatch [:scene/go :scene/lose (.-value score)])]]))\n;; 4,3 Scene Registration\n(p/reg-scene :scene/main {:init main-init :evt main-action})\n\n;; 4. B Lose Scene ===\n(defn lose-init []\n  [[:evt/key-press :space #(p/go :scene/main)]])\n(defn lose-action [score]\n  (let [[x y] (p/center)]\n    [[:comp/reg-n\n      [:ui/score-board [[:text score 64]\n                        [:pos x y]\n                        [:origin :center]]]\n      [:ui/score-board [[:text \"Press space to restart\" 16]\n                        [:pos x (+ y 50)]\n                        [:origin :center]]]]]))\n(p/reg-scene :scene/lose {:init lose-init :evt lose-action})\n\n;; 5 Start App\n(defn app []\n  (p/start :scene/main))\n"]}