{
"version":3,
"file":"module$node_modules$Phaser$src$boot$DebugHeader.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,gDAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO5G,IAAIC,MAAQH,OAAA,CAAQ,sCAAR,CAqHZC,OAAAC,QAAA,CAzGkBE,QAAS,CAACC,IAAD,CAC3B,CACI,IAAIC,OAASD,IAAAC,OAEb,IAAIC,CAAAD,MAAAC,WAAJ,CAAA,CAKA,IAAIC,WAAa,OAEbF,OAAAE,WAAJ,GAA0BL,KAAAM,OAA1B,CAEID,UAFJ,CAEiB,QAFjB,CAISF,MAAAE,WAJT,GAI+BL,KAAAO,SAJ/B,GAMIF,UANJ,CAMiB,UANjB,CASA,KAAIG,YAAcL,MAAAM,MAAlB,CACIC,YAAcR,IAAAS,OAAAF,MAUdG,YAAA,CANAC,CAAAH,WAAAG,SAAJ,EAA8BL,WAA9B,EAA6CA,WAAAM,gBAA7C;AAIUN,WAAL,EAAoBA,WAAAO,QAApB,EAA6C,CAACL,WAAAG,SAA9C,EAAsE,CAACH,WAAAM,UAAvE,CAEW,UAFX,CAMW,aAVhB,CAEgB,WAWhB,IAAKd,IAAAS,OAAAM,QAAAC,GAAL,CA6DSC,MAAA,QAAJ,EAEDC,OAAAC,IAAA,CAAY,UAAZ,CAAyBrB,KAAAsB,QAAzB,CAAyC,sBAAzC,CA/DJ,KACA,CACI,IAAIC,EAAI,EAAR,CACIC,KAAO,CAAED,CAAF,CAEX,IAAIE,KAAAC,QAAA,CAAcvB,MAAAwB,sBAAd,CAAJ,CACA,CACI,IAAIC,SAEJzB,OAAAwB,sBAAAE,QAAA,CAAqC,QAAS,CAACC,KAAD,CAC9C,CACIP,CAAA,CAAIA,CAAAQ,OAAA,CAAS,KAAT,CAEJP,KAAAQ,KAAA,CAAU,cAAV,CAA2BF,KAA3B,CAEAF,UAAA,CAAYE,KALhB,CADA,CAWAN,KAAA,CAAKA,IAAAS,OAAL,CAAmB,CAAnB,CAAA,CAAwB,SAAxB,CAAoC9B,MAAA+B,gBAApC,CAA6D,gBAA7D,CAAgFN,SAdpF,CADA,IAmBIL,EAEA;AAFIA,CAAAQ,OAAA,CAAS,KAAT,CAEJ,CAAAP,IAAAQ,KAAA,CAAU,SAAV,CAAsB7B,MAAA+B,gBAAtB,CAA+C,gBAA/C,CAAkE/B,MAAAwB,sBAAlE,CAIJH,KAAAQ,KAAA,CAAU,kBAAV,CAEI7B,OAAAgC,UAAJ,GAEIZ,CAOA,CAPIA,CAAAQ,OAAA,CAAS5B,MAAAgC,UAAT,CAOJ,CALIhC,MAAAiC,YAKJ,GAHIb,CAGJ,CAHQA,CAAAQ,OAAA,CAAS,IAAT,CAAgB5B,MAAAiC,YAAhB,CAGR,EAAKjC,MAAAkC,WAAL,GAEId,CAFJ,CAEQA,CAAAQ,OAAA,CAAS,KAAT,CAFR,CATJ,CAeIO,KAAAA,CAAM,MAAOC,iBAAR,CAA4B,KAA5B,CAAoC,EAExCpC,OAAAkC,WAAL,GAEId,CAFJ,CAEQA,CAAAQ,OAAA,CAAS,UAAT,CAAsB/B,KAAAsB,QAAtB,CAAsCgB,IAAtC,CAA2C,IAA3C,CAAkDjC,UAAlD,CAA+D,KAA/D,CAAuEO,WAAvE,CAAmF,GAAnF,CAFR,CAKAW,EAAA,CAAIA,CAAAQ,OAAA,CAAS,MAAT,CAAkB5B,MAAAqC,QAAlB,CAGJhB,KAAA,CAAK,CAAL,CAAA,CAAUD,CAEVH,QAAAC,IAAAoB,MAAA,CAAkBrB,OAAlB,CAA2BI,IAA3B,CA1DJ,CAnCA,CAHJ,CApB4G;",
"sources":["node_modules/Phaser/src/boot/DebugHeader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$boot$DebugHeader\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar CONST = require('../const');\r\n\r\n/**\r\n * Called automatically by Phaser.Game and responsible for creating the console.log debug header.\r\n *\r\n * You can customize or disable the header via the Game Config object.\r\n *\r\n * @function Phaser.Boot.DebugHeader\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Game} game - The Phaser.Game instance which will output this debug header.\r\n */\r\nvar DebugHeader = function (game)\r\n{\r\n    var config = game.config;\r\n\r\n    if (config.hideBanner)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var renderType = 'WebGL';\r\n\r\n    if (config.renderType === CONST.CANVAS)\r\n    {\r\n        renderType = 'Canvas';\r\n    }\r\n    else if (config.renderType === CONST.HEADLESS)\r\n    {\r\n        renderType = 'Headless';\r\n    }\r\n\r\n    var audioConfig = config.audio;\r\n    var deviceAudio = game.device.audio;\r\n\r\n    var audioType;\r\n\r\n    if (deviceAudio.webAudio && !(audioConfig && audioConfig.disableWebAudio))\r\n    {\r\n        audioType = 'Web Audio';\r\n    }\r\n    else if ((audioConfig && audioConfig.noAudio) || (!deviceAudio.webAudio && !deviceAudio.audioData))\r\n    {\r\n        audioType = 'No Audio';\r\n    }\r\n    else\r\n    {\r\n        audioType = 'HTML5 Audio';\r\n    }\r\n\r\n    if (!game.device.browser.ie)\r\n    {\r\n        var c = '';\r\n        var args = [ c ];\r\n\r\n        if (Array.isArray(config.bannerBackgroundColor))\r\n        {\r\n            var lastColor;\r\n\r\n            config.bannerBackgroundColor.forEach(function (color)\r\n            {\r\n                c = c.concat('%c ');\r\n\r\n                args.push('background: ' + color);\r\n\r\n                lastColor = color;\r\n\r\n            });\r\n\r\n            //  inject the text color\r\n            args[args.length - 1] = 'color: ' + config.bannerTextColor + '; background: ' + lastColor;\r\n        }\r\n        else\r\n        {\r\n            c = c.concat('%c ');\r\n\r\n            args.push('color: ' + config.bannerTextColor + '; background: ' + config.bannerBackgroundColor);\r\n        }\r\n\r\n        //  URL link background color (always white)\r\n        args.push('background: #fff');\r\n\r\n        if (config.gameTitle)\r\n        {\r\n            c = c.concat(config.gameTitle);\r\n\r\n            if (config.gameVersion)\r\n            {\r\n                c = c.concat(' v' + config.gameVersion);\r\n            }\r\n\r\n            if (!config.hidePhaser)\r\n            {\r\n                c = c.concat(' / ');\r\n            }\r\n        }\r\n\r\n        var fb = (typeof PLUGIN_FBINSTANT) ? '-FB' : '';\r\n\r\n        if (!config.hidePhaser)\r\n        {\r\n            c = c.concat('Phaser v' + CONST.VERSION + fb + ' (' + renderType + ' | ' + audioType + ')');\r\n        }\r\n\r\n        c = c.concat(' %c ' + config.gameURL);\r\n\r\n        //  Inject the new string back into the args array\r\n        args[0] = c;\r\n\r\n        console.log.apply(console, args);\r\n    }\r\n    else if (window['console'])\r\n    {\r\n        console.log('Phaser v' + CONST.VERSION + ' / https://phaser.io');\r\n    }\r\n};\r\n\r\nmodule.exports = DebugHeader;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","CONST","DebugHeader","game","config","hideBanner","renderType","CANVAS","HEADLESS","audioConfig","audio","deviceAudio","device","audioType","webAudio","disableWebAudio","noAudio","audioData","browser","ie","window","console","log","VERSION","c","args","Array","isArray","bannerBackgroundColor","lastColor","forEach","color","concat","push","length","bannerTextColor","gameTitle","gameVersion","hidePhaser","fb","PLUGIN_FBINSTANT","gameURL","apply"]
}
