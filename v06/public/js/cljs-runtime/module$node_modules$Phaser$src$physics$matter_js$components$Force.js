shadow$provide.module$node_modules$Phaser$src$physics$matter_js$components$Force=function(global,require,module,exports){var Body=require("module$node_modules$Phaser$src$physics$matter_js$lib$body$Body");module.exports={applyForce:function(force){this._tempVec2.set(this.body.position.x,this.body.position.y);Body.applyForce(this.body,this._tempVec2,force);return this},applyForceFrom:function(position,force){Body.applyForce(this.body,position,force);return this},thrust:function(speed){var angle=this.body.angle;
this._tempVec2.set(speed*Math.cos(angle),speed*Math.sin(angle));Body.applyForce(this.body,{x:this.body.position.x,y:this.body.position.y},this._tempVec2);return this},thrustLeft:function(speed){var angle=this.body.angle-Math.PI/2;this._tempVec2.set(speed*Math.cos(angle),speed*Math.sin(angle));Body.applyForce(this.body,{x:this.body.position.x,y:this.body.position.y},this._tempVec2);return this},thrustRight:function(speed){var angle=this.body.angle+Math.PI/2;this._tempVec2.set(speed*Math.cos(angle),
speed*Math.sin(angle));Body.applyForce(this.body,{x:this.body.position.x,y:this.body.position.y},this._tempVec2);return this},thrustBack:function(speed){var angle=this.body.angle-Math.PI;this._tempVec2.set(speed*Math.cos(angle),speed*Math.sin(angle));Body.applyForce(this.body,{x:this.body.position.x,y:this.body.position.y},this._tempVec2);return this}}}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$components$Force.js.map
