{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$components$index.js",
"lineCount":8,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAWrHD,MAAAC,QAAA,CAAiB,CAEbC,iBAAkBH,OAAA,CAAQ,qEAAR,CAFL,CAGbI,qBAAsBJ,OAAA,CAAQ,yEAAR,CAHT,CAIbK,KAAML,OAAA,CAAQ,yDAAR,CAJO,CAKbM,gBAAiBN,OAAA,CAAQ,oEAAR,CALJ,CAMbO,UAAWP,OAAA,CAAQ,8DAAR,CANE;AAObQ,KAAMR,OAAA,CAAQ,yDAAR,CAPO,CAQbS,YAAaT,OAAA,CAAQ,gEAAR,CARA,CASbU,YAAaV,OAAA,CAAQ,gEAAR,CATA,CAUbW,SAAUX,OAAA,CAAQ,6DAAR,CAVG,CAWbY,YAAaZ,OAAA,CAAQ,gEAAR,CAXA,CAYba,UAAWb,OAAA,CAAQ,8DAAR,CAZE,CAabc,iBAAkBd,OAAA,CAAQ,qEAAR,CAbL;AAcbe,eAAgBf,OAAA,CAAQ,mEAAR,CAdH,CAebgB,oBAAqBhB,OAAA,CAAQ,wEAAR,CAfR,CAgBbiB,sBAAuBjB,OAAA,CAAQ,0EAAR,CAhBV,CAiBbkB,UAAWlB,OAAA,CAAQ,8DAAR,CAjBE,CAkBbmB,iBAAkBnB,OAAA,CAAQ,qEAAR,CAlBL,CAmBboB,gBAAiBpB,OAAA,CAAQ,oEAAR,CAnBJ;AAoBbqB,UAAWrB,OAAA,CAAQ,8DAAR,CApBE,CAqBbsB,iBAAkBtB,OAAA,CAAQ,qEAAR,CArBL,CAsBbuB,WAAYvB,OAAA,CAAQ,+DAAR,CAtBC,CAuBbwB,UAAWxB,OAAA,CAAQ,8DAAR,CAvBE,CAwBbyB,aAAczB,OAAA,CAAQ,iEAAR,CAxBD,CAyBb0B,oBAAqB1B,OAAA,CAAQ,wEAAR,CAzBR;AA0Bb2B,YAAa3B,OAAA,CAAQ,gEAAR,CA1BA,CA2Bb4B,eAAgB5B,OAAA,CAAQ,mEAAR,CA3BH,CA4Bb6B,aAAc7B,OAAA,CAAQ,iEAAR,CA5BD,CA6Bb8B,oBAAqB9B,OAAA,CAAQ,wEAAR,CA7BR,CA8Bb+B,wBAAyB/B,OAAA,CAAQ,4EAAR,CA9BZ,CA+BbgC,uBAAwBhC,OAAA,CAAQ,2EAAR,CA/BX;AAgCbiC,+BAAgCjC,OAAA,CAAQ,mFAAR,CAhCnB,CAiCbkC,qBAAsBlC,OAAA,CAAQ,yEAAR,CAjCT,CAkCbmC,wBAAyBnC,OAAA,CAAQ,4EAAR,CAlCZ,CAmCboC,QAASpC,OAAA,CAAQ,4DAAR,CAnCI,CAoCbqC,YAAarC,OAAA,CAAQ,gEAAR,CApCA;AAqCbsC,aAActC,OAAA,CAAQ,iEAAR,CArCD,CAsCbuC,cAAevC,OAAA,CAAQ,kEAAR,CAtCF,CAuCbwC,aAAcxC,OAAA,CAAQ,iEAAR,CAvCD,CAwCbyC,kBAAmBzC,OAAA,CAAQ,sEAAR,CAxCN,CAyCb0C,aAAc1C,OAAA,CAAQ,iEAAR,CAzCD,CA0Cb2C,cAAe3C,OAAA,CAAQ,kEAAR,CA1CF;AA2Cb4C,aAAc5C,OAAA,CAAQ,iEAAR,CA3CD,CAXoG;",
"sources":["node_modules/Phaser/src/tilemaps/components/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$components$index\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n/**\r\n * @namespace Phaser.Tilemaps.Components\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    CalculateFacesAt: require('./CalculateFacesAt'),\r\n    CalculateFacesWithin: require('./CalculateFacesWithin'),\r\n    Copy: require('./Copy'),\r\n    CreateFromTiles: require('./CreateFromTiles'),\r\n    CullTiles: require('./CullTiles'),\r\n    Fill: require('./Fill'),\r\n    FilterTiles: require('./FilterTiles'),\r\n    FindByIndex: require('./FindByIndex'),\r\n    FindTile: require('./FindTile'),\r\n    ForEachTile: require('./ForEachTile'),\r\n    GetTileAt: require('./GetTileAt'),\r\n    GetTileAtWorldXY: require('./GetTileAtWorldXY'),\r\n    GetTilesWithin: require('./GetTilesWithin'),\r\n    GetTilesWithinShape: require('./GetTilesWithinShape'),\r\n    GetTilesWithinWorldXY: require('./GetTilesWithinWorldXY'),\r\n    HasTileAt: require('./HasTileAt'),\r\n    HasTileAtWorldXY: require('./HasTileAtWorldXY'),\r\n    IsInLayerBounds: require('./IsInLayerBounds'),\r\n    PutTileAt: require('./PutTileAt'),\r\n    PutTileAtWorldXY: require('./PutTileAtWorldXY'),\r\n    PutTilesAt: require('./PutTilesAt'),\r\n    Randomize: require('./Randomize'),\r\n    RemoveTileAt: require('./RemoveTileAt'),\r\n    RemoveTileAtWorldXY: require('./RemoveTileAtWorldXY'),\r\n    RenderDebug: require('./RenderDebug'),\r\n    ReplaceByIndex: require('./ReplaceByIndex'),\r\n    SetCollision: require('./SetCollision'),\r\n    SetCollisionBetween: require('./SetCollisionBetween'),\r\n    SetCollisionByExclusion: require('./SetCollisionByExclusion'),\r\n    SetCollisionByProperty: require('./SetCollisionByProperty'),\r\n    SetCollisionFromCollisionGroup: require('./SetCollisionFromCollisionGroup'),\r\n    SetTileIndexCallback: require('./SetTileIndexCallback'),\r\n    SetTileLocationCallback: require('./SetTileLocationCallback'),\r\n    Shuffle: require('./Shuffle'),\r\n    SwapByIndex: require('./SwapByIndex'),\r\n    TileToWorldX: require('./TileToWorldX'),\r\n    TileToWorldXY: require('./TileToWorldXY'),\r\n    TileToWorldY: require('./TileToWorldY'),\r\n    WeightedRandomize: require('./WeightedRandomize'),\r\n    WorldToTileX: require('./WorldToTileX'),\r\n    WorldToTileXY: require('./WorldToTileXY'),\r\n    WorldToTileY: require('./WorldToTileY')\r\n\r\n};\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","CalculateFacesAt","CalculateFacesWithin","Copy","CreateFromTiles","CullTiles","Fill","FilterTiles","FindByIndex","FindTile","ForEachTile","GetTileAt","GetTileAtWorldXY","GetTilesWithin","GetTilesWithinShape","GetTilesWithinWorldXY","HasTileAt","HasTileAtWorldXY","IsInLayerBounds","PutTileAt","PutTileAtWorldXY","PutTilesAt","Randomize","RemoveTileAt","RemoveTileAtWorldXY","RenderDebug","ReplaceByIndex","SetCollision","SetCollisionBetween","SetCollisionByExclusion","SetCollisionByProperty","SetCollisionFromCollisionGroup","SetTileIndexCallback","SetTileLocationCallback","Shuffle","SwapByIndex","TileToWorldX","TileToWorldXY","TileToWorldY","WeightedRandomize","WorldToTileX","WorldToTileXY","WorldToTileY"]
}
