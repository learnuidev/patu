shadow$provide.module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Axes=function(global,require,module,exports){var Axes={};module.exports=Axes;var Vector=require("module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Vector"),Common=require("module$node_modules$Phaser$src$physics$matter_js$lib$core$Common");(function(){Axes.fromVertices=function(vertices){for(var axes={},i=0;i<vertices.length;i++){var j=(i+1)%vertices.length;j=Vector.normalise({x:vertices[j].y-vertices[i].y,y:vertices[i].x-
vertices[j].x});var gradient=0===j.y?Infinity:j.x/j.y;gradient=gradient.toFixed(3).toString();axes[gradient]=j}return Common.values(axes)};Axes.rotate=function(axes,angle){if(0!==angle){var cos=Math.cos(angle);angle=Math.sin(angle);for(var i=0;i<axes.length;i++){var axis=axes[i];var xx=axis.x*cos-axis.y*angle;axis.y=axis.x*angle+axis.y*cos;axis.x=xx}}}})()}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Axes.js.map
