shadow$provide.module$node_modules$Phaser$src$curves$LineCurve=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var Curve=require("module$node_modules$Phaser$src$curves$Curve"),FromPoints=require("module$node_modules$Phaser$src$geom$rectangle$FromPoints"),Rectangle=require("module$node_modules$Phaser$src$geom$rectangle$Rectangle"),Vector2=require("module$node_modules$Phaser$src$math$Vector2"),tmpVec2=new Vector2,LineCurve=new global({Extends:Curve,
initialize:function(p0,p1){Curve.call(this,"LineCurve");Array.isArray(p0)&&(p1=new Vector2(p0[2],p0[3]),p0=new Vector2(p0[0],p0[1]));this.p0=p0;this.p1=p1},getBounds:function(out){void 0===out&&(out=new Rectangle);return FromPoints([this.p0,this.p1],out)},getStartPoint:function(out){void 0===out&&(out=new Vector2);return out.copy(this.p0)},getResolution:function(divisions){void 0===divisions&&(divisions=1);return divisions},getPoint:function(t,out){void 0===out&&(out=new Vector2);if(1===t)return out.copy(this.p1);
out.copy(this.p1).subtract(this.p0).scale(t).add(this.p0);return out},getPointAt:function(u,out){return this.getPoint(u,out)},getTangent:function(){return tmpVec2.copy(this.p1).subtract(this.p0).normalize()},draw:function(graphics){graphics.lineBetween(this.p0.x,this.p0.y,this.p1.x,this.p1.y);return graphics},toJSON:function(){return{type:this.type,points:[this.p0.x,this.p0.y,this.p1.x,this.p1.y]}}});LineCurve.fromJSON=function(data){var points=data.points;data=new Vector2(points[0],points[1]);points=
new Vector2(points[2],points[3]);return new LineCurve(data,points)};module.exports=LineCurve}
//# sourceMappingURL=module$node_modules$Phaser$src$curves$LineCurve.js.map
