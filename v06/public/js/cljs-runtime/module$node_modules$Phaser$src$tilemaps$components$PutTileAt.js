shadow$provide.module$node_modules$Phaser$src$tilemaps$components$PutTileAt=function(global,require,module,exports){var Tile=require("module$node_modules$Phaser$src$tilemaps$Tile"),IsInLayerBounds=require("module$node_modules$Phaser$src$tilemaps$components$IsInLayerBounds"),CalculateFacesAt=require("module$node_modules$Phaser$src$tilemaps$components$CalculateFacesAt"),SetTileCollision=require("module$node_modules$Phaser$src$tilemaps$components$SetTileCollision");module.exports=function(tile,tileX,
tileY,recalculateFaces,layer){if(!IsInLayerBounds(tileX,tileY,layer))return null;void 0===recalculateFaces&&(recalculateFaces=!0);var oldTile=layer.data[tileY][tileX];oldTile=oldTile&&oldTile.collides;tile instanceof Tile?(null===layer.data[tileY][tileX]&&(layer.data[tileY][tileX]=new Tile(layer,tile.index,tileX,tileY,tile.width,tile.height)),layer.data[tileY][tileX].copy(tile)):null===layer.data[tileY][tileX]?layer.data[tileY][tileX]=new Tile(layer,tile,tileX,tileY,layer.tileWidth,layer.tileHeight):
layer.data[tileY][tileX].index=tile;tile=layer.data[tileY][tileX];var collides=-1!==layer.collideIndexes.indexOf(tile.index);SetTileCollision(tile,collides);recalculateFaces&&oldTile!==tile.collides&&CalculateFacesAt(tileX,tileY,layer);return tile}}
//# sourceMappingURL=module$node_modules$Phaser$src$tilemaps$components$PutTileAt.js.map
