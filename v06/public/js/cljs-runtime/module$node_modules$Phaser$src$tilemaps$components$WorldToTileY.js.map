{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$components$WorldToTileY.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,gEAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA6C5HD,MAAAC,QAAA,CAvBmBC,QAAS,CAACC,MAAD,CAASC,WAAT,CAAsBC,MAAtB,CAA8BC,KAA9B,CAC5B,CACwBC,IAAAA,EAApB,GAAIH,WAAJ,GAAiCA,WAAjC,CAA+C,CAAA,CAA/C,CAEA,KAAII,WAAaF,KAAAG,eAGjB,IAFIC,KAEJ,CAFmBJ,KAAAI,aAEnB,CAEmBH,IAAAA,EAMf,GANIF,MAMJ,GAN4BA,MAM5B,CANqCK,KAAAC,MAAAC,QAAAC,KAMrC,EAFSV,MAET,EAFmBO,KAAAI,EAEnB,CAFoCT,MAAAU,QAEpC,EAFsD,CAEtD,CAF0DL,KAAAM,cAE1D,EAAAR,UAAA,EAAcE,KAAAO,OAGlB,OAAOb,YAAA,CACDc,IAAAC,MAAA,CAAWhB,MAAX,CAAoBK,UAApB,CADC,CAEDL,MAFC,CAEQK,UAnBnB,CAvB4H;",
"sources":["node_modules/Phaser/src/tilemaps/components/WorldToTileY.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$components$WorldToTileY\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Converts from world Y coordinates (pixels) to tile Y coordinates (tile units), factoring in the\r\n * layer's position, scale and scroll.\r\n *\r\n * @function Phaser.Tilemaps.Components.WorldToTileY\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {number} worldY - The y coordinate to be converted, in pixels, not tiles.\r\n * @param {boolean} [snapToFloor=true] - Whether or not to round the tile coordinate down to the nearest integer.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when calculating the tile index from the world values.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {number} The Y location in tile units.\r\n */\r\nvar WorldToTileY = function (worldY, snapToFloor, camera, layer)\r\n{\r\n    if (snapToFloor === undefined) { snapToFloor = true; }\r\n\r\n    var tileHeight = layer.baseTileHeight;\r\n    var tilemapLayer = layer.tilemapLayer;\r\n\r\n    if (tilemapLayer)\r\n    {\r\n        if (camera === undefined) { camera = tilemapLayer.scene.cameras.main; }\r\n\r\n        // Find the world position relative to the static or dynamic layer's top left origin,\r\n        // factoring in the camera's vertical scroll\r\n        worldY = worldY - (tilemapLayer.y + camera.scrollY * (1 - tilemapLayer.scrollFactorY));\r\n\r\n        tileHeight *= tilemapLayer.scaleY;\r\n    }\r\n\r\n    return snapToFloor\r\n        ? Math.floor(worldY / tileHeight)\r\n        : worldY / tileHeight;\r\n};\r\n\r\nmodule.exports = WorldToTileY;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","WorldToTileY","worldY","snapToFloor","camera","layer","undefined","tileHeight","baseTileHeight","tilemapLayer","scene","cameras","main","y","scrollY","scrollFactorY","scaleY","Math","floor"]
}
