{"version":3,"sources":["app/kaboomv5/math/color.cljs"],"mappings":"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","names":["app.kaboomv5.math.color/neg","num","app$kaboomv5$math$color$IColor$lighten$dyn","x__4428__auto__","m__4429__auto__","app.kaboomv5.math.color/lighten","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","app$kaboomv5$math$color$IColor$darken$dyn","app.kaboomv5.math.color/darken","app$kaboomv5$math$color$IColor$invert$dyn","app.kaboomv5.math.color/invert","app$kaboomv5$math$color$IColor$dark_QMARK_$dyn","app.kaboomv5.math.color/dark?","app$kaboomv5$math$color$IColor$light_QMARK_$dyn","app.kaboomv5.math.color/light?","app.kaboomv5.math.color/IColor","this","a","p","this__4380__auto__","k__4381__auto__","this__4382__auto__","k104374","else__4383__auto__","G__104379","cljs.core/Keyword","r","g","b","cljs.core.get","__extmap","this__4399__auto__","f__4400__auto__","init__4401__auto__","cljs.core.reduce","ret__4402__auto__","p__104380","vec__104381","k__4403__auto__","cljs.core.nth","v__4404__auto__","this__4394__auto__","writer__4395__auto__","opts__4396__auto__","pr-pair__4397__auto__","keyval__4398__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__104373","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4378__auto__","__meta","this__4375__auto__","__hash","this__4384__auto__","cljs.core/count","this__4376__auto__","h__4238__auto__","coll__4377__auto__","cljs.core/hash-unordered-coll","this104375","other104376","cljs.core._EQ_","this__4389__auto__","k__4390__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4387__auto__","k__4388__auto__","pred__104385","cljs.core/keyword-identical?","expr__104386","cljs.core.assoc","this__4392__auto__","cljs.core/seq","cljs.core/MapEntry","this__4379__auto__","this__4385__auto__","entry__4386__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","app.kaboomv5.math.color/Color","this__4423__auto__","cljs.core/List","writer__4424__auto__","cljs.core/-write","G__104378","extmap__4419__auto__","G__104388","cljs.core/record?","app.kaboomv5.math.color/->Color","app.kaboomv5.math.color/map->Color","app.kaboomv5.math.color/color?","val","var_args","G__104390","app.kaboomv5.math.color/color","js/Error","app.kaboomv5.math.color.color","rgba","cljs.core.apply","cljs.core/PROTOCOL_SENTINEL","p__104392","map__104393","cljs.core/hash-map","map__104395","cljs.core/not"],"sourcesContent":["(ns app.kaboomv5.math.color\n  (:require [goog.math :as math]\n            [clojure.repl :refer [doc]]\n            [app.kaboomv5.math.vector :as mv])\n  (:import [goog.math Vec2 Vec3 Matrix])\n  (:import [goog.math Matrix]))\n\n;;\n(defn neg [num]\n  (* -1 num))\n\n;; PRotocols\n(defprotocol IColor\n  (lighten [this a])\n  (darken [this a])\n  (invert [this])\n  (dark?  [this p])\n  (light?  [this p]))\n\n;; Records\n(defrecord Color [r g b a])\n\n;; Colors ===\n(defn color? [val]\n  (instance? Color val))\n\n;; 14, 15\n(defn color\n  ([] (color 0 0 0 1))\n  ([rgba] (apply color rgba))\n  ([r g b] (color r g b 1))\n  ([r g b a] (->Color r g b a)))\n\n(extend-protocol IColor\n  Color\n  (lighten [this val]\n    (->Color (+ (:r this) val) (+ (:g this) val) (+ (:b this) val) (+ (:a this) val)))\n  (darken [this val]\n    (lighten this (neg val)))\n  (dark? [{:keys [r g b]} p]\n    (> (* 3 p) (+ r g b)))\n  (light? [this p]\n    (not (dark? this p))))\n\n(comment\n  (color)\n  (color [1 1 1 1])\n  (color 1 2 3 4)\n  (instance? Color (->Color 1 1 1 1))\n  (lighten (color 1 1 1 1) 10)\n  (color? (color [1 1 1 1]))\n  (color? 2))\n;; === Color End\n"]}