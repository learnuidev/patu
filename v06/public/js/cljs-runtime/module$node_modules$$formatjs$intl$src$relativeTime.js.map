{
"version":3,
"file":"module$node_modules$$formatjs$intl$src$relativeTime.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEhHC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,mBAAA,CAA6B,IAAK,EAClC,KAAIC,QAAUP,OAAA,CAAQ,8CAAR,CAAd,CACIQ,qBAAuBR,OAAA,CAAQ,8CAAR,CAD3B,CAEIS,QAAUT,OAAA,CAAQ,8CAAR,CAFd,CAGIU,6BAA+B,CAAC,SAAD,CAAY,OAAZ,CA0BnCR,QAAAI,mBAAA,CAjBAA,QAA2B,CAACK,MAAD,CAASC,qBAAT;AAAgCP,KAAhC,CAAuCQ,IAAvC,CAA6CC,OAA7C,CAAsD,CAC7D,IAAK,EAArB,GAAIA,OAAJ,GAA0BA,OAA1B,CAAoC,EAApC,CACKD,KAAL,GACIA,IADJ,CACW,QADX,CAIA,IAAI,CADqBE,IAAAC,mBACzB,CACIL,MAAAM,QAAA,CAAe,IAAIT,oBAAAU,YAAJ,CAAqC,+HAArC,CAAwK,kBAAxK,CAAf,CAEJ,IAAI,CAjBkD,IAClDC,OAiBoBR,MAjBXQ,OADyC,CAC9BC,QAiBAT,MAjBUS,QADoB,CACRH,QAiBtBN,MAjBgCM,QACxC,KAAK,EAArB,GAAIH,OAAJ,GAA0BA,OAA1B,CAAoC,EAApC,CACA,KAAIO,OAASP,OAAAO,OAAb,CACIC,SAAY,CAAC,CAACD,MAAdC,EAAwBf,OAAAgB,eAAA,CAAuBH,OAAvB,CAAgC,UAAhC,CAA4CC,MAA5C;AAAoDJ,OAApD,CAAxBK,EAAyF,EAD7F,CAEIE,gBAAkBjB,OAAAkB,YAAA,CAAoBX,OAApB,CAA6BJ,4BAA7B,CAA2DY,QAA3D,CAalB,OAA4BV,sBAZzB,CAAsBO,MAAtB,CAA8BK,eAA9B,CAYIH,OAAA,CAA4DhB,KAA5D,CAAmEQ,IAAnE,CADP,CAGJ,MAAOa,CAAP,CAAU,CACNf,MAAAM,QAAA,CAAe,IAAIR,OAAAkB,mBAAJ,CAA+B,iCAA/B,CAAkED,CAAlE,CAAf,CADM,CAGV,MAAOE,OAAA,CAAOvB,KAAP,CAfsE,CAhB+B;",
"sources":["node_modules/@formatjs/intl/src/relativeTime.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$intl$src$relativeTime\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatRelativeTime = void 0;\nvar utils_1 = require(\"./utils\");\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar error_1 = require(\"./error\");\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && utils_1.getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = utils_1.filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nfunction formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new intl_messageformat_1.FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new error_1.MessageFormatError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\nexports.formatRelativeTime = formatRelativeTime;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","formatRelativeTime","utils_1","intl_messageformat_1","error_1","RELATIVE_TIME_FORMAT_OPTIONS","config","getRelativeTimeFormat","unit","options","Intl","RelativeTimeFormat","onError","FormatError","locale","formats","format","defaults","getNamedFormat","filteredOptions","filterProps","e","MessageFormatError","String"]
}
