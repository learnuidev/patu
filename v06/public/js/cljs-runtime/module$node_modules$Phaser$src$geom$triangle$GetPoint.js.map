{
"version":3,
"file":"module$node_modules$Phaser$src$geom$triangle$GetPoint.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlH,IAAIC,MAAQH,OAAA,CAAQ,iDAAR,CAAZ,CACII,OAASJ,OAAA,CAAQ,iDAAR,CA0EbC,OAAAC,QAAA,CAzDeG,QAAS,CAACC,QAAD,CAAWC,QAAX,CAAqBC,GAArB,CACxB,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,IAAIL,KAAnC,CAEA,KAAIO,MAAQJ,QAAAK,SAAA,EAAZ,CACIC,MAAQN,QAAAO,SAAA,EACRC,SAAAA,CAAQR,QAAAS,SAAA,EAEZ,IAAgB,CAAhB,EAAIR,QAAJ,EAAiC,CAAjC,EAAqBA,QAArB,CAKI,MAHAC,IAAAQ,EAGOR,CAHCE,KAAAO,GAGDT,CAFPA,GAAAU,EAEOV,CAFCE,KAAAS,GAEDX,CAAAA,GAGX,KAAIY,QAAUhB,MAAA,CAAOM,KAAP,CAAd;AACIW,QAAUjB,MAAA,CAAOQ,KAAP,CADd,CAEIU,QAAUlB,MAAA,CAAOU,QAAP,CAIVS,SAAAA,EAFYH,OAEZG,CAFsBF,OAEtBE,CAFgCD,OAOhCC,SAAJ,CAAQH,OAAR,EAGoBG,QAGhB,EAHoBH,OAGpB,CADAZ,GAAAQ,EACA,CADQN,KAAAO,GACR,EADoBP,KAAAc,GACpB,CAD+Bd,KAAAO,GAC/B,EAD2CQ,QAC3C,CAAAjB,GAAAU,EAAA,CAAQR,KAAAS,GAAR,EAAoBT,KAAAgB,GAApB,CAA+BhB,KAAAS,GAA/B,EAA2CM,QAN/C,EAQSF,QAAJ,CAAQH,OAAR,CAAkBC,OAAlB,EAIDI,QAGA,EAJAF,QAIA,EAJKH,OAIL,CAJeC,OAIf,GAHoBC,OAGpB,CADAd,GAAAQ,EACA,CADQF,QAAAG,GACR,EADoBH,QAAAU,GACpB,CAD+BV,QAAAG,GAC/B,EAD2CQ,QAC3C,CAAAjB,GAAAU,EAAA,CAAQJ,QAAAK,GAAR,EAAoBL,QAAAY,GAApB,CAA+BZ,QAAAK,GAA/B,EAA2CM,QAP1C,GAaDA,QAGA,EAJAF,QAIA,CAJKH,OAIL,EAHoBC,OAGpB,CADAb,GAAAQ,EACA,CADQJ,KAAAK,GACR,EADoBL,KAAAY,GACpB,CAD+BZ,KAAAK,GAC/B,EAD2CQ,QAC3C,CAAAjB,GAAAU,EAAA,CAAQN,KAAAO,GAAR,EAAoBP,KAAAc,GAApB,CAA+Bd,KAAAO,GAA/B;AAA2CM,QAhB1C,CAmBL,OAAOjB,IArDX,CA1BkH;",
"sources":["node_modules/Phaser/src/geom/triangle/GetPoint.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$triangle$GetPoint\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\nvar Length = require('../line/Length');\r\n\r\n//  Position is a value between 0 and 1\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Triangle.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - [description]\r\n * @param {number} position - [description]\r\n * @param {(Phaser.Geom.Point|object)} [out] - [description]\r\n *\r\n * @return {(Phaser.Geom.Point|object)} [description]\r\n */\r\nvar GetPoint = function (triangle, position, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    var line1 = triangle.getLineA();\r\n    var line2 = triangle.getLineB();\r\n    var line3 = triangle.getLineC();\r\n\r\n    if (position <= 0 || position >= 1)\r\n    {\r\n        out.x = line1.x1;\r\n        out.y = line1.y1;\r\n\r\n        return out;\r\n    }\r\n\r\n    var length1 = Length(line1);\r\n    var length2 = Length(line2);\r\n    var length3 = Length(line3);\r\n\r\n    var perimeter = length1 + length2 + length3;\r\n\r\n    var p = perimeter * position;\r\n    var localPosition = 0;\r\n\r\n    //  Which line is it on?\r\n\r\n    if (p < length1)\r\n    {\r\n        //  Line 1\r\n        localPosition = p / length1;\r\n\r\n        out.x = line1.x1 + (line1.x2 - line1.x1) * localPosition;\r\n        out.y = line1.y1 + (line1.y2 - line1.y1) * localPosition;\r\n    }\r\n    else if (p > length1 + length2)\r\n    {\r\n        //  Line 3\r\n        p -= length1 + length2;\r\n        localPosition = p / length3;\r\n\r\n        out.x = line3.x1 + (line3.x2 - line3.x1) * localPosition;\r\n        out.y = line3.y1 + (line3.y2 - line3.y1) * localPosition;\r\n    }\r\n    else\r\n    {\r\n        //  Line 2\r\n        p -= length1;\r\n        localPosition = p / length2;\r\n\r\n        out.x = line2.x1 + (line2.x2 - line2.x1) * localPosition;\r\n        out.y = line2.y1 + (line2.y2 - line2.y1) * localPosition;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetPoint;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Point","Length","GetPoint","triangle","position","out","undefined","line1","getLineA","line2","getLineB","line3","getLineC","x","x1","y","y1","length1","length2","length3","p","x2","localPosition","y2"]
}
