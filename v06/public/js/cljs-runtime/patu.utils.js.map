{"version":3,"sources":["patu/utils.cljs"],"mappings":";;;AAIA,AAAA;;;;AAAA,AAAAA,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAGFE,AAAIC;AAHR,AAGc,AAAA,AAACC,AAAKF,AAAIC;;;AAHxB,AAAA,AAAA,AAAMH,AAIFE,AAAIC,AAAKE;AAJb,AAIqB,AAAAC,AAAI,AAACC,AAAQL,AAAI,AAACM,AAAKL;AAAvB,AAAA,AAAAG;AAAAA;;AACID;;;;AALzB,AAAA,AAAA,AAAML;;AAAN,AAOA,AAIA,AAAA,AAAMS,AACHP,AAAIQ;AADP,AAEE,AAAMC,AAAE,AAACC,AAAMF;AACTG,AAAI,AAACC,AAAKJ;AADhB,AAEE,AAAI,AAACK,AAAIF;AACP,AAAAG,AAAS,AAACZ,AAAKF,AAAIS;AAAnBM,AAAsBJ;AAAtB,AAAA,AAAAG,AAAAC,AAAAD,AAAAC,AAACR,AAAAA,AAAAA;;AACD,AAACL,AAAKF,AAAIS;;;AAEhB,AAGA,AAAA,AAAA,AAAA,AAAA,AAAKO;AACL,AAAA,AAAA,AAACX,AAAQW;AAET;;;AAAA,AAAMC,AAEHjB,AAAIkB,AAAIC;AAFX,AAGE,AAACC,AAAQpB,AAAI,AAACM,AAAKY,AAAK,AAACG,AAAQF;;AACjCnB;;AAGF,AAAA,AAAMsB,AACHtB,AAAIQ,AAAMe;AADb,AAEE,AAAMd,AAAE,AAACC,AAAMF;AACTG,AAAI,AAACC,AAAKJ;AADhB,AAEE,AAAI,AAACK,AAAIF;AACP,AAAAa,AAAU,AAACtB,AAAKF,AAAIS;AAApBgB,AAAuBd;AAAvBe,AAA2BH;AAA3B,AAAA,AAAAC,AAAAC,AAAAC,AAAAF,AAAAC,AAAAC,AAACJ,AAAAA,AAAAA;;AACD,AAACL,AAAMjB,AAAIS,AAAEc;;;AAEnB,AAAKI,AAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAACN;AACX","names":["var_args","G__69155","patu.utils/jget","js/Error","obj","prop","patu.utils.jget","defval","or__4126__auto__","goog.object/get","cljs.core/name","patu.utils/jget-in","props","f","cljs.core/first","res","cljs.core/rest","cljs.core/seq","G__69160","G__69161","patu.utils/objs","patu.utils/jset!","key","value","goog.object/set","cljs.core/clj->js","patu.utils/jset-in!","val","G__69192","G__69193","G__69194","patu.utils/ex-1"],"sourcesContent":["(ns patu.utils\n  (:require [goog.object :as obj]))\n\n;; Helpers\n(defn jget\n  \"Works like clojure get but for objects\n   FUTURE WORK: Move it inside Protocols\"\n  ([obj prop] (jget obj prop nil))\n  ([obj prop defval] (or (obj/get obj (name prop))\n                         defval)))\n\n(comment\n  (first [:boo :bar])\n  (seq (rest [:boo :bar]))\n  (seq (rest (rest [:boo :bar]))))\n(defn jget-in\n  [obj props]\n  (let [f (first props)\n        res (rest props)]\n    (if (seq res)\n      (jget-in (jget obj f) res)\n      (jget obj f))))\n\n(comment\n  (jget-in (clj->js {:foo {:bar 2}}) [:foo :bar])\n  (jget-in (clj->js {:foo {:bar 2}}) '(:foo :bar)))\n(def objs #js {:foo {:bar 1}})\n(obj/get objs \"foo\" \"bar\")\n\n(defn jset!\n  \"\"\n  [obj key value]\n  (obj/set obj (name key) (clj->js value))\n  obj)\n\n;;\n(defn jset-in!\n  [obj props val]\n  (let [f (first props)\n        res (rest props)]\n    (if (seq res)\n      (jset-in! (jget obj f) res val)\n      (jset! obj f val))))\n\n(def ex-1 (clj->js {:foo {:bar 0}}))\n(comment\n  (jget-in ex-1 [:foo :bar])\n  (jset-in ex-1 [:foo :bar] 100))\n"]}