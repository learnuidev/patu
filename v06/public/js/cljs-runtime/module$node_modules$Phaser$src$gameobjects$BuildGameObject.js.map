{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$BuildGameObject.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/Phaser/src/gameobjects/BuildGameObject.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$BuildGameObject\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar BlendModes = require('../renderer/BlendModes');\r\nvar GetAdvancedValue = require('../utils/object/GetAdvancedValue');\r\nvar ScaleModes = require('../renderer/ScaleModes');\r\n\r\n/**\r\n * @typedef {object} GameObjectConfig\r\n *\r\n * @property {number} [x=0] - The x position of the Game Object.\r\n * @property {number} [y=0] - The y position of the Game Object.\r\n * @property {number} [depth=0] - The depth of the GameObject.\r\n * @property {boolean} [flipX=false] - The horizontally flipped state of the Game Object.\r\n * @property {boolean} [flipY=false] - The vertically flipped state of the Game Object.\r\n * @property {?(number|object)} [scale=null] - The scale of the GameObject.\r\n * @property {?(number|object)} [scrollFactor=null] - The scroll factor of the GameObject.\r\n * @property {number} [rotation=0] - The rotation angle of the Game Object, in radians.\r\n * @property {?number} [angle=null] - The rotation angle of the Game Object, in degrees.\r\n * @property {number} [alpha=1] - The alpha (opacity) of the Game Object.\r\n * @property {?(number|object)} [origin=null] - The origin of the Game Object.\r\n * @property {number} [scaleMode=ScaleModes.DEFAULT] - The scale mode of the GameObject.\r\n * @property {number} [blendMode=BlendModes.DEFAULT] - The blend mode of the GameObject.\r\n * @property {boolean} [visible=true] - The visible state of the Game Object.\r\n * @property {boolean} [add=true] - Add the GameObject to the scene.\r\n */\r\n\r\n/**\r\n * Builds a Game Object using the provided configuration object.\r\n *\r\n * @function Phaser.GameObjects.BuildGameObject\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - A reference to the Scene.\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The initial GameObject.\r\n * @param {GameObjectConfig} config - The config to build the GameObject with.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The built Game Object.\r\n */\r\nvar BuildGameObject = function (scene, gameObject, config)\r\n{\r\n    //  Position\r\n\r\n    gameObject.x = GetAdvancedValue(config, 'x', 0);\r\n    gameObject.y = GetAdvancedValue(config, 'y', 0);\r\n    gameObject.depth = GetAdvancedValue(config, 'depth', 0);\r\n\r\n    //  Flip\r\n\r\n    gameObject.flipX = GetAdvancedValue(config, 'flipX', false);\r\n    gameObject.flipY = GetAdvancedValue(config, 'flipY', false);\r\n\r\n    //  Scale\r\n    //  Either: { scale: 2 } or { scale: { x: 2, y: 2 }}\r\n\r\n    var scale = GetAdvancedValue(config, 'scale', null);\r\n\r\n    if (typeof scale === 'number')\r\n    {\r\n        gameObject.setScale(scale);\r\n    }\r\n    else if (scale !== null)\r\n    {\r\n        gameObject.scaleX = GetAdvancedValue(scale, 'x', 1);\r\n        gameObject.scaleY = GetAdvancedValue(scale, 'y', 1);\r\n    }\r\n\r\n    //  ScrollFactor\r\n    //  Either: { scrollFactor: 2 } or { scrollFactor: { x: 2, y: 2 }}\r\n\r\n    var scrollFactor = GetAdvancedValue(config, 'scrollFactor', null);\r\n\r\n    if (typeof scrollFactor === 'number')\r\n    {\r\n        gameObject.setScrollFactor(scrollFactor);\r\n    }\r\n    else if (scrollFactor !== null)\r\n    {\r\n        gameObject.scrollFactorX = GetAdvancedValue(scrollFactor, 'x', 1);\r\n        gameObject.scrollFactorY = GetAdvancedValue(scrollFactor, 'y', 1);\r\n    }\r\n\r\n    //  Rotation\r\n\r\n    gameObject.rotation = GetAdvancedValue(config, 'rotation', 0);\r\n\r\n    var angle = GetAdvancedValue(config, 'angle', null);\r\n\r\n    if (angle !== null)\r\n    {\r\n        gameObject.angle = angle;\r\n    }\r\n\r\n    //  Alpha\r\n\r\n    gameObject.alpha = GetAdvancedValue(config, 'alpha', 1);\r\n\r\n    //  Origin\r\n    //  Either: { origin: 0.5 } or { origin: { x: 0.5, y: 0.5 }}\r\n\r\n    var origin = GetAdvancedValue(config, 'origin', null);\r\n\r\n    if (typeof origin === 'number')\r\n    {\r\n        gameObject.setOrigin(origin);\r\n    }\r\n    else if (origin !== null)\r\n    {\r\n        var ox = GetAdvancedValue(origin, 'x', 0.5);\r\n        var oy = GetAdvancedValue(origin, 'y', 0.5);\r\n\r\n        gameObject.setOrigin(ox, oy);\r\n    }\r\n\r\n    //  ScaleMode\r\n\r\n    gameObject.scaleMode = GetAdvancedValue(config, 'scaleMode', ScaleModes.DEFAULT);\r\n\r\n    //  BlendMode\r\n\r\n    gameObject.blendMode = GetAdvancedValue(config, 'blendMode', BlendModes.NORMAL);\r\n\r\n    //  Visible\r\n\r\n    gameObject.visible = GetAdvancedValue(config, 'visible', true);\r\n\r\n    //  Add to Scene\r\n\r\n    var add = GetAdvancedValue(config, 'add', true);\r\n\r\n    if (add)\r\n    {\r\n        scene.sys.displayList.add(gameObject);\r\n    }\r\n\r\n    if (gameObject.preUpdate)\r\n    {\r\n        scene.sys.updateList.add(gameObject);\r\n    }\r\n\r\n    return gameObject;\r\n};\r\n\r\nmodule.exports = BuildGameObject;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","BlendModes","GetAdvancedValue","ScaleModes","BuildGameObject","scene","gameObject","config","x","y","depth","flipX","flipY","scale","setScale","scaleX","scaleY","scrollFactor","setScrollFactor","scrollFactorX","scrollFactorY","rotation","angle","alpha","origin","setOrigin","ox","oy","scaleMode","DEFAULT","blendMode","NORMAL","visible","add","sys","displayList","preUpdate","updateList"]
}
