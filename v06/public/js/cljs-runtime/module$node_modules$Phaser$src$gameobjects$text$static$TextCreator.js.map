{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$text$static$TextCreator.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,mEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO/H,IAAIC,gBAAkBH,OAAA,CAAQ,4DAAR,CAClBI,OAAAA,CAAoBJ,OAAA,CAAQ,8DAAR,CACxB,KAAIK,iBAAmBL,OAAA,CAAQ,8DAAR,CAAvB,CACIM,KAAON,OAAA,CAAQ,6DAAR,CAeXI,OAAAG,SAAA,CAA2B,MAA3B,CAAmC,QAAS,CAACC,MAAD,CAASC,UAAT,CAC5C,CACmBC,IAAAA,EAAf;AAAIF,MAAJ,GAA4BA,MAA5B,CAAqC,EAArC,CAqBA,KAAIG,QAAUN,gBAAA,CAAiBG,MAAjB,CAAyB,MAAzB,CAAiC,EAAjC,CAAd,CACII,MAAQP,gBAAA,CAAiBG,MAAjB,CAAyB,OAAzB,CAAkC,IAAlC,CADZ,CASIK,QAAUR,gBAAA,CAAiBG,MAAjB,CAAyB,SAAzB,CAAoC,IAApC,CAEE,KAAhB,GAAIK,OAAJ,GAEID,KAAAC,QAFJ,CAEoBA,OAFpB,CAKIC,QAAAA,CAAO,IAAIR,IAAJ,CAAS,IAAAS,MAAT,CAAqB,CAArB,CAAwB,CAAxB,CAA2BJ,OAA3B,CAAoCC,KAApC,CAEQF,KAAAA,EAAnB,GAAID,UAAJ,GAEID,MAAAQ,IAFJ,CAEiBP,UAFjB,CAKAN,gBAAA,CAAgB,IAAAY,MAAhB,CAA4BD,OAA5B,CAAkCN,MAAlC,CAIAM,QAAAG,UAAA,CAAiBZ,gBAAA,CAAiBG,MAAjB,CAAyB,WAAzB,CAAsC,CAAA,CAAtC,CACjBM,QAAAI,WAAA,CAAkBb,gBAAA,CAAiBG,MAAjB,CAAyB,YAAzB,CAAuC,CAAvC,CAElB,OAAOM,QApDX,CADA,CAzB+H;",
"sources":["node_modules/Phaser/src/gameobjects/text/static/TextCreator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$text$static$TextCreator\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar BuildGameObject = require('../../BuildGameObject');\r\nvar GameObjectCreator = require('../../GameObjectCreator');\r\nvar GetAdvancedValue = require('../../../utils/object/GetAdvancedValue');\r\nvar Text = require('./Text');\r\n\r\n/**\r\n * Creates a new Text Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Text Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#text\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Text} The Game Object that was created.\r\n */\r\nGameObjectCreator.register('text', function (config, addToScene)\r\n{\r\n    if (config === undefined) { config = {}; }\r\n\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ],\r\n    //     rtl: [ 'rtl', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}\r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null)\r\n    {\r\n        style.padding = padding;\r\n    }\r\n\r\n    var text = new Text(this.scene, 0, 0, content, style);\r\n\r\n    if (addToScene !== undefined)\r\n    {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    BuildGameObject(this.scene, text, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    text.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n    text.resolution = GetAdvancedValue(config, 'resolution', 1);\r\n\r\n    return text;\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectCreator context.\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","BuildGameObject","GameObjectCreator","GetAdvancedValue","Text","register","config","addToScene","undefined","content","style","padding","text","scene","add","autoRound","resolution"]
}
