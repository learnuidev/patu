shadow$provide.module$node_modules$Phaser$src$physics$matter_js$components$SetBody=function(global,require,module,exports){var Bodies=require("module$node_modules$Phaser$src$physics$matter_js$lib$factory$Bodies"),Body=require("module$node_modules$Phaser$src$physics$matter_js$lib$body$Body"),GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),PhysicsEditorParser=require("module$node_modules$Phaser$src$physics$matter_js$PhysicsEditorParser"),Vertices=require("module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Vertices");
module.exports={setRectangle:function(width,height,options){return this.setBody({type:"rectangle",width:width,height:height},options)},setCircle:function(radius,options){return this.setBody({type:"circle",radius:radius},options)},setPolygon:function(radius,sides,options){return this.setBody({type:"polygon",sides:sides,radius:radius},options)},setTrapezoid:function(width,height,slope,options){return this.setBody({type:"trapezoid",width:width,height:height,slope:slope},options)},setExistingBody:function(body,
addToWorld){void 0===addToWorld&&(addToWorld=!0);this.body&&this.world.remove(this.body);this.body=body;for(var i=0;i<body.parts.length;i++)body.parts[i].gameObject=this;var _this=this;body.destroy=function(){_this.world.remove(_this.body);_this.body.gameObject=null};addToWorld&&this.world.add(body);this._originComponent&&this.setOrigin(body.render.sprite.xOffset,body.render.sprite.yOffset);return this},setBody:function(config,options){if(!config)return this;"string"===typeof config&&(config={type:config});
var shapeType=GetFastValue(config,"type","rectangle"),bodyX=GetFastValue(config,"x",this._tempVec2.x),bodyY=GetFastValue(config,"y",this._tempVec2.y),bodyWidth=GetFastValue(config,"width",this.width),bodyHeight=GetFastValue(config,"height",this.height);switch(shapeType){case "rectangle":var body=Bodies.rectangle(bodyX,bodyY,bodyWidth,bodyHeight,options);break;case "circle":bodyWidth=GetFastValue(config,"radius",Math.max(bodyWidth,bodyHeight)/2);bodyHeight=GetFastValue(config,"maxSides",25);body=Bodies.circle(bodyX,
bodyY,bodyWidth,options,bodyHeight);break;case "trapezoid":body=GetFastValue(config,"slope",.5);body=Bodies.trapezoid(bodyX,bodyY,bodyWidth,bodyHeight,body,options);break;case "polygon":body=GetFastValue(config,"sides",5);bodyWidth=GetFastValue(config,"radius",Math.max(bodyWidth,bodyHeight)/2);body=Bodies.polygon(bodyX,bodyY,body,bodyWidth,options);break;case "fromVertices":case "fromVerts":if(bodyWidth=GetFastValue(config,"verts",null))"string"===typeof bodyWidth&&(bodyWidth=Vertices.fromPath(bodyWidth)),
this.body&&!this.body.hasOwnProperty("temp")?(Body.setVertices(this.body,bodyWidth),body=this.body):(bodyHeight=GetFastValue(config,"flagInternal",!1),body=GetFastValue(config,"removeCollinear",.01),shapeType=GetFastValue(config,"minimumArea",10),body=Bodies.fromVertices(bodyX,bodyY,bodyWidth,options,bodyHeight,body,shapeType));break;case "fromPhysicsEditor":body=PhysicsEditorParser.parseBody(bodyX,bodyY,bodyWidth,bodyHeight,config)}body&&this.setExistingBody(body,config.addToWorld);return this}}}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$components$SetBody.js.map
