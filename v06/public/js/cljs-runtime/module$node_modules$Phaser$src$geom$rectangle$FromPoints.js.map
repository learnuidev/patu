{
"version":3,
"file":"module$node_modules$Phaser$src$geom$rectangle$FromPoints.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOrH,IAAIC,UAAYH,OAAA,CAAQ,yDAAR,CAwEhBC,OAAAC,QAAA,CAjDiBE,QAAS,CAACC,MAAD,CAASC,GAAT,CAC1B,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,IAAIH,SAAnC,CAEA,IAAsB,CAAtB,GAAIE,MAAAG,OAAJ,CAEI,MAAOF,IAaX,KAVA,IAAIG,KAAOC,MAAAC,UAAX,CACIC,KAAOF,MAAAC,UADX,CAGIE,KAAOH,MAAAI,iBAHX,CAIIC,KAAOL,MAAAI,iBAJX,CAMIE,CANJ,CAOIC,EAPJ,CAUSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBb,MAAAG,OAApB,CAAmCU,CAAA,EAAnC,CAEIF,CAiBA,CAjBIX,MAAA,CAAOa,CAAP,CAiBJ,CAfIC,KAAAC,QAAA,CAAcJ,CAAd,CAAJ,EAEIC,EACA,CADKD,CAAA,CAAE,CAAF,CACL,CAAAK,CAAA,CAAKL,CAAA,CAAE,CAAF,CAHT,GAOIC,EACA,CADKD,CAAAM,EACL,CAAAD,CAAA,CAAKL,CAAAO,EART,CAeA,CAJAd,IAIA,CAJOe,IAAAC,IAAA,CAAShB,IAAT;AAAeQ,EAAf,CAIP,CAHAL,IAGA,CAHOY,IAAAC,IAAA,CAASb,IAAT,CAAeS,CAAf,CAGP,CADAR,IACA,CADOW,IAAAE,IAAA,CAASb,IAAT,CAAeI,EAAf,CACP,CAAAF,IAAA,CAAOS,IAAAE,IAAA,CAASX,IAAT,CAAeM,CAAf,CAGXf,IAAAgB,EAAA,CAAQb,IACRH,IAAAiB,EAAA,CAAQX,IACRN,IAAAqB,MAAA,CAAYd,IAAZ,CAAmBJ,IACnBH,IAAAsB,OAAA,CAAab,IAAb,CAAoBH,IAEpB,OAAON,IA7CX,CA/BqH;",
"sources":["node_modules/Phaser/src/geom/rectangle/FromPoints.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$rectangle$FromPoints\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Rectangle = require('./Rectangle');\r\n\r\n//  points is an array of Point-like objects,\r\n//  either 2 dimensional arrays, or objects with public x/y properties:\r\n//  var points = [\r\n//      [100, 200],\r\n//      [200, 400],\r\n//      { x: 30, y: 60 }\r\n//  ]\r\n\r\n/**\r\n * Constructs new Rectangle or repositions and resizes an existing Rectangle so that all of the given points are on or within its bounds.\r\n *\r\n * @function Phaser.Geom.Rectangle.FromPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [out,$return]\r\n *\r\n * @param {array} points - An array of points (either arrays with two elements corresponding to the X and Y coordinate or an object with public `x` and `y` properties) which should be surrounded by the Rectangle.\r\n * @param {Phaser.Geom.Rectangle} [out] - Optional Rectangle to adjust.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The adjusted `out` Rectangle, or a new Rectangle if none was provided.\r\n */\r\nvar FromPoints = function (points, out)\r\n{\r\n    if (out === undefined) { out = new Rectangle(); }\r\n\r\n    if (points.length === 0)\r\n    {\r\n        return out;\r\n    }\r\n\r\n    var minX = Number.MAX_VALUE;\r\n    var minY = Number.MAX_VALUE;\r\n\r\n    var maxX = Number.MIN_SAFE_INTEGER;\r\n    var maxY = Number.MIN_SAFE_INTEGER;\r\n\r\n    var p;\r\n    var px;\r\n    var py;\r\n\r\n    for (var i = 0; i < points.length; i++)\r\n    {\r\n        p = points[i];\r\n\r\n        if (Array.isArray(p))\r\n        {\r\n            px = p[0];\r\n            py = p[1];\r\n        }\r\n        else\r\n        {\r\n            px = p.x;\r\n            py = p.y;\r\n        }\r\n\r\n        minX = Math.min(minX, px);\r\n        minY = Math.min(minY, py);\r\n\r\n        maxX = Math.max(maxX, px);\r\n        maxY = Math.max(maxY, py);\r\n    }\r\n\r\n    out.x = minX;\r\n    out.y = minY;\r\n    out.width = maxX - minX;\r\n    out.height = maxY - minY;\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = FromPoints;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Rectangle","FromPoints","points","out","undefined","length","minX","Number","MAX_VALUE","minY","maxX","MIN_SAFE_INTEGER","maxY","p","px","i","Array","isArray","py","x","y","Math","min","max","width","height"]
}
