{
"version":3,
"file":"module$node_modules$Phaser$src$math$easing$stepped$Stepped.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,2DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoCvHD,MAAAC,QAAA,CAlBcC,QAAS,CAACC,CAAD,CAAIC,KAAJ,CACvB,CACkBC,IAAAA,EAAd,GAAID,KAAJ,GAA2BA,KAA3B,CAAmC,CAAnC,CAEA,OAAS,EAAT,EAAID,CAAJ,CAEW,CAFX,CAIc,CAAT,EAAIA,CAAJ,CAEM,CAFN,CAMiC,CANjC,CAMqCC,KANrC,GAMSA,KANT,CAMiBD,CANjB,CAMsB,CANtB,EAM2B,CAN3B,CAPT,CAnBuH;",
"sources":["node_modules/Phaser/src/math/easing/stepped/Stepped.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$easing$stepped$Stepped\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Stepped easing.\r\n *\r\n * @function Phaser.Math.Easing.Stepped.Stepped\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n * @param {number} [steps=1] - The number of steps in the ease.\r\n *\r\n * @return {number} The tweened value.\r\n */\r\nvar Stepped = function (v, steps)\r\n{\r\n    if (steps === undefined) { steps = 1; }\r\n\r\n    if (v <= 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v >= 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        return (((steps * v) | 0) + 1) * (1 / steps);\r\n    }\r\n};\r\n\r\nmodule.exports = Stepped;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Stepped","v","steps","undefined"]
}
