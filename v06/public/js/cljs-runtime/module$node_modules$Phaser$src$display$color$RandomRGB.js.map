{
"version":3,
"file":"module$node_modules$Phaser$src$display$color$RandomRGB.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOnH,IAAIC,QAAUH,OAAA,CAAQ,6CAAR,CAAd,CACII,MAAQJ,OAAA,CAAQ,oDAAR,CAsBZC,OAAAC,QAAA,CARgBG,QAAS,CAACC,GAAD,CAAMC,GAAN,CACzB,CACgBC,IAAAA,EAAZ,GAAIF,GAAJ,GAAyBA,GAAzB,CAA+B,CAA/B,CACYE,KAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,GAA/B,CAEA,OAAO,KAAIH,KAAJ,CAAUD,OAAA,CAAQG,GAAR,CAAaC,GAAb,CAAV,CAA6BJ,OAAA,CAAQG,GAAR,CAAaC,GAAb,CAA7B,CAAgDJ,OAAA,CAAQG,GAAR,CAAaC,GAAb,CAAhD,CAJX,CAvBmH;",
"sources":["node_modules/Phaser/src/display/color/RandomRGB.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$display$color$RandomRGB\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar Between = require('../../math/Between');\nvar Color = require('./Color');\n\n/**\n * Creates a new Color object where the r, g, and b values have been set to random values\n * based on the given min max values.\n *\n * @function Phaser.Display.Color.RandomRGB\n * @since 3.0.0\n *\n * @param {integer} [min=0] - The minimum value to set the random range from (between 0 and 255)\n * @param {integer} [max=255] - The maximum value to set the random range from (between 0 and 255)\n *\n * @return {Phaser.Display.Color} A Color object.\n */\nvar RandomRGB = function (min, max)\n{\n    if (min === undefined) { min = 0; }\n    if (max === undefined) { max = 255; }\n\n    return new Color(Between(min, max), Between(min, max), Between(min, max));\n};\n\nmodule.exports = RandomRGB;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Between","Color","RandomRGB","min","max","undefined"]
}
