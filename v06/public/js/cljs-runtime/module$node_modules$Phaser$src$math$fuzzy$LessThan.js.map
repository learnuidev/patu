{
"version":3,
"file":"module$node_modules$Phaser$src$math$fuzzy$LessThan.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA4B/GD,MAAAC,QAAA,CAPeC,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAOC,OAAP,CACxB,CACoBC,IAAAA,EAAhB,GAAID,OAAJ,GAA6BA,OAA7B,CAAuC,IAAvC,CAEA,OAAOF,EAAP,CAAWC,CAAX,CAAeC,OAHnB,CAtB+G;",
"sources":["node_modules/Phaser/src/math/fuzzy/LessThan.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$fuzzy$LessThan\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Check whether `a` is fuzzily less than `b`.\r\n *\r\n * `a` is fuzzily less than `b` if it is less than `b + epsilon`.\r\n *\r\n * @function Phaser.Math.Fuzzy.LessThan\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value.\r\n * @param {number} b - The second value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {boolean} `true` if `a` is fuzzily less than `b`, otherwise `false`.\r\n */\r\nvar LessThan = function (a, b, epsilon)\r\n{\r\n    if (epsilon === undefined) { epsilon = 0.0001; }\r\n\r\n    return a < b + epsilon;\r\n};\r\n\r\nmodule.exports = LessThan;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","LessThan","a","b","epsilon","undefined"]
}
