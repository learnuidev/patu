shadow$provide.module$node_modules$Phaser$src$gameobjects$domelement$DOMElementCSSRenderer=function(global,require,module,exports){var CSSBlendModes=require("module$node_modules$Phaser$src$gameobjects$domelement$CSSBlendModes"),GameObject=require("module$node_modules$Phaser$src$gameobjects$GameObject");module.exports=function(renderer,src,interpolationPercentage,camera){interpolationPercentage=src.node;if(!interpolationPercentage||GameObject.RENDER_MASK!==src.renderFlags||0<src.cameraFilter&&src.cameraFilter&
camera.id)interpolationPercentage&&(interpolationPercentage.style.display="none");else{var camMatrix=renderer._tempMatrix1,spriteMatrix=renderer._tempMatrix2;renderer=renderer._tempMatrix3;spriteMatrix.applyITRS(src.x-src.originX*src.width-camera.scrollX*src.scrollFactorX,src.y-src.originY*src.height-camera.scrollY*src.scrollFactorY,src.rotation,src.scaleX,src.scaleY);camMatrix.copyFrom(camera.matrix);camMatrix.multiply(spriteMatrix,renderer);interpolationPercentage.style.display="block";interpolationPercentage.style.opacity=
src.alpha;interpolationPercentage.style.zIndex=src._depth;interpolationPercentage.style.pointerEvents="auto";interpolationPercentage.style.mixBlendMode=CSSBlendModes[src._blendMode];interpolationPercentage.style.transform=renderer.getCSSMatrix()+" skew("+src.skewX+"rad, "+src.skewY+"rad) rotate3d("+src.rotate3d.x+","+src.rotate3d.y+","+src.rotate3d.z+","+src.rotate3d.w+src.rotate3dAngle+")";interpolationPercentage.style.transformOrigin=100*src.originX+"% "+100*src.originY+"%"}}}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$domelement$DOMElementCSSRenderer.js.map
