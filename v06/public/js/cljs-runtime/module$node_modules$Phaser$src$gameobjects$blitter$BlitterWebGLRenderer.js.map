{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$blitter$BlitterWebGLRenderer.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/Phaser/src/gameobjects/blitter/BlitterWebGLRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$blitter$BlitterWebGLRenderer\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = require('../../renderer/webgl/Utils');\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Blitter#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Blitter} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar BlitterWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    var list = src.getRenderList();\r\n\r\n    if (list.length === 0)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var pipeline = this.pipeline;\r\n\r\n    renderer.setPipeline(pipeline, src);\r\n\r\n    var cameraScrollX = camera.scrollX * src.scrollFactorX;\r\n    var cameraScrollY = camera.scrollY * src.scrollFactorY;\r\n\r\n    var calcMatrix = pipeline._tempMatrix1;\r\n\r\n    calcMatrix.copyFrom(camera.matrix);\r\n\r\n    if (parentMatrix)\r\n    {\r\n        calcMatrix.multiplyWithOffset(parentMatrix, -cameraScrollX, -cameraScrollY);\r\n\r\n        cameraScrollX = 0;\r\n        cameraScrollY = 0;\r\n    }\r\n\r\n    var blitterX = src.x - cameraScrollX;\r\n    var blitterY = src.y - cameraScrollY;\r\n    var prevTextureSourceIndex = -1;\r\n    var tintEffect = false;\r\n    var alpha = camera.alpha * src.alpha;\r\n    var roundPixels = camera.roundPixels;\r\n\r\n    for (var index = 0; index < list.length; index++)\r\n    {\r\n        var bob = list[index];\r\n        var frame = bob.frame;\r\n        var bobAlpha = bob.alpha * alpha;\r\n\r\n        if (bobAlpha === 0)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        var width = frame.width;\r\n        var height = frame.height;\r\n\r\n        var x = blitterX + bob.x + frame.x;\r\n        var y = blitterY + bob.y + frame.y;\r\n\r\n        if (bob.flipX)\r\n        {\r\n            width *= -1;\r\n            x += frame.width;\r\n        }\r\n\r\n        if (bob.flipY)\r\n        {\r\n            height *= -1;\r\n            y += frame.height;\r\n        }\r\n\r\n        var xw = x + width;\r\n        var yh = y + height;\r\n\r\n        var tx0 = calcMatrix.getX(x, y);\r\n        var ty0 = calcMatrix.getY(x, y);\r\n\r\n        var tx1 = calcMatrix.getX(xw, yh);\r\n        var ty1 = calcMatrix.getY(xw, yh);\r\n\r\n        var tint = Utils.getTintAppendFloatAlpha(0xffffff, bobAlpha);\r\n\r\n        //  Bind texture only if the Texture Source is different from before\r\n        if (frame.sourceIndex !== prevTextureSourceIndex)\r\n        {\r\n            pipeline.setTexture2D(frame.glTexture, 0);\r\n\r\n            prevTextureSourceIndex = frame.sourceIndex;\r\n        }\r\n\r\n        if (roundPixels)\r\n        {\r\n            tx0 |= 0;\r\n            ty0 |= 0;\r\n\r\n            tx1 |= 0;\r\n            ty1 |= 0;\r\n        }\r\n\r\n        //  TL x/y, BL x/y, BR x/y, TR x/y\r\n        if (pipeline.batchQuad(tx0, ty0, tx0, ty1, tx1, ty1, tx1, ty0, frame.u0, frame.v0, frame.u1, frame.v1, tint, tint, tint, tint, tintEffect))\r\n        {\r\n            prevTextureSourceIndex = -1;\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = BlitterWebGLRenderer;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Utils","BlitterWebGLRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","list","getRenderList","length","pipeline","setPipeline","cameraScrollX","scrollX","scrollFactorX","cameraScrollY","scrollY","scrollFactorY","calcMatrix","_tempMatrix1","copyFrom","matrix","multiplyWithOffset","blitterX","x","blitterY","y","prevTextureSourceIndex","alpha","roundPixels","index","bob","frame","bobAlpha","width","height","flipX","flipY","xw","yh","tx0","getX","ty0","getY","tx1","ty1","tint","getTintAppendFloatAlpha","sourceIndex","setTexture2D","glTexture","batchQuad","u0","v0","u1","v1","tintEffect"]
}
