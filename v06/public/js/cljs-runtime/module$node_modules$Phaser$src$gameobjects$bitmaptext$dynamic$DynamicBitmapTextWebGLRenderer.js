shadow$provide.module$node_modules$Phaser$src$gameobjects$bitmaptext$dynamic$DynamicBitmapTextWebGLRenderer=function(global,require,module,exports){var Utils=require("module$node_modules$Phaser$src$renderer$webgl$Utils");module.exports=function(renderer,src,interpolationPercentage,camera,parentMatrix){interpolationPercentage=src.text;var textLength=interpolationPercentage.length;if(0!==textLength){var pipeline=this.pipeline;renderer.setPipeline(pipeline,src);var crop=0<src.cropWidth||0<src.cropHeight;
crop&&(pipeline.flush(),renderer.pushScissor(src.x,src.y,src.cropWidth*src.scaleX,src.cropHeight*src.scaleY));var camMatrix=pipeline._tempMatrix1,spriteMatrix=pipeline._tempMatrix2,calcMatrix=pipeline._tempMatrix3,fontMatrix=pipeline._tempMatrix4;spriteMatrix.applyITRS(src.x,src.y,src.rotation,src.scaleX,src.scaleY);camMatrix.copyFrom(camera.matrix);parentMatrix?(camMatrix.multiplyWithOffset(parentMatrix,-camera.scrollX*src.scrollFactorX,-camera.scrollY*src.scrollFactorY),spriteMatrix.e=src.x,spriteMatrix.f=
src.y):(spriteMatrix.e-=camera.scrollX*src.scrollFactorX,spriteMatrix.f-=camera.scrollY*src.scrollFactorY);camMatrix.multiply(spriteMatrix,calcMatrix);camMatrix=src.frame;var texture=camMatrix.glTexture;parentMatrix=camMatrix.cutX;camMatrix=camMatrix.cutY;var textureWidth=texture.width,textureHeight=texture.height,tintEffect=src._isTinted&&src.tintFill,tintTL=Utils.getTintAppendFloatAlpha(src._tintTL,camera.alpha*src._alphaTL),tintTR=Utils.getTintAppendFloatAlpha(src._tintTR,camera.alpha*src._alphaTR),
tintBL=Utils.getTintAppendFloatAlpha(src._tintBL,camera.alpha*src._alphaBL),tintBR=Utils.getTintAppendFloatAlpha(src._tintBR,camera.alpha*src._alphaBR);pipeline.setTexture2D(texture,0);var yAdvance=texture=0,lastCharCode=0,letterSpacing=src.letterSpacing,glyph,scrollX=src.scrollX,scrollY=src.scrollY,fontData=src.fontData,chars=fontData.chars;fontData=fontData.lineHeight;var align=src._align,currentLine=0,lineOffsetX=0;src.getTextBounds(!1);var lineData=src._bounds.lines;1===align?lineOffsetX=(lineData.longest-
lineData.lengths[0])/2:2===align&&(lineOffsetX=lineData.longest-lineData.lengths[0]);for(var roundPixels=camera.roundPixels,displayCallback=src.displayCallback,callbackData=src.callbackData,i=0;i<textLength;i++){var charCode=interpolationPercentage.charCodeAt(i);if(10===charCode){currentLine++;1===align?lineOffsetX=(lineData.longest-lineData.lengths[currentLine])/2:2===align&&(lineOffsetX=lineData.longest-lineData.lengths[currentLine]);texture=0;yAdvance+=fontData;var lastGlyph=null}else if(glyph=
chars[charCode]){var glyphX=parentMatrix+glyph.x;var glyphY=camMatrix+glyph.y;var glyphW=glyph.width;var glyphH=glyph.height;var x=glyph.xOffset+texture-scrollX,y=glyph.yOffset+yAdvance-scrollY;null!==lastGlyph&&(lastGlyph=glyph.kerning[lastCharCode],x+=void 0!==lastGlyph?lastGlyph:0);texture+=glyph.xAdvance+letterSpacing;lastGlyph=glyph;lastCharCode=charCode;if(0!==glyphW&&0!==glyphH&&32!==charCode){var scale=src.fontSize/src.fontData.size;var rotation=0;displayCallback&&(callbackData.color=0,callbackData.tint.topLeft=
tintTL,callbackData.tint.topRight=tintTR,callbackData.tint.bottomLeft=tintBL,callbackData.tint.bottomRight=tintBR,callbackData.index=i,callbackData.charCode=charCode,callbackData.x=x,callbackData.y=y,callbackData.scale=scale,callbackData.rotation=rotation,callbackData.data=glyph.data,tintBR=displayCallback(callbackData),x=tintBR.x,y=tintBR.y,scale=tintBR.scale,rotation=tintBR.rotation,tintBR.color?tintBR=tintBL=tintTR=tintTL=tintBR.color:(tintTL=tintBR.tint.topLeft,tintTR=tintBR.tint.topRight,tintBL=
tintBR.tint.bottomLeft,tintBR=tintBR.tint.bottomRight),tintTL=Utils.getTintAppendFloatAlpha(tintTL,camera.alpha*src._alphaTL),tintTR=Utils.getTintAppendFloatAlpha(tintTR,camera.alpha*src._alphaTR),tintBL=Utils.getTintAppendFloatAlpha(tintBL,camera.alpha*src._alphaBL),tintBR=Utils.getTintAppendFloatAlpha(tintBR,camera.alpha*src._alphaBR));x*=scale;y*=scale;x-=src.displayOriginX;y-=src.displayOriginY;x+=lineOffsetX;fontMatrix.applyITRS(x,y,rotation,scale,scale);calcMatrix.multiply(fontMatrix,spriteMatrix);
x=glyphX/textureWidth;y=glyphY/textureHeight;glyphX=(glyphX+glyphW)/textureWidth;glyphY=(glyphY+glyphH)/textureHeight;var yh=glyphH;glyphH=spriteMatrix.e;charCode=spriteMatrix.f;glyph=yh*spriteMatrix.c+spriteMatrix.e;scale=yh*spriteMatrix.d+spriteMatrix.f;rotation=glyphW*spriteMatrix.a+yh*spriteMatrix.c+spriteMatrix.e;yh=glyphW*spriteMatrix.b+yh*spriteMatrix.d+spriteMatrix.f;var tx3=glyphW*spriteMatrix.a+spriteMatrix.e;glyphW=glyphW*spriteMatrix.b+spriteMatrix.f;roundPixels&&(glyphH|=0,charCode|=
0,glyph|=0,scale|=0,rotation|=0,yh|=0,tx3|=0,glyphW|=0);pipeline.batchQuad(glyphH,charCode,glyph,scale,rotation,yh,tx3,glyphW,x,y,glyphX,glyphY,tintTL,tintTR,tintBL,tintBR,tintEffect)}}}crop&&(pipeline.flush(),renderer.popScissor())}}}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$bitmaptext$dynamic$DynamicBitmapTextWebGLRenderer.js.map
