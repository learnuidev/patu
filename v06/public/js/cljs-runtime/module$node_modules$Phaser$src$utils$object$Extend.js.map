{
"version":3,
"file":"module$node_modules$Phaser$src$utils$object$Extend.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO/G,IAAIC,cAAgBH,OAAA,CAAQ,2DAAR,CAApB,CAcII,OAASA,QAAS,EACtB,CAAA,IACQC,OADR,CACiBC,IADjB,CACkCC,WADlC,CAEQC,OAASC,SAAA,CAAU,CAAV,CAATD,EAAyB,EAFjC,CAGQE,EAAI,CAHZ,CAIQC,OAASF,SAAAE,OAJjB,CAKQC,KAAO,CAAA,CAGW,UAAtB,GAAI,MAAOJ,OAAX,GAEII,IAIA,CAJOJ,MAIP,CAHAA,MAGA,CAHSC,SAAA,CAAU,CAAV,CAGT,EAHyB,EAGzB,CAAAC,CAAA,CAAI,CANR,CAUIC,OAAJ,GAAeD,CAAf,GAEIF,MACA,CADS,IACT,CAAA,EAAEE,CAHN,CAMA,KAAA,CAAOA,CAAP,CAAWC,MAAX,CAAmBD,CAAA,EAAnB,CAGI,GAAgC,IAAhC,GAAKL,OAAL,CAAeI,SAAA,CAAUC,CAAV,CAAf,EAGI,IAAKJ,IAAL,GAAaD,QAAb,CACA,CACI,IAAAQ,IAAML,MAAA,CAAOF,IAAP,CACN,KAAAQ,KAAOT,OAAA,CAAQC,IAAR,CAGHE;MAAJ,GAAeM,IAAf,GAMIF,IAAJ,EAAYE,IAAZ,GAAqBX,aAAA,CAAcW,IAAd,CAArB,GAA6CP,WAA7C,CAA2DQ,KAAAC,QAAA,CAAcF,IAAd,CAA3D,IAEQP,WAAJ,EAEIA,WACA,CADc,CAAA,CACd,CAAAU,GAAA,CAAQJ,GAAA,EAAOE,KAAAC,QAAA,CAAcH,GAAd,CAAP,CAA4BA,GAA5B,CAAkC,EAH9C,EAOII,GAPJ,CAOYJ,GAAA,EAAOV,aAAA,CAAcU,GAAd,CAAP,CAA4BA,GAA5B,CAAkC,EAI9C,CAAAL,MAAA,CAAOF,IAAP,CAAA,CAAeF,MAAA,CAAOQ,IAAP,CAAaK,GAAb,CAAoBH,IAApB,CAbnB,EAiBkBI,IAAAA,EAjBlB,GAiBSJ,IAjBT,GAmBIN,MAAA,CAAOF,IAAP,CAnBJ,CAmBmBQ,IAnBnB,CANA,CALJ,CAqCR,MAAON,OApEX,CAuEAP,OAAAC,QAAA,CAAiBE,MA7F8F;",
"sources":["node_modules/Phaser/src/utils/object/Extend.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$object$Extend\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar IsPlainObject = require('./IsPlainObject');\r\n\r\n// @param {boolean} deep - Perform a deep copy?\r\n// @param {object} target - The target object to copy to.\r\n// @return {object} The extended object.\r\n\r\n/**\r\n * This is a slightly modified version of http://api.jquery.com/jQuery.extend/\r\n *\r\n * @function Phaser.Utils.Objects.Extend\r\n * @since 3.0.0\r\n *\r\n * @return {object} [description]\r\n */\r\nvar Extend = function ()\r\n{\r\n    var options, name, src, copy, copyIsArray, clone,\r\n        target = arguments[0] || {},\r\n        i = 1,\r\n        length = arguments.length,\r\n        deep = false;\r\n\r\n    // Handle a deep copy situation\r\n    if (typeof target === 'boolean')\r\n    {\r\n        deep = target;\r\n        target = arguments[1] || {};\r\n\r\n        // skip the boolean and the target\r\n        i = 2;\r\n    }\r\n\r\n    // extend Phaser if only one argument is passed\r\n    if (length === i)\r\n    {\r\n        target = this;\r\n        --i;\r\n    }\r\n\r\n    for (; i < length; i++)\r\n    {\r\n        // Only deal with non-null/undefined values\r\n        if ((options = arguments[i]) != null)\r\n        {\r\n            // Extend the base object\r\n            for (name in options)\r\n            {\r\n                src = target[name];\r\n                copy = options[name];\r\n\r\n                // Prevent never-ending loop\r\n                if (target === copy)\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                // Recurse if we're merging plain objects or arrays\r\n                if (deep && copy && (IsPlainObject(copy) || (copyIsArray = Array.isArray(copy))))\r\n                {\r\n                    if (copyIsArray)\r\n                    {\r\n                        copyIsArray = false;\r\n                        clone = src && Array.isArray(src) ? src : [];\r\n                    }\r\n                    else\r\n                    {\r\n                        clone = src && IsPlainObject(src) ? src : {};\r\n                    }\r\n\r\n                    // Never move original objects, clone them\r\n                    target[name] = Extend(deep, clone, copy);\r\n\r\n                // Don't bring in undefined values\r\n                }\r\n                else if (copy !== undefined)\r\n                {\r\n                    target[name] = copy;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Return the modified object\r\n    return target;\r\n};\r\n\r\nmodule.exports = Extend;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","IsPlainObject","Extend","options","name","copyIsArray","target","arguments","i","length","deep","src","copy","Array","isArray","clone","undefined"]
}
