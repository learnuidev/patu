{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$sprite$SpriteCreator.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,gEAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO5H,IAAIC,gBAAkBH,OAAA,CAAQ,4DAAR,CAAtB,CACII,yBAA2BJ,OAAA,CAAQ,qEAAR,CAC3BK,OAAAA,CAAoBL,OAAA,CAAQ,8DAAR,CACxB,KAAIM,iBAAmBN,OAAA,CAAQ,8DAAR,CAAvB,CACIO,OAASP,OAAA,CAAQ,0DAAR,CAuBbK;MAAAG,SAAA,CAA2B,QAA3B,CAAqC,QAAS,CAACC,MAAD,CAASC,UAAT,CAC9C,CACmBC,IAAAA,EAAf,GAAIF,MAAJ,GAA4BA,MAA5B,CAAqC,EAArC,CAEA,KAAIG,IAAMN,gBAAA,CAAiBG,MAAjB,CAAyB,KAAzB,CAAgC,IAAhC,CAAV,CACII,MAAQP,gBAAA,CAAiBG,MAAjB,CAAyB,OAAzB,CAAkC,IAAlC,CAERK,IAAAA,CAAS,IAAIP,MAAJ,CAAW,IAAAQ,MAAX,CAAuB,CAAvB,CAA0B,CAA1B,CAA6BH,GAA7B,CAAkCC,KAAlC,CAEMF,KAAAA,EAAnB,GAAID,UAAJ,GAEID,MAAAO,IAFJ,CAEiBN,UAFjB,CAKAP,gBAAA,CAAgB,IAAAY,MAAhB,CAA4BD,GAA5B,CAAoCL,MAApC,CAIAL,yBAAA,CAAyBU,GAAzB,CAAiCL,MAAjC,CAEA,OAAOK,IAnBX,CADA,CAlC4H;",
"sources":["node_modules/Phaser/src/gameobjects/sprite/SpriteCreator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$sprite$SpriteCreator\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar BuildGameObject = require('../BuildGameObject');\r\nvar BuildGameObjectAnimation = require('../BuildGameObjectAnimation');\r\nvar GameObjectCreator = require('../GameObjectCreator');\r\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\r\nvar Sprite = require('./Sprite');\r\n\r\n/**\r\n * @typedef {object} SpriteConfig\r\n * @extends GameObjectConfig\r\n *\r\n * @property {string} [key] - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @property {(number|string)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\r\n\r\n/**\r\n * Creates a new Sprite Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Sprite Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#sprite\r\n * @since 3.0.0\r\n *\r\n * @param {SpriteConfig} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Sprite} The Game Object that was created.\r\n */\r\nGameObjectCreator.register('sprite', function (config, addToScene)\r\n{\r\n    if (config === undefined) { config = {}; }\r\n\r\n    var key = GetAdvancedValue(config, 'key', null);\r\n    var frame = GetAdvancedValue(config, 'frame', null);\r\n\r\n    var sprite = new Sprite(this.scene, 0, 0, key, frame);\r\n\r\n    if (addToScene !== undefined)\r\n    {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    BuildGameObject(this.scene, sprite, config);\r\n\r\n    //  Sprite specific config options:\r\n\r\n    BuildGameObjectAnimation(sprite, config);\r\n\r\n    return sprite;\r\n});\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","BuildGameObject","BuildGameObjectAnimation","GameObjectCreator","GetAdvancedValue","Sprite","register","config","addToScene","undefined","key","frame","sprite","scene","add"]
}
