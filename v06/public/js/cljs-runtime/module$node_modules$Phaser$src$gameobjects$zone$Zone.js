shadow$provide.module$node_modules$Phaser$src$gameobjects$zone$Zone=function(global,require,module,exports){var BlendModes=require("module$node_modules$Phaser$src$renderer$BlendModes"),Circle=require("module$node_modules$Phaser$src$geom$circle$Circle"),CircleContains=require("module$node_modules$Phaser$src$geom$circle$Contains");global=require("module$node_modules$Phaser$src$utils$Class");exports=require("module$node_modules$Phaser$src$gameobjects$components$index");var GameObject=require("module$node_modules$Phaser$src$gameobjects$GameObject"),
Rectangle=require("module$node_modules$Phaser$src$geom$rectangle$Rectangle"),RectangleContains=require("module$node_modules$Phaser$src$geom$rectangle$Contains");require=new global({Extends:GameObject,Mixins:[exports.Depth,exports.GetBounds,exports.Origin,exports.ScaleMode,exports.Transform,exports.ScrollFactor,exports.Visible],initialize:function(scene,x,y,width,height){void 0===width&&(width=1);void 0===height&&(height=width);GameObject.call(this,scene,"Zone");this.setPosition(x,y);this.width=width;
this.height=height;this.blendMode=BlendModes.NORMAL;this.updateDisplayOrigin()},displayWidth:{get:function(){return this.scaleX*this.width},set:function(value){this.scaleX=value/this.width}},displayHeight:{get:function(){return this.scaleY*this.height},set:function(value){this.scaleY=value/this.height}},setSize:function(width,height,resizeInput){void 0===resizeInput&&(resizeInput=!0);this.width=width;this.height=height;resizeInput&&this.input&&this.input.hitArea instanceof Rectangle&&(this.input.hitArea.width=
width,this.input.hitArea.height=height);return this},setDisplaySize:function(width,height){this.displayWidth=width;this.displayHeight=height;return this},setCircleDropZone:function(radius){return this.setDropZone(new Circle(0,0,radius),CircleContains)},setRectangleDropZone:function(width,height){return this.setDropZone(new Rectangle(0,0,width,height),RectangleContains)},setDropZone:function(shape,callback){void 0===shape?this.setRectangleDropZone(this.width,this.height):this.input||this.setInteractive(shape,
callback,!0);return this},setAlpha:function(){},renderCanvas:function(){},renderWebGL:function(){}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$zone$Zone.js.map
