{
"version":3,
"file":"module$node_modules$Phaser$src$geom$triangle$Contains.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+ClHD,MAAAC,QAAA,CA1BeC,QAAS,CAACC,QAAD,CAAWC,CAAX,CAAcC,CAAd,CACxB,CACI,IAAIC,IAAMH,QAAAI,GAAND,CAAoBH,QAAAK,GAAxB,CACIC,IAAMN,QAAAO,GAAND,CAAoBN,QAAAQ,GADxB,CAGIC,IAAMT,QAAAU,GAAND,CAAoBT,QAAAK,GAHxB,CAIIM,IAAMX,QAAAY,GAAND,CAAoBX,QAAAQ,GAEdP,EAANY,EAAUb,QAAAK,GACd,KAAIS,IAAMZ,CAANY,CAAUd,QAAAQ,GAEVO,SAAAA,CAASZ,GAATY,CAAeZ,GAAfY,CAAuBT,GAAvBS,CAA6BT,GAC7BU,EAAAA,CAASb,GAATa,CAAeP,GAAfO,CAAuBV,GAAvBU,CAA6BL,GAC7BM,IAAAA,CAASd,GAATc,CAAeJ,CAAfI,CAAuBX,GAAvBW,CAA6BH,GAC7BI,IAAAA,CAAST,GAATS,CAAeT,GAAfS,CAAuBP,GAAvBO,CAA6BP,GAC7BQ,IAAAA,CAASV,GAATU,CAAeN,CAAfM,CAAuBR,GAAvBQ,CAA6BL,GAG7BM,IAAAA,CAAML,QAANK,CAAcF,GAAdE,CAAwBJ,CAAxBI,CAAgCJ,CAChCK,IAAAA,CAAa,CAAP,GAACD,GAAD,CAAY,CAAZ,CAAiB,CAAjB,CAAqBA,GAC3BE,EAAAA,EAAMJ,GAANI,CAAcL,GAAdK,CAAwBN,CAAxBM,CAAgCH,GAAhCG,EAA0CD,GAC1CE,SAAAA,EAAMR,QAANQ,CAAcJ,GAAdI,CAAwBP,CAAxBO,CAAgCN,GAAhCM,EAA0CF,GAE9C,OAAa,EAAb;AAAQC,CAAR,EAAuB,CAAvB,EAAkBC,QAAlB,EAAqC,CAArC,CAA6BD,CAA7B,CAAiCC,QAtBrC,CAtBkH;",
"sources":["node_modules/Phaser/src/geom/triangle/Contains.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$triangle$Contains\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n//  http://www.blackpawn.com/texts/pointinpoly/\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Triangle.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - [description]\r\n * @param {number} x - [description]\r\n * @param {number} y - [description]\r\n *\r\n * @return {boolean} [description]\r\n */\r\nvar Contains = function (triangle, x, y)\r\n{\r\n    var v0x = triangle.x3 - triangle.x1;\r\n    var v0y = triangle.y3 - triangle.y1;\r\n\r\n    var v1x = triangle.x2 - triangle.x1;\r\n    var v1y = triangle.y2 - triangle.y1;\r\n\r\n    var v2x = x - triangle.x1;\r\n    var v2y = y - triangle.y1;\r\n\r\n    var dot00 = (v0x * v0x) + (v0y * v0y);\r\n    var dot01 = (v0x * v1x) + (v0y * v1y);\r\n    var dot02 = (v0x * v2x) + (v0y * v2y);\r\n    var dot11 = (v1x * v1x) + (v1y * v1y);\r\n    var dot12 = (v1x * v2x) + (v1y * v2y);\r\n\r\n    // Compute barycentric coordinates\r\n    var b = ((dot00 * dot11) - (dot01 * dot01));\r\n    var inv = (b === 0) ? 0 : (1 / b);\r\n    var u = ((dot11 * dot02) - (dot01 * dot12)) * inv;\r\n    var v = ((dot00 * dot12) - (dot01 * dot02)) * inv;\r\n\r\n    return (u >= 0 && v >= 0 && (u + v < 1));\r\n};\r\n\r\nmodule.exports = Contains;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Contains","triangle","x","y","v0x","x3","x1","v0y","y3","y1","v1x","x2","v1y","y2","v2x","v2y","dot00","dot01","dot02","dot11","dot12","b","inv","u","v"]
}
