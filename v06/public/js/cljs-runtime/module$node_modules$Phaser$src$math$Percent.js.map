{
"version":3,
"file":"module$node_modules$Phaser$src$math$Percent.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqDxGD,MAAAC,QAAA,CA9BcC,QAAS,CAACC,KAAD,CAAQC,GAAR,CAAaC,GAAb,CAAkBC,QAAlB,CACvB,CACgBC,IAAAA,EAAZ,GAAIF,GAAJ,GAAyBA,GAAzB,CAA+BD,GAA/B,CAAqC,CAArC,CAEII,IAAAA,EAAcL,KAAdK,CAAsBJ,GAAtBI,GAA8BH,GAA9BG,CAAoCJ,GAApCI,CAEa,EAAjB,CAAIA,GAAJ,CAEqBD,IAAAA,EAAjB,GAAID,QAAJ,EAEIE,GAEA,EAFeF,QAEf,CAF0BH,KAE1B,GAFqCG,QAErC,CAFgDD,GAEhD,EAAiB,CAAjB,CAAIG,GAAJ,GAEIA,GAFJ,CAEiB,CAFjB,CAJJ,EAWIA,GAXJ,CAWiB,CAbrB,CAgBsB,CAhBtB,CAgBSA,GAhBT,GAkBIA,GAlBJ,CAkBiB,CAlBjB,CAqBA,OAAOA,IA1BX,CAxBwG;",
"sources":["node_modules/Phaser/src/math/Percent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$Percent\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Work out what percentage `value` is of the range between `min` and `max`.\r\n * If `max` isn't given then it will return the percentage of `value` to `min`.\r\n *\r\n * You can optionally specify an `upperMax` value, which is a mid-way point in the range that represents 100%, after which the % starts to go down to zero again.\r\n *\r\n * @function Phaser.Math.Percent\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to determine the percentage of.\r\n * @param {number} min - The minimum value.\r\n * @param {number} [max] - The maximum value.\r\n * @param {number} [upperMax] - The mid-way point in the range that represents 100%.\r\n *\r\n * @return {number} A value between 0 and 1 representing the percentage.\r\n */\r\nvar Percent = function (value, min, max, upperMax)\r\n{\r\n    if (max === undefined) { max = min + 1; }\r\n\r\n    var percentage = (value - min) / (max - min);\r\n\r\n    if (percentage > 1)\r\n    {\r\n        if (upperMax !== undefined)\r\n        {\r\n            percentage = ((upperMax - value)) / (upperMax - max);\r\n\r\n            if (percentage < 0)\r\n            {\r\n                percentage = 0;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            percentage = 1;\r\n        }\r\n    }\r\n    else if (percentage < 0)\r\n    {\r\n        percentage = 0;\r\n    }\r\n\r\n    return percentage;\r\n};\r\n\r\nmodule.exports = Percent;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Percent","value","min","max","upperMax","undefined","percentage"]
}
