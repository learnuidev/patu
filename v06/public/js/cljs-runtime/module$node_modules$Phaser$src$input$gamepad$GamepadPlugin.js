shadow$provide.module$node_modules$Phaser$src$input$gamepad$GamepadPlugin=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var EventEmitter=require("module$node_modules$eventemitter3$index"),Gamepad=require("module$node_modules$Phaser$src$input$gamepad$Gamepad"),GetValue=require("module$node_modules$Phaser$src$utils$object$GetValue");require=require("module$node_modules$Phaser$src$input$InputPluginCache");global=new global({Extends:EventEmitter,
initialize:function(sceneInputPlugin){EventEmitter.call(this);this.scene=sceneInputPlugin.scene;this.settings=this.scene.sys.settings;this.sceneInputPlugin=sceneInputPlugin;this.enabled=!0;this.gamepads=[];this.queue=[];sceneInputPlugin.pluginEvents.once("boot",this.boot,this);sceneInputPlugin.pluginEvents.on("start",this.start,this)},boot:function(){var game=this.scene.sys.game,settings=this.settings.input,config=game.config;this.enabled=GetValue(settings,"gamepad",config.inputGamepad)&&game.device.input.gamepads;
this.target=GetValue(settings,"gamepad.target",config.inputGamepadEventTarget);this.sceneInputPlugin.pluginEvents.once("destroy",this.destroy,this)},start:function(){this.enabled&&this.startListeners();this.sceneInputPlugin.pluginEvents.once("shutdown",this.shutdown,this)},isActive:function(){return this.enabled&&this.scene.sys.isActive()},startListeners:function(){var _this=this,target=this.target,handler=function(event){!event.defaultPrevented&&_this.isActive()&&(_this.refreshPads(),_this.queue.push(event))};
this.onGamepadHandler=handler;target.addEventListener("gamepadconnected",handler,!1);target.addEventListener("gamepaddisconnected",handler,!1);this.sceneInputPlugin.pluginEvents.on("update",this.update,this)},stopListeners:function(){this.target.removeEventListener("gamepadconnected",this.onGamepadHandler);this.target.removeEventListener("gamepaddisconnected",this.onGamepadHandler);this.sceneInputPlugin.pluginEvents.off("update",this.update)},disconnectAll:function(){for(var i=0;i<this.gamepads.length;i++)this.gamepads.connected=
!1},refreshPads:function(){var connectedPads=navigator.getGamepads();if(connectedPads)for(var currentPads=this.gamepads,i=0;i<connectedPads.length;i++){var livePad=connectedPads[i];if(livePad){var id=livePad.id,index=livePad.index,currentPad=currentPads[index];currentPad?currentPad.id!==id?(currentPad.destroy(),currentPads[index]=new Gamepad(this,livePad)):currentPad.update(livePad):(livePad=new Gamepad(this,livePad),currentPads[index]=livePad,this._pad1)?this._pad2?this._pad3?this._pad4||(this._pad4=
livePad):this._pad3=livePad:this._pad2=livePad:this._pad1=livePad}}else this.disconnectAll()},getAll:function(){for(var out=[],pads=this.gamepads,i=0;i<pads.length;i++)pads[i]&&out.push(pads[i]);return out},getPad:function(index){for(var pads=this.gamepads,i=0;i<pads.length;i++)if(pads[i]&&pads[i].index===index)return pads[i]},update:function(){if(this.enabled){this.refreshPads();var len=this.queue.length;if(0!==len)for(var queue=this.queue.splice(0,len),i=0;i<len;i++){var event=queue[i],pad=this.getPad(event.gamepad.index);
"gamepadconnected"===event.type?this.emit("connected",pad,event):"gamepaddisconnected"===event.type&&this.emit("disconnected",pad,event)}}},shutdown:function(){this.stopListeners();this.disconnectAll();this.removeAllListeners()},destroy:function(){this.shutdown();for(var i=0;i<this.gamepads.length;i++)this.gamepads[i]&&this.gamepads[i].destroy();this.gamepads=[];this.target=this.sceneInputPlugin=this.settings=this.scene=null},total:{get:function(){return this.gamepads.length}},pad1:{get:function(){return this._pad1}},
pad2:{get:function(){return this._pad2}},pad3:{get:function(){return this._pad3}},pad4:{get:function(){return this._pad4}}});require.register("GamepadPlugin",global,"gamepad","gamepad","inputGamepad");module.exports=global}
//# sourceMappingURL=module$node_modules$Phaser$src$input$gamepad$GamepadPlugin.js.map
