{
"version":3,
"file":"module$node_modules$Phaser$src$geom$triangle$BuildRight.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOpH,IAAIC,SAAWH,OAAA,CAAQ,uDAAR,CAoCfC,OAAAC,QAAA,CAjBiBE,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAOC,KAAP,CAAcC,MAAd,CAC1B,CACmBC,IAAAA,EAAf,GAAID,MAAJ,GAA4BA,MAA5B,CAAqCD,KAArC,CAYA,OAAO,KAAIJ,QAAJ,CATEE,CASF,CAREC,CAQF,CANED,CAMF,CALEC,CAKF,CALME,MAKN,CAHEH,CAGF,CAHME,KAGN,CAFED,CAEF,CAbX,CA3BoH;",
"sources":["node_modules/Phaser/src/geom/triangle/BuildRight.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$triangle$BuildRight\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Triangle = require('./Triangle');\r\n\r\n//  Builds a right triangle, with one 90 degree angle and two acute angles\r\n//  The x/y is the coordinate of the 90 degree angle (and will map to x1/y1 in the resulting Triangle)\r\n//  w/h can be positive or negative and represent the length of each side\r\n\r\n/**\r\n * Builds a right triangle, i.e. one which has a 90-degree angle and two acute angles.\r\n *\r\n * @function Phaser.Geom.Triangle.BuildRight\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The X coordinate of the right angle, which will also be the first X coordinate of the constructed Triangle.\r\n * @param {number} y - The Y coordinate of the right angle, which will also be the first Y coordinate of the constructed Triangle.\r\n * @param {number} width - The length of the side which is to the left or to the right of the right angle.\r\n * @param {number} height - The length of the side which is above or below the right angle.\r\n *\r\n * @return {Phaser.Geom.Triangle} The constructed right Triangle.\r\n */\r\nvar BuildRight = function (x, y, width, height)\r\n{\r\n    if (height === undefined) { height = width; }\r\n\r\n    //  90 degree angle\r\n    var x1 = x;\r\n    var y1 = y;\r\n\r\n    var x2 = x;\r\n    var y2 = y - height;\r\n\r\n    var x3 = x + width;\r\n    var y3 = y;\r\n\r\n    return new Triangle(x1, y1, x2, y2, x3, y3);\r\n};\r\n\r\nmodule.exports = BuildRight;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Triangle","BuildRight","x","y","width","height","undefined"]
}
