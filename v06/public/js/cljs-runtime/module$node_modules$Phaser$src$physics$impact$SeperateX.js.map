{
"version":3,
"file":"module$node_modules$Phaser$src$physics$impact$SeperateX.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkDpHD,MAAAC,QAAA,CAhCgBC,QAAS,CAACC,KAAD,CAAQC,IAAR,CAAcC,KAAd,CAAqBC,IAArB,CACzB,CACI,IAAIC,MAAQH,IAAAI,IAAAC,EAARF,CAAqBH,IAAAM,KAAAD,EAArBF,CAAmCF,KAAAG,IAAAC,EAGnCH,KAAJ,EAIIA,IAAAK,IAAAF,EAIA,CAJa,CAACH,IAAAK,IAAAF,EAId,CAJ2BH,IAAAM,WAI3B,CAJ6CD,CAF/BP,IAADS,GAAUP,IAAVO,CAAkBR,KAAlBQ,CAA0BT,IAEMO,KAAAF,EAI7C,CAFIK,KAEJ,CAFcX,KAAAY,aAAAC,MAAA,CAAyBV,IAAAE,IAAAC,EAAzB,CAAqCH,IAAAE,IAAAS,EAArC,CAAiDX,IAAA,GAASF,IAAT,CAAgB,CAACG,KAAjB,CAAyBA,KAA1E,CAAiF,CAAjF,CAAoFD,IAAAI,KAAAD,EAApF,CAAiGH,IAAAI,KAAAO,EAAjG,CAEd,CAAAX,IAAAE,IAAAC,EAAA,CAAaK,KAAAN,IAAAC,EARjB,GAYQS,IAWJ,EAXUd,IAAAO,IAAAF,EAWV,CAXuBJ,KAAAM,IAAAF,EAWvB,EAXsC,CAWtC,CATAL,IAAAO,IAAAF,EASA,CATa,CAACS,IASd,CARAb,KAAAM,IAAAF,EAQA,CARcS,IAQd,CANIC,IAMJ,CANchB,KAAAY,aAAAC,MAAA,CAAyBZ,IAAAI,IAAAC,EAAzB;AAAqCL,IAAAI,IAAAS,EAArC,CAAiD,CAACV,KAAlD,CAA0D,CAA1D,CAA6D,CAA7D,CAAgEH,IAAAM,KAAAD,EAAhE,CAA6EL,IAAAM,KAAAO,EAA7E,CAMd,CAJAb,IAAAI,IAAAC,EAIA,CAJaW,IAAAC,MAAA,CAAWF,IAAAX,IAAAC,EAAX,CAIb,CAFIa,KAEJ,CAFenB,KAAAY,aAAAC,MAAA,CAAyBX,KAAAG,IAAAC,EAAzB,CAAsCJ,KAAAG,IAAAS,EAAtC,CAAmDV,KAAnD,CAA2D,CAA3D,CAA8D,CAA9D,CAAiEF,KAAAK,KAAAD,EAAjE,CAA+EJ,KAAAK,KAAAO,EAA/E,CAEf,CAAAZ,KAAAG,IAAAC,EAAA,CAAcW,IAAAG,KAAA,CAAUD,KAAAd,IAAAC,EAAV,CAvBlB,CAJJ,CAnBoH;",
"sources":["node_modules/Phaser/src/physics/impact/SeperateX.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$impact$SeperateX\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n/**\n * [description]\n *\n * @function Phaser.Physics.Impact.SeperateX\n * @since 3.0.0\n *\n * @param {Phaser.Physics.Impact.World} world - [description]\n * @param {Phaser.Physics.Impact.Body} left - [description]\n * @param {Phaser.Physics.Impact.Body} right - [description]\n * @param {Phaser.Physics.Impact.Body} [weak] - [description]\n */\nvar SeperateX = function (world, left, right, weak)\n{\n    var nudge = left.pos.x + left.size.x - right.pos.x;\n    \n    // We have a weak entity, so just move this one\n    if (weak)\n    {\n        var strong = (left === weak) ? right : left;\n\n        weak.vel.x = -weak.vel.x * weak.bounciness + strong.vel.x;\n        \n        var resWeak = world.collisionMap.trace(weak.pos.x, weak.pos.y, weak === left ? -nudge : nudge, 0, weak.size.x, weak.size.y);\n\n        weak.pos.x = resWeak.pos.x;\n    }\n    else\n    {\n        var v2 = (left.vel.x - right.vel.x) / 2;\n\n        left.vel.x = -v2;\n        right.vel.x = v2;\n    \n        var resLeft = world.collisionMap.trace(left.pos.x, left.pos.y, -nudge / 2, 0, left.size.x, left.size.y);\n\n        left.pos.x = Math.floor(resLeft.pos.x);\n        \n        var resRight = world.collisionMap.trace(right.pos.x, right.pos.y, nudge / 2, 0, right.size.x, right.size.y);\n\n        right.pos.x = Math.ceil(resRight.pos.x);\n    }\n};\n\nmodule.exports = SeperateX;\n\n};"],
"names":["shadow$provide","global","require","module","exports","SeperateX","world","left","right","weak","nudge","pos","x","size","vel","bounciness","strong","resWeak","collisionMap","trace","y","v2","resLeft","Math","floor","resRight","ceil"]
}
