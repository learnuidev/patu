{
"version":3,
"file":"module$node_modules$Phaser$src$geom$intersects$LineToRectangle.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,+DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+F3HD,MAAAC,QAAA,CArEsBC,QAAS,CAACC,IAAD,CAAOC,IAAP,CAC/B,CACI,IAAIC,GAAKF,IAAAE,GAAT,CACIC,GAAKH,IAAAG,GADT,CAGIC,GAAKJ,IAAAI,GACLC,KAAAA,CAAKL,IAAAK,GAET,KAAIC,IAAML,IAAAM,EAAV,CACIC,IAAMP,IAAAQ,EADV,CAEIC,IAAMT,IAAAU,MACNC,KAAAA,CAAMX,IAAAY,OAOV,IAAKX,EAAL,EAAWI,GAAX,EAAkBJ,EAAlB,EAAwBQ,GAAxB,EAA+BP,EAA/B,EAAqCK,GAArC,EAA4CL,EAA5C,EAAkDS,IAAlD,EACKR,EADL,EACWE,GADX,EACkBF,EADlB,EACwBM,GADxB,EAC+BL,IAD/B,EACqCG,GADrC,EAC4CH,IAD5C,EACkDO,IADlD,CAGI,MAAO,CAAA,CAGX,IAAIV,EAAJ,CAASI,GAAT,EAAgBF,EAAhB,EAAsBE,GAAtB,CACA,CAEI,IAAAQ,EAAIX,EAAJW,EAAUT,IAAVS,CAAeX,EAAfW,GAAsBR,GAAtBQ,CAA4BZ,EAA5BY,GAAmCV,EAAnCU,CAAwCZ,EAAxCY,CAEA,IAAIA,CAAJ,CAAQN,GAAR,EAAeM,CAAf,EAAoBF,IAApB,CAEI,MAAO,CAAA,CANf,CADA,IAUK,IAAIV,EAAJ,CAASQ,GAAT,EAAgBN,EAAhB,EAAsBM,GAAtB,GAGDI,CAEI,CAFAX,EAEA,EAFME,IAEN,CAFWF,EAEX,GAFkBO,GAElB,CAFwBR,EAExB,GAF+BE,EAE/B,CAFoCF,EAEpC,EAAAY,CAAA,EAAKN,GAAL,EAAYM,CAAZ;AAAiBF,IALpB,EAOG,MAAO,CAAA,CAIf,IAAIT,EAAJ,CAASK,GAAT,EAAgBH,IAAhB,EAAsBG,GAAtB,CAKI,IAFAM,CAEI,CAFAZ,EAEA,EAFME,EAEN,CAFWF,EAEX,GAFkBM,GAElB,CAFwBL,EAExB,GAF+BE,IAE/B,CAFoCF,EAEpC,EAAAW,CAAA,EAAKR,GAAL,EAAYQ,CAAZ,EAAiBJ,GAArB,CAEI,MAAO,CAAA,CAFX,CALJ,IAUK,IAAIP,EAAJ,CAASS,IAAT,EAAgBP,IAAhB,EAAsBO,IAAtB,GAGDE,CAEI,CAFAZ,EAEA,EAFME,EAEN,CAFWF,EAEX,GAFkBU,IAElB,CAFwBT,EAExB,GAF+BE,IAE/B,CAFoCF,EAEpC,EAAAW,CAAA,EAAKR,GAAL,EAAYQ,CAAZ,EAAiBJ,GALpB,EAOG,MAAO,CAAA,CAIf,OAAO,CAAA,CAjEX,CA3B2H;",
"sources":["node_modules/Phaser/src/geom/intersects/LineToRectangle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$intersects$LineToRectangle\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Checks for intersection between the Line and a Rectangle shape, or a rectangle-like\r\n * object, with public `x`, `y`, `right` and `bottom` properties, such as a Sprite or Body.\r\n *\r\n * An intersection is considered valid if:\r\n *\r\n * The line starts within, or ends within, the Rectangle.\r\n * The line segment intersects one of the 4 rectangle edges.\r\n *\r\n * The for the purposes of this function rectangles are considered 'solid'.\r\n *\r\n * @function Phaser.Geom.Intersects.LineToRectangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - [description]\r\n * @param {(Phaser.Geom.Rectangle|object)} rect - [description]\r\n *\r\n * @return {boolean} [description]\r\n */\r\nvar LineToRectangle = function (line, rect)\r\n{\r\n    var x1 = line.x1;\r\n    var y1 = line.y1;\r\n\r\n    var x2 = line.x2;\r\n    var y2 = line.y2;\r\n\r\n    var bx1 = rect.x;\r\n    var by1 = rect.y;\r\n    var bx2 = rect.right;\r\n    var by2 = rect.bottom;\r\n\r\n    var t = 0;\r\n\r\n    //  If the start or end of the line is inside the rect then we assume\r\n    //  collision, as rects are solid for our use-case.\r\n\r\n    if ((x1 >= bx1 && x1 <= bx2 && y1 >= by1 && y1 <= by2) ||\r\n        (x2 >= bx1 && x2 <= bx2 && y2 >= by1 && y2 <= by2))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (x1 < bx1 && x2 >= bx1)\r\n    {\r\n        //  Left edge\r\n        t = y1 + (y2 - y1) * (bx1 - x1) / (x2 - x1);\r\n\r\n        if (t > by1 && t <= by2)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n    else if (x1 > bx2 && x2 <= bx2)\r\n    {\r\n        //  Right edge\r\n        t = y1 + (y2 - y1) * (bx2 - x1) / (x2 - x1);\r\n\r\n        if (t >= by1 && t <= by2)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    if (y1 < by1 && y2 >= by1)\r\n    {\r\n        //  Top edge\r\n        t = x1 + (x2 - x1) * (by1 - y1) / (y2 - y1);\r\n\r\n        if (t >= bx1 && t <= bx2)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n    else if (y1 > by2 && y2 <= by2)\r\n    {\r\n        //  Bottom edge\r\n        t = x1 + (x2 - x1) * (by2 - y1) / (y2 - y1);\r\n\r\n        if (t >= bx1 && t <= bx2)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nmodule.exports = LineToRectangle;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","LineToRectangle","line","rect","x1","y1","x2","y2","bx1","x","by1","y","bx2","right","by2","bottom","t"]
}
