shadow$provide.module$node_modules$$formatjs$intl$src$utils=function(global,require,module,exports){function createIntlCache(){return{dateTime:{},number:{},message:{},relativeTime:{},pluralRules:{},list:{},displayNames:{}}}function createFastMemoizeCache(store){return{create:function(){return{has:function(key){return key in store},get:function(key){return store[key]},set:function(key,value){store[key]=value}}}}}Object.defineProperty(exports,"__esModule",{value:!0});exports.getNamedFormat=exports.createFormatters=
exports.createIntlCache=exports.DEFAULT_INTL_CONFIG=exports.filterProps=void 0;var tslib_1=require("module$node_modules$tslib$tslib"),intl_messageformat_1=require("module$node_modules$intl_messageformat$index");global=tslib_1.__importStar(require("module$node_modules$fast_memoize$src$index"));var error_1=require("module$node_modules$$formatjs$intl$src$error");exports.filterProps=function(props,whitelist,defaults){void 0===defaults&&(defaults={});return whitelist.reduce(function(filtered,name){name in
props?filtered[name]=props[name]:name in defaults&&(filtered[name]=defaults[name]);return filtered},{})};exports.DEFAULT_INTL_CONFIG={formats:{},messages:{},timeZone:void 0,defaultLocale:"en",defaultFormats:{},onError:function(error){console.error(error)}};exports.createIntlCache=createIntlCache;var memoizeIntl=global.default||global;exports.createFormatters=function(cache){void 0===cache&&(cache=createIntlCache());var RelativeTimeFormat=Intl.RelativeTimeFormat,ListFormat=Intl.ListFormat,DisplayNames=
Intl.DisplayNames,getDateTimeFormat=memoizeIntl(function(){for(var _a,args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return new ((_a=Intl.DateTimeFormat).bind.apply(_a,tslib_1.__spreadArrays([void 0],args)))},{cache:createFastMemoizeCache(cache.dateTime),strategy:memoizeIntl.strategies.variadic}),getNumberFormat=memoizeIntl(function(){for(var _a,args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return new ((_a=Intl.NumberFormat).bind.apply(_a,tslib_1.__spreadArrays([void 0],
args)))},{cache:createFastMemoizeCache(cache.number),strategy:memoizeIntl.strategies.variadic}),getPluralRules=memoizeIntl(function(){for(var _a,args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return new ((_a=Intl.PluralRules).bind.apply(_a,tslib_1.__spreadArrays([void 0],args)))},{cache:createFastMemoizeCache(cache.pluralRules),strategy:memoizeIntl.strategies.variadic});return{getDateTimeFormat:getDateTimeFormat,getNumberFormat:getNumberFormat,getMessageFormat:memoizeIntl(function(message,
locales,overrideFormats,opts){return new intl_messageformat_1.IntlMessageFormat(message,locales,overrideFormats,tslib_1.__assign({formatters:{getNumberFormat:getNumberFormat,getDateTimeFormat:getDateTimeFormat,getPluralRules:getPluralRules}},opts||{}))},{cache:createFastMemoizeCache(cache.message),strategy:memoizeIntl.strategies.variadic}),getRelativeTimeFormat:memoizeIntl(function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat,
tslib_1.__spreadArrays([void 0],args)))},{cache:createFastMemoizeCache(cache.relativeTime),strategy:memoizeIntl.strategies.variadic}),getPluralRules:getPluralRules,getListFormat:memoizeIntl(function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return new (ListFormat.bind.apply(ListFormat,tslib_1.__spreadArrays([void 0],args)))},{cache:createFastMemoizeCache(cache.list),strategy:memoizeIntl.strategies.variadic}),getDisplayNames:memoizeIntl(function(){for(var args=[],_i=0;_i<
arguments.length;_i++)args[_i]=arguments[_i];return new (DisplayNames.bind.apply(DisplayNames,tslib_1.__spreadArrays([void 0],args)))},{cache:createFastMemoizeCache(cache.displayNames),strategy:memoizeIntl.strategies.variadic})}};exports.getNamedFormat=function(formats,type,name,onError){formats=formats&&formats[type];var format;formats&&(format=formats[name]);if(format)return format;onError(new error_1.UnsupportedFormatterError("No "+type+" format named: "+name))}}
//# sourceMappingURL=module$node_modules$$formatjs$intl$src$utils.js.map
