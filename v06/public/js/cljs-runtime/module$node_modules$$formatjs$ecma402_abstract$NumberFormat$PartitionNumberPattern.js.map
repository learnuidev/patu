{
"version":3,
"file":"module$node_modules$$formatjs$ecma402_abstract$NumberFormat$PartitionNumberPattern.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,mFAAA,CAAuG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE/IC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,uBAAA,CAAiC,IAAK,EAClCC,OAAAA,CAAUP,OAAA,CAAQ,iCAAR,CACd,KAAIQ,wBAA0BR,OAAA,CAAQ,mFAAR,CAA9B,CACIS,OAAST,OAAA,CAAQ,oDAAR,CADb,CAEIU,kBAAoBV,OAAA,CAAQ,6EAAR,CAFxB;AAGIW,kBAAoBJ,MAAAK,gBAAA,CAAwBZ,OAAA,CAAQ,6EAAR,CAAxB,CAuExBE,QAAAI,uBAAA,CAnEAA,QAA+B,CAACO,YAAD,CAAeC,CAAf,CAAkBC,EAAlB,CAAsB,CACjD,IAAIC,EAAJ,CACIC,iBAAmBF,EAAAE,iBACnBC,GAAAA,CAAgBD,gBAAA,CAAiBJ,YAAjB,CAH6B,KAI7CM,GAAKD,EAAAC,GAJwC,CAItBC,eAAiBF,EAAAE,eAJK,CAK7CC,QAAUD,cAAAE,QAAAD,QAAA,CAD8EH,EAAAK,gBAC9E,CAAVF,EACAD,cAAAE,QAAAD,QAAA,CAA+BD,cAAAE,QAAAE,GAAA,CAA0B,CAA1B,CAA/B,CAEAC,eAAAA,CADAC,EACAD,CADY,CAGZE,MAAA,CAAMb,CAAN,CAAJ,CACIc,YADJ,CACQP,OAAAQ,IADR,CAGUC,QAAA,CAAShB,CAAT,CAAL,EAI2B,SAU5B;AAVII,EAAAa,MAUJ,GATIjB,CASJ,EATS,GAST,EAPAE,EAOA,CAPKN,iBAAAsB,gBAAA,CAAkCnB,YAAlC,CAAgDC,CAAhD,CAAmD,CACpDG,iBAAkBA,gBADkC,CAAnD,CAOL,CALIQ,cAKJ,CALeT,EAAA,CAAG,CAAH,CAKf,CALsBU,EAKtB,CALkCV,EAAA,CAAG,CAAH,CAKlC,CAHAF,CAGA,CAHe,CAAX,CAAAW,cAAA,CAAeX,CAAf,CAAmBmB,IAAAC,IAAA,CAAS,EAAT,CAAa,CAACT,cAAd,CAAnB,CAA6CX,CAA7C,CAAiDmB,IAAAC,IAAA,CAAS,EAAT,CAAaT,cAAb,CAGrD,CAFIU,CAEJ,CAFyB3B,uBAAA4B,sBAAA,CAA8ClB,EAA9C,CAA6DJ,CAA7D,CAEzB,CADAc,YACA,CADIO,CAAAE,gBACJ,CAAAvB,CAAA,CAAIqB,CAAAG,cAdH,EACDV,YADC,CACGP,OAAAkB,SAmBR,QADkBrB,EAAAsB,YAClB,EACI,KAAK,OAAL,CACIC,gBAAA,CAAO,CACP,MACJ,MAAK,MAAL,CAEQA,gBAAA,CADAhC,MAAAiC,UAAA,CAAiB5B,CAAjB,CAAoB,CAApB,CAAJ,EAAkC,CAAlC,CAA8BA,CAA9B,EAAuCa,KAAA,CAAMb,CAAN,CAAvC,CACW,CADX,CAIW,EAEX,MACJ,MAAK,QAAL,CAEQ2B,gBAAA;AADAhC,MAAAiC,UAAA,CAAiB5B,CAAjB,CAAoB,CAApB,CAAJ,EAAkC,CAAlC,CAA8BA,CAA9B,EAAuCa,KAAA,CAAMb,CAAN,CAAvC,CACW,CADX,CAIW,EAEX,MACJ,SAGQ2B,gBAAA,CADM,CAAV,GAAI3B,CAAJ,EAAea,KAAA,CAAMb,CAAN,CAAf,CACW,CADX,CAGa,CAAR,CAAIA,CAAJ,CACM,CADN,CAIM,EA7BnB,CAgCA,MAAOH,kBAAAgC,QAAA,CAA0B,CAAEL,cAAexB,CAAjB,CAAoBuB,gBAAiBT,YAArC,CAAwCH,SAAUA,cAAlD,CAA4DC,UAAWA,EAAvE,CAAkFe,KAAMA,gBAAxF,CAA1B,CAA0HvB,EAAAE,eAA1H,CAAwJD,EAAxJ,CAA4JD,EAA5J,CAjE0C,CAZ0F;",
"sources":["node_modules/@formatjs/ecma402-abstract/NumberFormat/PartitionNumberPattern.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$ecma402_abstract$NumberFormat$PartitionNumberPattern\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PartitionNumberPattern = void 0;\nvar tslib_1 = require(\"tslib\");\nvar FormatNumericToString_1 = require(\"./FormatNumericToString\");\nvar _262_1 = require(\"../262\");\nvar ComputeExponent_1 = require(\"./ComputeExponent\");\nvar format_to_parts_1 = tslib_1.__importDefault(require(\"./format_to_parts\"));\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nfunction PartitionNumberPattern(numberFormat, x, _a) {\n    var _b;\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var pl = internalSlots.pl, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    var symbols = dataLocaleData.numbers.symbols[numberingSystem] ||\n        dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\n    var magnitude = 0;\n    var exponent = 0;\n    var n;\n    if (isNaN(x)) {\n        n = symbols.nan;\n    }\n    else if (!isFinite(x)) {\n        n = symbols.infinity;\n    }\n    else {\n        if (internalSlots.style === 'percent') {\n            x *= 100;\n        }\n        _b = ComputeExponent_1.ComputeExponent(numberFormat, x, {\n            getInternalSlots: getInternalSlots,\n        }), exponent = _b[0], magnitude = _b[1];\n        // Preserve more precision by doing multiplication when exponent is negative.\n        x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n        var formatNumberResult = FormatNumericToString_1.FormatNumericToString(internalSlots, x);\n        n = formatNumberResult.formattedString;\n        x = formatNumberResult.roundedNumber;\n    }\n    // Based on https://tc39.es/ecma402/#sec-getnumberformatpattern\n    // We need to do this before `x` is rounded.\n    var sign;\n    var signDisplay = internalSlots.signDisplay;\n    switch (signDisplay) {\n        case 'never':\n            sign = 0;\n            break;\n        case 'auto':\n            if (_262_1.SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        case 'always':\n            if (_262_1.SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        default:\n            // x === 0 -> x is 0 or x is -0\n            if (x === 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else if (x > 0) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n    }\n    return format_to_parts_1.default({ roundedNumber: x, formattedString: n, exponent: exponent, magnitude: magnitude, sign: sign }, internalSlots.dataLocaleData, pl, internalSlots);\n}\nexports.PartitionNumberPattern = PartitionNumberPattern;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","PartitionNumberPattern","tslib_1","FormatNumericToString_1","_262_1","ComputeExponent_1","format_to_parts_1","__importDefault","numberFormat","x","_a","_b","getInternalSlots","internalSlots","pl","dataLocaleData","symbols","numbers","numberingSystem","nu","exponent","magnitude","isNaN","n","nan","isFinite","style","ComputeExponent","Math","pow","formatNumberResult","FormatNumericToString","formattedString","roundedNumber","infinity","signDisplay","sign","SameValue","default"]
}
