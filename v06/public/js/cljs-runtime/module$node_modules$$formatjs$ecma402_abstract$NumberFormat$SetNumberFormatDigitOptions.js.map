{
"version":3,
"file":"module$node_modules$$formatjs$ecma402_abstract$NumberFormat$SetNumberFormatDigitOptions.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,wFAAA,CAA4G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEpJC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,4BAAA,CAAsC,IAAK,EAC3C,KAAIC,kBAAoBP,OAAA,CAAQ,gEAAR,CAAxB,CACIQ,sBAAwBR,OAAA,CAAQ,oEAAR,CAmC5BE,QAAAI,4BAAA,CA/BAA,QAAoC,CAACG,aAAD,CAAgBC,IAAhB;AAAsBC,WAAtB,CAAmCC,WAAnC,CAAgDC,QAAhD,CAA0D,CAC1F,IAAIC,KAAOP,iBAAAQ,gBAAA,CAAkCL,IAAlC,CAAwC,sBAAxC,CAAgE,CAAhE,CAAmE,EAAnE,CAAuE,CAAvE,CAAX,CACIM,KAAON,IAAAO,sBADX,CAEIC,KAAOR,IAAAS,sBAFX,CAGIC,KAAOV,IAAAW,yBACPC,KAAAA,CAAOZ,IAAAa,yBACXd,cAAAe,qBAAA,CAAqCV,IACxBW,KAAAA,EAAb,GAAIL,IAAJ,EAAmCK,IAAAA,EAAnC,GAA0BH,IAA1B,EACIb,aAAAiB,aAIA,CAJ6B,mBAI7B,CAHAN,IAGA,CAHOZ,qBAAAmB,oBAAA,CAA0CP,IAA1C,CAAgD,CAAhD,CAAmD,EAAnD,CAAuD,CAAvD,CAGP,CAFAE,IAEA,CAFOd,qBAAAmB,oBAAA,CAA0CL,IAA1C,CAAgDF,IAAhD,CAAsD,EAAtD,CAA0D,EAA1D,CAEP,CADAX,aAAAY,yBACA;AADyCD,IACzC,CAAAX,aAAAc,yBAAA,CAAyCD,IAL7C,EAOkBG,IAAAA,EAAb,GAAIT,IAAJ,EAAmCS,IAAAA,EAAnC,GAA0BP,IAA1B,EACDT,aAAAiB,aAKA,CAL6B,gBAK7B,CAJAV,IAIA,CAJOR,qBAAAmB,oBAAA,CAA0CX,IAA1C,CAAgD,CAAhD,CAAmD,EAAnD,CAAuDL,WAAvD,CAIP,CAFAO,IAEA,CAFOV,qBAAAmB,oBAAA,CAA0CT,IAA1C,CAAgDF,IAAhD,CAAsD,EAAtD,CADiBY,IAAAC,IAAAC,CAASd,IAATc,CAAelB,WAAfkB,CACjB,CAEP,CADArB,aAAAQ,sBACA,CADsCD,IACtC,CAAAP,aAAAU,sBAAA,CAAsCD,IANrC,EAQiB,SAAjB,GAAIL,QAAJ,CACDJ,aAAAiB,aADC,CAC4B,iBAD5B,EAIDjB,aAAAiB,aAEA,CAF6B,gBAE7B,CADAjB,aAAAQ,sBACA;AADsCN,WACtC,CAAAF,aAAAU,sBAAA,CAAsCP,WANrC,CAtBqF,CATsD;",
"sources":["node_modules/@formatjs/ecma402-abstract/NumberFormat/SetNumberFormatDigitOptions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$ecma402_abstract$NumberFormat$SetNumberFormatDigitOptions\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetNumberFormatDigitOptions = void 0;\nvar GetNumberOption_1 = require(\"../GetNumberOption\");\nvar DefaultNumberOption_1 = require(\"../DefaultNumberOption\");\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nfunction SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n    var mnid = GetNumberOption_1.GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n    var mnfd = opts.minimumFractionDigits;\n    var mxfd = opts.maximumFractionDigits;\n    var mnsd = opts.minimumSignificantDigits;\n    var mxsd = opts.maximumSignificantDigits;\n    internalSlots.minimumIntegerDigits = mnid;\n    if (mnsd !== undefined || mxsd !== undefined) {\n        internalSlots.roundingType = 'significantDigits';\n        mnsd = DefaultNumberOption_1.DefaultNumberOption(mnsd, 1, 21, 1);\n        mxsd = DefaultNumberOption_1.DefaultNumberOption(mxsd, mnsd, 21, 21);\n        internalSlots.minimumSignificantDigits = mnsd;\n        internalSlots.maximumSignificantDigits = mxsd;\n    }\n    else if (mnfd !== undefined || mxfd !== undefined) {\n        internalSlots.roundingType = 'fractionDigits';\n        mnfd = DefaultNumberOption_1.DefaultNumberOption(mnfd, 0, 20, mnfdDefault);\n        var mxfdActualDefault = Math.max(mnfd, mxfdDefault);\n        mxfd = DefaultNumberOption_1.DefaultNumberOption(mxfd, mnfd, 20, mxfdActualDefault);\n        internalSlots.minimumFractionDigits = mnfd;\n        internalSlots.maximumFractionDigits = mxfd;\n    }\n    else if (notation === 'compact') {\n        internalSlots.roundingType = 'compactRounding';\n    }\n    else {\n        internalSlots.roundingType = 'fractionDigits';\n        internalSlots.minimumFractionDigits = mnfdDefault;\n        internalSlots.maximumFractionDigits = mxfdDefault;\n    }\n}\nexports.SetNumberFormatDigitOptions = SetNumberFormatDigitOptions;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","SetNumberFormatDigitOptions","GetNumberOption_1","DefaultNumberOption_1","internalSlots","opts","mnfdDefault","mxfdDefault","notation","mnid","GetNumberOption","mnfd","minimumFractionDigits","mxfd","maximumFractionDigits","mnsd","minimumSignificantDigits","mxsd","maximumSignificantDigits","minimumIntegerDigits","undefined","roundingType","DefaultNumberOption","Math","max","mxfdActualDefault"]
}
