{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$bitmaptext$static$BitmapTextWebGLRenderer.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/Phaser/src/gameobjects/bitmaptext/static/BitmapTextWebGLRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$bitmaptext$static$BitmapTextWebGLRenderer\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = require('../../../renderer/webgl/Utils');\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.BitmapText#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.BitmapText} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar BitmapTextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    var text = src._text;\r\n    var textLength = text.length;\r\n\r\n    if (textLength === 0)\r\n    {\r\n        return;\r\n    }\r\n \r\n    var pipeline = this.pipeline;\r\n\r\n    renderer.setPipeline(pipeline, src);\r\n\r\n    var camMatrix = pipeline._tempMatrix1;\r\n    var spriteMatrix = pipeline._tempMatrix2;\r\n    var calcMatrix = pipeline._tempMatrix3;\r\n\r\n    spriteMatrix.applyITRS(src.x, src.y, src.rotation, src.scaleX, src.scaleY);\r\n\r\n    camMatrix.copyFrom(camera.matrix);\r\n\r\n    if (parentMatrix)\r\n    {\r\n        //  Multiply the camera by the parent matrix\r\n        camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY);\r\n\r\n        //  Undo the camera scroll\r\n        spriteMatrix.e = src.x;\r\n        spriteMatrix.f = src.y;\r\n\r\n        //  Multiply by the Sprite matrix, store result in calcMatrix\r\n        camMatrix.multiply(spriteMatrix, calcMatrix);\r\n    }\r\n    else\r\n    {\r\n        spriteMatrix.e -= camera.scrollX * src.scrollFactorX;\r\n        spriteMatrix.f -= camera.scrollY * src.scrollFactorY;\r\n\r\n        //  Multiply by the Sprite matrix, store result in calcMatrix\r\n        camMatrix.multiply(spriteMatrix, calcMatrix);\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var texture = frame.glTexture;\r\n    var textureX = frame.cutX;\r\n    var textureY = frame.cutY;\r\n    var textureWidth = texture.width;\r\n    var textureHeight = texture.height;\r\n\r\n    var tintEffect = (src._isTinted && src.tintFill);\r\n    var tintTL = Utils.getTintAppendFloatAlpha(src._tintTL, camera.alpha * src._alphaTL);\r\n    var tintTR = Utils.getTintAppendFloatAlpha(src._tintTR, camera.alpha * src._alphaTR);\r\n    var tintBL = Utils.getTintAppendFloatAlpha(src._tintBL, camera.alpha * src._alphaBL);\r\n    var tintBR = Utils.getTintAppendFloatAlpha(src._tintBR, camera.alpha * src._alphaBR);\r\n\r\n    pipeline.setTexture2D(texture, 0);\r\n\r\n    var xAdvance = 0;\r\n    var yAdvance = 0;\r\n    var charCode = 0;\r\n    var lastCharCode = 0;\r\n    var letterSpacing = src._letterSpacing;\r\n    var glyph;\r\n    var glyphX = 0;\r\n    var glyphY = 0;\r\n    var glyphW = 0;\r\n    var glyphH = 0;\r\n    var lastGlyph;\r\n\r\n    var fontData = src.fontData;\r\n    var chars = fontData.chars;\r\n    var lineHeight = fontData.lineHeight;\r\n    var scale = (src._fontSize / fontData.size);\r\n\r\n    var align = src._align;\r\n    var currentLine = 0;\r\n    var lineOffsetX = 0;\r\n\r\n    //  Update the bounds - skipped internally if not dirty\r\n    src.getTextBounds(false);\r\n\r\n    var lineData = src._bounds.lines;\r\n\r\n    if (align === 1)\r\n    {\r\n        lineOffsetX = (lineData.longest - lineData.lengths[0]) / 2;\r\n    }\r\n    else if (align === 2)\r\n    {\r\n        lineOffsetX = (lineData.longest - lineData.lengths[0]);\r\n    }\r\n\r\n    var roundPixels = camera.roundPixels;\r\n\r\n    for (var i = 0; i < textLength; i++)\r\n    {\r\n        charCode = text.charCodeAt(i);\r\n\r\n        //  Carriage-return\r\n        if (charCode === 10)\r\n        {\r\n            currentLine++;\r\n\r\n            if (align === 1)\r\n            {\r\n                lineOffsetX = (lineData.longest - lineData.lengths[currentLine]) / 2;\r\n            }\r\n            else if (align === 2)\r\n            {\r\n                lineOffsetX = (lineData.longest - lineData.lengths[currentLine]);\r\n            }\r\n        \r\n            xAdvance = 0;\r\n            yAdvance += lineHeight;\r\n            lastGlyph = null;\r\n        \r\n            continue;\r\n        }\r\n\r\n        glyph = chars[charCode];\r\n\r\n        if (!glyph)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        glyphX = textureX + glyph.x;\r\n        glyphY = textureY + glyph.y;\r\n\r\n        glyphW = glyph.width;\r\n        glyphH = glyph.height;\r\n\r\n        var x = glyph.xOffset + xAdvance;\r\n        var y = glyph.yOffset + yAdvance;\r\n\r\n        if (lastGlyph !== null)\r\n        {\r\n            var kerningOffset = glyph.kerning[lastCharCode];\r\n            x += (kerningOffset !== undefined) ? kerningOffset : 0;\r\n        }\r\n\r\n        xAdvance += glyph.xAdvance + letterSpacing;\r\n        lastGlyph = glyph;\r\n        lastCharCode = charCode;\r\n\r\n        //  Nothing to render or a space? Then skip to the next glyph\r\n        if (glyphW === 0 || glyphH === 0 || charCode === 32)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        x *= scale;\r\n        y *= scale;\r\n\r\n        x -= src.displayOriginX;\r\n        y -= src.displayOriginY;\r\n\r\n        x += lineOffsetX;\r\n\r\n        var u0 = glyphX / textureWidth;\r\n        var v0 = glyphY / textureHeight;\r\n        var u1 = (glyphX + glyphW) / textureWidth;\r\n        var v1 = (glyphY + glyphH) / textureHeight;\r\n\r\n        var xw = x + (glyphW * scale);\r\n        var yh = y + (glyphH * scale);\r\n\r\n        var tx0 = calcMatrix.getX(x, y);\r\n        var ty0 = calcMatrix.getY(x, y);\r\n\r\n        var tx1 = calcMatrix.getX(x, yh);\r\n        var ty1 = calcMatrix.getY(x, yh);\r\n\r\n        var tx2 = calcMatrix.getX(xw, yh);\r\n        var ty2 = calcMatrix.getY(xw, yh);\r\n\r\n        var tx3 = calcMatrix.getX(xw, y);\r\n        var ty3 = calcMatrix.getY(xw, y);\r\n\r\n        if (roundPixels)\r\n        {\r\n            tx0 |= 0;\r\n            ty0 |= 0;\r\n\r\n            tx1 |= 0;\r\n            ty1 |= 0;\r\n\r\n            tx2 |= 0;\r\n            ty2 |= 0;\r\n\r\n            tx3 |= 0;\r\n            ty3 |= 0;\r\n        }\r\n\r\n        pipeline.batchQuad(tx0, ty0, tx1, ty1, tx2, ty2, tx3, ty3, u0, v0, u1, v1, tintTL, tintTR, tintBL, tintBR, tintEffect);\r\n    }\r\n};\r\n\r\nmodule.exports = BitmapTextWebGLRenderer;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Utils","BitmapTextWebGLRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","text","_text","textLength","length","pipeline","setPipeline","camMatrix","_tempMatrix1","spriteMatrix","_tempMatrix2","calcMatrix","_tempMatrix3","applyITRS","x","y","rotation","scaleX","scaleY","copyFrom","matrix","multiplyWithOffset","scrollX","scrollFactorX","scrollY","scrollFactorY","e","f","multiply","frame","texture","glTexture","textureX","cutX","textureY","cutY","textureWidth","width","textureHeight","height","tintEffect","_isTinted","tintFill","tintTL","getTintAppendFloatAlpha","_tintTL","alpha","_alphaTL","tintTR","_tintTR","_alphaTR","tintBL","_tintBL","_alphaBL","tintBR","_tintBR","_alphaBR","setTexture2D","yAdvance","xAdvance","lastCharCode","letterSpacing","_letterSpacing","glyph","fontData","chars","lineHeight","scale","_fontSize","size","align","_align","currentLine","lineOffsetX","getTextBounds","lineData","_bounds","lines","longest","lengths","roundPixels","i","charCode","charCodeAt","lastGlyph","glyphX","glyphY","glyphW","glyphH","xOffset","yOffset","kerningOffset","kerning","undefined","displayOriginX","displayOriginY","u0","v0","u1","v1","xw","yh","tx0","getX","ty0","getY","tx1","ty1","tx2","ty2","tx3","ty3","batchQuad"]
}
