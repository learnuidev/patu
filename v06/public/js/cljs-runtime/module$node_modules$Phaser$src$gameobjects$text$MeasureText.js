shadow$provide.module$node_modules$Phaser$src$gameobjects$text$MeasureText=function(global,require,module,exports){var CanvasPool=require("module$node_modules$Phaser$src$display$canvas$CanvasPool");module.exports=function(textStyle){var canvas=CanvasPool.create(this),context=canvas.getContext("2d");textStyle.syncFont(canvas,context);var width=Math.ceil(context.measureText(textStyle.testString).width*textStyle.baselineX),baseline=width,height=2*baseline;baseline=baseline*textStyle.baselineY|0;canvas.width=
width;canvas.height=height;context.fillStyle="#f00";context.fillRect(0,0,width,height);context.font=textStyle._font;context.textBaseline="alphabetic";context.fillStyle="#000";context.fillText(textStyle.testString,0,baseline);textStyle={ascent:0,descent:0,fontSize:0};if(!context.getImageData(0,0,width,height))return textStyle.ascent=baseline,textStyle.descent=baseline+6,textStyle.fontSize=textStyle.ascent+textStyle.descent,CanvasPool.remove(canvas),textStyle;context=context.getImageData(0,0,width,
height).data;var pixels=context.length;width*=4;var i,j,idx=0,stop=!1;for(i=0;i<baseline;i++){for(j=0;j<width;j+=4)if(255!==context[idx+j]){stop=!0;break}if(stop)break;else idx+=width}textStyle.ascent=baseline-i;idx=pixels-width;stop=!1;for(i=height;i>baseline;i--){for(j=0;j<width;j+=4)if(255!==context[idx+j]){stop=!0;break}if(stop)break;else idx-=width}textStyle.descent=i-baseline;textStyle.fontSize=textStyle.ascent+textStyle.descent;CanvasPool.remove(canvas);return textStyle}}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$text$MeasureText.js.map
