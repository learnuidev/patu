{"version":3,"sources":["patu/examples/flappy.cljs"],"mappings":"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","names":["patu.examples.flappy/pipe-open","patu.examples.flappy/pipe-min-height","patu.examples.flappy/jump-force","patu.examples.flappy/speed","patu.examples.flappy/ceiling","G__38781","patu.core/dispatch-sync","js/document.getElementById","G__38782","patu.core/dispatch-n","G__38783","G__38784","patu.core/reg-event","_","h1","patu.core/randd","patu.core/height","patu.core/width","G__38785","G__38786","p__38787","vec__38788","cljs.core.nth","pipe","patu.utils/jset!","G__38791","G__38792","p__38793","vec__38794","G__38797","G__38798","p__38799","vec__38800","patu.core/neg","G__38803","G__38804","p__38805","vec__38806","pid","player","G__38809","patu.core/sub","cljs.core._EQ_","patu.utils/jget-in","G__38810","G__38811","p__38812","vec__38813","G__38816","G__38817","score","G__38818","G__38819","G__38820","p__38821","vec__38822","id","G__38825","G__38826","p__38827","vec__38828","cid","G__38831","G__38832","p__38833","vec__38834","pos-y","G__38837","patu.examples.flappy/main-init","p1__38838#","patu.examples.flappy/main-evt","G__38839","patu.core/dispatch","G__38840","G__38841","G__38842","G__38843","patu.examples.flappy/lose-init","vec__38844","x","y","patu.core/center","G__38847","patu.examples.flappy/lose-evt","G__38848","G__38849","patu.examples.flappy/app","G__38850"],"sourcesContent":["(ns patu.examples.flappy\n  (:require [patu.core :as p] ;; Core\n            [patu.utils       ;; JS helper functions\n             :refer [jset-in! jset! jget-in jget]]))\n\n;; 0 Constants\n(def pipe-open  80);\n(def pipe-min-height  16)\n(def jump-force  320)\n(def speed  120)\n(def ceiling  -60)\n\n;; 1. Initialize App\n(p/dispatch-sync [:kaboom {:canvas (js/document.getElementById \"app\")\n                           :global true\n                           :fullscreen false\n                           :scale 3\n                           :debug true\n                           :clearColor [0 0 0 1]}])\n\n;; 2. Load Assets\n(p/dispatch-n\n [[:load/root \"https://kaboomjs.com/pub/examples/\"]\n  [:load/sprite [[:bg, \"img/bg.png\"];\n                 [:birdy, \"img/birdy.png\"]\n                 [:pipe, \"img/pipe.png\"]]]\n  [:load/sound [[:score \"sounds/score.mp3\"]\n                [:wooosh \"sounds/wooosh.mp3\"]\n                [:hit \"sounds/hit.mp3\"]]]])\n\n;; Comments for testing\n(comment\n  (p/sub [:comp :player])\n  (p/sub [:comp :player :pos])\n  (p/sub [:comp :player :pos :x]))\n\n;; 3. Register Event handlers\n;; 3.1 Pipe event handlers\n(p/reg-event\n :game/spawn-pipes\n (fn [_ _]\n   (let [h1 (p/randd pipe-min-height (- (p/height) (+ pipe-min-height pipe-open)))]\n     [:dispatch [:comp/reg-n [[[:sprite :pipe]\n                               [:origin :botleft]\n                               [:pos [(p/width) h1]]\n                               :pipe] ;; \"give it tags to easier define behaviors see below\"\n                              [[:sprite :pipe]\n                               [:origin :botleft]\n                               [:scale 1 -1]\n                               [:pos [(p/width) (+ h1 pipe-open)]]\n                               :pipe\n                               {:passed false}]]]]))) ;; \"raw table just assigns every field to the game obj\"\n\n(p/reg-event\n :pipe/set-passed\n (fn [_ [_ pipe]]\n   (jset! pipe :passed true)))\n\n(p/reg-event\n :pipe/destroy\n (fn [_ [_ pipe]]\n   (.destroy pipe)))\n\n(p/reg-event\n :pipe/handle-lifecycle\n (fn [_ [_ pipe]]\n   (.move pipe (p/neg speed) 0)))\n\n(p/reg-event\n :pipe/handle-lifecycle\n (fn [_ [_ pipe pid]]\n   (let [player (p/sub [:comp pid])]\n     (when (and (= (.-passed pipe) false)\n                (<= (+ (jget-in pipe [:pos :x]) (.-width pipe))\n                    (jget-in player [:pos :x])))\n       [:dispatch-n [[:score/add]\n                     [:pipe/set-passed pipe]]]))))\n\n(comment)\n  ; (p/sub [:pipe/passed?]))\n(p/reg-event\n :pipe/handle-lifecycle\n (fn [_ [_ pipe pid]]\n   (when (< (jget-in pipe [:pos :x])\n            (/ (p/neg (p/width)) 2))\n     [:dispatch [:pipe/destroy pipe]])))\n\n;; === ui/score events\n(p/reg-event\n :score/add\n (fn [_ _]\n   (let [score (p/sub [:comp :ui-score :value])]\n     [:ui-score [[:value (inc score)]\n                 [:text (inc score)]]])))\n\n(p/reg-event\n :player/go-south\n (fn [_ [_ id]]\n   [:player {:y 10}]))\n\n(p/reg-event\n :comp/jump\n (fn [_ [_ cid]]\n   [:dispatch-n [[:jump :player jump-force]\n                 [:audio/play :wooosh]]]))\n\n(p/reg-event\n :player/check-ffall\n (fn [_ [_ id]]\n   (let [pos-y (p/sub [:comp id :pos :y])]\n     (when (or (> pos-y (p/height))\n               (<= pos-y ceiling))\n       [:dispatch [:go :lose]]))))\n\n;; 4. Scenes\n;; ==== 4.1 Main Scene\n(defn main-init []\n  [[:layers [:bg :game, :ui] :game]\n   [:gravity 1000]\n   [:cam/ignore [:ui]]\n   [:comp/reg-n\n    [[:bg [[:sprite :bg {:noArea true}]\n           [:scale (/ (p/width) 240) (/ (p/height) 240)]\n           [:layer :bg]]]\n     [:player [[:sprite :birdy]\n               [:pos (/ (p/width) 4) 120]\n               [:scale 1]\n               [:body]]]\n     [:ui-score [[:text \"0\" 16]\n                 [:pos 9 9]\n                 [:layer :ui]\n                 {:value 0}]]]]])\n\n(comment\n  (p/sub [:comp :player]))\n\n(defn main-evt []\n  [[:action :player (fn [])]\n   ;; Multiple ways to register an Event\n   [:key-down\n    [:right [[:player {:x 10}]]]                         ;;  For simple cases use data syntax\n    [:left  [[:player {:x -10}]]]\n    [:up    {:player {:y -10}}]\n    [:down  {:dispatch [:player/go-south :player]}]]     ;;  For more complex scenario: use event registration (event handler needs to be registered first)\n   [:loop  1 #(p/dispatch [:game/spawn-pipes])]\n   [:key-press :space  #(p/dispatch [:comp/jump :player])]\n   [:action\n    [:player  #(p/dispatch [:player/check-ffall :player :ui/score])]\n    [:pipe    #(p/dispatch [:pipe/handle-lifecycle % :player])]]\n   [:collides  [:player :pipe] #(p/dispatch [:go :lose])]])\n\n;; === 4.2 Lose Scene\n(defn lose-init []\n  (let [[x y] (p/center)\n              ;; :value means we want .-value property from ui/score component\n        score (p/sub [:comp :ui-score :value])]\n    [[:comp/reg-n [[[:text score 64]\n                    [:pos [x y]]\n                    [:origin :center]]\n                   [[:text \"Press space to restart\" 16]\n                    [:pos x (+ y 50)]\n                    [:origin :center]]]]]))\n\n(defn lose-evt []\n  [[:key-press :space #(p/dispatch [:go :main])]])\n\n;; === 4.3 Scene Registration\n(p/dispatch-n\n [[:reg-scene :main main-init main-evt]\n  [:reg-scene :lose lose-init lose-evt]])\n\n;; === 5 Start App\n(defn app []\n  (p/dispatch [:go :main]))\n"]}