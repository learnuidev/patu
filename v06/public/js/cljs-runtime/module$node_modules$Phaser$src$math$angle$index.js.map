{
"version":3,
"file":"module$node_modules$Phaser$src$math$angle$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,gDAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAW5GD,MAAAC,QAAA,CAAiB,CAEbC,QAASH,OAAA,CAAQ,mDAAR,CAFI,CAGbI,SAAUJ,OAAA,CAAQ,oDAAR,CAHG,CAIbK,cAAeL,OAAA,CAAQ,yDAAR,CAJF,CAKbM,eAAgBN,OAAA,CAAQ,0DAAR,CALH,CAMbO,QAASP,OAAA,CAAQ,mDAAR,CANI,CAObQ,SAAUR,OAAA,CAAQ,oDAAR,CAPG;AAQbS,gBAAiBT,OAAA,CAAQ,2DAAR,CARJ,CASbU,UAAWV,OAAA,CAAQ,qDAAR,CATE,CAUbW,KAAMX,OAAA,CAAQ,gDAAR,CAVO,CAWbY,YAAaZ,OAAA,CAAQ,uDAAR,CAXA,CAX2F;",
"sources":["node_modules/Phaser/src/math/angle/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$angle$index\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n/**\r\n * @namespace Phaser.Math.Angle\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    Between: require('./Between'),\r\n    BetweenY: require('./BetweenY'),\r\n    BetweenPoints: require('./BetweenPoints'),\r\n    BetweenPointsY: require('./BetweenPointsY'),\r\n    Reverse: require('./Reverse'),\r\n    RotateTo: require('./RotateTo'),\r\n    ShortestBetween: require('./ShortestBetween'),\r\n    Normalize: require('./Normalize'),\r\n    Wrap: require('./Wrap'),\r\n    WrapDegrees: require('./WrapDegrees')\r\n\r\n};\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Between","BetweenY","BetweenPoints","BetweenPointsY","Reverse","RotateTo","ShortestBetween","Normalize","Wrap","WrapDegrees"]
}
