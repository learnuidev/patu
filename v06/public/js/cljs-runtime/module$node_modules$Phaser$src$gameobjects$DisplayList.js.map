{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$DisplayList.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/Phaser/src/gameobjects/DisplayList.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$DisplayList\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar List = require('../structs/List');\r\nvar PluginCache = require('../plugins/PluginCache');\r\nvar StableSort = require('../utils/array/StableSort');\r\n\r\n/**\r\n * @classdesc\r\n * The Display List plugin.\r\n *\r\n * Display Lists belong to a Scene and maintain the list of Game Objects to render every frame.\r\n *\r\n * Some of these Game Objects may also be part of the Scene's [Update List]{@link Phaser.GameObjects.UpdateList}, for updating.\r\n *\r\n * @class DisplayList\r\n * @extends Phaser.Structs.List.<Phaser.GameObjects.GameObject>\r\n * @memberOf Phaser.GameObjects\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene that this Display List belongs to.\r\n */\r\nvar DisplayList = new Class({\r\n\r\n    Extends: List,\r\n\r\n    initialize:\r\n\r\n    function DisplayList (scene)\r\n    {\r\n        List.call(this, scene);\r\n\r\n        /**\r\n         * The flag the determines whether Game Objects should be sorted when `depthSort()` is called.\r\n         *\r\n         * @name Phaser.GameObjects.DisplayList#sortChildrenFlag\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.sortChildrenFlag = false;\r\n\r\n        /**\r\n         * The Scene that this Display List belongs to.\r\n         *\r\n         * @name Phaser.GameObjects.DisplayList#scene\r\n         * @type {Phaser.Scene}\r\n         * @since 3.0.0\r\n         */\r\n        this.scene = scene;\r\n\r\n        /**\r\n         * The Scene's Systems.\r\n         *\r\n         * @name Phaser.GameObjects.DisplayList#systems\r\n         * @type {Phaser.Scenes.Systems}\r\n         * @since 3.0.0\r\n         */\r\n        this.systems = scene.sys;\r\n\r\n        scene.sys.events.once('boot', this.boot, this);\r\n        scene.sys.events.on('start', this.start, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically, only once, when the Scene is first created.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.GameObjects.DisplayList#boot\r\n     * @private\r\n     * @since 3.5.1\r\n     */\r\n    boot: function ()\r\n    {\r\n        this.systems.events.once('destroy', this.destroy, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically by the Scene when it is starting up.\r\n     * It is responsible for creating local systems, properties and listening for Scene events.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.GameObjects.DisplayList#start\r\n     * @private\r\n     * @since 3.5.0\r\n     */\r\n    start: function ()\r\n    {\r\n        this.systems.events.once('shutdown', this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * Force a sort of the display list on the next call to depthSort.\r\n     *\r\n     * @method Phaser.GameObjects.DisplayList#queueDepthSort\r\n     * @since 3.0.0\r\n     */\r\n    queueDepthSort: function ()\r\n    {\r\n        this.sortChildrenFlag = true;\r\n    },\r\n\r\n    /**\r\n     * Immediately sorts the display list if the flag is set.\r\n     *\r\n     * @method Phaser.GameObjects.DisplayList#depthSort\r\n     * @since 3.0.0\r\n     */\r\n    depthSort: function ()\r\n    {\r\n        if (this.sortChildrenFlag)\r\n        {\r\n            StableSort.inplace(this.list, this.sortByDepth);\r\n\r\n            this.sortChildrenFlag = false;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Compare the depth of two Game Objects.\r\n     *\r\n     * @method Phaser.GameObjects.DisplayList#sortByDepth\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject} childA - The first Game Object.\r\n     * @param {Phaser.GameObjects.GameObject} childB - The second Game Object.\r\n     *\r\n     * @return {integer} The difference between the depths of each Game Object.\r\n     */\r\n    sortByDepth: function (childA, childB)\r\n    {\r\n        return childA._depth - childB._depth;\r\n    },\r\n\r\n    /**\r\n     * Given an array of Game Objects, sort the array and return it, so that\r\n     * the objects are in index order with the lowest at the bottom.\r\n     *\r\n     * @method Phaser.GameObjects.DisplayList#sortGameObjects\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject[]} gameObjects - The array of Game Objects to sort.\r\n     *\r\n     * @return {array} The sorted array of Game Objects.\r\n     */\r\n    sortGameObjects: function (gameObjects)\r\n    {\r\n        if (gameObjects === undefined) { gameObjects = this.list; }\r\n\r\n        this.scene.sys.depthSort();\r\n\r\n        return gameObjects.sort(this.sortIndexHandler.bind(this));\r\n    },\r\n\r\n    /**\r\n     * Get the top-most Game Object in the given array of Game Objects, after sorting it.\r\n     *\r\n     * Note that the given array is sorted in place, even though it isn't returned directly it will still be updated.\r\n     *\r\n     * @method Phaser.GameObjects.DisplayList#getTopGameObject\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject[]} gameObjects - The array of Game Objects.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} The top-most Game Object in the array of Game Objects.\r\n     */\r\n    getTopGameObject: function (gameObjects)\r\n    {\r\n        this.sortGameObjects(gameObjects);\r\n\r\n        return gameObjects[gameObjects.length - 1];\r\n    },\r\n\r\n    /**\r\n     * All members of the group.\r\n     *\r\n     * @method Phaser.GameObjects.DisplayList#getChildren\r\n     * @since 3.12.0\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject[]} The group members.\r\n     */\r\n    getChildren: function ()\r\n    {\r\n        return this.list;\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is shutting down.\r\n     * We need to kill and reset all internal properties as well as stop listening to Scene events.\r\n     *\r\n     * @method Phaser.GameObjects.DisplayList#shutdown\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    shutdown: function ()\r\n    {\r\n        var i = this.list.length;\r\n\r\n        while (i--)\r\n        {\r\n            this.list[i].destroy(true);\r\n        }\r\n\r\n        this.list.length = 0;\r\n\r\n        this.systems.events.off('shutdown', this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is being destroyed.\r\n     * We need to shutdown and then kill off all external references.\r\n     *\r\n     * @method Phaser.GameObjects.DisplayList#destroy\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n\r\n        this.scene.sys.events.off('start', this.start, this);\r\n\r\n        this.scene = null;\r\n        this.systems = null;\r\n    }\r\n\r\n});\r\n\r\nPluginCache.register('DisplayList', DisplayList, 'displayList');\r\n\r\nmodule.exports = DisplayList;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","List","PluginCache","StableSort","DisplayList","Extends","initialize","scene","call","sortChildrenFlag","systems","sys","events","once","boot","on","start","destroy","shutdown","queueDepthSort","depthSort","inplace","list","sortByDepth","childA","childB","_depth","sortGameObjects","gameObjects","undefined","sort","sortIndexHandler","bind","getTopGameObject","length","getChildren","i","off","register"]
}
