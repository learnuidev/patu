shadow$provide.module$node_modules$Phaser$src$structs$Set=function(global,require,module,exports){var Set=new (require("module$node_modules$Phaser$src$utils$Class"))({initialize:function(elements){this.entries=[];if(Array.isArray(elements))for(var i=0;i<elements.length;i++)this.set(elements[i])},set:function(value){-1===this.entries.indexOf(value)&&this.entries.push(value);return this},get:function(property,value){for(var i=0;i<this.entries.length;i++){var entry=this.entries[i];if(entry[property]===
value)return entry}},getArray:function(){return this.entries.slice(0)},delete:function(value){value=this.entries.indexOf(value);-1<value&&this.entries.splice(value,1);return this},dump:function(){console.group("Set");for(var i=0;i<this.entries.length;i++)console.log(this.entries[i]);console.groupEnd()},each:function(callback,callbackScope){var i,temp=this.entries.slice(),len=temp.length;if(callbackScope)for(i=0;i<len&&!1!==callback.call(callbackScope,temp[i],i);i++);else for(i=0;i<len&&!1!==callback(temp[i],
i);i++);return this},iterate:function(callback,callbackScope){var i,len=this.entries.length;if(callbackScope)for(i=0;i<len&&!1!==callback.call(callbackScope,this.entries[i],i);i++);else for(i=0;i<len&&!1!==callback(this.entries[i],i);i++);return this},iterateLocal:function(callbackKey){var i,args=[];for(i=1;i<arguments.length;i++)args.push(arguments[i]);var len=this.entries.length;for(i=0;i<len;i++){var entry=this.entries[i];entry[callbackKey].apply(entry,args)}return this},clear:function(){this.entries.length=
0;return this},contains:function(value){return-1<this.entries.indexOf(value)},union:function(set){var newSet=new Set;set.entries.forEach(function(value){newSet.set(value)});this.entries.forEach(function(value){newSet.set(value)});return newSet},intersect:function(set){var newSet=new Set;this.entries.forEach(function(value){set.contains(value)&&newSet.set(value)});return newSet},difference:function(set){var newSet=new Set;this.entries.forEach(function(value){set.contains(value)||newSet.set(value)});
return newSet},size:{get:function(){return this.entries.length},set:function(value){return value<this.entries.length?this.entries.length=value:this.entries.length}}});module.exports=Set}
//# sourceMappingURL=module$node_modules$Phaser$src$structs$Set.js.map
