{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$particles$ParticleManagerFactory.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,4EAAA,CAAgG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOpIC,MAAAA,CAAoBH,OAAA,CAAQ,8DAAR,CACxB,KAAII,uBAAyBJ,OAAA,CAAQ,6EAAR,CAgB7BG,OAAAE,SAAA,CAA2B,WAA3B,CAAwC,QAAS,CAACC,GAAD,CAAMC,KAAN,CAAaC,QAAb,CACjD,CACQC,GAAAA,CAAU,IAAIL,sBAAJ,CAA2B,IAAAM,MAA3B,CAAuCJ,GAAvC,CAA4CC,KAA5C,CAAmDC,QAAnD,CAEd,KAAAG,YAAAC,IAAA,CAAqBH,GAArB,CACA,KAAAI,WAAAD,IAAA,CAAoBH,GAApB,CAEA,OAAOA,IANX,CADA,CAxBwI;",
"sources":["node_modules/Phaser/src/gameobjects/particles/ParticleManagerFactory.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$particles$ParticleManagerFactory\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar GameObjectFactory = require('../GameObjectFactory');\r\nvar ParticleEmitterManager = require('./ParticleEmitterManager');\r\n\r\n/**\r\n * Creates a new Particle Emitter Manager Game Object and adds it to the Scene.\r\n *\r\n * Note: This method will only be available if the Particles Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory#particles\r\n * @since 3.0.0\r\n *\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer|object)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n * @param {ParticleEmitterConfig|ParticleEmitterConfig[]} [emitters] - Configuration settings for one or more emitters to create.\r\n *\r\n * @return {Phaser.GameObjects.Particles.ParticleEmitterManager} The Game Object that was created.\r\n */\r\nGameObjectFactory.register('particles', function (key, frame, emitters)\r\n{\r\n    var manager = new ParticleEmitterManager(this.scene, key, frame, emitters);\r\n\r\n    this.displayList.add(manager);\r\n    this.updateList.add(manager);\r\n\r\n    return manager;\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectFactory context.\r\n//\r\n//  There are several properties available to use:\r\n//\r\n//  this.scene - a reference to the Scene that owns the GameObjectFactory\r\n//  this.displayList - a reference to the Display List the Scene owns\r\n//  this.updateList - a reference to the Update List the Scene owns\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GameObjectFactory","ParticleEmitterManager","register","key","frame","emitters","manager","scene","displayList","add","updateList"]
}
