shadow$provide.module$node_modules$Phaser$src$gameobjects$shape$line$LineWebGLRenderer=function(global,require,module,exports){var Utils=require("module$node_modules$Phaser$src$renderer$webgl$Utils");module.exports=function(renderer,src,interpolationPercentage,camera,parentMatrix){interpolationPercentage=this.pipeline;var camMatrix=interpolationPercentage._tempMatrix1,shapeMatrix=interpolationPercentage._tempMatrix2;renderer.setPipeline(interpolationPercentage);shapeMatrix.applyITRS(src.x,src.y,src.rotation,
src.scaleX,src.scaleY);camMatrix.copyFrom(camera.matrix);parentMatrix?(camMatrix.multiplyWithOffset(parentMatrix,-camera.scrollX*src.scrollFactorX,-camera.scrollY*src.scrollFactorY),shapeMatrix.e=src.x,shapeMatrix.f=src.y):(shapeMatrix.e-=camera.scrollX*src.scrollFactorX,shapeMatrix.f-=camera.scrollY*src.scrollFactorY);renderer=src._displayOriginX;parentMatrix=src._displayOriginY;var alpha=camera.alpha*src.alpha;src.isStroked&&(camera=interpolationPercentage.strokeTint,alpha=Utils.getTintAppendFloatAlphaAndSwap(src.strokeColor,
src.strokeAlpha*alpha),camera.TL=alpha,camera.TR=alpha,camera.BL=alpha,camera.BR=alpha,interpolationPercentage.batchLine(src.geom.x1-renderer,src.geom.y1-parentMatrix,src.geom.x2-renderer,src.geom.y2-parentMatrix,src._startWidth,src._endWidth,1,0,!1,shapeMatrix,camMatrix))}}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$shape$line$LineWebGLRenderer.js.map
