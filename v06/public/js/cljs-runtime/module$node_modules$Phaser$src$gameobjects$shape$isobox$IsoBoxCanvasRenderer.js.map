{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$shape$isobox$IsoBoxCanvasRenderer.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,6EAAA,CAAiG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOzI,IAAIC,gBAAkBH,OAAA,CAAQ,kEAAR,CAAtB,CACII,aAAeJ,OAAA,CAAQ,mEAAR,CAoFnBC,OAAAC,QAAA,CAnE2BG,QAAS,CAACC,QAAD,CAAWC,GAAX,CAAgBC,uBAAhB,CAAyCC,MAAzC,CAAiDC,YAAjD,CACpC,CACQC,uBAAAA,CAAML,QAAAM,eAENR,aAAA,CAAaE,QAAb,CAAuBK,uBAAvB,CAA4BJ,GAA5B,CAAiCE,MAAjC;AAAyCC,YAAzC,CAAJ,EAA8DH,GAAAM,SAA9D,GAEQC,YA4CJ,CA5CWP,GAAAQ,MA4CX,CA3CIC,QA2CJ,CA3CaT,GAAAS,OA2Cb,CAzCIC,MAyCJ,CAzCYH,YAyCZ,CAzCmB,CAyCnB,CAxCYA,YAwCZ,EAxCmBP,GAAAW,WAwCnB,CApCIX,GAAAY,QAoCJ,GAlCIhB,eAAA,CAAgBQ,uBAAhB,CAAqBJ,GAArB,CAA0BA,GAAAa,QAA1B,CAYA,CAVAT,uBAAAU,UAAA,EAUA,CARAV,uBAAAW,OAAA,CAAW,CAACL,MAAZ,CAAmB,CAACD,QAApB,CAQA,CAPAL,uBAAAY,OAAA,CAAW,CAAX,CAAc,CAACC,YAAf,CAAuBR,QAAvB,CAOA,CANAL,uBAAAY,OAAA,CAAWN,MAAX,CAAkB,CAACD,QAAnB,CAMA,CALAL,uBAAAY,OAAA,CAAWN,MAAX,CAAkB,EAAlB,CAKA,CAJAN,uBAAAY,OAAA,CAAW,CAAX,CAAcC,YAAd,CAAsB,CAAtB,CAIA,CAHAb,uBAAAY,OAAA,CAAW,CAACN,MAAZ;AAAmB,EAAnB,CAGA,CAFAN,uBAAAY,OAAA,CAAW,CAACN,MAAZ,CAAmB,CAACD,QAApB,CAEA,CAAAL,uBAAAc,KAAA,EAsBJ,EAjBIlB,GAAAmB,SAiBJ,GAfIvB,eAAA,CAAgBQ,uBAAhB,CAAqBJ,GAArB,CAA0BA,GAAAoB,SAA1B,CAUA,CARAhB,uBAAAU,UAAA,EAQA,CANAV,uBAAAW,OAAA,CAAW,CAACL,MAAZ,CAAmB,CAAnB,CAMA,CALAN,uBAAAY,OAAA,CAAW,CAAX,CAAcC,YAAd,CAKA,CAJAb,uBAAAY,OAAA,CAAW,CAAX,CAAcC,YAAd,CAAsBR,QAAtB,CAIA,CAHAL,uBAAAY,OAAA,CAAW,CAACN,MAAZ,CAAmB,CAACD,QAApB,CAGA,CAFAL,uBAAAY,OAAA,CAAW,CAACN,MAAZ,CAAmB,CAAnB,CAEA,CAAAN,uBAAAc,KAAA,EAKJ,EAAIlB,GAAAqB,UAAJ,GAEIzB,eAAA,CAAgBQ,uBAAhB;AAAqBJ,GAArB,CAA0BA,GAAAsB,UAA1B,CAUA,CARAlB,uBAAAU,UAAA,EAQA,CANAV,uBAAAW,OAAA,CAAWL,MAAX,CAAkB,CAAlB,CAMA,CALAN,uBAAAY,OAAA,CAAW,CAAX,CAAcC,YAAd,CAKA,CAJAb,uBAAAY,OAAA,CAAW,CAAX,CAAcC,YAAd,CAAsBR,QAAtB,CAIA,CAHAL,uBAAAY,OAAA,CAAWN,MAAX,CAAkB,CAACD,QAAnB,CAGA,CAFAL,uBAAAY,OAAA,CAAWN,MAAX,CAAkB,CAAlB,CAEA,CAAAN,uBAAAc,KAAA,EAZJ,CA9CJ,CAHJ,CA1ByI;",
"sources":["node_modules/Phaser/src/gameobjects/shape/isobox/IsoBoxCanvasRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$shape$isobox$IsoBoxCanvasRenderer\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar FillStyleCanvas = require('../FillStyleCanvas');\r\nvar SetTransform = require('../../../renderer/canvas/utils/SetTransform');\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.IsoBox#renderCanvas\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.IsoBox} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar IsoBoxCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    var ctx = renderer.currentContext;\r\n\r\n    if (SetTransform(renderer, ctx, src, camera, parentMatrix) && src.isFilled)\r\n    {\r\n        var size = src.width;\r\n        var height = src.height;\r\n    \r\n        var sizeA = size / 2;\r\n        var sizeB = size / src.projection;\r\n\r\n        //  Top Face\r\n\r\n        if (src.showTop)\r\n        {\r\n            FillStyleCanvas(ctx, src, src.fillTop);\r\n\r\n            ctx.beginPath();\r\n\r\n            ctx.moveTo(-sizeA, -height);\r\n            ctx.lineTo(0, -sizeB - height);\r\n            ctx.lineTo(sizeA, -height);\r\n            ctx.lineTo(sizeA, -1);\r\n            ctx.lineTo(0, sizeB - 1);\r\n            ctx.lineTo(-sizeA, -1);\r\n            ctx.lineTo(-sizeA, -height);\r\n\r\n            ctx.fill();\r\n        }\r\n\r\n        //  Left Face\r\n\r\n        if (src.showLeft)\r\n        {\r\n            FillStyleCanvas(ctx, src, src.fillLeft);\r\n\r\n            ctx.beginPath();\r\n    \r\n            ctx.moveTo(-sizeA, 0);\r\n            ctx.lineTo(0, sizeB);\r\n            ctx.lineTo(0, sizeB - height);\r\n            ctx.lineTo(-sizeA, -height);\r\n            ctx.lineTo(-sizeA, 0);\r\n\r\n            ctx.fill();\r\n        }\r\n\r\n        //  Right Face\r\n\r\n        if (src.showRight)\r\n        {\r\n            FillStyleCanvas(ctx, src, src.fillRight);\r\n\r\n            ctx.beginPath();\r\n\r\n            ctx.moveTo(sizeA, 0);\r\n            ctx.lineTo(0, sizeB);\r\n            ctx.lineTo(0, sizeB - height);\r\n            ctx.lineTo(sizeA, -height);\r\n            ctx.lineTo(sizeA, 0);\r\n\r\n            ctx.fill();\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = IsoBoxCanvasRenderer;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","FillStyleCanvas","SetTransform","IsoBoxCanvasRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","ctx","currentContext","isFilled","size","width","height","sizeA","projection","showTop","fillTop","beginPath","moveTo","lineTo","sizeB","fill","showLeft","fillLeft","showRight","fillRight"]
}
