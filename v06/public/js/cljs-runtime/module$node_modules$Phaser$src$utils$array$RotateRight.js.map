{
"version":3,
"file":"module$node_modules$Phaser$src$utils$array$RotateRight.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkCnHD,MAAAC,QAAA,CAfkBC,QAAS,CAACC,KAAD,CAAQC,KAAR,CAC3B,CACkBC,IAAAA,EAAd,GAAID,KAAJ,GAA2BA,KAA3B,CAAmC,CAAnC,CAIA,KAFA,IAAIE,QAAU,IAAd,CAESC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,KAApB,CAA2BG,CAAA,EAA3B,CAEID,OACA,CADUH,KAAAK,IAAA,EACV,CAAAL,KAAAM,QAAA,CAAcH,OAAd,CAGJ,OAAOA,QAXX,CApBmH;",
"sources":["node_modules/Phaser/src/utils/array/RotateRight.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$array$RotateRight\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Moves the element at the end of the array to the start, shifting all items in the process.\r\n * The \"rotation\" happens to the right.\r\n *\r\n * @function Phaser.Utils.Array.RotateRight\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to shift to the right. This array is modified in place.\r\n * @param {integer} [total=1] - The number of times to shift the array.\r\n *\r\n * @return {*} The most recently shifted element.\r\n */\r\nvar RotateRight = function (array, total)\r\n{\r\n    if (total === undefined) { total = 1; }\r\n\r\n    var element = null;\r\n\r\n    for (var i = 0; i < total; i++)\r\n    {\r\n        element = array.pop();\r\n        array.unshift(element);\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\nmodule.exports = RotateRight;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","RotateRight","array","total","undefined","element","i","pop","unshift"]
}
