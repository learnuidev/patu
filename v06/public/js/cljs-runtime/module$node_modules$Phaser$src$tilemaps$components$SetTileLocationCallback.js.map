{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$components$SetTileLocationCallback.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,2EAAA,CAA+F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOvI,IAAIC,eAAiBH,OAAA,CAAQ,mEAAR,CA8BrBC,OAAAC,QAAA,CAX8BE,QAAS,CAACC,KAAD,CAAQC,KAAR,CAAeC,KAAf,CAAsBC,MAAtB,CAA8BC,QAA9B,CAAwCC,eAAxC,CAAyDC,KAAzD,CACvC,CACQC,KAAAA,CAAQT,cAAA,CAAeE,KAAf,CAAsBC,KAAtB,CAA6BC,KAA7B,CAAoCC,MAApC,CAA4C,IAA5C,CAAkDG,KAAlD,CAEZ,KAASE,KAAT,CAAa,CAAb,CAAgBA,KAAhB,CAAoBD,KAAAE,OAApB,CAAkCD,KAAA,EAAlC,CAEID,KAAA,CAAMC,KAAN,CAAAE,qBAAA,CAA8BN,QAA9B,CAAwCC,eAAxC,CALR,CA3BuI;",
"sources":["node_modules/Phaser/src/tilemaps/components/SetTileLocationCallback.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$components$SetTileLocationCallback\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar GetTilesWithin = require('./GetTilesWithin');\r\n\r\n/**\r\n * Sets a collision callback for the given rectangular area (in tile coordinates) within the layer.\r\n * If a callback is already set for the tile index it will be replaced. Set the callback to null to\r\n * remove it.\r\n *\r\n * @function Phaser.Tilemaps.Components.SetTileLocationCallback\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} [tileX=0] - The left most tile index (in tile coordinates) to use as the origin of the area.\r\n * @param {integer} [tileY=0] - The top most tile index (in tile coordinates) to use as the origin of the area.\r\n * @param {integer} [width=max width based on tileX] - How many tiles wide from the `tileX` index the area will be.\r\n * @param {integer} [height=max height based on tileY] - How many tiles tall from the `tileY` index the area will be.\r\n * @param {function} callback - The callback that will be invoked when the tile is collided with.\r\n * @param {object} callbackContext - The context under which the callback is called.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n */\r\nvar SetTileLocationCallback = function (tileX, tileY, width, height, callback, callbackContext, layer)\r\n{\r\n    var tiles = GetTilesWithin(tileX, tileY, width, height, null, layer);\r\n\r\n    for (var i = 0; i < tiles.length; i++)\r\n    {\r\n        tiles[i].setCollisionCallback(callback, callbackContext);\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = SetTileLocationCallback;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetTilesWithin","SetTileLocationCallback","tileX","tileY","width","height","callback","callbackContext","layer","tiles","i","length","setCollisionCallback"]
}
