{
"version":3,
"file":"module$node_modules$react_intl$src$components$injectIntl.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAErHC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,QAAA,CAAkBJ,OAAAK,SAAlB,CAAqC,IAAK,EAC1C,KAAIC,QAAUR,OAAA,CAAQ,iCAAR,CAAd,CACIS,MAAQD,OAAAE,aAAA,CAAqBV,OAAA,CAAQ,iCAAR,CAArB,CACRW,OAAAA,CAA4BH,OAAAI,gBAAA,CAAwBZ,OAAA,CAAQ,8EAAR,CAAxB,CAKhC,KAAIa,qBAAuBF,MAAAG,QAAAA,QAAvBD;AAAoEF,MAAAG,QAAxE,CACIC,QAAUf,OAAA,CAAQ,0CAAR,CAKVgB,QAAAA,CAAcP,KAAAQ,cAAA,CAAoB,IAApB,CAjBmG,KAkBjHC,aAAeF,OAAAG,SACnBjB,QAAAK,SAAA,CADwDS,OAAAT,SAExDL,QAAAI,QAAA,CAAkBU,OAkBlBd,QAAAY,QAAA,CAjBAM,QAAmB,CAACC,gBAAD,CAAmBC,OAAnB,CAA4B,CACvCC,OAAAA,CAAKD,OAALC,EAAgB,EADuB,KACnBC,GAAKD,OAAAE,aADc,CACGA,aAAsB,IAAK,EAAZ,GAAAD,EAAA,CAAgB,MAAhB,CAAyBA,EAAIE,GAAAA,CAAKH,OAAAI,WADpD,KACmEA,WAAoB,IAAK,EAAZ,GAAAD,EAAA,CAAgB,CAAA,CAAhB,CAAwBA,EAAIE,QAAAA,CAAKL,OAAAM,eAA5J,KAA+KA,eAAwB,IAAK,EAAZ,GAAAD,OAAA,CAAgB,CAAA,CAAhB,CAAuBA,OAAvN,CACIE,SAAWA,QAAS,CAACC,KAAD,CAAQ,CAAE,MAAQtB,MAAAuB,cAAA,CAAoBd,YAApB;AAAkC,IAAlC,CAAwC,QAAS,CAACe,IAAD,CAAO,CAC9F,IAAIV,EACAM,eAAJ,EACId,OAAAmB,qBAAA,CAA6BD,IAA7B,CAEAE,KAAAA,EAAYZ,EAAA,CAAK,EAAL,CAASA,EAAA,CAAGE,YAAH,CAAT,CAA4BQ,IAA5B,CAAkCV,EAA9CY,CACJ,OAAQ1B,MAAAuB,cAAA,CAAoBX,gBAApB,CAAsCb,OAAA4B,SAAA,CAAiB,EAAjB,CAAqBL,KAArB,CAA4BI,IAA5B,CAAsC,CAAEE,IAAKV,UAAA,CAAaI,KAAAO,aAAb,CAAkC,IAAzC,CAAtC,CAAtC,CANsF,CAAxD,CAAV,CAQhCR,SAAAS,YAAA,CAAuB,aAAvB,EAAsDlB,gBAjB/CkB,YAiBP,EAAsDlB,gBAjBtBmB,KAiBhC,EAjBkD,WAiBlD,EAA0E,GAC1EV,SAAAT,iBAAA,CAA4BA,gBAC5B,OAAIM,WAAJ,CACWd,oBAAA,CAAqBJ,KAAAkB,WAAA,CAAiB,QAAS,CAACI,KAAD,CAAQM,GAAR,CAAa,CAAE,MAAQ5B,MAAAuB,cAAA,CAAoBF,QAApB,CAA8BtB,OAAA4B,SAAA,CAAiB,EAAjB;AAAqBL,KAArB,CAA4B,CAAEO,aAAcD,GAAhB,CAA5B,CAA9B,CAAV,CAAvC,CAArB,CAA8JhB,gBAA9J,CADX,CAGOR,oBAAA,CAAqBiB,QAArB,CAA+BT,gBAA/B,CAfoC,CArBsE;",
"sources":["node_modules/react-intl/src/components/injectIntl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_intl$src$components$injectIntl\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Context = exports.Provider = void 0;\nvar tslib_1 = require(\"tslib\");\nvar React = tslib_1.__importStar(require(\"react\"));\nvar hoist_non_react_statics_1 = tslib_1.__importDefault(require(\"hoist-non-react-statics\"));\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nvar hoistNonReactStatics = hoist_non_react_statics_1.default.default || hoist_non_react_statics_1.default;\nvar utils_1 = require(\"../utils\");\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexports.Provider = IntlProvider;\nexports.Context = IntlContext;\nfunction injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            utils_1.invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, tslib_1.__assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\" + getDisplayName(WrappedComponent) + \")\";\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, tslib_1.__assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\nexports.default = injectIntl;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Context","Provider","tslib_1","React","__importStar","hoist_non_react_statics_1","__importDefault","hoistNonReactStatics","default","utils_1","IntlContext","createContext","IntlConsumer","Consumer","injectIntl","WrappedComponent","options","_a","_b","intlPropName","_c","forwardRef","_d","enforceContext","WithIntl","props","createElement","intl","invariantIntlContext","intlProp","__assign","ref","forwardedRef","displayName","name"]
}
