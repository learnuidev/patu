{"version":3,"sources":["app/kaboom/old_core.cljs"],"mappings":"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","names":["app$kaboom$old-core$IKaboom$text$dyn","x__4428__auto__","m__4429__auto__","app.kaboom.old-core/text","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","app$kaboom$old-core$IKaboom$add$dyn","app.kaboom.old-core/add","app$kaboom$old-core$IKaboom$pos$dyn","app.kaboom.old-core/pos","app$kaboom$old-core$IKaboom$scene$dyn","app.kaboom.old-core/scene","app$kaboom$old-core$IKaboom$start$dyn","app.kaboom.old-core/start","app$kaboom$old-core$IKaboom$load_sprite$dyn","app.kaboom.old-core/load-sprite","app$kaboom$old-core$IKaboom$scale$dyn","app.kaboom.old-core/scale","app$kaboom$old-core$IKaboom$add_level$dyn","app.kaboom.old-core/add-level","var_args","G__31703","js/Error","app.kaboom.old-core/IKaboom","this","value","font-size","x","y","type","func","sprite-id","asset-path","options","cljs.core/PROTOCOL_SENTINEL","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","app.kaboom.old-core/Kaboom","app.kaboom.old-core/->Kaboom","g","_","cljs.core/clj->js","scene-id","cljs.core/name","app.kaboom.old-core/game-state","cljs.core.atom","app.kaboom.old-core/scenes-state","app.kaboom.old-core/create-game","game","js/kaboom","cljs.core.js__GT_clj","app.kaboom.old-core/init!","opts","cljs.core/reset!","js/app","js/app.kaboom","js/app.kaboom.old-core","js/app.kaboom.old-core.game","app.kaboom.old-core/game","js/document.getElementById","js/app.kaboom.old-core.add-component","method-table__4619__auto__","prefer-table__4620__auto__","method-cache__4621__auto__","cached-hierarchy__4622__auto__","hierarchy__4623__auto__","cljs.core.get","fexpr__31704","cljs.core/MultiFn","cljs.core.symbol","app.kaboom.old-core/add-component","p__31705","map__31706","cljs.core.apply","cljs.core/hash-map","scale-to","txt","position","p__31708","map__31709","app.kaboom.old-core/reg-scene","id","level","config","app.kaboom.old-core/reg-component","app.kaboom.old-core/start!"],"sourcesContent":["(ns app.kaboom.old-core\n  (:require [clojure.repl :refer [doc]]))\n\n(comment\n  (doc load-sprite))\n\n;; == Protocol\n(defprotocol IKaboom\n  \"IKaboom protocol abstraction\"\n  (text [this value font-size])\n  (add [this value] \"Add a game object to scene\")\n  (pos [this x y])\n  (scene [this type func])\n  (start [this value])\n  (load-sprite [this sprite-id asset-path]\n    \"Description:\n      - Loads a sprite\n      - Accepts three arguments\n         - 1. game       - kaboom instance. object\n         - 2. sprit-id   - id of the sprite. keyword\n         - 3. asset-path - public path of the asset. string\n    Example usage:\n      - (load-sprite game :player 'assets/player.png')\")\n  (scale [this value])\n  (add-level [this value] [this value options] \"Add a new level\"))\n\n;;\n(comment\n  (doc load-sprite)\n  (doc add)\n  (doc scale)\n  (name \"hello\"))\n\n(deftype Kaboom [^js/kaboom g]\n  IKaboom\n  (text [this value font-size]\n    (.text g value font-size))\n  (pos [this x y]\n    (.pos g x y))\n  (add [_ value]\n    (.add g (clj->js value)))\n  (scene [_ scene-id func]\n    (.scene g (name scene-id) func))\n  (start [_ type]\n    (.start g (name type)))\n  (load-sprite [_ sprite-id asset-path]\n    (.loadSprite g (name sprite-id) asset-path))\n  (scale [_ value]\n    (.scale g value))\n  (add-level [_ value]\n    (.addLevel g value))\n  (add-level [_ value options]\n    (.addLevel g (clj->js value) (clj->js options))))\n\n(def game-state (atom {}))\n(def scenes-state (atom {}))\n(defn create-game [options]\n  (let [game (js/kaboom (js->clj options))]\n    (->Kaboom game)))\n\n(defn init! [opts]\n  (reset! game-state opts))\n\n(comment\n  @game-state)\n(defonce game (create-game {:canvas (js/document.getElementById \"app\")}))\n\n(defmulti add-component :type)\n\n(defmethod add-component :text [{:keys [scale-to txt position]}]\n  (add game [(text game (:value txt) (:font-size txt))\n             (scale game scale-to)\n             (pos game (:x position) (:y position))]))\n\n(defn reg-scene [id {:keys [level config txt position scale-to]}]\n                     ; :or {config {:width 40\n                     ;              :height 40}\n                     ;      txt {:value \"KaboomCLJS\"\n                     ;           :font-size 32}\n                     ;      position {:x 100 :y 100}\n                     ;      scale-to 1}}]\n  (scene game\n         id\n         (fn []\n           (do\n             (add-level game level config)\n             (add game [(text game (:value txt) (:font-size txt))\n                        (scale game scale-to)\n                        (pos game (:x position) (:y position))])))))\n\n(defn reg-component [id options])\n\n(defn start! [scene-id]\n  (start game scene-id))\n"]}