{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$container$ContainerWebGLRenderer.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,4EAAA,CAAgG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA2FxID,MAAAC,QAAA,CApE6BC,QAAS,CAACC,QAAD,CAAWC,SAAX,CAAsBC,uBAAtB,CAA+CC,MAA/C,CAAuDC,YAAvD,CACtC,CACI,IAAIC,SAAWJ,SAAAK,KAEf,IAAwB,CAAxB,GAAID,QAAAE,OAAJ,CAAA,CAKA,IAAIC,gBAAkBP,SAAAQ,eAElBL,aAAJ,EAEII,eAAAE,aAAA,EAIA,CAHAF,eAAAG,SAAA,CAAyBP,YAAzB,CAGA,CAFAI,eAAAI,UAAA,CAA0BX,SAAAY,EAA1B,CAAuCZ,SAAAa,EAAvC,CAEA,CADAN,eAAAO,OAAA,CAAuBd,SAAAe,SAAvB,CACA,CAAAR,eAAAS,MAAA,CAAsBhB,SAAAiB,OAAtB;AAAwCjB,SAAAkB,OAAxC,CANJ,EAUIX,eAAAY,UAAA,CAA0BnB,SAAAY,EAA1B,CAAuCZ,SAAAa,EAAvC,CAAoDb,SAAAe,SAApD,CAAwEf,SAAAiB,OAAxE,CAA0FjB,SAAAkB,OAA1F,CAKJ,EAFIE,YAEJ,CAFqD,EAErD,GAF6BpB,SAAAqB,UAE7B,GAGItB,QAAAuB,aAAA,CAAsB,CAAtB,CAGJ,KAAIC,MAAQvB,SAAAwB,OAAZ,CACIC,cAAgBzB,SAAAyB,cAChBC,UAAAA,CAAgB1B,SAAA0B,cAEpB,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBvB,QAAAE,OAApB,CAAqCqB,CAAA,EAArC,CACA,CACI,IAAIC,MAAQxB,QAAA,CAASuB,CAAT,CAEZ,IAAKC,KAAAC,WAAA,CAAiB3B,MAAjB,CAAL,CAAA,CAKA,IAAI4B,WAAaF,KAAAJ,OAAjB,CACIO,mBAAqBH,KAAAH,cADzB,CAEIO,mBAAqBJ,KAAAF,cAEpBN,aAAL,EAA8BQ,KAAAP,UAA9B;AAAkDtB,QAAAkC,iBAAlD,EAGIlC,QAAAuB,aAAA,CAAsBM,KAAAP,UAAtB,CAIJO,MAAAM,gBAAA,CAAsBH,kBAAtB,CAA2CN,aAA3C,CAA0DO,kBAA1D,CAA+EN,SAA/E,CACAE,MAAAO,SAAA,CAAeL,UAAf,CAA4BP,KAA5B,CAGAK,MAAAQ,YAAA,CAAkBrC,QAAlB,CAA4B6B,KAA5B,CAAmC3B,uBAAnC,CAA4DC,MAA5D,CAAoEK,eAApE,CAGAqB,MAAAO,SAAA,CAAeL,UAAf,CACAF,MAAAM,gBAAA,CAAsBH,kBAAtB,CAA0CC,kBAA1C,CAxBA,CAHJ,CAjCA,CAHJ,CAxBwI;",
"sources":["node_modules/Phaser/src/gameobjects/container/ContainerWebGLRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$container$ContainerWebGLRenderer\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       Felipe Alfonso <@bitnenfer>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Container#renderWebGL\r\n * @since 3.4.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Container} container - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar ContainerWebGLRenderer = function (renderer, container, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    var children = container.list;\r\n\r\n    if (children.length === 0)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var transformMatrix = container.localTransform;\r\n    \r\n    if (parentMatrix)\r\n    {\r\n        transformMatrix.loadIdentity();\r\n        transformMatrix.multiply(parentMatrix);\r\n        transformMatrix.translate(container.x, container.y);\r\n        transformMatrix.rotate(container.rotation);\r\n        transformMatrix.scale(container.scaleX, container.scaleY);\r\n    }\r\n    else\r\n    {\r\n        transformMatrix.applyITRS(container.x, container.y, container.rotation, container.scaleX, container.scaleY);\r\n    }\r\n\r\n    var containerHasBlendMode = (container.blendMode !== -1);\r\n\r\n    if (!containerHasBlendMode)\r\n    {\r\n        //  If Container is SKIP_TEST then set blend mode to be Normal\r\n        renderer.setBlendMode(0);\r\n    }\r\n\r\n    var alpha = container._alpha;\r\n    var scrollFactorX = container.scrollFactorX;\r\n    var scrollFactorY = container.scrollFactorY;\r\n\r\n    for (var i = 0; i < children.length; i++)\r\n    {\r\n        var child = children[i];\r\n\r\n        if (!child.willRender(camera))\r\n        {\r\n            continue;\r\n        }\r\n\r\n        var childAlpha = child._alpha;\r\n        var childScrollFactorX = child.scrollFactorX;\r\n        var childScrollFactorY = child.scrollFactorY;\r\n\r\n        if (!containerHasBlendMode && child.blendMode !== renderer.currentBlendMode)\r\n        {\r\n            //  If Container doesn't have its own blend mode, then a child can have one\r\n            renderer.setBlendMode(child.blendMode);\r\n        }\r\n\r\n        //  Set parent values\r\n        child.setScrollFactor(childScrollFactorX * scrollFactorX, childScrollFactorY * scrollFactorY);\r\n        child.setAlpha(childAlpha * alpha);\r\n\r\n        //  Render\r\n        child.renderWebGL(renderer, child, interpolationPercentage, camera, transformMatrix);\r\n\r\n        //  Restore original values\r\n        child.setAlpha(childAlpha);\r\n        child.setScrollFactor(childScrollFactorX, childScrollFactorY);\r\n    }\r\n};\r\n\r\nmodule.exports = ContainerWebGLRenderer;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","ContainerWebGLRenderer","renderer","container","interpolationPercentage","camera","parentMatrix","children","list","length","transformMatrix","localTransform","loadIdentity","multiply","translate","x","y","rotate","rotation","scale","scaleX","scaleY","applyITRS","containerHasBlendMode","blendMode","setBlendMode","alpha","_alpha","scrollFactorX","scrollFactorY","i","child","willRender","childAlpha","childScrollFactorX","childScrollFactorY","currentBlendMode","setScrollFactor","setAlpha","renderWebGL"]
}
