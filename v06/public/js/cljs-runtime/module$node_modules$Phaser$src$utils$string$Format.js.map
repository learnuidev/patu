{
"version":3,
"file":"module$node_modules$Phaser$src$utils$string$Format.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA6B/GD,MAAAC,QAAA,CARaC,QAAS,CAACC,MAAD,CAASC,MAAT,CACtB,CACI,MAAOD,OAAAE,QAAA,CAAe,YAAf,CAA6B,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAC7C,CACI,MAAOH,OAAA,CAAOI,MAAA,CAAOD,CAAP,CAAP,CAAmB,CAAnB,CADX,CADO,CADX,CAtB+G;",
"sources":["node_modules/Phaser/src/utils/string/Format.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$string$Format\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Takes a string and replaces instances of markers with values in the given array.\r\n * The markers take the form of `%1`, `%2`, etc. I.e.:\r\n *\r\n * `Format(\"The %1 is worth %2 gold\", [ 'Sword', 500 ])`\r\n *\r\n * @function Phaser.Utils.String.Format\r\n * @since 3.0.0\r\n *\r\n * @param {string} string - The string containing the replacement markers.\r\n * @param {array} values - An array containing values that will replace the markers. If no value exists an empty string is inserted instead.\r\n *\r\n * @return {string} The string containing replaced values.\r\n */\r\nvar Format = function (string, values)\r\n{\r\n    return string.replace(/%([0-9]+)/g, function (s, n)\r\n    {\r\n        return values[Number(n) - 1];\r\n    });\r\n};\r\n\r\nmodule.exports = Format;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Format","string","values","replace","s","n","Number"]
}
