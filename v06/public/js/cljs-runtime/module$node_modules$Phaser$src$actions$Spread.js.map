{
"version":3,
"file":"module$node_modules$Phaser$src$actions$Spread.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyD1GD,MAAAC,QAAA,CAzBaC,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkBC,GAAlB,CAAuBC,GAAvB,CAA4BC,GAA5B,CACtB,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,CAAA,CAA/B,CAEIE,IAAAA,CAAOC,IAAAC,IAAA,CAASL,GAAT,CAAeD,GAAf,CAAPI,CAA6BN,KAAAS,OAGjC,IAAIL,GAAJ,CAEI,IAAKM,GAAL,CAAS,CAAT,CAAYA,GAAZ,CAAgBV,KAAAS,OAAhB,CAA8BC,GAAA,EAA9B,CAEIV,KAAA,CAAMU,GAAN,CAAA,CAAST,QAAT,CAAA,EAAsBS,GAAtB,CAA0BJ,GAJlC,KASI,KAAKI,GAAL,CAAS,CAAT,CAAYA,GAAZ,CAAgBV,KAAAS,OAAhB,CAA8BC,GAAA,EAA9B,CAEIV,KAAA,CAAMU,GAAN,CAAA,CAAST,QAAT,CAAA,CAAqBS,GAArB,CAAyBJ,GAIjC,OAAON,MArBX,CAjC0G;",
"sources":["node_modules/Phaser/src/actions/Spread.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$actions$Spread\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Takes an array of Game Objects and then modifies their `property` so the value equals, or is incremented, the\r\n * calculated spread value.\r\n * \r\n * The spread value is derived from the given `min` and `max` values and the total number of items in the array.//#endregion\r\n * \r\n * For example, to cause an array of Sprites to change in alpha from 0 to 1 you could call:\r\n * \r\n * ```javascript\r\n * Phaser.Actions.Spread(itemsArray, 'alpha', 0, 1);\r\n * ```\r\n *\r\n * @function Phaser.Actions.Spread\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {string} property - The property of the Game Object to spread.\r\n * @param {number} min - The minimum value.\r\n * @param {number} max - The maximum value.\r\n * @param {boolean} [inc=false] - Should the values be incremented? `true` or set (`false`)\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that were passed to this Action.\r\n */\r\nvar Spread = function (items, property, min, max, inc)\r\n{\r\n    if (inc === undefined) { inc = false; }\r\n\r\n    var step = Math.abs(max - min) / items.length;\r\n    var i;\r\n\r\n    if (inc)\r\n    {\r\n        for (i = 0; i < items.length; i++)\r\n        {\r\n            items[i][property] += i * step;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        for (i = 0; i < items.length; i++)\r\n        {\r\n            items[i][property] = i * step;\r\n        }\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = Spread;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Spread","items","property","min","max","inc","undefined","step","Math","abs","length","i"]
}
