shadow$provide.module$node_modules$Phaser$src$cameras$2d$effects$Pan=function(global,require,module,exports){var Clamp=require("module$node_modules$Phaser$src$math$Clamp");global=require("module$node_modules$Phaser$src$utils$Class");var Vector2=require("module$node_modules$Phaser$src$math$Vector2"),EaseMap=require("module$node_modules$Phaser$src$math$easing$EaseMap");require=new global({initialize:function(camera){this.camera=camera;this.isRunning=!1;this.duration=0;this.source=new Vector2;this.current=
new Vector2;this.destination=new Vector2;this._elapsed=this.progress=0},start:function(x,y,duration,ease,force,callback,context){void 0===duration&&(duration=1E3);void 0===ease&&(ease=EaseMap.Linear);void 0===force&&(force=!1);void 0===callback&&(callback=null);void 0===context&&(context=this.camera.scene);var cam=this.camera;if(!force&&this.isRunning)return cam;this.isRunning=!0;this.duration=duration;this.progress=0;this.source.set(cam.scrollX,cam.scrollY);this.destination.set(x,y);cam.getScroll(x,
y,this.current);"string"===typeof ease&&EaseMap.hasOwnProperty(ease)?this.ease=EaseMap[ease]:"function"===typeof ease&&(this.ease=ease);this._elapsed=0;this._onUpdate=callback;this._onUpdateScope=context;this.camera.emit("camerapanstart",this.camera,this,duration,x,y);return cam},update:function(time,delta){if(this.isRunning)if(this._elapsed+=delta,this.progress=time=Clamp(this._elapsed/this.duration,0,1),delta=this.camera,this._elapsed<this.duration){var v=this.ease(time);delta.getScroll(this.destination.x,
this.destination.y,this.current);var x=this.source.x+(this.current.x-this.source.x)*v;v=this.source.y+(this.current.y-this.source.y)*v;delta.setScroll(x,v);this._onUpdate&&this._onUpdate.call(this._onUpdateScope,delta,time,x,v)}else delta.centerOn(this.destination.x,this.destination.y),this._onUpdate&&this._onUpdate.call(this._onUpdateScope,delta,time,delta.scrollX,delta.scrollY),this.effectComplete()},effectComplete:function(){this._onUpdateScope=this._onUpdate=null;this.isRunning=!1;this.camera.emit("camerapancomplete",
this.camera,this)},reset:function(){this.isRunning=!1;this._onUpdateScope=this._onUpdate=null},destroy:function(){this.reset();this.destination=this.source=this.camera=null}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$cameras$2d$effects$Pan.js.map
