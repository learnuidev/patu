{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$parsers$tiled$BuildTilesetIndex.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,wEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmEpID,MAAAC,QAAA,CAlDwBC,QAAS,CAACC,OAAD,CACjC,CAGI,IAFA,IAAIC,MAAQ,EAAZ,CAESC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,OAAAG,SAAAC,OAApB,CAA6CF,CAAA,EAA7C,CAWI,IATA,IAAIG,IAAML,OAAAG,SAAA,CAAiBD,CAAjB,CAAV,CAEII,EAAID,GAAAE,WAFR,CAGIC,EAAIH,GAAAE,WAHR,CAKIE,MAAQ,CALZ,CAMIC,OAAS,CANb,CAOIC,OAAS,CAPb,CASSC,EAAIP,GAAAQ,SAAb,CAA2BD,CAA3B,CAA+BP,GAAAQ,SAA/B,CAA8CR,GAAAS,MAA9C,CAAyDF,CAAA,EAAzD,CACA,CAEIX,KAAA,CAAMW,CAAN,CAAA,CAAW,CAAEN,CAAF,CAAKE,CAAL,CAAQN,CAAR,CAEXI,EAAA,EAAKD,GAAAU,UAAL,CAAqBV,GAAAW,YAErBP,MAAA,EAEA,IAAIA,KAAJ,GAAcJ,GAAAS,MAAd,CAEI,KAGJJ,OAAA,EAEA,IAAIA,MAAJ,GAAeL,GAAAY,QAAf,GAEIX,CAMI,CANAD,GAAAE,WAMA,CALJC,CAKI,EALCH,GAAAa,WAKD;AALkBb,GAAAW,YAKlB,CAHJN,MAGI,CAHK,CAGL,CAFJC,MAAA,EAEI,CAAAA,MAAA,GAAWN,GAAAc,KARnB,EAUQ,KAzBZ,CA+BJ,MAAOlB,MA9CX,CAlBoI;",
"sources":["node_modules/Phaser/src/tilemaps/parsers/tiled/BuildTilesetIndex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$parsers$tiled$BuildTilesetIndex\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n/**\r\n * Master list of tiles -> x, y, index in tileset.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Tiled.BuildTilesetIndex\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Tilemaps.MapData} mapData - [description]\r\n *\r\n * @return {array} [description]\r\n */\r\nvar BuildTilesetIndex = function (mapData)\r\n{\r\n    var tiles = [];\r\n\r\n    for (var i = 0; i < mapData.tilesets.length; i++)\r\n    {\r\n        var set = mapData.tilesets[i];\r\n\r\n        var x = set.tileMargin;\r\n        var y = set.tileMargin;\r\n\r\n        var count = 0;\r\n        var countX = 0;\r\n        var countY = 0;\r\n\r\n        for (var t = set.firstgid; t < set.firstgid + set.total; t++)\r\n        {\r\n            //  Can add extra properties here as needed\r\n            tiles[t] = [ x, y, i ];\r\n\r\n            x += set.tileWidth + set.tileSpacing;\r\n\r\n            count++;\r\n\r\n            if (count === set.total)\r\n            {\r\n                break;\r\n            }\r\n\r\n            countX++;\r\n\r\n            if (countX === set.columns)\r\n            {\r\n                x = set.tileMargin;\r\n                y += set.tileHeight + set.tileSpacing;\r\n\r\n                countX = 0;\r\n                countY++;\r\n\r\n                if (countY === set.rows)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return tiles;\r\n};\r\n\r\nmodule.exports = BuildTilesetIndex;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","BuildTilesetIndex","mapData","tiles","i","tilesets","length","set","x","tileMargin","y","count","countX","countY","t","firstgid","total","tileWidth","tileSpacing","columns","tileHeight","rows"]
}
