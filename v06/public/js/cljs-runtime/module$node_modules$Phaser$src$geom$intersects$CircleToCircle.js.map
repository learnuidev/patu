{
"version":3,
"file":"module$node_modules$Phaser$src$geom$intersects$CircleToCircle.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO1H,IAAIC,gBAAkBH,OAAA,CAAQ,8DAAR,CAkBtBC,OAAAC,QAAA,CALqBE,QAAS,CAACC,OAAD,CAAUC,OAAV,CAC9B,CACI,MAAQH,gBAAA,CAAgBE,OAAAE,EAAhB,CAA2BF,OAAAG,EAA3B,CAAsCF,OAAAC,EAAtC,CAAiDD,OAAAE,EAAjD,CAAR,EAAwEH,OAAAI,OAAxE,CAAyFH,OAAAG,OAD7F,CArB0H;",
"sources":["node_modules/Phaser/src/geom/intersects/CircleToCircle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$intersects$CircleToCircle\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar DistanceBetween = require('../../math/distance/DistanceBetween');\r\n\r\n/**\r\n * Checks if two Circles intersect.\r\n *\r\n * @function Phaser.Geom.Intersects.CircleToCircle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circleA - The first Circle to check for intersection.\r\n * @param {Phaser.Geom.Circle} circleB - The second Circle to check for intersection.\r\n *\r\n * @return {boolean} `true` if the two Circles intersect, otherwise `false`.\r\n */\r\nvar CircleToCircle = function (circleA, circleB)\r\n{\r\n    return (DistanceBetween(circleA.x, circleA.y, circleB.x, circleB.y) <= (circleA.radius + circleB.radius));\r\n};\r\n\r\nmodule.exports = CircleToCircle;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","DistanceBetween","CircleToCircle","circleA","circleB","x","y","radius"]
}
