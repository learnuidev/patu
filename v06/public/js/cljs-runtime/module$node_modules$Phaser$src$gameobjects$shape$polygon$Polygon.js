shadow$provide.module$node_modules$Phaser$src$gameobjects$shape$polygon$Polygon=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$gameobjects$shape$polygon$PolygonRender");exports=require("module$node_modules$Phaser$src$utils$Class");var Earcut=require("module$node_modules$Phaser$src$geom$polygon$Earcut"),GetAABB=require("module$node_modules$Phaser$src$geom$polygon$GetAABB"),GeomPolygon=require("module$node_modules$Phaser$src$geom$polygon$Polygon"),Shape=require("module$node_modules$Phaser$src$gameobjects$shape$Shape"),
Smooth=require("module$node_modules$Phaser$src$geom$polygon$Smooth");require=new exports({Extends:Shape,Mixins:[global],initialize:function(scene,x,y,points,fillColor,fillAlpha){void 0===x&&(x=0);void 0===y&&(y=0);Shape.call(this,scene,"Polygon",new GeomPolygon(points));scene=GetAABB(this.geom);this.setPosition(x,y);this.setSize(scene.width,scene.height);void 0!==fillColor&&this.setFillStyle(fillColor,fillAlpha);this.updateDisplayOrigin();this.updateData()},smooth:function(iterations){void 0===iterations&&
(iterations=1);for(var i=0;i<iterations;i++)Smooth(this.geom);return this.updateData()},updateData:function(){for(var path=[],points=this.geom.points,i=0;i<points.length;i++)path.push(points[i].x,points[i].y);path.push(points[0].x,points[0].y);this.pathIndexes=Earcut(path);this.pathData=path;return this}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$shape$polygon$Polygon.js.map
