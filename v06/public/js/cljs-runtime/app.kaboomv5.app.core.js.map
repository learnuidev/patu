{"version":3,"sources":["app/kaboomv5/app/core.cljs"],"mappings":"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","names":["app.kaboomv5.app.core/mouse-pos","cljs.core/deref","app.kaboomv5.app.state/app-state","app.kaboomv5.app.core/gl","app.kaboomv5.app.core/mouse-clicked?","cljs.core._EQ_","app.kaboomv5.app.core/mouse-down?","app.kaboomv5.app.core/mouse-released?","app.kaboomv5.app.core/key-pressed?","id","state","cljs.core.get_in","app.kaboomv5.app.core/key-pressed-rep?","app.kaboomv5.app.core/key-down?","app.kaboomv5.app.core/key-released?","app.kaboomv5.app.core/char-inputted","app.kaboomv5.app.core/dt","app.kaboomv5.app.core/time!","app.kaboomv5.app.core/fps","app.kaboomv5.app.core/screenshot","var_args","G__119557","app.kaboomv5.app.core/cursor","js/Error","c","app.kaboomv5.app.core/update-state!","t","delta","cljs.core.assoc","app.kaboomv5.app.core/update-app-state","real-time","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core/not","app.kaboomv5.app.core/run","f","frame","js/requestAnimationFrame","app.kaboomv5.app.core/quit","js/cancelAnimationFrame","app.kaboomv5.app.core/focused?","js/document.activeElement","app.kaboomv5.app.core/focus","p__119558","map__119559","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","app.kaboomv5.app.core/init!","canvas","config","app.kaboomv5.app.init.init_canvas","app.kaboomv5.app.init/init-gl-state","app.kaboomv5.app.utils/set-fullscreen","app.kaboomv5.app.events/reg-events"],"sourcesContent":["(ns app.kaboomv5.app.core\n  (:require [app.kaboomv5.math.core :as math]\n            [app.kaboom.patu.utils :refer [js-get js-set!]]\n            [app.kaboomv5.app.state :refer [app-state key-map]]\n            [app.kaboomv5.app.events :refer [reg-events]]\n            [app.kaboomv5.app.utils :refer [set-fullscreen]]\n            [app.kaboomv5.app.init :refer [init-canvas init-gl-state]]))\n\n(defn mouse-pos []\n  (:mouse-pos @app-state))\n\n(defn gl []\n  (:gl @app-state))\n(defn mouse-clicked? []\n  (= :pressed (:mouse-state @app-state)))\n\n(defn mouse-down? []\n  (or (mouse-clicked?)\n      (= :down (:mouse-state @app-state))))\n\n(defn mouse-released? []\n  (= :released (:mouse-state @app-state)))\n\n(defn key-pressed? [id]\n  (let [state (get-in @app-state [:key-states id])]\n    (= state :pressed)))\n\n(defn key-pressed-rep? [id]\n  (let [state (get-in @app-state [:key-states id])]\n    (or (= state :pressed)\n        (= state :rpressed))))\n\n(defn key-down? [id]\n  (let [state (get-in @app-state [:key-states id])]\n    (or (key-pressed-rep? id)\n        (= state :down))))\n(comment\n  (key-pressed? :left)\n  (key-down? :c))\n\n(defn key-released? [id]\n  (= :released (get-in @app-state [:key-states id])))\n\n(defn char-inputted []\n  (:char-inputted @app-state))\n\n(defn dt []\n  (:dt @app-state))\n\n(defn time! []\n  (:time @app-state))\n\n(defn fps []\n  (:fps @app-state))\n\n(defn screenshot []\n  (.toDataURL (:canvas @app-state)))\n\n(comment\n  (screenshot))\n(defn cursor\n  ([] (.. (:canvas @app-state) -style -cursor))\n  ([c] (set! (.. (:canvas @app-state) -style -cursor) c)))\n\n;; ===\n(defn update-state! [state t]\n  (let [delta (- (/ t 1000) (:real-time @app-state))]\n    (-> state\n        (assoc :dt delta)\n        (assoc :time (+ delta (:time state))))))\n        ; (update :fps-buf conj (/ 1 delta)))))\n\n(defn update-app-state [t]\n  (let [real-time (/ t 1000)]\n    (swap! app-state assoc\n           :real-time real-time)\n    (when (not (:skip-time? @app-state)))\n      ; (swap! app-state #(update-state! % t)))\n      ; (println @app-state))\n    (swap! app-state assoc :skip-time? false))) ;; set to true and see what happens, see console for log\n      ; (println \"DO SHIT HERE\"))))\n\n\n(defn run [f]\n  (let [frame (fn frame [t]\n                (update-app-state t)\n                (f)\n                (js/requestAnimationFrame frame)\n                (when (:stopped? @app-state)\n                  (swap! app-state assoc :loop-id (js/requestAnimationFrame frame))))]\n    (swap! app-state assoc :loop-id (js/requestAnimationFrame frame)))) ;; runs once\n\n(comment\n  (js/console.log loop-id))\n(comment\n  (:loop-id  @app-state))\n;;\n(defn quit []\n  (js/cancelAnimationFrame (:loop-id @app-state))\n  (swap! app-state assoc :stopped? true))\n\n(defn focused? []\n  (= js/document.activeElement (:canvas @app-state)))\n\n(defn focus []\n  (.focus (:canvas @app-state)))\n\n;; === Init Function ===\n(defn init!\n  [{:keys [canvas] :as config}]\n  (init-canvas canvas config)\n  (init-gl-state canvas)\n  (set-fullscreen config)\n  (reg-events (:canvas @app-state)))\n"]}