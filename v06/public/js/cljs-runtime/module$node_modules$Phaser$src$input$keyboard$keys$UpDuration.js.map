{
"version":3,
"file":"module$node_modules$Phaser$src$input$keyboard$keys$UpDuration.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0B1HD,MAAAC,QAAA,CAPiBC,QAAS,CAACC,GAAD,CAAMC,QAAN,CAC1B,CACqBC,IAAAA,EAAjB,GAAID,QAAJ,GAA8BA,QAA9B,CAAyC,EAAzC,CAEA,OAAQD,IAAAG,KAAR,EAAoBH,GAAAC,SAApB,CAAmCA,QAHvC,CApB0H;",
"sources":["node_modules/Phaser/src/input/keyboard/keys/UpDuration.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$input$keyboard$keys$UpDuration\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Returns `true` if the Key was released within the `duration` value given, or `false` if it either isn't up,\r\n * or was released longer ago than then given duration.\r\n *\r\n * @function Phaser.Input.Keyboard.UpDuration\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Input.Keyboard.Key} key - The Key object to test.\r\n * @param {integer} [duration=50] - The duration, in ms, within which the key must have been released.\r\n *\r\n * @return {boolean} `true` if the Key was released within `duration` ms, otherwise `false`.\r\n */\r\nvar UpDuration = function (key, duration)\r\n{\r\n    if (duration === undefined) { duration = 50; }\r\n\r\n    return (key.isUp && key.duration < duration);\r\n};\r\n\r\nmodule.exports = UpDuration;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","UpDuration","key","duration","undefined","isUp"]
}
