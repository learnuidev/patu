{
"version":3,
"file":"module$node_modules$$formatjs$intl$src$list.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAExGC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,WAAA,CAAqB,IAAK,EAC1B,KAAIC,QAAUP,OAAA,CAAQ,8CAAR,CAAd,CACIQ,qBAAuBR,OAAA,CAAQ,8CAAR,CAD3B,CAEIS,QAAUT,OAAA,CAAQ,8CAAR,CAFd,CAGIU,oBAAsB,CACtB,eADsB,CAEtB,MAFsB,CAGtB,OAHsB,CAH1B,CAQIC,IAAMC,IAAAD,IAAA,EA8CVT,QAAAI,WAAA,CA1CAA,QAAmB,CAACO,EAAD,CAAKC,aAAL;AAAoBC,MAApB,CAA4BC,OAA5B,CAAqC,CAAA,IAChDC,OAASJ,EAAAI,OAAWC,GAAAA,CAAUL,EAAAK,QAClB,KAAK,EAArB,GAAIF,OAAJ,GAA0BA,OAA1B,CAAoC,EAApC,CACiBG,KAAAC,WACjB,EACIF,EAAA,CAAQ,IAAIV,oBAAAa,YAAJ,CAAqC,+GAArC,CAAwJ,kBAAxJ,CAAR,CAEAC,QAAAA,CAAkBf,OAAAgB,YAAA,CAAoBP,OAApB,CAA6BN,mBAA7B,CACtB,IAAI,CACA,IAAIc,aAAe,EAAnB,CACIC,iBAAmBV,MAAAW,IAAA,CAAW,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAC9C,MAAiB,QAAjB,GAAI,MAAOD,EAAX,EACQE,CAEGA,CAhBZlB,GAgBYkB,CAhBN,GAgBMA,CAFgBD,CAEhBC,CAhBI,GAgBJA,CAhBUlB,GAgBVkB,CADPL,YAAA,CAAaK,CAAb,CACOA,CADYF,CACZE,CAAAA,CAHX,EAKOC,MAAA,CAAOH,CAAP,CANuC,CAA3B,CAQvB,OAAKxB,OAAA4B,KAAA,CAAYP,YAAZ,CAAAQ,OAAL;AAGYlB,aAAA,CAAcG,MAAd,CAAsBK,OAAtB,CAAAW,cAAAC,CAAqDT,gBAArDS,CACLC,OAAA,CAAa,QAAS,CAACC,GAAD,CAAMC,EAAN,CAAU,CAC/BC,EAAAA,CAAMD,EAAAhC,MACNmB,aAAA,CAAac,EAAb,CAAJ,CACIF,GAAAG,KAAA,CAASf,YAAA,CAAac,EAAb,CAAT,CADJ,CAGwC,QAAnC,GAAI,MAAOF,IAAA,CAAIA,GAAAJ,OAAJ,CAAiB,CAAjB,CAAX,CACDI,GAAA,CAAIA,GAAAJ,OAAJ,CAAiB,CAAjB,CADC,EACsBM,EADtB,CAIDF,GAAAG,KAAA,CAASD,EAAT,CAEJ,OAAOF,IAX4B,CAAhC,CAYJ,EAZI,CAJP,CACWtB,aAAA,CAAcG,MAAd,CAAsBK,OAAtB,CAAAkB,OAAA,CAA8Cf,gBAA9C,CAXX,CA4BJ,MAAOgB,CAAP,CAAU,CACNvB,EAAA,CAAQ,IAAIT,OAAAiC,UAAJ,CAAsB,cAAtB,CAAyD,wBAAzD,CAAmFD,CAAnF,CAAR,CADM,CAIV,MAAO1B,OAxC6C,CAhBgD;",
"sources":["node_modules/@formatjs/intl/src/list.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$intl$src$list\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatList = void 0;\nvar utils_1 = require(\"./utils\");\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar error_1 = require(\"./error\");\nvar LIST_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return now + \"_\" + i + \"_\" + now;\n}\nfunction formatList(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new intl_messageformat_1.FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = utils_1.filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        if (!Object.keys(richValues_1).length) {\n            return getListFormat(locale, filteredOptions).format(serializedValues);\n        }\n        var parts = getListFormat(locale, filteredOptions).formatToParts(serializedValues);\n        return parts.reduce(function (all, el) {\n            var val = el.value;\n            if (richValues_1[val]) {\n                all.push(richValues_1[val]);\n            }\n            else if (typeof all[all.length - 1] === 'string') {\n                all[all.length - 1] += val;\n            }\n            else {\n                all.push(val);\n            }\n            return all;\n        }, []);\n    }\n    catch (e) {\n        onError(new error_1.IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting list.', e));\n    }\n    // @ts-ignore\n    return values;\n}\nexports.formatList = formatList;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","formatList","utils_1","intl_messageformat_1","error_1","LIST_FORMAT_OPTIONS","now","Date","_a","getListFormat","values","options","locale","onError","Intl","ListFormat","FormatError","filteredOptions","filterProps","richValues_1","serializedValues","map","v","i","id","String","keys","length","formatToParts","parts","reduce","all","el","val","push","format","e","IntlError"]
}
