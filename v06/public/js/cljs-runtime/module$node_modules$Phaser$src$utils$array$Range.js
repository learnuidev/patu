shadow$provide.module$node_modules$Phaser$src$utils$array$Range=function(global,require,module,exports){var GetValue=require("module$node_modules$Phaser$src$utils$object$GetValue"),Shuffle=require("module$node_modules$Phaser$src$utils$array$Shuffle");module.exports=function(a,b$jscomp$0,options){var max=GetValue(options,"max",0),qty=GetValue(options,"qty",1),random=GetValue(options,"random",!1),randomB=GetValue(options,"randomB",!1),repeat=GetValue(options,"repeat",0);options=GetValue(options,"yoyo",
!1);var out=[];randomB&&Shuffle(b$jscomp$0);-1===repeat&&(0===max?repeat=0:(repeat=a.length*b$jscomp$0.length*qty,options&&(repeat*=2),repeat=Math.ceil(max/repeat)));for(randomB=0;randomB<=repeat;randomB++){var chunk=a;for(var b=b$jscomp$0,qty$jscomp$0=qty,out$jscomp$0=[],aIndex=0;aIndex<chunk.length;aIndex++)for(var bIndex=0;bIndex<b.length;bIndex++)for(var i=0;i<qty$jscomp$0;i++)out$jscomp$0.push({a:chunk[aIndex],b:b[bIndex]});chunk=out$jscomp$0;random&&Shuffle(chunk);out=out.concat(chunk);options&&
(chunk.reverse(),out=out.concat(chunk))}max&&out.splice(max);return out}}
//# sourceMappingURL=module$node_modules$Phaser$src$utils$array$Range.js.map
