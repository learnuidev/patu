{
"version":3,
"file":"module$node_modules$Phaser$src$physics$arcade$SeparateX.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOpH,IAAIC,YAAcH,OAAA,CAAQ,2DAAR,CA0ElBC,OAAAC,QAAA,CA3DgBE,QAAS,CAACC,KAAD,CAAQC,KAAR,CAAeC,WAAf,CAA4BC,IAA5B,CACzB,CACQC,IAAAA,CAAUN,WAAA,CAAYE,KAAZ,CAAmBC,KAAnB,CAA0BC,WAA1B,CAAuCC,IAAvC,CAGd,IAAID,WAAJ,EAA+B,CAA/B,GAAmBE,IAAnB,EAAqCJ,KAAAK,UAArC,EAAwDJ,KAAAI,UAAxD,EAA4EL,KAAAM,gBAA5E,EAAqGL,KAAAK,gBAArG,CAGI,MAAoB,EAApB,GAAQF,IAAR,EAA2BJ,KAAAO,SAA3B,EAA6CN,KAAAM,SAI7CC,YAAAA,CAAKR,KAAAS,SAAAC,EACT,KAAIC,GAAKV,KAAAQ,SAAAC,EAEJV;KAAAK,UAAL,EAAyBJ,KAAAI,UAAzB,CAiBUL,KAAAK,UAAL,EAaDJ,KAAAS,EAIA,EAJWN,IAIX,CAHAH,KAAAQ,SAAAC,EAGA,CAHmBF,WAGnB,CAHwBG,EAGxB,CAH6BV,KAAAW,OAAAF,EAG7B,CAAIV,KAAAa,MAAJ,GAEIZ,KAAAa,EAFJ,GAEgBd,KAAAc,EAFhB,CAE0Bd,KAAAe,KAAAD,EAF1B,EAE0Cd,KAAAgB,SAAAF,EAF1C,CAjBC,GAEDd,KAAAU,EAIA,EAJWN,IAIX,CAHAJ,KAAAS,SAAAC,EAGA,CAHmBC,EAGnB,CAHwBH,WAGxB,CAH6BR,KAAAY,OAAAF,EAG7B,CAAIT,KAAAY,MAAJ,GAEIb,KAAAc,EAFJ,GAEgBb,KAAAa,EAFhB,CAE0Bb,KAAAc,KAAAD,EAF1B,EAE0Cb,KAAAe,SAAAF,EAF1C,CANC,CAjBL,EAEIV,IAaA,EAbW,EAaX,CAXAJ,KAAAU,EAWA,EAXWN,IAWX,CAVAH,KAAAS,EAUA,EAVWN,IAUX,CARIa,IAQJ,CARUC,IAAAC,KAAA,CAAWR,EAAX,CAAgBA,EAAhB,CAAqBV,KAAAmB,KAArB,CAAmCpB,KAAAoB,KAAnC,CAQV,EARkE,CAAN,CAACT,EAAD,CAAW,CAAX,CAAe,EAQ3E,EAPIU,WAOJ,CAPUH,IAAAC,KAAA,CAAWX,WAAX,CAAgBA,WAAhB,CAAqBR,KAAAoB,KAArB,CAAmCnB,KAAAmB,KAAnC,CAOV,EAPkE,CAAN,CAACZ,WAAD,CAAW,CAAX,CAAe,EAO3E,EANIc,EAMJ,CANwB,EAMxB,EANWL,IAMX,CANiBI,WAMjB;AADArB,KAAAS,SAAAC,EACA,CADmBY,EACnB,EAJAL,IAIA,CAJOK,EAIP,EAD+BtB,KAAAY,OAAAF,EAC/B,CAAAT,KAAAQ,SAAAC,EAAA,CAAmBY,EAAnB,EAHAD,WAGA,CAHOC,EAGP,EAA+BrB,KAAAW,OAAAF,EAfnC,CAyCA,OAAO,CAAA,CAvDX,CAvBoH;",
"sources":["node_modules/Phaser/src/physics/arcade/SeparateX.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$arcade$SeparateX\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar GetOverlapX = require('./GetOverlapX');\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Physics.Arcade.SeparateX\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.Body} body1 - [description]\r\n * @param {Phaser.Physics.Arcade.Body} body2 - [description]\r\n * @param {boolean} overlapOnly - [description]\r\n * @param {number} bias - [description]\r\n *\r\n * @return {boolean} [description]\r\n */\r\nvar SeparateX = function (body1, body2, overlapOnly, bias)\r\n{\r\n    var overlap = GetOverlapX(body1, body2, overlapOnly, bias);\r\n\r\n    //  Can't separate two immovable bodies, or a body with its own custom separation logic\r\n    if (overlapOnly || overlap === 0 || (body1.immovable && body2.immovable) || body1.customSeparateX || body2.customSeparateX)\r\n    {\r\n        //  return true if there was some overlap, otherwise false\r\n        return (overlap !== 0) || (body1.embedded && body2.embedded);\r\n    }\r\n\r\n    //  Adjust their positions and velocities accordingly (if there was any overlap)\r\n    var v1 = body1.velocity.x;\r\n    var v2 = body2.velocity.x;\r\n\r\n    if (!body1.immovable && !body2.immovable)\r\n    {\r\n        overlap *= 0.5;\r\n\r\n        body1.x -= overlap;\r\n        body2.x += overlap;\r\n\r\n        var nv1 = Math.sqrt((v2 * v2 * body2.mass) / body1.mass) * ((v2 > 0) ? 1 : -1);\r\n        var nv2 = Math.sqrt((v1 * v1 * body1.mass) / body2.mass) * ((v1 > 0) ? 1 : -1);\r\n        var avg = (nv1 + nv2) * 0.5;\r\n\r\n        nv1 -= avg;\r\n        nv2 -= avg;\r\n\r\n        body1.velocity.x = avg + nv1 * body1.bounce.x;\r\n        body2.velocity.x = avg + nv2 * body2.bounce.x;\r\n    }\r\n    else if (!body1.immovable)\r\n    {\r\n        body1.x -= overlap;\r\n        body1.velocity.x = v2 - v1 * body1.bounce.x;\r\n\r\n        //  This is special case code that handles things like vertically moving platforms you can ride\r\n        if (body2.moves)\r\n        {\r\n            body1.y += (body2.y - body2.prev.y) * body2.friction.y;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        body2.x += overlap;\r\n        body2.velocity.x = v1 - v2 * body2.bounce.x;\r\n\r\n        //  This is special case code that handles things like vertically moving platforms you can ride\r\n        if (body1.moves)\r\n        {\r\n            body2.y += (body1.y - body1.prev.y) * body1.friction.y;\r\n        }\r\n    }\r\n\r\n    //  If we got this far then there WAS overlap, and separation is complete, so return true\r\n    return true;\r\n};\r\n\r\nmodule.exports = SeparateX;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetOverlapX","SeparateX","body1","body2","overlapOnly","bias","overlap","immovable","customSeparateX","embedded","v1","velocity","x","v2","bounce","moves","y","prev","friction","nv1","Math","sqrt","mass","nv2","avg"]
}
