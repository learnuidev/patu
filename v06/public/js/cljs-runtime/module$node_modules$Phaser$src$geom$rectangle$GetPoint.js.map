{
"version":3,
"file":"module$node_modules$Phaser$src$geom$rectangle$GetPoint.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOnH,IAAIC,UAAYH,OAAA,CAAQ,yDAAR,CAAhB,CACII,MAAQJ,OAAA,CAAQ,iDAAR,CA+DZC,OAAAC,QAAA,CA/CeG,QAAS,CAACC,SAAD,CAAYC,QAAZ,CAAsBC,GAAtB,CACxB,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,IAAIJ,KAAnC,CAEA,IAAgB,CAAhB,EAAIG,QAAJ,EAAiC,CAAjC,EAAqBA,QAArB,CAKI,MAHAC,IAAAE,EAGOF,CAHCF,SAAAI,EAGDF,CAFPA,GAAAG,EAEOH,CAFCF,SAAAK,EAEDH,CAAAA,GAGX,KAAII,EAAIT,SAAA,CAAUG,SAAV,CAAJM,CAA2BL,QAEhB,GAAf,CAAIA,QAAJ,EAEIK,CAEA,EAFMN,SAAAO,MAEN,CAFwBP,SAAAQ,OAExB,CAAIF,CAAJ,EAASN,SAAAO,MAAT;CAGIL,GAAAE,EACA,CADQJ,SAAAS,MACR,CAD0BH,CAC1B,CAAAJ,GAAAG,EAAA,CAAQL,SAAAU,OAJZ,GASIR,GAAAE,EACA,CADQJ,SAAAI,EACR,CAAAF,GAAAG,EAAA,CAAQL,SAAAU,OAAR,EAA4BJ,CAA5B,CAAgCN,SAAAO,MAAhC,CAVJ,CAJJ,EAiBSD,CAAJ,EAASN,SAAAO,MAAT,EAGDL,GAAAE,EACA,CADQJ,SAAAI,EACR,CADsBE,CACtB,CAAAJ,GAAAG,EAAA,CAAQL,SAAAK,EAJP,GASDH,GAAAE,EACA,CADQJ,SAAAS,MACR,CAAAP,GAAAG,EAAA,CAAQL,SAAAK,EAAR,EAAuBC,CAAvB,CAA2BN,SAAAO,MAA3B,CAVC,CAaL,OAAOL,IA3CX,CAzBmH;",
"sources":["node_modules/Phaser/src/geom/rectangle/GetPoint.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$rectangle$GetPoint\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Perimeter = require('./Perimeter');\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Position is a value between 0 and 1 where 0 = the top-left of the rectangle and 0.5 = the bottom right.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - [description]\r\n * @param {number} position - [description]\r\n * @param {(Phaser.Geom.Point|object)} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\r\nvar GetPoint = function (rectangle, position, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    if (position <= 0 || position >= 1)\r\n    {\r\n        out.x = rectangle.x;\r\n        out.y = rectangle.y;\r\n\r\n        return out;\r\n    }\r\n\r\n    var p = Perimeter(rectangle) * position;\r\n\r\n    if (position > 0.5)\r\n    {\r\n        p -= (rectangle.width + rectangle.height);\r\n\r\n        if (p <= rectangle.width)\r\n        {\r\n            //  Face 3\r\n            out.x = rectangle.right - p;\r\n            out.y = rectangle.bottom;\r\n        }\r\n        else\r\n        {\r\n            //  Face 4\r\n            out.x = rectangle.x;\r\n            out.y = rectangle.bottom - (p - rectangle.width);\r\n        }\r\n    }\r\n    else if (p <= rectangle.width)\r\n    {\r\n        //  Face 1\r\n        out.x = rectangle.x + p;\r\n        out.y = rectangle.y;\r\n    }\r\n    else\r\n    {\r\n        //  Face 2\r\n        out.x = rectangle.right;\r\n        out.y = rectangle.y + (p - rectangle.width);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetPoint;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Perimeter","Point","GetPoint","rectangle","position","out","undefined","x","y","p","width","height","right","bottom"]
}
