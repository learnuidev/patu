{"version":3,"sources":["re_frame/interop.cljs"],"mappings":";;;;;;AAMA,AAAA,AAAMA,AACCC;AADP,AAEM,AAAA,AAACC,AAAcC,AAAiBF;;AAEtC,AAAKG,AAAUC;AAEf,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAKC;AAEL,AAAKC,AAAaC;AAMlB;;;AAAcC,AAA4CC;AAE1D,AAAA,AAAMC,AAAOC;AAAb,AACE,AAACC,AAAkBD;;AAErB,AAAA,AAAME,AAAQF;AAAd,AAKE,AAAA,AAAA,AAAA,AAA4CA;AAA5C,AAAA,AAAA,AAAA,AAAAG,AAAA,AAA4CH;AAA5C;;AAAA,AAAA,AAAA,AAA4CA;AAA5C,AAAAI,AAAYC,AAAgCL;;AAA5C;;;;AAAA,AAAAI,AAAYC,AAAgCL;;;AAE9C,AAAA,AAAMM,AAAQN;AAAd,AACE,AAAA,AAAA,AAAA,AAAmBA;AAAnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAA,AAAmBH,AAAAA;AAAnB;;AAAA,AAAA,AAAA,AAAmBA;AAAnB,AAAAI,AAAYG,AAAOP;;AAAnB;;;;AAAA,AAAAI,AAAYG,AAAOP;;;AAGrB,AAAA,AAAMQ,AAAeC;AAArB,AACE,AAACC,AAA4BD;;AAE/B,AAAA,AAAME,AAAiBC,AAAQH;AAA/B,AACE,AAACI,AAA8BD,AAAQH;;AAEzC,AAAA,AAAMK,AAAUF;AAAhB,AACE,AAACG,AAAuBH;;AAE1B,AAAA,AAAMI,AAAcP,AAAEQ;AAAtB,AACE,AAACC,AAAcT,AAAEQ;;AAEnB,AAAA,AAAME;AAAN,AACE,AAAI,AACC,AAAAC,AACA,AAAAA,AAAAC;AACH,AAACA;;AACD,AAACC;;;AAEL;;;;AAAA,AAAMC,AAGHC;AAHH,AAQE,AAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAArB,AAAA,AAAA,AAAA,AAAA,AAA6CqB,AAAAA;AAAnD,AACE,AAAK,AAAAC,AAAOE;AAAPD,AAAiBF;AAAjB,AAAA,AAAA,AAAAC,AAAAA,AAAAC,AAAAD,AAAAC,AACEE,AAAAA;AADF;;AAAA,AAAA,AAAAH,AAAAA,AAAAC,AAAAD,AAAAC,AAEEG,AAAAA;AAFF;;AAAA,AAAA,AAAAJ,AAAAA,AAAAC,AAAAD,AAAAC,AAGEI,AAAAA;AAHF;;AAAA,AAAA,AAAAL,AAAAA,AAAAC,AAAAD,AAAAC,AAIEK,AAAAA;AAJF;;AAAA;;;;;AAMA,AAACC,AAAKR;;AAPb","names":["re-frame.interop/on-load","listener","goog.events/listen","js/window","re-frame.interop/next-tick","js/goog.async.nextTick","cljs.core.into","cljs.core/PersistentQueue","re-frame.interop/empty-queue","re-frame.interop/after-render","reagent.core/after-render","re-frame.interop/debug-enabled?","goog/DEBUG","re-frame.interop/ratom","x","reagent.core.atom","re-frame.interop/ratom?","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","reagent.ratom/IReactiveAtom","re-frame.interop/deref?","cljs.core/IDeref","re-frame.interop/make-reaction","f","reagent.ratom/make-reaction","re-frame.interop/add-on-dispose!","a-ratom","reagent.ratom/add-on-dispose!","re-frame.interop/dispose!","reagent.ratom/dispose!","re-frame.interop/set-timeout!","ms","js/setTimeout","re-frame.interop/now","js/performance","js/performance.now","js/Date.now","re-frame.interop/reagent-id","reactive-val","pred__27632","expr__27633","cljs.core/instance?","reagent.ratom/RAtom","reagent.ratom/RCursor","reagent.ratom/Reaction","reagent.ratom/Track","cljs.core/hash"],"sourcesContent":["(ns re-frame.interop\n  (:require [goog.async.nextTick]\n            [goog.events :as events]\n            [reagent.core]\n            [reagent.ratom]))\n\n(defn on-load\n      [listener]\n      (events/listen js/window \"load\" listener))\n\n(def next-tick goog.async.nextTick)\n\n(def empty-queue #queue [])\n\n(def after-render reagent.core/after-render)\n\n;; Make sure the Google Closure compiler sees this as a boolean constant,\n;; otherwise Dead Code Elimination won't happen in `:advanced` builds.\n;; Type hints have been liberally sprinkled.\n;; https://developers.google.com/closure/compiler/docs/js-for-compiler\n(def ^boolean debug-enabled? \"@define {boolean}\" ^boolean goog/DEBUG)\n\n(defn ratom [x]\n  (reagent.core/atom x))\n\n(defn ratom? [x]\n  ;; ^:js suppresses externs inference warnings by forcing the compiler to\n  ;; generate proper externs. Although not strictly required as\n  ;; reagent.ratom/IReactiveAtom is not JS interop it appears to be harmless.\n  ;; See https://shadow-cljs.github.io/docs/UsersGuide.html#infer-externs\n  (satisfies? reagent.ratom/IReactiveAtom ^js x))\n\n(defn deref? [x]\n  (satisfies? IDeref x))\n\n\n(defn make-reaction [f]\n  (reagent.ratom/make-reaction f))\n\n(defn add-on-dispose! [a-ratom f]\n  (reagent.ratom/add-on-dispose! a-ratom f))\n\n(defn dispose! [a-ratom]\n  (reagent.ratom/dispose! a-ratom))\n\n(defn set-timeout! [f ms]\n  (js/setTimeout f ms))\n\n(defn now []\n  (if (and\n       (exists? js/performance)\n       (exists? js/performance.now))\n    (js/performance.now)\n    (js/Date.now)))\n\n(defn reagent-id\n  \"Produces an id for reactive Reagent values\n  e.g. reactions, ratoms, cursors.\"\n  [reactive-val]\n  ;; ^:js suppresses externs inference warnings by forcing the compiler to\n  ;; generate proper externs. Although not strictly required as\n  ;; reagent.ratom/IReactiveAtom is not JS interop it appears to be harmless.\n  ;; See https://shadow-cljs.github.io/docs/UsersGuide.html#infer-externs\n  (when (implements? reagent.ratom/IReactiveAtom ^js reactive-val)\n    (str (condp instance? reactive-val\n           reagent.ratom/RAtom \"ra\"\n           reagent.ratom/RCursor \"rc\"\n           reagent.ratom/Reaction \"rx\"\n           reagent.ratom/Track \"tr\"\n           \"other\")\n         (hash reactive-val))))\n"]}