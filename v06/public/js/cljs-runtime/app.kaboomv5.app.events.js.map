{"version":3,"sources":["app/kaboomv5/app/events.cljs"],"mappings":"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","names":["app.kaboomv5.app.events/prevent-default-keys","app.kaboomv5.app.events/mousemove-handler","evt","off-x","off-y","mouse-pos","G__26628","G__26629","app.kaboomv5.math.core/scale","app.kaboomv5.math.core/vec2","cljs.core/deref","app.kaboomv5.app.state/app-state","cljs.core.swap_BANG_","cljs.core/assoc","app.kaboomv5.app.events/mousedown-handler","app.kaboomv5.app.events/mouseup-handler","js/console.log","app.kaboomv5.app.events/touch-start-handler","t","G__26632","G__26633","state","cljs.core.assoc","app.kaboomv5.app.events/touch-move-handler","G__26636","G__26637","js/app","js/app.kaboomv5","js/app.kaboomv5.app","js/app.kaboomv5.app.events","js/app.kaboomv5.app.events.key-map","app.kaboomv5.app.events/key-map","app.kaboomv5.app.events/keydown-handler","event","key","k","cljs.core.get","cljs.core.keyword","cljs.core.println","cljs.core/contains?","cljs.core._EQ_","cljs.core.not_EQ_","cljs.core/update","cljs.core/conj","cljs.core/name","cljs.core/assoc-in","app.kaboomv5.app.events/keyup-handler","app.kaboomv5.app.events/visibility-handler","js/document","app.kaboomv5.app.events/reg-events","canvas"],"sourcesContent":["(ns app.kaboomv5.app.events\n  (:require [app.kaboomv5.math.core :as math]\n            [app.kaboom.patu.utils :refer [js-get js-set!]]\n            [app.kaboomv5.app.state :refer [app-state]]\n            [goog.events :as gevents]))\n\n;;\n(def prevent-default-keys\n  #{:space :left :right :up\n    :down :tab :f1 :f2 :f3\n    :f4 :f5 :f6 :f7 :f8 :f9\n    :f10 :f11})\n\n(comment\n  (contains? prevent-default-keys :space))\n;; 1 Mouse Events\n(defn mousemove-handler [evt]\n  (let [off-x (.-offsetX evt)\n        off-y (.-offsetY evt)\n        mouse-pos (math/scale (math/vec2 off-x off-y) (/ 1 (:scale @app-state)))]\n    (swap! app-state assoc :mouse-pos mouse-pos)))\n    ; (js/console.log \"offsetX: \" #js {:offsetX off-x\n    ;                                  :offsetY off-y})\n    ; (println (:mouse-pos @app-state))))\n\n(defn mousedown-handler [evt]\n  (swap! app-state assoc :mouse-state :pressed)\n  #_(js/console.log :pressed))\n(comment\n  (aget #js [12 3 4] 0))\n;;\n(defn mouseup-handler [evt]\n  (swap! app-state assoc :mouse-state :released)\n  (js/console.log :released))\n\n;; 2 Touch Events\n(defn touch-start-handler [evt]\n  (let [t (aget (.-touches evt) 0)\n        off-x (.clientX t)\n        off-y (.clientY t)\n        mouse-pos (math/scale (math/vec2 off-x off-y) (/ 1 (:scale @app-state)))]\n    (swap! app-state (fn [state]\n                       (-> state\n                           (assoc :mouse-pos mouse-pos)\n                           (assoc :mouse-state :pressed))))))\n(defn touch-move-handler [evt]\n  (let [t (aget (.-touches evt) 0)\n        off-x (.clientX t)\n        off-y (.clientY t)\n        mouse-pos (math/scale (math/vec2 off-x off-y) (/ 1 (:scale @app-state)))]\n    (swap! app-state assoc :mouse-pos mouse-pos)))\n\n;; 3. Key Events\n(defonce key-map {\"arrowleft\"  :left\n                  \"arrowright\" :right\n                  \"arrowup\"    :up\n                  \"arrowdown\"  :down\n                  \" \"          :space\n                  \"space\"      :space})\n\n(defn keydown-handler [event]\n  (let [key (.toLowerCase (.-key event))\n        k (get key-map key (keyword key))]\n    (println k)\n    (when (contains? prevent-default-keys k)\n      (.preventDefault event))\n    (when (and (= 1 (.-length key)) (not= \" \" key))\n      (swap! app-state update :char-inputted conj (name k)))\n    (when (= :space k)\n      (swap! app-state update :char-inputted conj \" \"))\n    ; (js/console.log \"REPEAT: \" (.-repeat event))\n    (if (.-repeat event)\n      (swap! app-state assoc-in [:key-states k] :rpressed)\n      (swap! app-state assoc-in [:key-states k] :pressed))))\n\n(comment\n  (nth (:char-inputted @app-state) 0)\n  (:p (:key-states @app-state)))\n(defn keyup-handler [event]\n  (let [key (.toLowerCase (.-key event))\n        k (get key-map key (keyword key))]\n    ; (js/console.log \"key Up\" (.-key event))\n    (swap! app-state assoc-in [:key-states k] :released)))\n\n(defn visibility-handler [event]\n  (let [state (.-visibilityState js/document)]\n    (when (= \"visible\" state)\n      (swap! app-state assoc :skip-time? true))))\n\n;;\n;; https://stackoverflow.com/questions/12886286/addeventlistener-for-keydown-on-canvas\n(defn reg-events [canvas]\n  ; (js/console.log \"CANVAS\" canvas)\n  (.setAttribute  canvas \"tabindex\" \"0\")\n  ;; Mouse Events (3)\n  (.addEventListener canvas \"mousemove\" mousemove-handler)\n  (.addEventListener canvas \"mousedown\" mousedown-handler)\n  (.addEventListener canvas \"mouseup\" mouseup-handler)\n  (.addEventListener canvas \"click\" #(js/console.log \"CLICKED yoo\")) ;; TODO\n  ;; Touch Events (2)\n  (.addEventListener canvas \"touchshart\" touch-start-handler)\n  (.addEventListener canvas \"touchmove\" touch-move-handler)\n  ;; Key Events\n  (.addEventListener canvas \"keydown\" keydown-handler)\n  (.addEventListener canvas \"keyup\" keyup-handler)\n  (.focus canvas)\n  (.addEventListener js/document \"visibilitychange\" visibility-handler))\n"]}