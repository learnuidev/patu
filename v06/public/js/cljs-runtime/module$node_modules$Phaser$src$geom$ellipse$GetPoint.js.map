{
"version":3,
"file":"module$node_modules$Phaser$src$geom$ellipse$GetPoint.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOjH,IAAIC,mBAAqBH,OAAA,CAAQ,gEAAR,CAAzB,CACII,YAAcJ,OAAA,CAAQ,iDAAR,CADlB,CAEIK,WAAaL,OAAA,CAAQ,2CAAR,CAFjB,CAGIM,MAAQN,OAAA,CAAQ,iDAAR,CA2BZC,OAAAC,QAAA,CATeK,QAAS,CAACC,OAAD,CAAUC,QAAV,CAAoBC,GAApB,CACxB,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,IAAIJ,KAAnC,CAEIM,SAAAA,CAAQR,WAAA,CAAYK,QAAZ;AAAsB,CAAtB,CAAyBJ,UAAAQ,IAAzB,CAEZ,OAAOV,mBAAA,CAAmBK,OAAnB,CAA4BI,QAA5B,CAAmCF,GAAnC,CALX,CA7BiH;",
"sources":["node_modules/Phaser/src/geom/ellipse/GetPoint.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$ellipse$GetPoint\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar CircumferencePoint = require('./CircumferencePoint');\r\nvar FromPercent = require('../../math/FromPercent');\r\nvar MATH_CONST = require('../../math/const');\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Returns a Point object containing the coordinates of a point on the circumference of the Ellipse\r\n * based on the given angle normalized to the range 0 to 1. I.e. a value of 0.5 will give the point\r\n * at 180 degrees around the circle.\r\n *\r\n * @function Phaser.Geom.Ellipse.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get the circumference point on.\r\n * @param {number} position - A value between 0 and 1, where 0 equals 0 degrees, 0.5 equals 180 degrees and 1 equals 360 around the ellipse.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An object to store the return values in. If not given a Point object will be created.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point, or point-like object, containing the coordinates of the point around the ellipse.\r\n */\r\nvar GetPoint = function (ellipse, position, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    var angle = FromPercent(position, 0, MATH_CONST.PI2);\r\n\r\n    return CircumferencePoint(ellipse, angle, out);\r\n};\r\n\r\nmodule.exports = GetPoint;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","CircumferencePoint","FromPercent","MATH_CONST","Point","GetPoint","ellipse","position","out","undefined","angle","PI2"]
}
