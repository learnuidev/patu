{"version":3,"sources":["devtools/reporter.cljs"],"mappings":";;;;AAKA,AAAA,AAAKA;AAIL,AAAA,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAMD,AAAwBS;AAA9B,AAAA,AAAAP,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAmCQ;AAAnC,AAAAP,AAAAD,AAAA,AAAA,AAA2CS;AAA3C,AACE,AAAMC,AAAQ,AAACC;AAAf,AACE,AAAA,AACE,AAAME,AAAQ,AAAI,AAAWC,AAASP,AACtB,AAAAQ,AAAI,AAAWR;AAAf,AAAA,AAAAQ;AAAAA;;AAAkBR;;AAClBA;AAFhB,AAAA,AAAA,AAAA,AAGMS,AAGY,AAAA,AAASH;AACrBI,AAAY,AAAA,AAAA,AAAW,AAACC,AAAmB,AAAA,AAAIV,AAAQ,AAAA,AAAA,AAAUA;AACjEW,AAAW,AAAI,AAAA,AAAA,AAAOV,AACTA,AACA,AAAA,AAAA,AAAA,AAAqDlB;AAVxE,AAWM6B,AAAaH,AAAYV,AAAEY;AAXjC,AAYE,AAAME,AAAgB,AAAA,AAAMX;AACtBY,AAAI,AAAA,AAAMZ;AACVa,AAAU,AAAA,AAAMb;AAFtB,AAGE,AAAQW;AAAR;AAAA,AAAA,AAAA,AAAAP,AAAA;;;AACA,AAAQQ;AAAR;AAAA,AAAA,AAAA,AAAAR,AAAA;;;AACA,AAAQS;AAAR;AAAA,AAAA,AAAA,AAAAT,AAAA;;;AACA,AAAQO,AAAgBX,AAAQM;;AAChC,AAAQM,AAAIZ,AAAQU;;AACpB,AAAOG,AAAUb;AArBvB,AAAAE,AAsBkBL;AAtBlB,AAuBI,AAAA,AAAQG,AAA+CH;;;AAzB/D,AAAA,AAAA,AAAMT;;AAAN;AAAA,AAAA,AAAA,AAAAI,AAAMJ;AAAN,AAAA,AAAAK,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAA,AAAAH,AAAAD;;;AAAA","names":["devtools.reporter/issues-url","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","devtools.reporter/report-internal-error!","p__25605","vec__25606","cljs.core.nth","seq25601","G__25602","cljs.core/first","cljs.core/next","self__4723__auto__","e","context","footer","console","devtools.context/get-console","e25609","message","js/Error","or__4126__auto__","header","context-msg","devtools.util/get-lib-info","footer-msg","details","group-collapsed","log","group-end"],"sourcesContent":["(ns devtools.reporter\n  (:require-macros [devtools.oops :refer [oget]])\n  (:require [devtools.util :as util]\n            [devtools.context :as context]))\n\n(def issues-url \"https://github.com/binaryage/cljs-devtools/issues\")\n\n; -- internal errors  -------------------------------------------------------------------------------------------------------\n\n(defn report-internal-error! [e & [context footer]]\n  (let [console (context/get-console)]\n    (try\n      (let [message (if (instance? js/Error e)\n                      (or (.-message e) e)\n                      e)\n            header #js [\"%cCLJS DevTools Error%c%s\"\n                        \"background-color:red;color:white;font-weight:bold;padding:0px 3px;border-radius:2px;\"\n                        \"color:red\"\n                        (str \" \" message)]\n            context-msg (str \"In \" (util/get-lib-info) (if context (str \", \" context \".\") \".\") \"\\n\\n\")\n            footer-msg (if (some? footer)\n                         footer\n                         (str \"\\n\\n\" \"---\\n\" \"Please report the issue here: \" issues-url))\n            details #js [context-msg e footer-msg]]\n        (let [group-collapsed (oget console \"groupCollapsed\")\n              log (oget console \"log\")\n              group-end (oget console \"groupEnd\")]\n          (assert group-collapsed)\n          (assert log)\n          (assert group-end)\n          (.apply group-collapsed console header)\n          (.apply log console details)\n          (.call group-end console)))\n      (catch :default e\n        (.error console \"FATAL: report-internal-error! failed\" e)))))\n"]}