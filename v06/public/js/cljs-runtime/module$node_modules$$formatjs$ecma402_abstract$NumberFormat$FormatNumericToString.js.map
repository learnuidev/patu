{
"version":3,
"file":"module$node_modules$$formatjs$ecma402_abstract$NumberFormat$FormatNumericToString.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,kFAAA,CAAsG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE9IC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,sBAAA,CAAgC,IAAK,EACrC,KAAIC,OAASP,OAAA,CAAQ,oDAAR,CAAb,CACIQ,iBAAmBR,OAAA,CAAQ,4EAAR,CADvB,CAEIS,QAAUT,OAAA,CAAQ,sDAAR,CAFd,CAGIU,aAAeV,OAAA,CAAQ,wEAAR,CAsCnBE;OAAAI,sBAAA,CAlCAA,QAA8B,CAACK,UAAD,CAAaC,CAAb,CAAgB,CAC1C,IAAIC,WAAiB,CAAjBA,CAAaD,CAAbC,EAAsBN,MAAAO,UAAA,CAAiBF,CAAjB,CAAoB,EAApB,CACtBC,WAAJ,GACID,CADJ,CACQ,CAACA,CADT,CAKA,QADoBD,UAAAI,aACpB,EACI,KAAK,mBAAL,CACI,IAAAC,OAASR,gBAAAS,eAAA,CAAgCL,CAAhC,CAAmCD,UAAAO,yBAAnC,CAAwEP,UAAAQ,yBAAxE,CACT,MACJ,MAAK,gBAAL,CACIH,MAAA,CAASN,YAAAU,WAAA,CAAwBR,CAAxB,CAA2BD,UAAAU,sBAA3B,CAA6DV,UAAAW,sBAA7D,CACT,MACJ,SACIN,MACA,CADSR,gBAAAS,eAAA,CAAgCL,CAAhC,CAAmC,CAAnC,CAAsC,CAAtC,CACT,CAAgC,CAAhC,CAAII,MAAAO,mBAAJ;CACIP,MADJ,CACaN,YAAAU,WAAA,CAAwBR,CAAxB,CAA2B,CAA3B,CAA8B,CAA9B,CADb,CATR,CAcAA,CAAA,CAAII,MAAAQ,cACJ,KAAIC,OAAST,MAAAU,gBACTC,OAAAA,CAAMX,MAAAO,mBACNK,WAAAA,CAAajB,UAAAkB,qBACbF,OAAJ,CAAUC,UAAV,GAEIH,MAFJ,CACuBhB,OAAAqB,OAAAC,CAAe,GAAfA,CAAoBH,UAApBG,CAAiCJ,MAAjCI,CADvB,CAE4BN,MAF5B,CAIIZ,WAAJ,GACID,CADJ,CACQ,CAACA,CADT,CAGA,OAAO,CAAEY,cAAeZ,CAAjB,CAAoBc,gBAAiBD,MAArC,CAhCmC,CAXgG;",
"sources":["node_modules/@formatjs/ecma402-abstract/NumberFormat/FormatNumericToString.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$ecma402_abstract$NumberFormat$FormatNumericToString\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormatNumericToString = void 0;\nvar _262_1 = require(\"../262\");\nvar ToRawPrecision_1 = require(\"./ToRawPrecision\");\nvar utils_1 = require(\"../utils\");\nvar ToRawFixed_1 = require(\"./ToRawFixed\");\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nfunction FormatNumericToString(intlObject, x) {\n    var isNegative = x < 0 || _262_1.SameValue(x, -0);\n    if (isNegative) {\n        x = -x;\n    }\n    var result;\n    var rourndingType = intlObject.roundingType;\n    switch (rourndingType) {\n        case 'significantDigits':\n            result = ToRawPrecision_1.ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n            break;\n        case 'fractionDigits':\n            result = ToRawFixed_1.ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n            break;\n        default:\n            result = ToRawPrecision_1.ToRawPrecision(x, 1, 2);\n            if (result.integerDigitsCount > 1) {\n                result = ToRawFixed_1.ToRawFixed(x, 0, 0);\n            }\n            break;\n    }\n    x = result.roundedNumber;\n    var string = result.formattedString;\n    var int = result.integerDigitsCount;\n    var minInteger = intlObject.minimumIntegerDigits;\n    if (int < minInteger) {\n        var forwardZeros = utils_1.repeat('0', minInteger - int);\n        string = forwardZeros + string;\n    }\n    if (isNegative) {\n        x = -x;\n    }\n    return { roundedNumber: x, formattedString: string };\n}\nexports.FormatNumericToString = FormatNumericToString;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","FormatNumericToString","_262_1","ToRawPrecision_1","utils_1","ToRawFixed_1","intlObject","x","isNegative","SameValue","roundingType","result","ToRawPrecision","minimumSignificantDigits","maximumSignificantDigits","ToRawFixed","minimumFractionDigits","maximumFractionDigits","integerDigitsCount","roundedNumber","string","formattedString","int","minInteger","minimumIntegerDigits","repeat","forwardZeros"]
}
