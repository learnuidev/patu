{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$parsers$impact$ParseTilesets.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,qEAAA,CAAyF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOjI,IAAIC,QAAUH,OAAA,CAAQ,iDAAR,CAsCdC,OAAAC,QAAA,CA1BoBE,QAAS,CAACC,IAAD,CAC7B,CAII,IAHA,IAAIC,SAAW,EAAf,CACIC,cAAgB,EADpB,CAGSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,IAAAI,MAAAC,OAApB,CAAuCF,CAAA,EAAvC,CACA,CACI,IAAIC,MAAQJ,IAAAI,MAAA,CAAWD,CAAX,CAAZ,CAGIG,YAAcF,KAAAE,YAGE,GAApB,GAAIA,WAAJ,EAAiE,EAAjE,GAA0BJ,aAAAK,QAAA,CAAsBD,WAAtB,CAA1B,GAEIJ,aAAAM,KAAA,CAAmBF,WAAnB,CAIA,CAAAL,QAAAO,KAAA,CAAc,IAAIV,OAAJ,CAAYQ,WAAZ,CAAyB,CAAzB,CAA4BF,KAAAK,SAA5B,CAA4CL,KAAAK,SAA5C;AAA4D,CAA5D,CAA+D,CAA/D,CAAd,CANJ,CAPJ,CAiBA,MAAOR,SAtBX,CApBiI;",
"sources":["node_modules/Phaser/src/tilemaps/parsers/impact/ParseTilesets.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$parsers$impact$ParseTilesets\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar Tileset = require('../../Tileset');\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Impact.ParseTilesets\r\n * @since 3.0.0\r\n *\r\n * @param {object} json - [description]\r\n *\r\n * @return {array} [description]\r\n */\r\nvar ParseTilesets = function (json)\r\n{\r\n    var tilesets = [];\r\n    var tilesetsNames = [];\r\n\r\n    for (var i = 0; i < json.layer.length; i++)\r\n    {\r\n        var layer = json.layer[i];\r\n\r\n        // A relative filepath to the source image (within Weltmeister) is used for the name\r\n        var tilesetName = layer.tilesetName;\r\n\r\n        // Only add unique tilesets that have a valid name. Collision layers will have a blank name.\r\n        if (tilesetName !== '' && tilesetsNames.indexOf(tilesetName) === -1)\r\n        {\r\n            tilesetsNames.push(tilesetName);\r\n\r\n            // Tiles are stored with an ID relative to the tileset, rather than a globally unique ID\r\n            // across all tilesets. Also, tilesets in Weltmeister have no margin or padding.\r\n            tilesets.push(new Tileset(tilesetName, 0, layer.tilesize, layer.tilesize, 0, 0));\r\n        }\r\n    }\r\n\r\n    return tilesets;\r\n};\r\n\r\nmodule.exports = ParseTilesets;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Tileset","ParseTilesets","json","tilesets","tilesetsNames","i","layer","length","tilesetName","indexOf","push","tilesize"]
}
