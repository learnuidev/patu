{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$components$GetTileAt.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,6DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOzH,IAAIC,gBAAkBH,OAAA,CAAQ,oEAAR,CA2CtBC,OAAAC,QAAA,CA1BgBE,QAAS,CAACC,KAAD,CAAQC,KAAR,CAAeC,OAAf,CAAwBC,KAAxB,CACzB,CACoBC,IAAAA,EAAhB,GAAIF,OAAJ,GAA6BA,OAA7B,CAAuC,CAAA,CAAvC,CAEA,OAAIJ,gBAAA,CAAgBE,KAAhB,CAAuBC,KAAvB,CAA8BE,KAA9B,CAAJ,EAEQE,KACJ,CADWF,KAAAG,KAAA,CAAWL,KAAX,CAAA,CAAkBD,KAAlB,CACX,CAAa,IAAb,GAAIK,KAAJ,CAEW,IAFX,CAIwB,EAAnB,GAAIA,KAAAE,MAAJ,CAEML,OAAA,CAAUG,KAAV,CAAiB,IAFvB,CAMMA,KAbf,EAkBW,IArBf,CAzByH;",
"sources":["node_modules/Phaser/src/tilemaps/components/GetTileAt.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$components$GetTileAt\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar IsInLayerBounds = require('./IsInLayerBounds');\r\n\r\n/**\r\n * Gets a tile at the given tile coordinates from the given layer.\r\n *\r\n * @function Phaser.Tilemaps.Components.GetTileAt\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} tileX - X position to get the tile from (given in tile units, not pixels).\r\n * @param {integer} tileY - Y position to get the tile from (given in tile units, not pixels).\r\n * @param {boolean} [nonNull=false] - If true getTile won't return null for empty tiles, but a Tile object with an index of -1.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {Phaser.Tilemaps.Tile} The tile at the given coordinates or null if no tile was found or the coordinates\r\n * were invalid.\r\n */\r\nvar GetTileAt = function (tileX, tileY, nonNull, layer)\r\n{\r\n    if (nonNull === undefined) { nonNull = false; }\r\n\r\n    if (IsInLayerBounds(tileX, tileY, layer))\r\n    {\r\n        var tile = layer.data[tileY][tileX];\r\n        if (tile === null)\r\n        {\r\n            return null;\r\n        }\r\n        else if (tile.index === -1)\r\n        {\r\n            return nonNull ? tile : null;\r\n        }\r\n        else\r\n        {\r\n            return tile;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        return null;\r\n    }\r\n};\r\n\r\nmodule.exports = GetTileAt;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","IsInLayerBounds","GetTileAt","tileX","tileY","nonNull","layer","undefined","tile","data","index"]
}
