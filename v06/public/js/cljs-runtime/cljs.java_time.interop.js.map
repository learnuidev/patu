{"version":3,"sources":["cljs/java_time/interop.cljc"],"mappings":";;AAUA","names":[],"sourcesContent":["(ns cljs.java-time.interop\n  \"unfortunately the java.time getter methods have been renamed in js-joda to remove the 'get' part of the name,\n  so in order to write cross platform code that calls a getter, the 'getter' macro can be used\"\n  #?(:clj\n     (:require [net.cgrand.macrovich :as macros])\n     :cljs\n     (:require-macros \n       [net.cgrand.macrovich :as macros]\n       [cljs.java-time.interop :refer [getter]])))\n\n(macros/deftime\n  \n(defmacro getter \n  \"To call .getZone method on object 'zdt' use as follows:\n  (cljs.java-time.interop/getter zone zdt)\"\n  [p t & args]\n  (macros/case\n    :clj (let [[start & remainder] (str p)]\n           (apply list (symbol (str \".get\" (clojure.string/upper-case start) (apply str remainder))) t args))\n    :cljs (apply list (symbol (str \".\" p)) t args))))\n\n\n"]}