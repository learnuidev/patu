{
"version":3,
"file":"module$node_modules$Phaser$plugins$camera3d$src$sprite3d$Sprite3DFactory.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,yEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOrI,IAAIC,SAAWH,OAAA,CAAQ,mEAAR,CACSA,QAAAI,CAAQ,8DAARA,CAkBxBC,SAAA,CAA2B,UAA3B,CAAuC,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAUC,GAAV,CAAeC,KAAf,CAChD,CACQC,CAAAA,CAAS,IAAIR,QAAJ,CAAa,IAAAS,MAAb,CAAyBN,CAAzB,CAA4BC,CAA5B,CAA+BC,CAA/B,CAAkCC,GAAlC,CAAuCC,KAAvC,CAEb,KAAAG,YAAAC,IAAA,CAAqBH,CAAAI,WAArB,CACA,KAAAC,WAAAF,IAAA,CAAoBH,CAAAI,WAApB,CAEA,OAAOJ,EANX,CADA,CA1BqI;",
"sources":["node_modules/Phaser/plugins/camera3d/src/sprite3d/Sprite3DFactory.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$plugins$camera3d$src$sprite3d$Sprite3DFactory\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Sprite3D = require('./Sprite3D');\r\nvar GameObjectFactory = require('../../../../src/gameobjects/GameObjectFactory');\r\n\r\n/**\r\n * Creates a new Sprite3D Game Object and adds it to the Scene.\r\n *\r\n * Note: This method will only be available if the Sprite3D Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory#sprite3D\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The horizontal position of this Game Object.\r\n * @param {number} y - The vertical position of this Game Object.\r\n * @param {number} z - The z position of this Game Object.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n *\r\n * @return {Phaser.GameObjects.Sprite3D} The Game Object that was created.\r\n */\r\nGameObjectFactory.register('sprite3D', function (x, y, z, key, frame)\r\n{\r\n    var sprite = new Sprite3D(this.scene, x, y, z, key, frame);\r\n\r\n    this.displayList.add(sprite.gameObject);\r\n    this.updateList.add(sprite.gameObject);\r\n\r\n    return sprite;\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectFactory context.\r\n//\r\n//  There are several properties available to use:\r\n//\r\n//  this.scene - a reference to the Scene that owns the GameObjectFactory\r\n//  this.displayList - a reference to the Display List the Scene owns\r\n//  this.updateList - a reference to the Update List the Scene owns\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Sprite3D","GameObjectFactory","register","x","y","z","key","frame","sprite","scene","displayList","add","gameObject","updateList"]
}
