shadow$provide.module$node_modules$Phaser$src$tilemaps$components$CullTiles=function(global,require,module,exports){var SnapFloor=require("module$node_modules$Phaser$src$math$snap$SnapFloor"),SnapCeil=require("module$node_modules$Phaser$src$math$snap$SnapCeil");module.exports=function(layer,camera,outputArray,renderOrder){void 0===outputArray&&(outputArray=[]);void 0===renderOrder&&(renderOrder=0);outputArray.length=0;var tilemap=layer.tilemapLayer.tilemap,tilemapLayer=layer.tilemapLayer,mapData=
layer.data,mapWidth=layer.width;layer=layer.height;var tileW=Math.floor(tilemap.tileWidth*tilemapLayer.scaleX),tileH=Math.floor(tilemap.tileHeight*tilemapLayer.scaleY);tilemap=0;var drawRight=mapWidth,drawTop=0,drawBottom=layer;tilemapLayer.skipCull||1!==tilemapLayer.scrollFactorX||1!==tilemapLayer.scrollFactorY||(tilemap=SnapFloor(camera.worldView.x-tilemapLayer.x,tileW,0,!0)-tilemapLayer.cullPaddingX,drawRight=SnapCeil(camera.worldView.right-tilemapLayer.x,tileW,0,!0)+tilemapLayer.cullPaddingX,
drawTop=SnapFloor(camera.worldView.y-tilemapLayer.y,tileH,0,!0)-tilemapLayer.cullPaddingY,camera=SnapCeil(camera.worldView.bottom-tilemapLayer.y,tileH,0,!0)+tilemapLayer.cullPaddingY,tilemap=Math.max(0,tilemap),drawRight=Math.min(mapWidth,drawRight),drawTop=Math.max(0,drawTop),drawBottom=Math.min(layer,camera));if(0===renderOrder)for(camera=drawTop;camera<drawBottom;camera++)for(renderOrder=tilemap;renderOrder<drawRight;renderOrder++)(tileH=mapData[camera][renderOrder])&&-1!==tileH.index&&tileH.visible&&
0!==tileH.alpha&&outputArray.push(tileH);else if(1===renderOrder)for(camera=drawTop;camera<drawBottom;camera++)for(renderOrder=drawRight;renderOrder>=tilemap;renderOrder--)(tileH=mapData[camera][renderOrder])&&-1!==tileH.index&&tileH.visible&&0!==tileH.alpha&&outputArray.push(tileH);else if(2===renderOrder)for(camera=drawBottom;camera>=drawTop;camera--)for(renderOrder=tilemap;renderOrder<drawRight;renderOrder++)(tileH=mapData[camera][renderOrder])&&-1!==tileH.index&&tileH.visible&&0!==tileH.alpha&&
outputArray.push(tileH);else if(3===renderOrder)for(camera=drawBottom;camera>=drawTop;camera--)for(renderOrder=drawRight;renderOrder>=tilemap;renderOrder--)(tileH=mapData[camera][renderOrder])&&-1!==tileH.index&&tileH.visible&&0!==tileH.alpha&&outputArray.push(tileH);tilemapLayer.tilesDrawn=outputArray.length;tilemapLayer.tilesTotal=mapWidth*layer;return outputArray}}
//# sourceMappingURL=module$node_modules$Phaser$src$tilemaps$components$CullTiles.js.map
