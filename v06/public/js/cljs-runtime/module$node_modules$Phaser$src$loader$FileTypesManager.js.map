{
"version":3,
"file":"module$node_modules$Phaser$src$loader$FileTypesManager.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOnH,IAAIC,MAAQ,EAoDZF,OAAAC,QAAA,CAlDuBE,CAanBC,QAASA,QAAS,CAACC,MAAD,CAClB,CACI,IAAKC,IAAIA,GAAT,GAAgBJ,MAAhB,CAEIG,MAAA,CAAOC,GAAP,CAAA,CAAcJ,KAAA,CAAMI,GAAN,CAHtB,CAdmBH,CAgCnBI,SAAUA,QAAS,CAACD,GAAD,CAAME,eAAN,CACnB,CACIN,KAAA,CAAMI,GAAN,CAAA,CAAaE,eADjB,CAjCmBL,CA2CnBM,QAASA,QAAS,EAClB,CACIP,KAAA,CAAQ,EADZ,CA5CmBC,CAT4F;",
"sources":["node_modules/Phaser/src/loader/FileTypesManager.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$loader$FileTypesManager\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar types = {};\r\n\r\nvar FileTypesManager = {\r\n\r\n    /**\r\n     * Static method called when a LoaderPlugin is created.\r\n     * \r\n     * Loops through the local types object and injects all of them as\r\n     * properties into the LoaderPlugin instance.\r\n     *\r\n     * @method Phaser.Loader.FileTypesManager.register\r\n     * @since 3.0.0\r\n     * \r\n     * @param {Phaser.Loader.LoaderPlugin} loader - The LoaderPlugin to install the types into.\r\n     */\r\n    install: function (loader)\r\n    {\r\n        for (var key in types)\r\n        {\r\n            loader[key] = types[key];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Static method called directly by the File Types.\r\n     * \r\n     * The key is a reference to the function used to load the files via the Loader, i.e. `image`.\r\n     *\r\n     * @method Phaser.Loader.FileTypesManager.register\r\n     * @since 3.0.0\r\n     * \r\n     * @param {string} key - The key that will be used as the method name in the LoaderPlugin.\r\n     * @param {function} factoryFunction - The function that will be called when LoaderPlugin.key is invoked.\r\n     */\r\n    register: function (key, factoryFunction)\r\n    {\r\n        types[key] = factoryFunction;\r\n    },\r\n\r\n    /**\r\n     * Removed all associated file types.\r\n     *\r\n     * @method Phaser.Loader.FileTypesManager.destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        types = {};\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = FileTypesManager;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","types","FileTypesManager","install","loader","key","register","factoryFunction","destroy"]
}
