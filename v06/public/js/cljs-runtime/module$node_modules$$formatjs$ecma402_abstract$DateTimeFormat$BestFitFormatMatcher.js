shadow$provide.module$node_modules$$formatjs$ecma402_abstract$DateTimeFormat$BestFitFormatMatcher=function(global,require,module,exports){function isNumericType(t){return"numeric"===t||"2-digit"===t}function bestFitFormatMatcherScore(options,format){var score=0;options.hour12&&!format.hour12?score-=utils_2.removalPenalty:!options.hour12&&format.hour12&&(score-=utils_2.additionPenalty);for(var _i=0,DATE_TIME_PROPS_1=utils_2.DATE_TIME_PROPS;_i<DATE_TIME_PROPS_1.length;_i++){var prop=DATE_TIME_PROPS_1[_i],
optionsProp=options[prop];prop=format[prop];if(void 0===optionsProp&&void 0!==prop)score-=utils_2.additionPenalty;else if(void 0!==optionsProp&&void 0===prop)score-=utils_2.removalPenalty;else if(optionsProp!==prop)if(isNumericType(optionsProp)!==isNumericType(prop))score-=utils_2.differentNumericTypePenalty;else{var values=["2-digit","numeric","narrow","short","long"];optionsProp=values.indexOf(optionsProp);prop=values.indexOf(prop);optionsProp=Math.max(-2,Math.min(prop-optionsProp,2));2===optionsProp?
score-=utils_2.longMorePenalty:1===optionsProp?score-=utils_2.shortMorePenalty:-1===optionsProp?score-=utils_2.shortLessPenalty:-2===optionsProp&&(score-=utils_2.longLessPenalty)}}return score}Object.defineProperty(exports,"__esModule",{value:!0});exports.BestFitFormatMatcher=exports.bestFitFormatMatcherScore=void 0;var tslib_1=require("module$node_modules$tslib$tslib"),utils_1=require("module$node_modules$$formatjs$ecma402_abstract$utils"),utils_2=require("module$node_modules$$formatjs$ecma402_abstract$DateTimeFormat$utils"),
skeleton_1=require("module$node_modules$$formatjs$ecma402_abstract$DateTimeFormat$skeleton");exports.bestFitFormatMatcherScore=bestFitFormatMatcherScore;exports.BestFitFormatMatcher=function(options,formats){var bestScore=-Infinity,bestFormat=formats[0];utils_1.invariant(Array.isArray(formats),"formats should be a list of things");for(var _i=0;_i<formats.length;_i++){var format=formats[_i],score=bestFitFormatMatcherScore(options,format);score>bestScore&&(bestScore=score,bestFormat=format)}formats=
tslib_1.__assign({},bestFormat);bestScore={rawPattern:bestFormat.rawPattern};skeleton_1.processDateTimePattern(bestFormat.rawPattern,bestScore);for(var prop in formats)bestFormat=formats[prop],_i=options[prop],"minute"!==prop&&"second"!==prop&&_i&&(!isNumericType(bestScore[prop])||isNumericType(_i))&&bestFormat!==_i&&(bestScore[prop]=_i);bestScore.pattern=formats.pattern;bestScore.pattern12=formats.pattern12;bestScore.skeleton=formats.skeleton;bestScore.rangePatterns=formats.rangePatterns;bestScore.rangePatterns12=
formats.rangePatterns12;return bestScore}}
//# sourceMappingURL=module$node_modules$$formatjs$ecma402_abstract$DateTimeFormat$BestFitFormatMatcher.js.map
