shadow$provide.module$node_modules$Phaser$src$loader$filetypes$MultiAtlasFile=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");exports=require("module$node_modules$Phaser$src$loader$FileTypesManager");var GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),ImageFile=require("module$node_modules$Phaser$src$loader$filetypes$ImageFile"),IsPlainObject=require("module$node_modules$Phaser$src$utils$object$IsPlainObject"),JSONFile=
require("module$node_modules$Phaser$src$loader$filetypes$JSONFile"),MultiFile=require("module$node_modules$Phaser$src$loader$MultiFile"),MultiAtlasFile=new global({Extends:MultiFile,initialize:function(loader,key,atlasURL,path,baseURL,atlasXhrSettings,textureXhrSettings){IsPlainObject(key)&&(textureXhrSettings=key,key=GetFastValue(textureXhrSettings,"key"),atlasURL=GetFastValue(textureXhrSettings,"url"),atlasXhrSettings=GetFastValue(textureXhrSettings,"xhrSettings"),path=GetFastValue(textureXhrSettings,
"path"),baseURL=GetFastValue(textureXhrSettings,"baseURL"),textureXhrSettings=GetFastValue(textureXhrSettings,"textureXhrSettings"));atlasURL=new JSONFile(loader,key,atlasURL,atlasXhrSettings);MultiFile.call(this,loader,"multiatlas",key,[atlasURL]);this.config.path=path;this.config.baseURL=baseURL;this.config.textureXhrSettings=textureXhrSettings},onFileComplete:function(file){if(-1!==this.files.indexOf(file)&&(this.pending--,"json"===file.type&&file.data.hasOwnProperty("textures"))){file=file.data.textures;
var config=this.config,loader=this.loader,currentBaseURL=loader.baseURL,currentPath=loader.path,currentPrefix=loader.prefix,baseURL=GetFastValue(config,"baseURL",currentBaseURL),path=GetFastValue(config,"path",currentPath),prefix=GetFastValue(config,"prefix",currentPrefix);config=GetFastValue(config,"textureXhrSettings");loader.setBaseURL(baseURL);loader.setPath(path);loader.setPrefix(prefix);for(baseURL=0;baseURL<file.length;baseURL++)prefix=file[baseURL].image,path="_MA_"+prefix,prefix=new ImageFile(loader,
path,prefix,config),this.addToMultiFile(prefix),loader.addFile(prefix),file[baseURL].normalMap&&(path=new ImageFile(loader,path,file[baseURL].normalMap,config),path.type="normalMap",prefix.setLink(path),this.addToMultiFile(path),loader.addFile(path));loader.setBaseURL(currentBaseURL);loader.setPath(currentPath);loader.setPrefix(currentPrefix)}},addToCache:function(){if(this.isReadyToProcess()){var fileJSON=this.files[0];fileJSON.addToCache();for(var data=[],images=[],normalMaps=[],i=1;i<this.files.length;i++){var file=
this.files[i];if("normalMap"!==file.type)for(var key=file.key.substr(4),image=file.data,t=0;t<fileJSON.data.textures.length;t++){var item=fileJSON.data.textures[t];if(item.image===key){images.push(image);data.push(item);file.linkFile&&normalMaps.push(file.linkFile.data);break}}}0===normalMaps.length&&(normalMaps=void 0);this.loader.textureManager.addAtlasJSONArray(this.key,images,data,normalMaps);this.complete=!0;for(i=0;i<this.files.length;i++)this.files[i].pendingDestroy()}}});exports.register("multiatlas",
function(key,atlasURL,path,baseURL,atlasXhrSettings){if(Array.isArray(key))for(path=0;path<key.length;path++)atlasURL=new MultiAtlasFile(this,key[path]),this.addFile(atlasURL.files);else atlasURL=new MultiAtlasFile(this,key,atlasURL,path,baseURL,atlasXhrSettings),this.addFile(atlasURL.files);return this});module.exports=MultiAtlasFile}
//# sourceMappingURL=module$node_modules$Phaser$src$loader$filetypes$MultiAtlasFile.js.map
