{
"version":3,
"file":"module$node_modules$Phaser$src$geom$triangle$CenterOn.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlH,IAAIC,SAAWH,OAAA,CAAQ,uDAAR,CAAf,CACII,OAASJ,OAAA,CAAQ,qDAAR,CAuCbC,OAAAC,QAAA,CAdeG,QAAS,CAACC,QAAD,CAAWC,CAAX,CAAcC,CAAd,CAAiBC,UAAjB,CACxB,CACuBC,IAAAA,EAAnB,GAAID,UAAJ,GAAgCA,UAAhC,CAA6CN,QAA7C,CAGIQ,WAAAA,CAASF,UAAA,CAAWH,QAAX,CAMb,OAAOF,OAAA,CAAOE,QAAP,CAHKC,CAGL,CAHSI,UAAAJ,EAGT,CAFKC,CAEL,CAFSG,UAAAH,EAET,CAVX,CAlCkH;",
"sources":["node_modules/Phaser/src/geom/triangle/CenterOn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$triangle$CenterOn\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Centroid = require('./Centroid');\r\nvar Offset = require('./Offset');\r\n\r\n/**\r\n * @callback CenterFunction\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - [description]\r\n *\r\n * @return {Phaser.Math.Vector2} [description]\r\n */\r\n\r\n/**\r\n * Positions the Triangle so that it is centered on the given coordinates.\r\n *\r\n * @function Phaser.Geom.Triangle.CenterOn\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [triangle,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The triangle to be positioned.\r\n * @param {number} x - The horizontal coordinate to center on.\r\n * @param {number} y - The vertical coordinate to center on.\r\n * @param {CenterFunction} [centerFunc] - The function used to center the triangle. Defaults to Centroid centering.\r\n *\r\n * @return {Phaser.Geom.Triangle} The Triangle that was centered.\r\n */\r\nvar CenterOn = function (triangle, x, y, centerFunc)\r\n{\r\n    if (centerFunc === undefined) { centerFunc = Centroid; }\r\n\r\n    //  Get the center of the triangle\r\n    var center = centerFunc(triangle);\r\n\r\n    //  Difference\r\n    var diffX = x - center.x;\r\n    var diffY = y - center.y;\r\n\r\n    return Offset(triangle, diffX, diffY);\r\n};\r\n\r\nmodule.exports = CenterOn;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Centroid","Offset","CenterOn","triangle","x","y","centerFunc","undefined","center"]
}
