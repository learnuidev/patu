{
"version":3,
"file":"module$node_modules$Phaser$src$math$RandomXYZW.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+B3GD,MAAAC,QAAA,CAbiBC,QAAS,CAACC,IAAD,CAAOC,KAAP,CAC1B,CACkBC,IAAAA,EAAd,GAAID,KAAJ,GAA2BA,KAA3B,CAAmC,CAAnC,CAGAD,KAAAG,EAAA,EAA0B,CAA1B,CAAUC,IAAAC,OAAA,EAAV,CAA8B,CAA9B,EAAmCJ,KACnCD,KAAAM,EAAA,EAA0B,CAA1B,CAAUF,IAAAC,OAAA,EAAV,CAA8B,CAA9B,EAAmCJ,KACnCD,KAAAO,EAAA,EAA0B,CAA1B,CAAUH,IAAAC,OAAA,EAAV,CAA8B,CAA9B,EAAmCJ,KACnCD,KAAAQ,EAAA,EAA0B,CAA1B,CAAUJ,IAAAC,OAAA,EAAV,CAA8B,CAA9B,EAAmCJ,KAEnC,OAAOD,KATX,CAnB2G;",
"sources":["node_modules/Phaser/src/math/RandomXYZW.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$RandomXYZW\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Compute a random four-dimensional vector.\r\n *\r\n * @function Phaser.Math.RandomXYZW\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Math.Vector4} vec4 - The Vector to compute random values for.\r\n * @param {number} [scale=1] - The scale of the random values.\r\n *\r\n * @return {Phaser.Math.Vector4} The given Vector.\r\n */\r\nvar RandomXYZW = function (vec4, scale)\r\n{\r\n    if (scale === undefined) { scale = 1; }\r\n\r\n    // TODO: Not spherical; should fix this for more uniform distribution\r\n    vec4.x = (Math.random() * 2 - 1) * scale;\r\n    vec4.y = (Math.random() * 2 - 1) * scale;\r\n    vec4.z = (Math.random() * 2 - 1) * scale;\r\n    vec4.w = (Math.random() * 2 - 1) * scale;\r\n\r\n    return vec4;\r\n};\r\n\r\nmodule.exports = RandomXYZW;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","RandomXYZW","vec4","scale","undefined","x","Math","random","y","z","w"]
}
