{
"version":3,
"file":"module$node_modules$Phaser$src$math$angle$Wrap.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO3G,IAAIC,SAAWH,OAAA,CAAQ,0CAAR,CAmBfC,OAAAC,QAAA,CALWE,QAAS,CAACC,KAAD,CACpB,CACI,MAAOF,SAAA,CAASE,KAAT,CAAgB,CAACC,IAAAC,GAAjB,CAA0BD,IAAAC,GAA1B,CADX,CAtB2G;",
"sources":["node_modules/Phaser/src/math/angle/Wrap.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$angle$Wrap\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar MathWrap = require('../Wrap');\r\n\r\n/**\r\n * Wrap an angle.\r\n *\r\n * Wraps the angle to a value in the range of -PI to PI.\r\n *\r\n * @function Phaser.Math.Angle.Wrap\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in radians.\r\n *\r\n * @return {number} The wrapped angle, in radians.\r\n */\r\nvar Wrap = function (angle)\r\n{\r\n    return MathWrap(angle, -Math.PI, Math.PI);\r\n};\r\n\r\nmodule.exports = Wrap;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","MathWrap","Wrap","angle","Math","PI"]
}
