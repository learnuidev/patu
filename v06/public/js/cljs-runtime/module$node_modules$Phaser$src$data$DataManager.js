shadow$provide.module$node_modules$Phaser$src$data$DataManager=function(global,require,module,exports){global=new (require("module$node_modules$Phaser$src$utils$Class"))({initialize:function(parent,eventEmitter){this.parent=parent;this.events=eventEmitter;eventEmitter||(this.events=parent.events?parent.events:parent);this.list={};this.values={};this._frozen=!1;if(!parent.hasOwnProperty("sys")&&this.events)this.events.once("destroy",this.destroy,this)},get:function(key){var list=this.list;if(Array.isArray(key)){for(var output=
[],i=0;i<key.length;i++)output.push(list[key[i]]);return output}return list[key]},getAll:function(){var results={},key;for(key in this.list)this.list.hasOwnProperty(key)&&(results[key]=this.list[key]);return results},query:function(search){var results={},key;for(key in this.list)this.list.hasOwnProperty(key)&&key.match(search)&&(results[key]=this.list[key]);return results},set:function(key,data){if(this._frozen)return this;if("string"===typeof key)return this.setValue(key,data);for(var entry in key)this.setValue(entry,
key[entry]);return this},setValue:function(key,data){if(this._frozen)return this;if(this.has(key))this.values[key]=data;else{var _this=this,list=this.list,events=this.events,parent=this.parent;Object.defineProperty(this.values,key,{enumerable:!0,configurable:!0,get:function(){return list[key]},set:function(value){if(!_this._frozen){var previousValue=list[key];list[key]=value;events.emit("changedata",parent,key,value,previousValue);events.emit("changedata_"+key,parent,value,previousValue)}}});list[key]=
data;events.emit("setdata",parent,key,data)}return this},each:function(callback,context){for(var args=[this.parent,null,void 0],i=1;i<arguments.length;i++)args.push(arguments[i]);for(var key in this.list)args[1]=key,args[2]=this.list[key],callback.apply(context,args);return this},merge:function(data,overwrite){void 0===overwrite&&(overwrite=!0);for(var key in data)data.hasOwnProperty(key)&&(overwrite||!overwrite&&!this.has(key))&&this.setValue(key,data[key]);return this},remove:function(key){if(this._frozen)return this;
if(Array.isArray(key))for(var i=0;i<key.length;i++)this.removeValue(key[i]);else return this.removeValue(key);return this},removeValue:function(key){if(this.has(key)){var data=this.list[key];delete this.list[key];delete this.values[key];this.events.emit("removedata",this.parent,key,data)}return this},pop:function(key){var data=void 0;!this._frozen&&this.has(key)&&(data=this.list[key],delete this.list[key],delete this.values[key],this.events.emit("removedata",this,key,data));return data},has:function(key){return this.list.hasOwnProperty(key)},
setFreeze:function(value){this._frozen=value;return this},reset:function(){for(var key in this.list)delete this.list[key],delete this.values[key];this._frozen=!1;return this},destroy:function(){this.reset();this.events.off("changedata");this.events.off("setdata");this.events.off("removedata");this.parent=null},freeze:{get:function(){return this._frozen},set:function(value){this._frozen=value?!0:!1}},count:{get:function(){var i=0,key;for(key in this.list)void 0!==this.list[key]&&i++;return i}}});module.exports=
global}
//# sourceMappingURL=module$node_modules$Phaser$src$data$DataManager.js.map
