shadow$provide.module$node_modules$Phaser$src$sound$webaudio$WebAudioSoundManager=function(global,require,module,exports){var BaseSoundManager=require("module$node_modules$Phaser$src$sound$BaseSoundManager");global=require("module$node_modules$Phaser$src$utils$Class");var WebAudioSound=require("module$node_modules$Phaser$src$sound$webaudio$WebAudioSound");require=new global({Extends:BaseSoundManager,initialize:function(game){this.context=this.createAudioContext(game);this.masterMuteNode=this.context.createGain();
this.masterVolumeNode=this.context.createGain();this.masterMuteNode.connect(this.masterVolumeNode);this.masterVolumeNode.connect(this.context.destination);this.destination=this.masterMuteNode;this.locked="suspended"===this.context.state&&("ontouchstart"in window||"onclick"in window);BaseSoundManager.call(this,game);this.locked&&this.unlock()},createAudioContext:function(game){return(game=game.config.audio)&&game.context?(game.context.resume(),game.context):new AudioContext},add:function(key,config){key=
new WebAudioSound(this,key,config);this.sounds.push(key);return key},unlock:function(){var _this=this,unlock=function(){_this.context.resume().then(function(){document.body.removeEventListener("touchstart",unlock);document.body.removeEventListener("touchend",unlock);document.body.removeEventListener("click",unlock);_this.unlocked=!0})};document.body&&(document.body.addEventListener("touchstart",unlock,!1),document.body.addEventListener("touchend",unlock,!1),document.body.addEventListener("click",
unlock,!1))},onBlur:function(){this.context.suspend()},onFocus:function(){this.context.resume()},destroy:function(){this.destination=null;this.masterVolumeNode.disconnect();this.masterVolumeNode=null;this.masterMuteNode.disconnect();this.masterMuteNode=null;if(this.game.config.audio&&this.game.config.audio.context)this.context.suspend();else{var _this=this;this.context.close().then(function(){_this.context=null})}BaseSoundManager.prototype.destroy.call(this)},setMute:function(value){this.mute=value;
return this},mute:{get:function(){return 0===this.masterMuteNode.gain.value},set:function(value){this.masterMuteNode.gain.setValueAtTime(value?0:1,0);this.emit("mute",this,value)}},setVolume:function(value){this.volume=value;return this},volume:{get:function(){return this.masterVolumeNode.gain.value},set:function(value){this.masterVolumeNode.gain.setValueAtTime(value,0);this.emit("volume",this,value)}}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$sound$webaudio$WebAudioSoundManager.js.map
