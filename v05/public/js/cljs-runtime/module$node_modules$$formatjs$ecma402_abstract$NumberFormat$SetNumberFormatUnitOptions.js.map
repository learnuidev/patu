{
"version":3,
"file":"module$node_modules$$formatjs$ecma402_abstract$NumberFormat$SetNumberFormatUnitOptions.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,uFAAA,CAA2G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEnJC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,2BAAA,CAAqC,IAAK,EAC1C,KAAIC,YAAcP,OAAA,CAAQ,0DAAR,CAAlB,CACIQ,2BAA6BR,OAAA,CAAQ,yEAAR,CADjC,CAEIS,6BAA+BT,OAAA,CAAQ,2EAAR,CAqCnCE;OAAAI,2BAAA,CAjCAA,QAAmC,CAACI,EAAD,CAAKC,OAAL,CAAcC,EAAd,CAAkB,CACjC,IAAK,EAArB,GAAID,OAAJ,GAA0BA,OAA1B,CAAoCR,MAAAU,OAAA,CAAc,IAAd,CAApC,CACIC,GAAAA,CAAmBF,EAAAE,iBACnBC,GAAAA,CAAgBD,EAAA,CAAiBJ,EAAjB,CAChBM,GAAAA,CAAQT,WAAAU,UAAA,CAAsBN,OAAtB,CAA+B,OAA/B,CAAwC,QAAxC,CAAkD,CAAC,SAAD,CAAY,SAAZ,CAAuB,UAAvB,CAAmC,MAAnC,CAAlD,CAA8F,SAA9F,CACZI,GAAAC,MAAA,CAAsBA,EACtB,KAAIE,SAAWX,WAAAU,UAAA,CAAsBN,OAAtB,CAA+B,UAA/B,CAA2C,QAA3C,CAAqDQ,IAAAA,EAArD,CAAgEA,IAAAA,EAAhE,CACf,IAAiBA,IAAAA,EAAjB,GAAID,QAAJ,EAA8B,CAACV,0BAAAY,yBAAA,CAAoDF,QAApD,CAA/B,CACI,KAAMG,WAAA,CAAW,yBAAX,CAAN,CAEJ,GAAc,UAAd,GAAIL,EAAJ,EAAyCG,IAAAA,EAAzC,GAA4BD,QAA5B,CACI,KAAMI,UAAA,CAAU,8BAAV,CAAN;AAEJ,IAAIC,gBAAkBhB,WAAAU,UAAA,CAAsBN,OAAtB,CAA+B,iBAA/B,CAAkD,QAAlD,CAA4D,CAAC,MAAD,CAAS,QAAT,CAAmB,cAAnB,CAAmC,MAAnC,CAA5D,CAAwG,QAAxG,CAAtB,CACIa,aAAejB,WAAAU,UAAA,CAAsBN,OAAtB,CAA+B,cAA/B,CAA+C,QAA/C,CAAyD,CAAC,UAAD,CAAa,YAAb,CAAzD,CAAqF,UAArF,CADnB,CAEIc,KAAOlB,WAAAU,UAAA,CAAsBN,OAAtB,CAA+B,MAA/B,CAAuC,QAAvC,CAAiDQ,IAAAA,EAAjD,CAA4DA,IAAAA,EAA5D,CACX,IAAaA,IAAAA,EAAb,GAAIM,IAAJ,EAA0B,CAAChB,4BAAAiB,2BAAA,CAAwDD,IAAxD,CAA3B,CACI,KAAMJ,WAAA,CAAW,+CAAX,CAAN,CAEJ,GAAc,MAAd,GAAIL,EAAJ,EAAiCG,IAAAA,EAAjC,GAAwBM,IAAxB,CACI,KAAMH,UAAA,CAAU,0BAAV,CAAN;AAEAK,OAAAA,CAAcpB,WAAAU,UAAA,CAAsBN,OAAtB,CAA+B,aAA/B,CAA8C,QAA9C,CAAwD,CAAC,OAAD,CAAU,QAAV,CAAoB,MAApB,CAAxD,CAAqF,OAArF,CACJ,WAAd,GAAIK,EAAJ,GACID,EAAAG,SAEA,CAFyBA,QAAAU,YAAA,EAEzB,CADAb,EAAAQ,gBACA,CADgCA,eAChC,CAAAR,EAAAS,aAAA,CAA6BA,YAHjC,CAKc,OAAd,GAAIR,EAAJ,GACID,EAAAU,KACA,CADqBA,IACrB,CAAAV,EAAAY,YAAA,CAA4BA,OAFhC,CA5BiD,CAV8F;",
"sources":["node_modules/@formatjs/ecma402-abstract/NumberFormat/SetNumberFormatUnitOptions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$ecma402_abstract$NumberFormat$SetNumberFormatUnitOptions\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetNumberFormatUnitOptions = void 0;\nvar GetOption_1 = require(\"../GetOption\");\nvar IsWellFormedCurrencyCode_1 = require(\"../IsWellFormedCurrencyCode\");\nvar IsWellFormedUnitIdentifier_1 = require(\"../IsWellFormedUnitIdentifier\");\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\nfunction SetNumberFormatUnitOptions(nf, options, _a) {\n    if (options === void 0) { options = Object.create(null); }\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(nf);\n    var style = GetOption_1.GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n    internalSlots.style = style;\n    var currency = GetOption_1.GetOption(options, 'currency', 'string', undefined, undefined);\n    if (currency !== undefined && !IsWellFormedCurrencyCode_1.IsWellFormedCurrencyCode(currency)) {\n        throw RangeError('Malformed currency code');\n    }\n    if (style === 'currency' && currency === undefined) {\n        throw TypeError('currency cannot be undefined');\n    }\n    var currencyDisplay = GetOption_1.GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n    var currencySign = GetOption_1.GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n    var unit = GetOption_1.GetOption(options, 'unit', 'string', undefined, undefined);\n    if (unit !== undefined && !IsWellFormedUnitIdentifier_1.IsWellFormedUnitIdentifier(unit)) {\n        throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n    }\n    if (style === 'unit' && unit === undefined) {\n        throw TypeError('unit cannot be undefined');\n    }\n    var unitDisplay = GetOption_1.GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n    if (style === 'currency') {\n        internalSlots.currency = currency.toUpperCase();\n        internalSlots.currencyDisplay = currencyDisplay;\n        internalSlots.currencySign = currencySign;\n    }\n    if (style === 'unit') {\n        internalSlots.unit = unit;\n        internalSlots.unitDisplay = unitDisplay;\n    }\n}\nexports.SetNumberFormatUnitOptions = SetNumberFormatUnitOptions;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","SetNumberFormatUnitOptions","GetOption_1","IsWellFormedCurrencyCode_1","IsWellFormedUnitIdentifier_1","nf","options","_a","create","getInternalSlots","internalSlots","style","GetOption","currency","undefined","IsWellFormedCurrencyCode","RangeError","TypeError","currencyDisplay","currencySign","unit","IsWellFormedUnitIdentifier","unitDisplay","toUpperCase"]
}
