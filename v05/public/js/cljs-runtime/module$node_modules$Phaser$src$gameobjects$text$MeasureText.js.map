{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$text$MeasureText.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,4DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOxH,IAAIC,WAAaH,OAAA,CAAQ,0DAAR,CA0HjBC,OAAAC,QAAA,CA9GkBE,QAAS,CAACC,SAAD,CAC3B,CAEI,IAAIC,OAASH,UAAAI,OAAA,CAAkB,IAAlB,CAAb,CAGIC,QAAUF,MAAAG,WAAA,CAAkB,IAAlB,CAEdJ,UAAAK,SAAA,CAAmBJ,MAAnB,CAA2BE,OAA3B,CAEA,KAAIG,MAAQC,IAAAC,KAAA,CAAUL,OAAAM,YAAA,CAAoBT,SAAAU,WAApB,CAAAJ,MAAV,CAA4DN,SAAAW,UAA5D,CAAZ,CACIC,SAAWN,KADf,CAEIO,OAAS,CAATA,CAAaD,QAEjBA,SAAA,CAAWA,QAAX,CAAsBZ,SAAAc,UAAtB,CAA4C,CAE5Cb,OAAAK,MAAA;AAAeA,KACfL,OAAAY,OAAA,CAAgBA,MAEhBV,QAAAY,UAAA,CAAoB,MACpBZ,QAAAa,SAAA,CAAiB,CAAjB,CAAoB,CAApB,CAAuBV,KAAvB,CAA8BO,MAA9B,CAEAV,QAAAc,KAAA,CAAejB,SAAAkB,MAEff,QAAAgB,aAAA,CAAuB,YACvBhB,QAAAY,UAAA,CAAoB,MACpBZ,QAAAiB,SAAA,CAAiBpB,SAAAU,WAAjB,CAAuC,CAAvC,CAA0CE,QAA1C,CAEIS,UAAAA,CAAS,CACTC,OAAQ,CADC,CAETC,QAAS,CAFA,CAGTC,SAAU,CAHD,CAMb,IAAI,CAACrB,OAAAsB,aAAA,CAAqB,CAArB,CAAwB,CAAxB,CAA2BnB,KAA3B,CAAkCO,MAAlC,CAAL,CAQI,MANAQ,UAAAC,OAMOD,CANST,QAMTS,CALPA,SAAAE,QAKOF,CALUT,QAKVS,CALqB,CAKrBA,CAJPA,SAAAG,SAIOH,CAJWA,SAAAC,OAIXD,CAJ2BA,SAAAE,QAI3BF,CAFPvB,UAAA4B,OAAA,CAAkBzB,MAAlB,CAEOoB,CAAAA,SAGPM,QAAAA,CAAYxB,OAAAsB,aAAA,CAAqB,CAArB,CAAwB,CAAxB,CAA2BnB,KAA3B;AAAkCO,MAAlC,CAAAe,KAChB,KAAIC,OAASF,OAAAG,OACFxB,MAAPyB,EAAe,CACnB,KAAIC,CAAJ,CACIC,CADJ,CAEIC,IAAM,CAFV,CAGIC,KAAO,CAAA,CAGX,KAAKH,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBpB,QAAhB,CAA0BoB,CAAA,EAA1B,CACA,CACI,IAAKC,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBF,KAAhB,CAAsBE,CAAtB,EAA2B,CAA3B,CAEI,GAA2B,GAA3B,GAAIN,OAAA,CAAUO,GAAV,CAAgBD,CAAhB,CAAJ,CACA,CACIE,IAAA,CAAO,CAAA,CACP,MAFJ,CAMJ,GAAKA,IAAL,CAMI,KANJ,KAEID,IAAA,EAAOH,KAZf,CAoBAV,SAAAC,OAAA,CAAgBV,QAAhB,CAA2BoB,CAE3BE,IAAA,CAAML,MAAN,CAAeE,KACfI,KAAA,CAAO,CAAA,CAGP,KAAKH,CAAL,CAASnB,MAAT,CAAiBmB,CAAjB,CAAqBpB,QAArB,CAA+BoB,CAAA,EAA/B,CACA,CACI,IAAKC,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBF,KAAhB,CAAsBE,CAAtB,EAA2B,CAA3B,CAEI,GAA2B,GAA3B,GAAIN,OAAA,CAAUO,GAAV,CAAgBD,CAAhB,CAAJ,CACA,CACIE,IAAA,CAAO,CAAA,CACP,MAFJ,CAMJ,GAAKA,IAAL,CAMI,KANJ,KAEID,IAAA,EAAOH,KAZf,CAoBAV,SAAAE,QAAA,CAAkBS,CAAlB,CAAsBpB,QACtBS,UAAAG,SAAA,CAAkBH,SAAAC,OAAlB,CAAkCD,SAAAE,QAElCzB,WAAA4B,OAAA,CAAkBzB,MAAlB,CAEA,OAAOoB,UA1GX,CApBwH;",
"sources":["node_modules/Phaser/src/gameobjects/text/MeasureText.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$text$MeasureText\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar CanvasPool = require('../../display/canvas/CanvasPool');\r\n\r\n/**\r\n * Calculates the ascent, descent and fontSize of a given font style.\r\n *\r\n * @function Phaser.GameObjects.Text.MeasureText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Text.TextStyle} textStyle - The TextStyle object to measure.\r\n *\r\n * @return {object} An object containing the ascent, descent and fontSize of the TextStyle.\r\n */\r\nvar MeasureText = function (textStyle)\r\n{\r\n    // @property {HTMLCanvasElement} canvas - The canvas element that the text is rendered.\r\n    var canvas = CanvasPool.create(this);\r\n\r\n    // @property {HTMLCanvasElement} context - The context of the canvas element that the text is rendered to.\r\n    var context = canvas.getContext('2d');\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var width = Math.ceil(context.measureText(textStyle.testString).width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    var output = {\r\n        ascent: 0,\r\n        descent: 0,\r\n        fontSize: 0\r\n    };\r\n\r\n    if (!context.getImageData(0, 0, width, height))\r\n    {\r\n        output.ascent = baseline;\r\n        output.descent = baseline + 6;\r\n        output.fontSize = output.ascent + output.descent;\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var pixels = imagedata.length;\r\n    var line = width * 4;\r\n    var i;\r\n    var j;\r\n    var idx = 0;\r\n    var stop = false;\r\n\r\n    // ascent. scan from top to bottom until we find a non red pixel\r\n    for (i = 0; i < baseline; i++)\r\n    {\r\n        for (j = 0; j < line; j += 4)\r\n        {\r\n            if (imagedata[idx + j] !== 255)\r\n            {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop)\r\n        {\r\n            idx += line;\r\n        }\r\n        else\r\n        {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.ascent = baseline - i;\r\n\r\n    idx = pixels - line;\r\n    stop = false;\r\n\r\n    // descent. scan from bottom to top until we find a non red pixel\r\n    for (i = height; i > baseline; i--)\r\n    {\r\n        for (j = 0; j < line; j += 4)\r\n        {\r\n            if (imagedata[idx + j] !== 255)\r\n            {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop)\r\n        {\r\n            idx -= line;\r\n        }\r\n        else\r\n        {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.descent = (i - baseline);\r\n    output.fontSize = output.ascent + output.descent;\r\n\r\n    CanvasPool.remove(canvas);\r\n\r\n    return output;\r\n};\r\n\r\nmodule.exports = MeasureText;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","CanvasPool","MeasureText","textStyle","canvas","create","context","getContext","syncFont","width","Math","ceil","measureText","testString","baselineX","baseline","height","baselineY","fillStyle","fillRect","font","_font","textBaseline","fillText","output","ascent","descent","fontSize","getImageData","remove","imagedata","data","pixels","length","line","i","j","idx","stop"]
}
