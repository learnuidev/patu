{"version":3,"sources":["app/components.cljs"],"mappings":";;;;AAIA,AAAA,AAAMA,AAAUC,AAAKC;AAArB,AACE,AAAAC,AAAA,AAAAC,AAA2C,AAAA,AAAA,AAACO,AAAOV,AAA4BC;AAA/EC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAE,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAAJ,AAAAA;AAAA,AAAAK,AAAAL,AAAA,AAAkBM;AAAlB,AAAAD,AAAAL,AAAA,AAA8BO;AAA9B,AACME;AADN,AACsB,AAACC,AAAkBZ,AAAKC,AAAO,AAACY,AAAIJ;;AAD1D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGQD,AACD,AAAA,AAAA,AAAIC,AACYE,AAAgB,AAAA,AAAA,AAAIF;AAL3C,AAMwB,AAACK,AAAkBd,AAAKC;AANhD,AAAA,AAOuB,AAACY,AAAIJ;;AAG9B,AAAA,AAAMM,AAAWf;AAAjB,AACE,AAAA,AAAAG,AAAMa,AAAS,AAACC,AAAajB;AAA7B,AAAA,AAAA,AAEG,AAAI,AAACkB,AAAIF,AACP,AAAAG,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAJ,AAAAE;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAC,AAAAH;AAAA,AAAAI,AAk7E4C,AAAAuB,AAAA3B;AAl7E5CK,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAA,AAAAK,AAAAN,AAAAK,AAAM5B;AAAN,AAAA,AAAA,AAAA8B,AAAAJ,AAAA,AAAA,AAAA,AAAA,AACS1B,AAASF,AAASC,AAAKC;;AADhC,AAAA,AAAA4B,AAAA;;;;AAAA;;;;;AAAA,AAAAG,AAAA,AAAAC,AAAAN,AAAA,AAAAO,AAAA,AAAAC,AAAAf;;AAAA,AAAAY,AAAA,AAAAC,AAAAN,AAAA;;;AAAA,AAAA,AAAAS,AAAAhB,AAAMnB;AAAN,AAAA,AAAAoC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAAI,AAAAlB,AACSnB,AAASF,AAASC,AAAKC;;;AADhC;;;;AAAA,AAAA;;AAAA,AAAA,AAAAkB,AAAaH;AADf,AAAA,AAAA;;AAKL,AAAA,AAAMuB,AAAcC,AAAKC;AAAzB,AACE,AAAID;AAAKA;;AAAKC;;;AAEhB,AAAA,AAAMC,AAAY1C;AAAlB,AACE,AAAA,AAAAG,AAAMwC,AAAqB,AAAA,AAACC,AAAW5C;AAAvC,AAAAG,AACM0C,AAAuB,AAACC,AAAoB9C;AADlD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIqB,AAAA,AAACuC,AAAaI,AAEd,AAAA,AAACJ,AAAaM","names":["app.components/bug-item","conn","bug-id","map__54034","cljs.core/deref","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","description","resolved?","app.util/pull","toggle-resolve","app.bugs/toggle-resolved","cljs.core/not","app.util/retract-entity!","app.components/bugs-list","bug-ids","app.bugs/browse-ids","cljs.core/seq","iter__4529__auto__","s__54037","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__54039","cljs.core/chunk-buffer","i__54038","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__54036","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","app.components/with-default","item","default-val","app.components/statistics","total-resolved-bugs","app.bugs/count-by","total-unresolved-bugs","app.bugs/total-unresolved","cljs.core/chunk-first"],"sourcesContent":["(ns app.components\n  (:require [app.bugs :as b]\n            [app.util :as u]))\n\n(defn bug-item [conn bug-id]\n  (let [{:bug/keys [description resolved?]} @(u/pull conn '[* {:bug/author [*]}] bug-id)\n        toggle-resolve #(b/toggle-resolved conn bug-id (not resolved?))]\n    [:div\n     [:h2 description]\n     [:p (if resolved? \"Resolved\" \"Un Resolved\")]\n     [:button {:on-click toggle-resolve} (if resolved? \"Unresolve\" \"Resolve\")]\n     [:button {:on-click #(u/retract-entity! conn bug-id)\n               :disabled (not resolved?)}\n      \"Remove bug\"]]))\n\n(defn bugs-list [conn]\n  (let [bug-ids @(b/browse-ids conn)]\n    [:div\n     (if (seq bug-ids)\n       (for [bug-id bug-ids]\n         ^{:key bug-id} [bug-item conn bug-id])\n       [:div \"Nothing here... Looks like all the bugs are squashed\"])]))\n\n(defn with-default [item default-val]\n  (if item item default-val))\n\n(defn statistics [conn]\n  (let [total-resolved-bugs @(b/count-by conn true)\n        total-unresolved-bugs @(b/total-unresolved  conn)]\n    [:div\n     [:p \"Total Bugs Fixed: \"\n      [:span [:strong  (with-default total-resolved-bugs 0)]]]\n     [:p \"Total Bugs Remaining: \"\n      [:span [:strong  (with-default total-unresolved-bugs 0)]]]]))\n"]}