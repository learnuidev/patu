{"version":3,"sources":["app/examples/level/events.cljs"],"mappings":"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","names":["app.patu.events/reg-event","p__28748","vec__28749","cljs.core.nth","_","id","app.patu.cam/follow","app.patu.core/get-component","p__28753","vec__28754","player","app.patu.core/respawn","p__28757","vec__28758","p__28764","vec__28766","val","app.patu.components/jump","app.patu.utils.js_get","or__4126__auto__","p__28774","vec__28775","coin","pid","sid","score","app.patu.core/destroy","app.patu.audio/play","app.patu.utils/js-set!","p__28778","vec__28779","and__4115__auto__","app.patu.components/grounded?","app.patu.components/cur-anim?","app.patu.components/play","p__28782","vec__28783","cljs.core/not","app.patu.core/key-down?","p__28790","vec__28792","app.patu.components/flip-x","app.patu.components/move!","app.patu.core/neg","app.patu.components/speed","p__28799","vec__28800","p__28803","vec__28804","app.patu.core.go"],"sourcesContent":["(ns app.examples.level.events\n  (:require\n   [app.patu.utils :refer [js-get js-set!]]\n   [app.patu.core :as p]\n   [app.patu.events :refer [reg-event]]\n   [app.patu.cam :as cam]\n   [app.patu.audio :as a]\n   [app.patu.components :as c]))\n\n; === Events ====\n(reg-event\n :camera/follow\n (fn [_ [_ id]]\n   (cam/follow (p/get-component id))))\n\n(reg-event\n :player/respawn\n (fn [_ [_ id]]\n   (let [player (p/get-component id)]\n     (p/respawn player 0))))\n\n(reg-event\n :player/respawn?\n (fn [_ [_ id]]\n   (let [player (p/get-component id)]\n     (when (> (.. player -pos -y) 320)\n       (p/respawn player 0)))))\n\n(reg-event\n :player/super-jump\n (fn [_ [_ id val]]\n   (let [player (p/get-component id)]\n     (c/jump player (* (js-get player :jumpForce) (or val 2))))))\n\n(reg-event\n :player/collect-coin\n (fn [_ [_ coin pid sid]]\n   (let [player (p/get-component sid)\n         score (p/get-component sid)]\n     (p/destroy coin)\n     (a/play :sound/coin)\n     (js-set! score :value (inc (js-get score :value)))\n     (js-set! score :text (js-get score :value)))))\n\n(reg-event\n :player/move\n (fn [_ [_ pid]]\n   (let [player (p/get-component pid)]\n     (when (and (c/grounded? player) (not (c/cur-anim? player :move)))\n       (c/play player :move)))))\n\n(reg-event\n :player/idle\n (fn [_ [_ pid]]\n   (let [player (p/get-component pid)]\n     (when (and (not (p/key-down? :right)) (not (p/key-down? :right)))\n       (c/play player :idle)))))\n\n(reg-event\n :player/move-left\n (fn [_ [_ pid]]\n   (let [player (p/get-component pid)]\n     (c/flip-x player -1)\n     (c/move! player [(p/neg (c/speed player)) 0]))))\n(reg-event\n :player/move-right\n (fn [_ [_ pid]]\n   (let [player (p/get-component pid)]\n     (c/flip-x player 1)\n     (c/move! player [(c/speed player) 0]))))\n\n(reg-event\n :scene/go\n (fn [_ [_ sid]]\n   (p/go sid)))\n"]}