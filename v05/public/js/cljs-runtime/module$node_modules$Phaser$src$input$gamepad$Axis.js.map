{
"version":3,
"file":"module$node_modules$Phaser$src$input$gamepad$Axis.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,kDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsB1GC,MAAAA,CAAO,KAfCH,OAAAI,CAAQ,4CAARA,CAeD,EAAU,CAEjBC,WAEAF,QAAc,CAACG,GAAD,CAAMC,KAAN,CACd,CAQI,IAAAD,IAAA,CAAWA,GASX,KAAAE,OAAA,CAAcF,GAAAE,OASd,KAAAD,MAAA,CAAaA,KAWb,KAAAE,MAAA,CAAa,CAUb,KAAAC,UAAA,CAAiB,EA/CrB,CALiB,CAiEjBC,OAAQA,QAAS,CAACF,KAAD,CACjB,CACI,IAAAA,MAAA,CAAaA,KADjB,CAlEiB,CA8EjBG,SAAUA,QAAS,EACnB,CACI,MAAQC,KAAAC,IAAA,CAAS,IAAAL,MAAT,CAAD,CAAwB,IAAAC,UAAxB,CAA0C,CAA1C,CAA8C,IAAAD,MADzD,CA/EiB,CAyFjBM,QAASA,QAAS,EAClB,CAEI,IAAAP,OAAA,CADA,IAAAF,IACA,CADW,IADf,CA1FiB,CAAV,CAiGXL,OAAAC,QAAA,CAAiBC,MAvH6F;",
"sources":["node_modules/Phaser/src/input/gamepad/Axis.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$input$gamepad$Axis\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\n\r\n/**\r\n * @classdesc\r\n * Contains information about a specific Gamepad Axis.\r\n * Axis objects are created automatically by the Gamepad as they are needed.\r\n *\r\n * @class Axis\r\n * @memberOf Phaser.Input.Gamepad\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Input.Gamepad.Gamepad} pad - A reference to the Gamepad that this Axis belongs to.\r\n * @param {integer} index - The index of this Axis.\r\n */\r\nvar Axis = new Class({\r\n\r\n    initialize:\r\n\r\n    function Axis (pad, index)\r\n    {\r\n        /**\r\n         * A reference to the Gamepad that this Axis belongs to.\r\n         *\r\n         * @name Phaser.Input.Gamepad.Axis#pad\r\n         * @type {Phaser.Input.Gamepad.Gamepad}\r\n         * @since 3.0.0\r\n         */\r\n        this.pad = pad;\r\n\r\n        /**\r\n         * An event emitter to use to emit the axis events.\r\n         *\r\n         * @name Phaser.Input.Gamepad.Axis#events\r\n         * @type {Phaser.Events.EventEmitter}\r\n         * @since 3.0.0\r\n         */\r\n        this.events = pad.events;\r\n\r\n        /**\r\n         * The index of this Axis.\r\n         *\r\n         * @name Phaser.Input.Gamepad.Axis#index\r\n         * @type {integer}\r\n         * @since 3.0.0\r\n         */\r\n        this.index = index;\r\n\r\n        /**\r\n         * The raw axis value, between -1 and 1 with 0 being dead center.\r\n         * Use the method `getValue` to get a normalized value with the threshold applied.\r\n         *\r\n         * @name Phaser.Input.Gamepad.Axis#value\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.value = 0;\r\n\r\n        /**\r\n         * Movement tolerance threshold below which axis values are ignored in `getValue`.\r\n         *\r\n         * @name Phaser.Input.Gamepad.Axis#threshold\r\n         * @type {number}\r\n         * @default 0.1\r\n         * @since 3.0.0\r\n         */\r\n        this.threshold = 0.1;\r\n    },\r\n\r\n    /**\r\n     * Internal update handler for this Axis.\r\n     * Called automatically by the Gamepad as part of its update.\r\n     *\r\n     * @method Phaser.Input.Gamepad.Axis#update\r\n     * @private\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The value of the axis movement.\r\n     */\r\n    update: function (value)\r\n    {\r\n        this.value = value;\r\n    },\r\n\r\n    /**\r\n     * Applies the `threshold` value to the axis and returns it.\r\n     *\r\n     * @method Phaser.Input.Gamepad.Axis#getValue\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The axis value, adjusted for the movement threshold.\r\n     */\r\n    getValue: function ()\r\n    {\r\n        return (Math.abs(this.value) < this.threshold) ? 0 : this.value;\r\n    },\r\n\r\n    /**\r\n     * Destroys this Axis instance and releases external references it holds.\r\n     *\r\n     * @method Phaser.Input.Gamepad.Axis#destroy\r\n     * @since 3.10.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.pad = null;\r\n        this.events = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Axis;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Axis","Class","initialize","pad","index","events","value","threshold","update","getValue","Math","abs","destroy"]
}
