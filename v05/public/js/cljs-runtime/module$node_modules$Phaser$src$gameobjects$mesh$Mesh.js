shadow$provide.module$node_modules$Phaser$src$gameobjects$mesh$Mesh=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");exports=require("module$node_modules$Phaser$src$gameobjects$components$index");var GameObject=require("module$node_modules$Phaser$src$gameobjects$GameObject");require=require("module$node_modules$Phaser$src$gameobjects$mesh$MeshRender");require=new global({Extends:GameObject,Mixins:[exports.Alpha,exports.BlendMode,exports.Depth,exports.Flip,
exports.GetBounds,exports.Mask,exports.Origin,exports.Pipeline,exports.ScaleMode,exports.Size,exports.Texture,exports.Transform,exports.Visible,exports.ScrollFactor,require],initialize:function(scene,x,y,vertices,uv,colors,alphas,texture,frame){GameObject.call(this,scene,"Mesh");if(vertices.length!==uv.length)throw Error("Mesh Vertex count must match UV count");scene=vertices.length/2|0;if(0<colors.length&&colors.length<scene)throw Error("Mesh Color count must match Vertex count");if(0<alphas.length&&
alphas.length<scene)throw Error("Mesh Alpha count must match Vertex count");var i;if(0===colors.length)for(i=0;i<scene;++i)colors[i]=16777215;if(0===alphas.length)for(i=0;i<scene;++i)alphas[i]=1;this.vertices=new Float32Array(vertices);this.uv=new Float32Array(uv);this.colors=new Uint32Array(colors);this.alphas=new Float32Array(alphas);this.tintFill=!1;this.setTexture(texture,frame);this.setPosition(x,y);this.setSizeToFrame();this.setOrigin();this.initPipeline()}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$mesh$Mesh.js.map
