{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$components$SetTileIndexCallback.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,wEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyCpID,MAAAC,QAAA,CAnB2BC,QAAS,CAACC,OAAD,CAAUC,QAAV,CAAoBC,eAApB,CAAqCC,KAArC,CACpC,CACI,GAAuB,QAAvB,GAAI,MAAOH,QAAX,CAEIG,KAAAC,UAAA,CAAgBJ,OAAhB,CAAA,CAAyC,IAAd,GAACC,QAAD,CACrB,CAAEA,SAAUA,QAAZ,CAAsBC,gBAAiBA,eAAvC,CADqB,CAErBG,IAAAA,EAJV,KAQI,KADJ,IACaC,EAAI,CADjB,CACoBC,IAAMP,OAAAQ,OAAtB,CAAsCF,CAAtC,CAA0CC,GAA1C,CAA+CD,CAAA,EAA/C,CAEIH,KAAAC,UAAA,CAAgBJ,OAAA,CAAQM,CAAR,CAAhB,CAAA,CAA4C,IAAd,GAACL,QAAD,CACxB,CAAEA,SAAUA,QAAZ,CAAsBC,gBAAiBA,eAAvC,CADwB,CAExBG,IAAAA,EAblB,CAvBoI;",
"sources":["node_modules/Phaser/src/tilemaps/components/SetTileIndexCallback.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$components$SetTileIndexCallback\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Sets a global collision callback for the given tile index within the layer. This will affect all\r\n * tiles on this layer that have the same index. If a callback is already set for the tile index it\r\n * will be replaced. Set the callback to null to remove it. If you want to set a callback for a tile\r\n * at a specific location on the map then see setTileLocationCallback.\r\n *\r\n * @function Phaser.Tilemaps.Components.SetTileIndexCallback\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {(integer|array)} indexes - Either a single tile index, or an array of tile indexes to have a collision callback set for.\r\n * @param {function} callback - The callback that will be invoked when the tile is collided with.\r\n * @param {object} callbackContext - The context under which the callback is called.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n */\r\nvar SetTileIndexCallback = function (indexes, callback, callbackContext, layer)\r\n{\r\n    if (typeof indexes === 'number')\r\n    {\r\n        layer.callbacks[indexes] = (callback !== null)\r\n            ? { callback: callback, callbackContext: callbackContext }\r\n            : undefined;\r\n    }\r\n    else\r\n    {\r\n        for (var i = 0, len = indexes.length; i < len; i++)\r\n        {\r\n            layer.callbacks[indexes[i]] = (callback !== null)\r\n                ? { callback: callback, callbackContext: callbackContext }\r\n                : undefined;\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = SetTileIndexCallback;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","SetTileIndexCallback","indexes","callback","callbackContext","layer","callbacks","undefined","i","len","length"]
}
