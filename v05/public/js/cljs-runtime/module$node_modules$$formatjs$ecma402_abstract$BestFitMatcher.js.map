{
"version":3,
"file":"module$node_modules$$formatjs$ecma402_abstract$BestFitMatcher.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE1HC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,eAAA,CAAyB,IAAK,EAC9B,KAAIC,sBAAwBP,OAAA,CAAQ,oEAAR,CAA5B,CACIQ,QAAUR,OAAA,CAAQ,sDAAR,CA+CdE,QAAAI,eAAA,CAxCAA,QAAuB,CAACG,gBAAD,CAAmBC,gBAAnB,CAAqCC,gBAArC,CAAuD,CAC1E,IAAIC,4BAA8B,EAAlC,CACIC;AAA4B,IAAIC,GACpCL,iBAAAM,QAAA,CAAyB,QAAS,CAACC,MAAD,CAAS,CACvC,IAAIC,gBAAkBC,CAAA,IAAIC,IAAAC,OAAJ,CAAgBJ,MAAhB,CAAAE,UAAA,EAAAG,SAAA,EAGtBT,4BAAA,CAA4BK,eAA5B,CAAA,CAA+CD,MAC/CH,0BAAAS,IAAA,CAA8BL,eAA9B,CALuC,CAA3C,CAQA,KADA,IAAIM,WAAJ,CACSC,GAAK,CAAd,CAAwDA,EAAxD,CAAsCd,gBAAuBe,OAA7D,EAEQF,CAAAA,WAFR,CAAwFC,EAAA,EAAxF,CAA8F,CAKtFE,WAAAA,CAL8BhB,gBAC1BiB,CAAmBH,EAAnBG,CAIgBC,QAAA,CAAUpB,OAAAqB,iCAAV,CAAoD,EAApD,CACxB,IAAIpB,gBAAAqB,IAAA,CAAqBJ,WAArB,CAAJ,CAEI,KAEJ,IAAIb,yBAAAiB,IAAA,CAA8BJ,WAA9B,CAAJ,CAAsD,CAClDH,WAAA,CAAcX,2BAAA,CAA4Bc,WAA5B,CACd;KAFkD,CAItD,IAAIV,gBAAS,IAAIG,IAAAC,OAAJ,CAAgBM,WAAhB,CACTK,YAAAA,CAA2Bf,eAAAgB,SAAA,EAAAX,SAAA,EAC3BY,gBAAAA,CAA2BjB,eAAAE,SAAA,EAAAG,SAAA,EAE/B,IAAIR,yBAAAiB,IAAA,CAA8BG,eAA9B,CAAJ,CAA6D,CACzDV,WAAA,CAAcX,2BAAA,CAA4BqB,eAA5B,CACd,MAFyD,CAK7DV,WAAA,CAAchB,qBAAA2B,oBAAA,CAA0CrB,yBAA1C,CAAqEkB,WAArE,CAvB4E,CAyB9F,MAAO,CACHf,OAAQO,WAARP,EAAuBL,gBAAA,EADpB,CApCmE,CAZ4C;",
"sources":["node_modules/@formatjs/ecma402-abstract/BestFitMatcher.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$ecma402_abstract$BestFitMatcher\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BestFitMatcher = void 0;\nvar BestAvailableLocale_1 = require(\"./BestAvailableLocale\");\nvar utils_1 = require(\"./utils\");\n/**\n * https://tc39.es/ecma402/#sec-bestfitmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */\nfunction BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n    var minimizedAvailableLocaleMap = {};\n    var minimizedAvailableLocales = new Set();\n    availableLocales.forEach(function (locale) {\n        var minimizedLocale = new Intl.Locale(locale)\n            .minimize()\n            .toString();\n        minimizedAvailableLocaleMap[minimizedLocale] = locale;\n        minimizedAvailableLocales.add(minimizedLocale);\n    });\n    var foundLocale;\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n        var l = requestedLocales_1[_i];\n        if (foundLocale) {\n            break;\n        }\n        var noExtensionLocale = l.replace(utils_1.UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        if (availableLocales.has(noExtensionLocale)) {\n            foundLocale = noExtensionLocale;\n            break;\n        }\n        if (minimizedAvailableLocales.has(noExtensionLocale)) {\n            foundLocale = minimizedAvailableLocaleMap[noExtensionLocale];\n            break;\n        }\n        var locale = new Intl.Locale(noExtensionLocale);\n        var maximizedRequestedLocale = locale.maximize().toString();\n        var minimizedRequestedLocale = locale.minimize().toString();\n        // Check minimized locale\n        if (minimizedAvailableLocales.has(minimizedRequestedLocale)) {\n            foundLocale = minimizedAvailableLocaleMap[minimizedRequestedLocale];\n            break;\n        }\n        // Lookup algo on maximized locale\n        foundLocale = BestAvailableLocale_1.BestAvailableLocale(minimizedAvailableLocales, maximizedRequestedLocale);\n    }\n    return {\n        locale: foundLocale || getDefaultLocale(),\n    };\n}\nexports.BestFitMatcher = BestFitMatcher;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","BestFitMatcher","BestAvailableLocale_1","utils_1","availableLocales","requestedLocales","getDefaultLocale","minimizedAvailableLocaleMap","minimizedAvailableLocales","Set","forEach","locale","minimizedLocale","minimize","Intl","Locale","toString","add","foundLocale","_i","length","noExtensionLocale","l","replace","UNICODE_EXTENSION_SEQUENCE_REGEX","has","maximizedRequestedLocale","maximize","minimizedRequestedLocale","BestAvailableLocale"]
}
