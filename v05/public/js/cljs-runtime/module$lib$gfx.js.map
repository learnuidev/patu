{
"version":3,
"file":"module$lib$gfx.js",
"lineCount":416,
"mappings":"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",
"sources":["lib/gfx.js"],
"sourcesContent":["import {\n  vec2,\n  vec3,\n  quad,\n  rgba,\n  mat4,\n  isVec2,\n  isVec3,\n  isColor,\n  isMat4\n} from \"/lib/math.js\";\n\nimport { deepEq } from \"/lib/utils.js\";\n\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nfunction originPt(orig) {\n  switch (orig) {\n    case \"topleft\":\n      return vec2(-1, -1);\n    case \"top\":\n      return vec2(0, -1);\n    case \"topright\":\n      return vec2(1, -1);\n    case \"left\":\n      return vec2(-1, 0);\n    case \"center\":\n      return vec2(0, 0);\n    case \"right\":\n      return vec2(1, 0);\n    case \"botleft\":\n      return vec2(-1, 1);\n    case \"bot\":\n      return vec2(0, 1);\n    case \"botright\":\n      return vec2(1, 1);\n    default:\n      return orig;\n  }\n}\n\nfunction gfxInit(gl, gconf) {\n  const texFilter = (() => {\n    switch (gconf.texFilter) {\n      case \"linear\":\n        return gl.LINEAR;\n      case \"nearest\":\n        return gl.NEAREST;\n      default:\n        return gl.NEAREST;\n    }\n  })();\n\n  const gfx = (() => {\n    const defProg = makeProgram(DEF_VERT, DEF_FRAG);\n    const emptyTex = makeTex(\n      new ImageData(new Uint8ClampedArray([255, 255, 255, 255]), 1, 1)\n    );\n\n    const c = gconf.clearColor || rgba(0, 0, 0, 1);\n\n    gl.clearColor(c.r, c.g, c.b, c.a);\n    gl.enable(gl.BLEND);\n    gl.blendFuncSeparate(\n      gl.SRC_ALPHA,\n      gl.ONE_MINUS_SRC_ALPHA,\n      gl.ONE,\n      gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    const vbuf = gl.createBuffer();\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n    gl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    const ibuf = gl.createBuffer();\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    const bgTex = makeTex(\n      new ImageData(\n        new Uint8ClampedArray([\n          128,\n          128,\n          128,\n          255,\n          190,\n          190,\n          190,\n          255,\n          190,\n          190,\n          190,\n          255,\n          128,\n          128,\n          128,\n          255\n        ]),\n        2,\n        2\n      )\n    );\n\n    return {\n      drawCalls: 0,\n      lastDrawCalls: 0,\n      defProg: defProg,\n      curProg: defProg,\n      defTex: emptyTex,\n      curTex: emptyTex,\n      curUniform: {},\n      vbuf: vbuf,\n      ibuf: ibuf,\n      vqueue: [],\n      iqueue: [],\n      transform: mat4(),\n      transformStack: [],\n      clearColor: c,\n      bgTex: bgTex\n    };\n  })();\n\n  frameStart();\n  frameEnd();\n\n  function powerOfTwo(n) {\n    return (Math.log(n) / Math.log(2)) % 1 === 0;\n  }\n\n  function makeTex(data) {\n    const id = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, id);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, texFilter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, texFilter);\n\n    const wrap = (() => {\n      if (powerOfTwo(data.width) && powerOfTwo(data.height)) {\n        return gl.REPEAT;\n      } else {\n        return gl.CLAMP_TO_EDGE;\n      }\n    })();\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    return {\n      width: data.width,\n      height: data.height,\n      bind() {\n        gl.bindTexture(gl.TEXTURE_2D, id);\n      },\n      unbind() {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n      }\n    };\n  }\n\n  function makeProgram(vertSrc = DEF_VERT, fragSrc = DEF_FRAG) {\n    let msg;\n    const vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc || DEF_VERT);\n    const fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc || DEF_FRAG);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    gl.shaderSource(vertShader, vcode);\n    gl.shaderSource(fragShader, fcode);\n    gl.compileShader(vertShader);\n    gl.compileShader(fragShader);\n\n    if ((msg = gl.getShaderInfoLog(vertShader))) {\n      throw new Error(msg);\n    }\n\n    if ((msg = gl.getShaderInfoLog(fragShader))) {\n      throw new Error(msg);\n    }\n\n    const id = gl.createProgram();\n\n    gl.attachShader(id, vertShader);\n    gl.attachShader(id, fragShader);\n\n    gl.bindAttribLocation(id, 0, \"a_pos\");\n    gl.bindAttribLocation(id, 1, \"a_uv\");\n    gl.bindAttribLocation(id, 2, \"a_color\");\n\n    gl.linkProgram(id);\n\n    if ((msg = gl.getProgramInfoLog(id))) {\n      // for some reason on safari it always has a \"\\n\" msg\n      if (msg !== \"\\n\") {\n        throw new Error(msg);\n      }\n    }\n\n    return {\n      bind() {\n        gl.useProgram(id);\n      },\n\n      unbind() {\n        gl.useProgram(null);\n      },\n\n      bindAttribs() {\n        gl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n        gl.enableVertexAttribArray(0);\n        gl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n        gl.enableVertexAttribArray(1);\n        gl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n        gl.enableVertexAttribArray(2);\n      },\n\n      send(uniform) {\n        this.bind();\n        // TODO: slow for vec2\n        for (const name in uniform) {\n          const val = uniform[name];\n          const loc = gl.getUniformLocation(id, name);\n          if (typeof val === \"number\") {\n            gl.uniform1f(loc, val);\n          } else if (isMat4(val)) {\n            // @ts-ignore\n            gl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n          } else if (isColor(val)) {\n            // @ts-ignore\n            gl.uniform4f(loc, val.r, val.g, val.b, val.a);\n          } else if (isVec3(val)) {\n            // @ts-ignore\n            gl.uniform3f(loc, val.x, val.y, val.z);\n          } else if (isVec2(val)) {\n            // @ts-ignore\n            gl.uniform2f(loc, val.x, val.y);\n          }\n        }\n        this.unbind();\n      }\n    };\n  }\n\n  function makeFont(tex, gw, gh, chars) {\n    const cols = tex.width / gw;\n    const rows = tex.height / gh;\n    const qw = 1.0 / cols;\n    const qh = 1.0 / rows;\n    const map = {};\n    const charMap = chars.split(\"\").entries();\n\n    for (const [i, ch] of charMap) {\n      map[ch] = vec2((i % cols) * qw, Math.floor(i / cols) * qh);\n    }\n\n    return {\n      tex: tex,\n      map: map,\n      qw: qw,\n      qh: qh\n    };\n  }\n\n  // TODO: expose\n  function drawRaw(\n    verts,\n    indices,\n    tex = gfx.defTex,\n    prog = gfx.defProg,\n    uniform = {}\n  ) {\n    tex = tex ? tex : gfx.defTex;\n    prog = prog ? prog : gfx.defProg;\n\n    // flush on texture / shader change and overflow\n    if (\n      tex !== gfx.curTex ||\n      prog !== gfx.curProg ||\n      !deepEq(gfx.curUniform, uniform) ||\n      gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT ||\n      gfx.iqueue.length + indices.length > QUEUE_COUNT\n    ) {\n      flush();\n    }\n\n    gfx.curTex = tex;\n    gfx.curProg = prog;\n    gfx.curUniform = uniform;\n\n    const nIndices = indices.map(i => {\n      return i + gfx.vqueue.length / STRIDE;\n    });\n\n    const nVerts = verts\n      .map(v => {\n        const pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n        return [\n          pt.x,\n          pt.y,\n          v.pos.z,\n          v.uv.x,\n          v.uv.y,\n          v.color.r,\n          v.color.g,\n          v.color.b,\n          v.color.a\n        ];\n      })\n      .flat();\n\n    nIndices.forEach(i => gfx.iqueue.push(i));\n    nVerts.forEach(v => gfx.vqueue.push(v));\n  }\n\n  function flush() {\n    if (\n      !gfx.curTex ||\n      !gfx.curProg ||\n      gfx.vqueue.length === 0 ||\n      gfx.iqueue.length === 0\n    ) {\n      return;\n    }\n\n    gfx.curProg.send(gfx.curUniform);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n    gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n    gfx.curProg.bind();\n    gfx.curProg.bindAttribs();\n    gfx.curTex.bind();\n    gl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n    gfx.curTex.unbind();\n    gfx.curProg.unbind();\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    gfx.iqueue = [];\n    gfx.vqueue = [];\n\n    gfx.drawCalls++;\n  }\n\n  function frameStart() {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    if (!gconf.clearColor) {\n      drawQuad({\n        width: width(),\n        height: height(),\n        quad: quad(\n          0,\n          0,\n          (width() * scale()) / BG_GRID_SIZE,\n          (height() * scale()) / BG_GRID_SIZE\n        ),\n        tex: gfx.bgTex\n      });\n    }\n\n    gfx.drawCalls = 0;\n    gfx.transformStack = [];\n    gfx.transform = mat4();\n  }\n\n  function frameEnd() {\n    flush();\n    gfx.lastDrawCalls = gfx.drawCalls;\n  }\n\n  function drawCalls() {\n    return gfx.lastDrawCalls;\n  }\n\n  function toNDC(pt) {\n    return vec2((pt.x / width()) * 2 - 1, (-pt.y / height()) * 2 + 1);\n  }\n\n  // TODO: don't use push as prefix for these\n  function pushMatrix(m) {\n    gfx.transform = m.clone();\n  }\n\n  function pushTranslate(p) {\n    if (!p || (p.x === 0 && p.y === 0)) {\n      return;\n    }\n    gfx.transform = gfx.transform.translate(p);\n  }\n\n  function pushScale(p) {\n    if (!p || (p.x === 1 && p.y === 1)) {\n      return;\n    }\n    gfx.transform = gfx.transform.scale(p);\n  }\n\n  function pushRotateX(a) {\n    if (!a) {\n      return;\n    }\n    gfx.transform = gfx.transform.rotateX(a);\n  }\n\n  function pushRotateY(a) {\n    if (!a) {\n      return;\n    }\n    gfx.transform = gfx.transform.rotateY(a);\n  }\n\n  function pushRotateZ(a) {\n    if (!a) {\n      return;\n    }\n    gfx.transform = gfx.transform.rotateZ(a);\n  }\n\n  function pushTransform() {\n    gfx.transformStack.push(gfx.transform.clone());\n  }\n\n  function popTransform() {\n    if (gfx.transformStack.length > 0) {\n      gfx.transform = gfx.transformStack.pop();\n    }\n  }\n\n  // TODO: clean\n  // draw a textured quad\n  function drawQuad(conf = {}) {\n    const w = conf.width || 0;\n    const h = conf.height || 0;\n    const pos = conf.pos || vec2(0, 0);\n    const origin = originPt(conf.origin || DEF_ORIGIN);\n    const offset = origin.scale(vec2(w, h).scale(-0.5));\n    const scale = vec2(conf.scale || 1);\n    const rot = conf.rot || 0;\n    const q = conf.quad || quad(0, 0, 1, 1);\n    const z = 1 - (conf.z || 0);\n    const color = conf.color || rgba(1, 1, 1, 1);\n\n    pushTransform();\n    pushTranslate(pos);\n    pushScale(scale);\n    pushRotateZ(rot);\n    pushTranslate(offset);\n\n    drawRaw(\n      [\n        {\n          pos: vec3(-w / 2, h / 2, z),\n          uv: vec2(q.x, q.y + q.h),\n          color: color\n        },\n        {\n          pos: vec3(-w / 2, -h / 2, z),\n          uv: vec2(q.x, q.y),\n          color: color\n        },\n        {\n          pos: vec3(w / 2, -h / 2, z),\n          uv: vec2(q.x + q.w, q.y),\n          color: color\n        },\n        {\n          pos: vec3(w / 2, h / 2, z),\n          uv: vec2(q.x + q.w, q.y + q.h),\n          color: color\n        }\n      ],\n      [0, 1, 3, 1, 2, 3],\n      conf.tex,\n      conf.prog,\n      conf.uniform\n    );\n\n    popTransform();\n  }\n\n  function drawTexture(tex, conf = {}) {\n    const q = conf.quad || quad(0, 0, 1, 1);\n    const w = tex.width * q.w;\n    const h = tex.height * q.h;\n\n    drawQuad({\n      ...conf,\n      tex: tex,\n      quad: q,\n      width: w,\n      height: h\n    });\n  }\n\n  function drawRect(pos, w, h, conf = {}) {\n    drawQuad({\n      ...conf,\n      pos: pos,\n      width: w,\n      height: h\n    });\n  }\n\n  function drawRectStroke(pos, w, h, conf = {}) {\n    const offset = originPt(conf.origin || DEF_ORIGIN)\n      .scale(vec2(w, h))\n      .scale(0.5);\n    const p1 = pos.add(vec2(-w / 2, -h / 2)).sub(offset);\n    const p2 = pos.add(vec2(-w / 2, h / 2)).sub(offset);\n    const p3 = pos.add(vec2(w / 2, h / 2)).sub(offset);\n    const p4 = pos.add(vec2(w / 2, -h / 2)).sub(offset);\n\n    drawLine(p1, p2, conf);\n    drawLine(p2, p3, conf);\n    drawLine(p3, p4, conf);\n    drawLine(p4, p1, conf);\n  }\n\n  function drawLine(p1, p2, conf = {}) {\n    const w = conf.width || 1;\n    const h = p1.dist(p2);\n    const rot = Math.PI / 2 - p1.angle(p2);\n\n    drawQuad({\n      ...conf,\n      pos: p1.add(p2).scale(0.5),\n      width: w,\n      height: h,\n      rot: rot,\n      origin: \"center\"\n    });\n  }\n\n  // format text and return a list of chars with their calculated position\n  function fmtText(text, font, conf = {}) {\n    const chars = (text + \"\").split(\"\");\n    const gw = font.qw * font.tex.width;\n    const gh = font.qh * font.tex.height;\n    const size = conf.size || gh;\n    const scale = vec2(size / gh).scale(vec2(conf.scale || 1));\n    const cw = scale.x * gw;\n    const ch = scale.y * gh;\n    let curX = 0;\n    let th = ch;\n    let tw = 0;\n    const flines = [[]];\n\n    // check new lines and calc area size\n    for (const char of chars) {\n      // go new line if \\n or exceeds wrap value\n      if (char === \"\\n\" || (conf.width ? curX + cw > conf.width : false)) {\n        th += ch;\n        curX = 0;\n        flines.push([]);\n      }\n      if (char !== \"\\n\") {\n        flines[flines.length - 1].push(char);\n        curX += cw;\n      }\n      tw = Math.max(tw, curX);\n    }\n\n    if (conf.width) {\n      tw = conf.width;\n    }\n\n    // whole text offset\n    const fchars = [];\n    const pos = vec2(conf.pos || 0);\n    const offset = originPt(conf.origin || DEF_ORIGIN).scale(0.5);\n    // this math is complicated i forgot how it works instantly\n    const ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n    const oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\n    flines.forEach((line, ln) => {\n      // line offset\n      const oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n      line.forEach((char, cn) => {\n        const qpos = font.map[char];\n        const x = cn * cw;\n        const y = ln * ch;\n        if (qpos) {\n          fchars.push({\n            tex: font.tex,\n            quad: quad(qpos.x, qpos.y, font.qw, font.qh),\n            ch: char,\n            pos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n            color: conf.color,\n            origin: conf.origin,\n            scale: scale,\n            z: conf.z\n          });\n        }\n      });\n    });\n\n    return {\n      width: tw,\n      height: th,\n      chars: fchars\n    };\n  }\n\n  function drawText(txt, font, conf = {}) {\n    drawFmtText(fmtText(txt, font, conf));\n  }\n\n  // TODO: rotation\n  function drawFmtText(ftext) {\n    for (const ch of ftext.chars) {\n      drawQuad({\n        tex: ch.tex,\n        width: ch.tex.width * ch.quad.w,\n        height: ch.tex.height * ch.quad.h,\n        pos: ch.pos,\n        scale: ch.scale,\n        color: ch.color,\n        quad: ch.quad,\n        // TODO: topleft\n        origin: \"center\",\n        z: ch.z\n      });\n    }\n  }\n\n  // get current canvas width\n  function width() {\n    return gl.drawingBufferWidth / scale();\n  }\n\n  // get current canvas height\n  function height() {\n    return gl.drawingBufferHeight / scale();\n  }\n\n  // type Center = number | number[]\n\n  // function center(type = \"height\"): Center {\n  //   const centered = [height() * 2, width() * 2]\n  //   switch (type) {\n  //     case \"height\": return centered[0]\n  //     case \"width\": return centered[1]\n  //     default:\n  //       return centered;\n  //   }\n  //   return type === \"height\"\n  //     ? height() * 2\n  //     : width() * 2\n  // }\n\n  function scale() {\n    return gconf.scale || 1;\n  }\n\n  function clearColor() {\n    return gfx.clearColor.clone();\n  }\n\n  // TODO: type this\n  return {\n    width,\n    height,\n    scale,\n    makeTex,\n    makeProgram,\n    makeFont,\n    drawTexture,\n    drawText,\n    drawFmtText,\n    drawRect,\n    drawRectStroke,\n    drawLine,\n    fmtText,\n    frameStart,\n    frameEnd,\n    pushTransform,\n    popTransform,\n    pushMatrix,\n    drawCalls,\n    clearColor\n  };\n}\n\nexport { originPt, gfxInit };\n"],
"names":["DEF_ORIGIN","STRIDE","QUEUE_COUNT","BG_GRID_SIZE","VERT_TEMPLATE","FRAG_TEMPLATE","DEF_VERT","DEF_FRAG","originPt","orig","vec2","gfxInit","gl","gconf","powerOfTwo","n","Math","log","makeTex","data","id","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","texFilter","TEXTURE_MAG_FILTER","wrap","width","height","REPEAT","CLAMP_TO_EDGE","TEXTURE_WRAP_S","TEXTURE_WRAP_T","bind","unbind","makeProgram","vertSrc","fragSrc","msg","vcode","replace","fcode","vertShader","createShader","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderInfoLog","Error","createProgram","attachShader","bindAttribLocation","linkProgram","getProgramInfoLog","useProgram","bindAttribs","vertexAttribPointer","FLOAT","enableVertexAttribArray","send","uniform","name","val","loc","getUniformLocation","uniform1f","isMat4","uniformMatrix4fv","Float32Array","m","isColor","uniform4f","r","g","b","a","isVec3","uniform3f","x","y","z","isVec2","uniform2f","makeFont","tex","gw","gh","chars","cols","rows","qw","qh","map","charMap","split","entries","i","ch","floor","drawRaw","verts","indices","prog","gfx","defTex","defProg","curTex","curProg","deepEq","curUniform","vqueue","length","iqueue","flush","nIndices","nVerts","v","pt","toNDC","transform","multVec2","pos","xy","uv","color","flat","forEach","push","bindBuffer","ARRAY_BUFFER","vbuf","bufferSubData","ELEMENT_ARRAY_BUFFER","ibuf","Uint16Array","drawElements","TRIANGLES","UNSIGNED_SHORT","drawCalls","frameStart","clear","COLOR_BUFFER_BIT","clearColor","drawQuad","quad","scale","bgTex","transformStack","mat4","frameEnd","lastDrawCalls","pushMatrix","clone","pushTranslate","p","translate","pushScale","pushRotateX","rotateX","pushRotateY","rotateY","pushRotateZ","rotateZ","pushTransform","popTransform","pop","conf","w","h","origin","offset","rot","q","rgba","vec3","drawTexture","drawRect","drawRectStroke","p1","add","sub","p2","p3","p4","drawLine","dist","PI","angle","fmtText","text","font","size","cw","curX","th","tw","flines","char","max","fchars","ox","oy","line","ln","oxl","cn","qpos","drawText","txt","drawFmtText","ftext","drawingBufferWidth","drawingBufferHeight","LINEAR","NEAREST","emptyTex","ImageData","Uint8ClampedArray","c","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","createBuffer","bufferData","DYNAMIC_DRAW","$jscomp$tmp$exports$module$name"]
}
