{"version":3,"sources":["app/kaboomv5/math.cljs"],"mappings":"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","names":["app$kaboomv5$math$IColor$lighten$dyn","x__4428__auto__","m__4429__auto__","app.kaboomv5.math/lighten","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","app$kaboomv5$math$IColor$darken$dyn","app.kaboomv5.math/darken","app$kaboomv5$math$IColor$invert$dyn","app.kaboomv5.math/invert","app$kaboomv5$math$IColor$dark_QMARK_$dyn","app.kaboomv5.math/dark?","app$kaboomv5$math$IColor$light_QMARK_$dyn","app.kaboomv5.math/light?","app.kaboomv5.math/IColor","this","a","p","app$kaboomv5$math$IVector2$add$dyn","app.kaboomv5.math/add","app$kaboomv5$math$IVector2$subtract$dyn","app.kaboomv5.math/subtract","app$kaboomv5$math$IVector2$scale_BANG_$dyn","app.kaboomv5.math/scale!","app$kaboomv5$math$IVector2$dist$dyn","app.kaboomv5.math/dist","app$kaboomv5$math$IVector2$len$dyn","app.kaboomv5.math/len","app$kaboomv5$math$IVector2$unit$dyn","app.kaboomv5.math/unit","app$kaboomv5$math$IVector2$normal$dyn","app.kaboomv5.math/normal","app$kaboomv5$math$IVector2$dot$dyn","app.kaboomv5.math/dot","app$kaboomv5$math$IVector2$angle$dyn","app.kaboomv5.math/angle","app$kaboomv5$math$IVector2$lerp_BANG_$dyn","app.kaboomv5.math/lerp!","app$kaboomv5$math$IVector2$to_fixed$dyn","app.kaboomv5.math/to-fixed","app.kaboomv5.math/IVector2","this__4380__auto__","k__4381__auto__","this__4382__auto__","k64446","else__4383__auto__","G__64450","cljs.core/Keyword","r","g","b","cljs.core.get","__extmap","this__4399__auto__","f__4400__auto__","init__4401__auto__","cljs.core.reduce","ret__4402__auto__","p__64451","vec__64452","k__4403__auto__","cljs.core.nth","v__4404__auto__","this__4394__auto__","writer__4395__auto__","opts__4396__auto__","pr-pair__4397__auto__","keyval__4398__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__64445","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4378__auto__","__meta","this__4375__auto__","__hash","this__4384__auto__","cljs.core/count","this__4376__auto__","h__4238__auto__","coll__4377__auto__","cljs.core/hash-unordered-coll","this64447","other64448","cljs.core._EQ_","this__4389__auto__","k__4390__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4387__auto__","k__4388__auto__","pred__64455","cljs.core/keyword-identical?","expr__64456","cljs.core.assoc","this__4392__auto__","cljs.core/seq","cljs.core/MapEntry","this__4379__auto__","this__4385__auto__","entry__4386__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","app.kaboomv5.math/Color","this__4423__auto__","cljs.core/List","writer__4424__auto__","cljs.core/-write","G__64449","extmap__4419__auto__","G__64458","cljs.core/record?","app.kaboomv5.math/->Color","app.kaboomv5.math/map->Color","k64460","G__64464","x","y","w","h","p__64465","vec__64466","G__64459","this64461","other64462","pred__64469","expr__64470","app.kaboomv5.math/Quad","G__64463","G__64472","app.kaboomv5.math/->Quad","app.kaboomv5.math/map->Quad","k64474","G__64478","p__64479","vec__64480","G__64473","this64475","other64476","pred__64483","expr__64484","app.kaboomv5.math/Vec22","G__64477","G__64486","app.kaboomv5.math/->Vec22","app.kaboomv5.math/map->Vec22","k64488","G__64492","z","p__64493","vec__64494","G__64487","this64489","other64490","pred__64497","expr__64498","app.kaboomv5.math/Vec33","G__64491","G__64500","app.kaboomv5.math/->Vec33","app.kaboomv5.math/map->Vec33","app.kaboomv5.math/neg","num","app.kaboomv5.math/deg->rad","deg","goog.math/toRadians","app.kaboomv5.math/rad->deg","rad","goog.math/toDegrees","app.kaboomv5.math/clamp","value","min","max","goog.math/clamp","app.kaboomv5.math/lerp","goog.math/lerp","app.kaboomv5.math/mmap","v","l1","h1","l2","h2","app.kaboomv5.math/mapc","var_args","G__64502","app.kaboomv5.math/vec2","js/Error","xy","app.kaboomv5.math.vec2","app.kaboomv5.math/angle->vec","js/Math.cos","js/Math.sin","app.kaboomv5.math/vec2?","val","app.kaboomv5.math/vec3","app.kaboomv5.math/vec3?","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","app.kaboomv5.math/scale","seq64503","G__64504","cljs.core/first","cljs.core/next","self__4723__auto__","vec","args","new-vec","cljs.core.apply","app.kaboomv5.math/color?","G__64506","app.kaboomv5.math/color","app.kaboomv5.math.color","rgba","cljs.core/PROTOCOL_SENTINEL","p__64507","map__64508","cljs.core/hash-map","map__64510","cljs.core/not","app.kaboomv5.math/quad","app.kaboomv5.math/matrix","js/goog.math.Matrix","cljs.core/clj->js","G__64513","app.kaboomv5.math/mat4","app.kaboomv5.math.mat4","m","app.kaboomv5.math/mat4?"],"sourcesContent":["(ns app.kaboomv5.math\n  (:require [goog.math :as math]\n            [clojure.repl :refer [doc]])\n  (:import [goog.math Vec2 Vec3 Matrix])\n  (:import [goog.math Matrix]))\n\n;;\n(comment\n  (js/console.log (new Vec2 1 2)))\n\n;; PRotocols\n(defprotocol IColor\n  (lighten [this a])\n  (darken [this a])\n  (invert [this])\n  (dark?  [this p])\n  (light?  [this p]))\n\n;;\n(defprotocol IVector2\n  (add [this])\n  (subtract [this])\n  (scale! [this])\n  (dist [this])\n  (len [this])\n  (unit [this])\n  (normal [this])\n  (dot [this])\n  (angle [this])\n  (lerp! [this])\n  (to-fixed [this]))\n\n;; Records\n(defrecord Color [r g b a])\n(defrecord Quad [x y w h])\n(defrecord Vec22 [x y])\n(defrecord Vec33 [x y z])\n\n;; 0\n(defn neg [num]\n  (* -1 num))\n\n;; 1\n(defn deg->rad\n  \"Converts radians to degrees.\n    Parameters:\n    - angleRadians  number\n                Angle in radians.\n    Returns: number\n             Angle in degrees.\n    ex: (deg->rad 1) => 0.017453292519943295\"\n  [deg]\n  (math/toRadians deg))\n(comment\n  (doc deg->rad)\n  (deg->rad 1)\n  (math/toRadians 1))\n\n;; 2\n(defn rad->deg\n  \"Converts radians to degrees.\n   Parameters\n   - angleRadians(number): Angle in radians.\n   Returns\n   - number: Angle in degrees.\n   ex: (rad->deg (/ 22 7)) => 180.07244989825872\n   \"\n  [rad]\n  (math/toDegrees rad))\n(comment\n  (math/toDegrees (/ 22 7)))\n\n;; 3\n(defn clamp\n  \"Takes a number and clamps it to within the provided bounds.\n   Parameters\n   - value(number): The input number.\n   - min  (number): The minimum value to return.\n   - max  (number): The maximum value to return.\n   Returns\n   - number: The input number if it is within bounds, or the nearest number within the bounds.\"\n  [value min max]\n  (if (> min max)\n    (clamp value max min)\n    (math/clamp value min max)))\n\n;; 4\n(defn lerp\n  \"Performs linear interpolation between values a and b.\n  Returns the value between a and b proportional to x (when x is between 0 and 1.\n  When x is outside this range, the return value is a linear extrapolation).\n  Parameters:\n   - a: number\n   - b: number\n   - x: The proportion between a and b\n  \"\n  [a b x]\n  (math/lerp a b x))\n(comment\n  (lerp 1 2 4))\n\n;; 5 math/map - TODO\n(defn mmap [v l1 h1 l2 h2]\n  (/ (+ l2 (- v l1))\n     (* (- h1 l1)\n        (- h2 l2))))\n;; 6 math/mapc - TODO\n(defn mapc [v l1 h1 l2 h2]\n  (clamp (mmap v l1 h1 l2 h2) l2 h2))\n(comment\n  (mapc 1 2 3 4 5))\n\n;; Vectors ===\n;; 7\n(defn vec2\n  ([xy] (vec2 xy xy))\n  ([x y]\n   (->Vec22 x y)))\n(comment\n  (vec2 1))\n\n;; 8\n(defn angle->vec [a]\n  (vec2 (js/Math.cos a) (js/Math.sin a)))\n\n;; 9\n(defn vec2? [val]\n  (instance? Vec22 val))\n\n;; 10\n(defn vec3 [x y z]\n  (->Vec33 x y z))\n(comment\n  (vec2 1))\n\n;; 11\n(defn vec3? [val]\n  (instance? Vec33 val))\n\n;; apply function to args\n(defn scale [vec & args]\n  (let [new-vec (apply vec2 args)]\n    {:x (* (:x vec) (:x new-vec))\n     :y (* (:y vec) (:y new-vec))}))\n\n(comment\n  (scale (vec2 1 1) (/ 1 (:app-scale @app-state))))\n\n;; Colors ===\n;; 12\n(defn color? [val]\n  (instance? Color val))\n\n;; 14, 15\n(defn color\n  ([] (color 1 1 1 1))\n  ([rgba] (apply color rgba))\n  ([r g b a] (->Color r g b a)))\n\n(extend-protocol IColor\n  Color\n  (lighten [this val]\n    (->Color (+ (:r this) val) (+ (:g this) val) (+ (:b this) val) (+ (:a this) val)))\n  (darken [this val]\n    (lighten this (neg val)))\n  (dark? [{:keys [r g b]} p]\n    (> (* 3 p) (+ r g b)))\n  (light? [this p]\n    (not (dark? this p))))\n\n(comment\n  (color)\n  (color [1 1 1 1])\n  (color 1 2 3 4)\n  (instance? Color (->Color 1 1 1 1))\n  (lighten (color 1 1 1 1) 10)\n  (color? (color [1 1 1 1]))\n  (color? 2))\n;; === Color End\n\n;; 16\n(defn quad [x y w h]\n  (->Quad x y w h))\n\n(comment\n  (instance? Quad (quad 1 3 4 5)))\n\n;; === Matrix\n(defn matrix [val]\n  (Matrix. (clj->js val)))\n\n;; 17\n(defn mat4\n  ([] (mat4 [1 0 0 0\n             0 1 0 0\n             0 0 1 0\n             0 0 0 1]))\n  ([m] {:m m}))\n(comment\n  (mat4))\n\n;; 13 isMat4\n(defn mat4? [m]\n  (= 4 (.-width (.getSize m))))\n"]}