{
"version":3,
"file":"module$node_modules$Phaser$src$device$Fullscreen.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,iDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqBzGC,MAAAA,CAAa,CAEbC,UAAW,CAAA,CAFE,CAGbC,OAAQ,EAHK,CAIbC,SAAU,CAAA,CAJG,CAKbC,QAAS,EALI,CAgBTC,QAAAA,CAAK,uKAAA,MAAA,CAAA,GAAA,CAWT,KAAIC,QAAUC,QAAAC,cAAA,CAAuB,KAAvB,CAEd,KAAKC,OAAL,CAAS,CAAT,CAAYA,OAAZ,CAAgBJ,OAAAK,OAAhB,CAA2BD,OAAA,EAA3B,CAEI,GAAIH,OAAA,CAAQD,OAAA,CAAGI,OAAH,CAAR,CAAJ,CACA,CACIT,MAAAC,UAAA,CAAuB,CAAA,CACvBD,OAAAI,QAAA,CAAqBC,OAAA,CAAGI,OAAH,CACrB;KAHJ,CAOAE,OAAAA,CAAM,uJAAA,MAAA,CAAA,GAAA,CAWV,IAAIX,MAAAC,UAAJ,CAEI,IAAKQ,OAAL,CAAS,CAAT,CAAYA,OAAZ,CAAgBE,OAAAD,OAAhB,CAA4BD,OAAA,EAA5B,CAEI,GAAIF,QAAA,CAASI,OAAA,CAAIF,OAAJ,CAAT,CAAJ,CACA,CACIT,MAAAE,OAAA,CAAoBS,OAAA,CAAIF,OAAJ,CACpB,MAFJ,CAQJG,MAAA,QAAJ,EAAyBC,OAAA,qBAAzB,GAEIb,MAAAG,SAFJ,CAE0B,CAAA,CAF1B,CAQJL,OAAAC,QAAA,CAHWC,MAzFkG;",
"sources":["node_modules/Phaser/src/device/Fullscreen.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$device$Fullscreen\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Determines the full screen support of the browser running this Phaser Game instance.\r\n * These values are read-only and populated during the boot sequence of the game.\r\n * They are then referenced by internal game systems and are available for you to access\r\n * via `this.sys.game.device.fullscreen` from within any Scene.\r\n * \r\n * @typedef {object} Phaser.Device.Fullscreen\r\n * @since 3.0.0\r\n * \r\n * @property {boolean} available - Does the browser support the Full Screen API?\r\n * @property {boolean} keyboard - Does the browser support access to the Keyboard during Full Screen mode?\r\n * @property {string} cancel - If the browser supports the Full Screen API this holds the call you need to use to cancel it.\r\n * @property {string} request - If the browser supports the Full Screen API this holds the call you need to use to activate it.\r\n */\r\nvar Fullscreen = {\r\n\r\n    available: false,\r\n    cancel: '',\r\n    keyboard: false,\r\n    request: ''\r\n\r\n};\r\n\r\n/**\r\n* Checks for support of the Full Screen API.\r\n*/\r\nfunction init ()\r\n{\r\n    var i;\r\n\r\n    var fs = [\r\n        'requestFullscreen',\r\n        'requestFullScreen',\r\n        'webkitRequestFullscreen',\r\n        'webkitRequestFullScreen',\r\n        'msRequestFullscreen',\r\n        'msRequestFullScreen',\r\n        'mozRequestFullScreen',\r\n        'mozRequestFullscreen'\r\n    ];\r\n\r\n    var element = document.createElement('div');\r\n\r\n    for (i = 0; i < fs.length; i++)\r\n    {\r\n        if (element[fs[i]])\r\n        {\r\n            Fullscreen.available = true;\r\n            Fullscreen.request = fs[i];\r\n            break;\r\n        }\r\n    }\r\n\r\n    var cfs = [\r\n        'cancelFullScreen',\r\n        'exitFullscreen',\r\n        'webkitCancelFullScreen',\r\n        'webkitExitFullscreen',\r\n        'msCancelFullScreen',\r\n        'msExitFullscreen',\r\n        'mozCancelFullScreen',\r\n        'mozExitFullscreen'\r\n    ];\r\n\r\n    if (Fullscreen.available)\r\n    {\r\n        for (i = 0; i < cfs.length; i++)\r\n        {\r\n            if (document[cfs[i]])\r\n            {\r\n                Fullscreen.cancel = cfs[i];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //  Keyboard Input?\r\n    if (window['Element'] && Element['ALLOW_KEYBOARD_INPUT'])\r\n    {\r\n        Fullscreen.keyboard = true;\r\n    }\r\n\r\n    return Fullscreen;\r\n}\r\n\r\nmodule.exports = init();\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Fullscreen","available","cancel","keyboard","request","fs","element","document","createElement","i","length","cfs","window","Element"]
}
