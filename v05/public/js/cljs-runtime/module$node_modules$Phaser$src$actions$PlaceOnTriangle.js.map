{
"version":3,
"file":"module$node_modules$Phaser$src$actions$PlaceOnTriangle.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOnH,IAAIC,gBAAkBH,OAAA,CAAQ,0DAAR,CAgDtBC,OAAAC,QAAA,CA9BsBE,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkBC,QAAlB,CAC/B,CACI,IAAIC,GAAKL,eAAA,CAAgB,CAAEM,GAAIH,QAAAG,GAAN,CAAmBC,GAAIJ,QAAAI,GAAvB,CAAoCC,GAAIL,QAAAK,GAAxC,CAAqDC,GAAIN,QAAAM,GAAzD,CAAhB,CAAwFL,QAAxF,CAAT,CACIM,GAAKV,eAAA,CAAgB,CAAEM,GAAIH,QAAAK,GAAN,CAAmBD,GAAIJ,QAAAM,GAAvB,CAAoCD,GAAIL,QAAAQ,GAAxC,CAAqDF,GAAIN,QAAAS,GAAzD,CAAhB,CAAwFR,QAAxF,CACLS,SAAAA,CAAKb,eAAA,CAAgB,CAAEM,GAAIH,QAAAQ,GAAN,CAAmBJ,GAAIJ,QAAAS,GAAvB,CAAoCJ,GAAIL,QAAAG,GAAxC;AAAqDG,GAAIN,QAAAI,GAAzD,CAAhB,CAAwFH,QAAxF,CAGTC,GAAAS,IAAA,EACAJ,GAAAI,IAAA,EACAD,SAAAC,IAAA,EAEAT,GAAA,CAAKA,EAAAU,OAAA,CAAUL,EAAV,CAAcG,QAAd,CAEDG,GAAAA,CAAOX,EAAAY,OAAPD,CAAmBd,KAAAe,OAGvB,KAASC,QAAT,CAFIC,QAEJ,CAFQ,CAER,CAAgBD,QAAhB,CAAoBhB,KAAAe,OAApB,CAAkCC,QAAA,EAAlC,CACA,CACI,IAAIE,KAAOlB,KAAA,CAAMgB,QAAN,CAAX,CACIG,MAAQhB,EAAA,CAAGiB,IAAAC,MAAA,CAAWJ,QAAX,CAAH,CAEZC,KAAAI,EAAA,CAASH,KAAAG,EACTJ,KAAAK,EAAA,CAASJ,KAAAI,EAETN,SAAA,EAAKH,EAPT,CAUA,MAAOd,MA1BX,CA1BmH;",
"sources":["node_modules/Phaser/src/actions/PlaceOnTriangle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$actions$PlaceOnTriangle\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar BresenhamPoints = require('../geom/line/BresenhamPoints');\r\n\r\n/**\r\n * Takes an array of Game Objects and positions them on evenly spaced points around the edges of a Triangle.\r\n * \r\n * If you wish to pass a `Phaser.GameObjects.Triangle` Shape to this function, you should pass its `geom` property.\r\n *\r\n * @function Phaser.Actions.PlaceOnTriangle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to position the Game Objects on.\r\n * @param {number} [stepRate=1] - An optional step rate, to increase or decrease the packing of the Game Objects on the lines.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\r\nvar PlaceOnTriangle = function (items, triangle, stepRate)\r\n{\r\n    var p1 = BresenhamPoints({ x1: triangle.x1, y1: triangle.y1, x2: triangle.x2, y2: triangle.y2 }, stepRate);\r\n    var p2 = BresenhamPoints({ x1: triangle.x2, y1: triangle.y2, x2: triangle.x3, y2: triangle.y3 }, stepRate);\r\n    var p3 = BresenhamPoints({ x1: triangle.x3, y1: triangle.y3, x2: triangle.x1, y2: triangle.y1 }, stepRate);\r\n\r\n    //  Remove overlaps\r\n    p1.pop();\r\n    p2.pop();\r\n    p3.pop();\r\n\r\n    p1 = p1.concat(p2, p3);\r\n\r\n    var step = p1.length / items.length;\r\n    var p = 0;\r\n\r\n    for (var i = 0; i < items.length; i++)\r\n    {\r\n        var item = items[i];\r\n        var point = p1[Math.floor(p)];\r\n\r\n        item.x = point.x;\r\n        item.y = point.y;\r\n\r\n        p += step;\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = PlaceOnTriangle;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","BresenhamPoints","PlaceOnTriangle","items","triangle","stepRate","p1","x1","y1","x2","y2","p2","x3","y3","p3","pop","concat","step","length","i","p","item","point","Math","floor","x","y"]
}
