{
"version":3,
"file":"module$node_modules$$formatjs$ecma402_abstract$DateTimeFormat$ToLocalTime.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,0EAAA,CAA8F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEtIC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,YAAA,CAAsB,IAAK,EAC3B,KAAIC,QAAUP,OAAA,CAAQ,sDAAR,CAAd,CACIQ,OAASR,OAAA,CAAQ,oDAAR,CAgDbE,QAAAI,YAAA,CAvBAA,QAAoB,CAACG,CAAD,CAAIC,QAAJ,CAAcC,QAAd,CAAwBC,EAAxB,CAA4B,CACxCC,EAAAA,CAASD,EAAAC,OACbN,QAAAO,UAAA,CAAqC,QAArC,GAAkBN,MAAAO,KAAA,CAAYN,CAAZ,CAAlB,CAA+C,cAA/C,CACAF,QAAAO,UAAA,CAA+B,SAA/B;AAAkBJ,QAAlB,CAA0C,4CAA1C,CAvBA,IAFIM,QAEJ,CAwB4CH,EA1B7B,CA0BmBF,QA1BnB,CAEf,CAAA,CAIIM,QAAAA,CADAC,EACAD,CADI,CAGR,KADA,IAAIE,IAAM,CAAA,CACV,CAAOD,EAAP,EAAYF,QAAAI,OAAZ,CAA6BF,EAAA,EAA7B,CACI,GAAIA,EAAJ,GAAUF,QAAAI,OAAV,EAA8C,GAA9C,CAA6BJ,QAAA,CAASE,EAAT,CAAA,CAAY,CAAZ,CAA7B,CAiB2BT,CAjB3B,CAAuD,CACnDG,QAAA,CAAKI,QAAA,CAASE,EAAT,CAAa,CAAb,CAAiBD,SAAtB,CAA+BL,QAAA,CAAG,CAAH,CAAOO,IAAtC,CAA4CP,QAAA,CAAG,CAAH,CAC5C,MAFmD,CAK3D,QAAA,CAAO,CAAU,GAAV,CAACK,QAAD,CAAeE,GAAf,CAZP,CAAA,IACI,SAAA,CAAO,CAAC,CAAD,CAAI,CAAA,CAAJ,CAuB0CE,SAAAA,CAAiBC,QAAA,CAAG,CAAH,CAAOC,SAAAA,CAAQD,QAAA,CAAG,CAAH,CAC5Eb,EAALe,EAASH,QACTI,GAAAA,CAAOjB,MAAAkB,aAAA,CAAoBF,CAApB,CACX,OAAO,CACHG,QAASnB,MAAAoB,QAAA,CAAeJ,CAAf,CADN,CAEHK,IAAY,CAAP,CAAAJ,EAAA,CAAW,IAAX,CAAkB,IAFpB,CAGHA,KAAMA,EAHH,CAIHK,YAAaC,IAAAA,EAJV,CAKHC,SAAUD,IAAAA,EALP,CAMHE,MAAOzB,MAAA0B,cAAA,CAAqBV,CAArB,CANJ;AAOHW,IAAK3B,MAAA4B,aAAA,CAAoBZ,CAApB,CAPF,CAQHa,KAAM7B,MAAA8B,aAAA,CAAoBd,CAApB,CARH,CASHe,OAAQ/B,MAAAgC,YAAA,CAAmBhB,CAAnB,CATL,CAUHiB,OAAQjC,MAAAkC,YAAA,CAAmBlB,CAAnB,CAVL,CAWHD,MAAOA,QAXJ,CAaHF,eAAgBA,QAbb,CAPqC,CA9BsF;",
"sources":["node_modules/@formatjs/ecma402-abstract/DateTimeFormat/ToLocalTime.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$ecma402_abstract$DateTimeFormat$ToLocalTime\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ToLocalTime = void 0;\nvar utils_1 = require(\"../utils\");\nvar _262_1 = require(\"../262\");\nfunction getApplicableZoneData(t, timeZone, tzData) {\n    var _a;\n    var zoneData = tzData[timeZone];\n    // We don't have data for this so just say it's UTC\n    if (!zoneData) {\n        return [0, false];\n    }\n    var i = 0;\n    var offset = 0;\n    var dst = false;\n    for (; i <= zoneData.length; i++) {\n        if (i === zoneData.length || zoneData[i][0] * 1e3 > t) {\n            _a = zoneData[i - 1], offset = _a[2], dst = _a[3];\n            break;\n        }\n    }\n    return [offset * 1e3, dst];\n}\n/**\n * https://tc39.es/ecma402/#sec-tolocaltime\n * @param t\n * @param calendar\n * @param timeZone\n */\nfunction ToLocalTime(t, calendar, timeZone, _a) {\n    var tzData = _a.tzData;\n    utils_1.invariant(_262_1.Type(t) === 'Number', 'invalid time');\n    utils_1.invariant(calendar === 'gregory', 'We only support Gregory calendar right now');\n    var _b = getApplicableZoneData(t, timeZone, tzData), timeZoneOffset = _b[0], inDST = _b[1];\n    var tz = t + timeZoneOffset;\n    var year = _262_1.YearFromTime(tz);\n    return {\n        weekday: _262_1.WeekDay(tz),\n        era: year < 0 ? 'BC' : 'AD',\n        year: year,\n        relatedYear: undefined,\n        yearName: undefined,\n        month: _262_1.MonthFromTime(tz),\n        day: _262_1.DateFromTime(tz),\n        hour: _262_1.HourFromTime(tz),\n        minute: _262_1.MinFromTime(tz),\n        second: _262_1.SecFromTime(tz),\n        inDST: inDST,\n        // IMPORTANT: Not in spec\n        timeZoneOffset: timeZoneOffset,\n    };\n}\nexports.ToLocalTime = ToLocalTime;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ToLocalTime","utils_1","_262_1","t","calendar","timeZone","_a","tzData","invariant","Type","zoneData","offset","i","dst","length","timeZoneOffset","_b","inDST","tz","year","YearFromTime","weekday","WeekDay","era","relatedYear","undefined","yearName","month","MonthFromTime","day","DateFromTime","hour","HourFromTime","minute","MinFromTime","second","SecFromTime"]
}
