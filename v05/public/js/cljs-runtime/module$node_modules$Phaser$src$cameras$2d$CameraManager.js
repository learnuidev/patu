shadow$provide.module$node_modules$Phaser$src$cameras$2d$CameraManager=function(global,require,module,exports){var Camera=require("module$node_modules$Phaser$src$cameras$2d$Camera");exports=require("module$node_modules$Phaser$src$utils$Class");var GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue");global=require("module$node_modules$Phaser$src$plugins$PluginCache");var RectangleContains=require("module$node_modules$Phaser$src$geom$rectangle$Contains");require=new exports({initialize:function(scene){this.scene=
scene;this.systems=scene.sys;this.roundPixels=scene.sys.game.config.roundPixels;this.cameras=[];this.baseScale=1;scene.sys.events.once("boot",this.boot,this);scene.sys.events.on("start",this.start,this)},boot:function(){var sys=this.systems;sys.settings.cameras?this.fromJSON(sys.settings.cameras):this.add();this.main=this.cameras[0];this.systems.events.once("destroy",this.destroy,this)},start:function(){if(!this.main){var sys=this.systems;sys.settings.cameras?this.fromJSON(sys.settings.cameras):this.add();
this.main=this.cameras[0]}sys=this.systems.events;sys.on("update",this.update,this);sys.once("shutdown",this.shutdown,this)},add:function(x,y,width,height,makeMain,name){void 0===x&&(x=0);void 0===y&&(y=0);void 0===width&&(width=this.scene.sys.game.config.width);void 0===height&&(height=this.scene.sys.game.config.height);void 0===makeMain&&(makeMain=!1);void 0===name&&(name="");x=new Camera(x,y,width,height);x.setName(name);x.setScene(this.scene);x.setRoundPixels(this.roundPixels);x.id=this.getNextID();
this.cameras.push(x);makeMain&&(this.main=x);return x},addExisting:function(camera,makeMain){void 0===makeMain&&(makeMain=!1);return-1===this.cameras.indexOf(camera)?(camera.id=this.getNextID(),camera.setRoundPixels(this.roundPixels),this.cameras.push(camera),makeMain&&(this.main=camera),camera):null},getNextID:function(){for(var cameras=this.cameras,testID=1,t=0;32>t;t++){for(var found=!1,i=0;i<cameras.length;i++){var camera=cameras[i];camera&&camera.id===testID&&(found=!0)}if(found)testID<<=1;else return testID}return 0},
getTotal:function(isVisible){void 0===isVisible&&(isVisible=!1);for(var total=0,cameras=this.cameras,i=0;i<cameras.length;i++){var camera=cameras[i];(!isVisible||isVisible&&camera.visible)&&total++}return total},fromJSON:function(config){Array.isArray(config)||(config=[config]);for(var gameWidth=this.scene.sys.game.config.width,gameHeight=this.scene.sys.game.config.height,i=0;i<config.length;i++){var cameraConfig=config[i],x=GetFastValue(cameraConfig,"x",0),y=GetFastValue(cameraConfig,"y",0),width=
GetFastValue(cameraConfig,"width",gameWidth),height=GetFastValue(cameraConfig,"height",gameHeight);x=this.add(x,y,width,height);x.name=GetFastValue(cameraConfig,"name","");x.zoom=GetFastValue(cameraConfig,"zoom",1);x.rotation=GetFastValue(cameraConfig,"rotation",0);x.scrollX=GetFastValue(cameraConfig,"scrollX",0);x.scrollY=GetFastValue(cameraConfig,"scrollY",0);x.roundPixels=GetFastValue(cameraConfig,"roundPixels",!1);x.visible=GetFastValue(cameraConfig,"visible",!0);(y=GetFastValue(cameraConfig,
"backgroundColor",!1))&&x.setBackgroundColor(y);if(height=GetFastValue(cameraConfig,"bounds",null))cameraConfig=GetFastValue(height,"x",0),y=GetFastValue(height,"y",0),width=GetFastValue(height,"width",gameWidth),height=GetFastValue(height,"height",gameHeight),x.setBounds(cameraConfig,y,width,height)}return this},getCamera:function(name){for(var cameras=this.cameras,i=0;i<cameras.length;i++)if(cameras[i].name===name)return cameras[i];return null},getCamerasBelowPointer:function(pointer){var cameras=
this.cameras,x=pointer.x;pointer=pointer.y;for(var output=[],i=0;i<cameras.length;i++){var camera=cameras[i];camera.visible&&camera.inputEnabled&&RectangleContains(camera,x,pointer)&&output.unshift(camera)}return output},remove:function(camera){Array.isArray(camera)||(camera=[camera]);for(var total=0,cameras=this.cameras,i=0;i<camera.length;i++){var index=cameras.indexOf(camera[i]);-1!==index&&(cameras.splice(index,1),total++)}this.main||(this.main=cameras[0]);return total},render:function(renderer,
children,interpolation){for(var scene=this.scene,cameras=this.cameras,baseScale=this.baseScale,resolution=renderer.config.resolution,i=0;i<this.cameras.length;i++){var camera=cameras[i];camera.visible&&0<camera.alpha&&(camera.preRender(baseScale,resolution),renderer.render(scene,children,interpolation,camera))}},resetAll:function(){for(var i=0;i<this.cameras.length;i++)this.cameras[i].destroy();this.cameras=[];return this.main=this.add()},update:function(timestep,delta){for(var i=0;i<this.cameras.length;i++)this.cameras[i].update(timestep,
delta)},resize:function(width,height){for(var i=0;i<this.cameras.length;i++)this.cameras[i].setSize(width,height)},shutdown:function(){this.main=void 0;for(var i=0;i<this.cameras.length;i++)this.cameras[i].destroy();this.cameras=[];i=this.systems.events;i.off("update",this.update,this);i.off("shutdown",this.shutdown,this)},destroy:function(){this.shutdown();this.scene.sys.events.off("start",this.start,this);this.systems=this.scene=null}});global.register("CameraManager",require,"cameras");module.exports=
require}
//# sourceMappingURL=module$node_modules$Phaser$src$cameras$2d$CameraManager.js.map
