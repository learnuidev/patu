{
"version":3,
"file":"module$node_modules$Phaser$src$physics$impact$SeperateY.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/Phaser/src/physics/impact/SeperateY.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$impact$SeperateY\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n/**\n * [description]\n *\n * @function Phaser.Physics.Impact.SeperateY\n * @since 3.0.0\n *\n * @param {Phaser.Physics.Impact.World} world - [description]\n * @param {Phaser.Physics.Impact.Body} top - [description]\n * @param {Phaser.Physics.Impact.Body} bottom - [description]\n * @param {Phaser.Physics.Impact.Body} [weak] - [description]\n */\nvar SeperateY = function (world, top, bottom, weak)\n{\n    var nudge = (top.pos.y + top.size.y - bottom.pos.y);\n    var nudgeX;\n    var resTop;\n    \n    if (weak)\n    {\n        var strong = (top === weak) ? bottom : top;\n\n        weak.vel.y = -weak.vel.y * weak.bounciness + strong.vel.y;\n        \n        // Riding on a platform?\n        nudgeX = 0;\n\n        if (weak === top && Math.abs(weak.vel.y - strong.vel.y) < weak.minBounceVelocity)\n        {\n            weak.standing = true;\n            nudgeX = strong.vel.x * world.delta;\n        }\n        \n        var resWeak = world.collisionMap.trace(weak.pos.x, weak.pos.y, nudgeX, weak === top ? -nudge : nudge, weak.size.x, weak.size.y);\n\n        weak.pos.y = resWeak.pos.y;\n        weak.pos.x = resWeak.pos.x;\n    }\n    else if (world.gravity && (bottom.standing || top.vel.y > 0))\n    {\n        resTop = world.collisionMap.trace(top.pos.x, top.pos.y, 0, -(top.pos.y + top.size.y - bottom.pos.y), top.size.x, top.size.y);\n\n        top.pos.y = resTop.pos.y;\n        \n        if (top.bounciness > 0 && top.vel.y > top.minBounceVelocity)\n        {\n            top.vel.y *= -top.bounciness;\n        }\n        else\n        {\n            top.standing = true;\n            top.vel.y = 0;\n        }\n    }\n    else\n    {\n        var v2 = (top.vel.y - bottom.vel.y) / 2;\n\n        top.vel.y = -v2;\n        bottom.vel.y = v2;\n        \n        nudgeX = bottom.vel.x * world.delta;\n\n        resTop = world.collisionMap.trace(top.pos.x, top.pos.y, nudgeX, -nudge / 2, top.size.x, top.size.y);\n\n        top.pos.y = resTop.pos.y;\n        \n        var resBottom = world.collisionMap.trace(bottom.pos.x, bottom.pos.y, 0, nudge / 2, bottom.size.x, bottom.size.y);\n\n        bottom.pos.y = resBottom.pos.y;\n    }\n};\n\nmodule.exports = SeperateY;\n\n};"],
"names":["shadow$provide","global","require","module","exports","SeperateY","world","top","bottom","weak","nudge","pos","y","size","strong","vel","bounciness","nudgeX","Math","abs","minBounceVelocity","standing","x","delta","resWeak","collisionMap","trace","gravity","resTop","v2","resBottom"]
}
