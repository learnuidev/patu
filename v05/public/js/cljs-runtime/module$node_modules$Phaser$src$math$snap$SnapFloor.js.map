{
"version":3,
"file":"module$node_modules$Phaser$src$math$snap$SnapFloor.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsC/GD,MAAAC,QAAA,CAfgBC,QAAS,CAACC,KAAD,CAAQC,GAAR,CAAaC,KAAb,CAAoBC,MAApB,CACzB,CACkBC,IAAAA,EAAd,GAAIF,KAAJ,GAA2BA,KAA3B,CAAmC,CAAnC,CAEA,IAAY,CAAZ,GAAID,GAAJ,CAEI,MAAOD,MAIXA,MAAA,CAAQC,GAAR,CAAcI,IAAAC,MAAA,EADdN,KACc,CADLE,KACK,EAAmBD,GAAnB,CAEd,OAAQE,OAAD,EAAYD,KAAZ,CAAoBF,KAApB,EAA6BC,GAA7B,CAAmCC,KAAnC,CAA2CF,KAXtD,CAxB+G;",
"sources":["node_modules/Phaser/src/math/snap/SnapFloor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$snap$SnapFloor\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Snap a value to nearest grid slice, using floor.\r\n *\r\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `10`.\r\n * As will `14` snap to `10`... but `16` will snap to `15`.\r\n *\r\n * @function Phaser.Math.Snap.Floor\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to snap.\r\n * @param {number} gap - The interval gap of the grid.\r\n * @param {number} [start=0] - Optional starting offset for gap.\r\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\r\n *\r\n * @return {number} The snapped value.\r\n */\r\nvar SnapFloor = function (value, gap, start, divide)\r\n{\r\n    if (start === undefined) { start = 0; }\r\n\r\n    if (gap === 0)\r\n    {\r\n        return value;\r\n    }\r\n\r\n    value -= start;\r\n    value = gap * Math.floor(value / gap);\r\n\r\n    return (divide) ? (start + value) / gap : start + value;\r\n};\r\n\r\nmodule.exports = SnapFloor;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","SnapFloor","value","gap","start","divide","undefined","Math","floor"]
}
