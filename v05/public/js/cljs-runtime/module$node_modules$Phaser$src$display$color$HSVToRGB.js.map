{
"version":3,
"file":"module$node_modules$Phaser$src$display$color$HSVToRGB.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlH,IAAIC,SAAWH,OAAA,CAAQ,uDAAR,CAwFfC,OAAAC,QAAA,CAtEeE,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAUC,GAAV,CACxB,CACcC,IAAAA,EAAV,GAAIH,CAAJ,GAAuBA,CAAvB,CAA2B,CAA3B,CACUG,KAAAA,EAAV,GAAIF,CAAJ,GAAuBA,CAAvB,CAA2B,CAA3B,CAEA,KAAIG,EAAIC,IAAAC,MAAA,CAAe,CAAf,CAAWP,CAAX,CAAR,CACIQ,EAAQ,CAARA,CAAIR,CAAJQ,CAAYH,CAEZI,EAAAA,CAAIH,IAAAC,MAAA,CAAYL,CAAZ,EAAiB,CAAjB,CAAqBD,CAArB,EAA2B,GAA3B,CACR,KAAIS,EAAIJ,IAAAC,MAAA,CAAYL,CAAZ,EAAiB,CAAjB,CAAqBM,CAArB,CAAyBP,CAAzB,EAA+B,GAA/B,CACJU,EAAAA,CAAIL,IAAAC,MAAA,CAAYL,CAAZ,EAAiB,CAAjB,EAAsB,CAAtB,CAA0BM,CAA1B,EAA+BP,CAA/B,EAAqC,GAArC,CAKR,KAAIW,EADAC,CACAD,CAHJV,CAGIU,CAHAN,IAAAC,MAAA,CAAWL,CAAX,EAAgB,GAAhB,CAMIG,EAAJS,EAAQ,CAEF,EAAV,GAAIA,CAAJ,EAEIF,CACA,CADID,CACJ,CAAAI,CAAA,CAAIN,CAHR,EAKe,CAAV,GAAIK,CAAJ,EAEDD,CACA,CADIH,CACJ,CAAAK,CAAA,CAAIN,CAHH,EAKU,CAAV,GAAIK,CAAJ,EAEDD,CACA,CADIJ,CACJ,CAAAM,CAAA,CAAIJ,CAHH,EAKU,CAAV,GAAIG,CAAJ,EAEDD,CACA,CADIJ,CACJ,CAAAG,CAAA,CAAIF,CAHH,EAKU,CAAV,GAAII,CAAJ,EAEDD,CACA,CADIF,CACJ,CAAAC,CAAA,CAAIH,CAHH,EAKU,CALV,GAKIK,CALJ,GAODF,CACA;AADIH,CACJ,CAAAM,CAAA,CAAIL,CARH,CAWL,IAAKP,GAAL,CAIK,CAAA,GAAIA,GAAAa,MAAJ,CAED,MAAOb,IAAAa,MAAA,CAAUH,CAAV,CAAaD,CAAb,CAAgBG,CAAhB,CAAmBZ,GAAAc,MAAnB,CAA8B,CAAA,CAA9B,CAIPd,IAAAU,EAAA,CAAQA,CACRV,IAAAS,EAAA,CAAQA,CACRT,IAAAY,EAAA,CAAQA,CACRZ,IAAAe,MAAA,CAAYpB,QAAA,CAASe,CAAT,CAAYD,CAAZ,CAAeG,CAAf,CAEZ,OAAOZ,IAXN,CAFD,MAAO,CAAEU,EAAGA,CAAL,CAAQD,EAAGA,CAAX,CAAcG,EAAGA,CAAjB,CAAoBG,MAAOpB,QAAA,CAASe,CAAT,CAAYD,CAAZ,CAAeG,CAAf,CAA3B,CApDf,CA1BkH;",
"sources":["node_modules/Phaser/src/display/color/HSVToRGB.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$display$color$HSVToRGB\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar GetColor = require('./GetColor');\r\n\r\n/**\r\n * Converts an HSV (hue, saturation and value) color value to RGB.\r\n * Conversion formula from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes HSV values are contained in the set [0, 1].\r\n * Based on code by Michael Jackson (https://github.com/mjijackson)\r\n *\r\n * @function Phaser.Display.Color.HSVToRGB\r\n * @since 3.0.0\r\n *\r\n * @param {number} h - The hue, in the range 0 - 1. This is the base color.\r\n * @param {number} s - The saturation, in the range 0 - 1. This controls how much of the hue will be in the final color, where 1 is fully saturated and 0 will give you white.\r\n * @param {number} v - The value, in the range 0 - 1. This controls how dark the color is. Where 1 is as bright as possible and 0 is black.\r\n * @param {(ColorObject|Phaser.Display.Color)} [out] - A Color object to store the results in. If not given a new ColorObject will be created.\r\n *\r\n * @return {(ColorObject|Phaser.Display.Color)} An object with the red, green and blue values set in the r, g and b properties.\r\n */\r\nvar HSVToRGB = function (h, s, v, out)\r\n{\r\n    if (s === undefined) { s = 1; }\r\n    if (v === undefined) { v = 1; }\r\n\r\n    var i = Math.floor(h * 6);\r\n    var f = h * 6 - i;\r\n\r\n    var p = Math.floor((v * (1 - s)) * 255);\r\n    var q = Math.floor((v * (1 - f * s)) * 255);\r\n    var t = Math.floor((v * (1 - (1 - f) * s)) * 255);\r\n\r\n    v = Math.floor(v *= 255);\r\n\r\n    var r = v;\r\n    var g = v;\r\n    var b = v;\r\n\r\n    var c = i % 6;\r\n\r\n    if (c === 0)\r\n    {\r\n        g = t;\r\n        b = p;\r\n    }\r\n    else if (c === 1)\r\n    {\r\n        r = q;\r\n        b = p;\r\n    }\r\n    else if (c === 2)\r\n    {\r\n        r = p;\r\n        b = t;\r\n    }\r\n    else if (c === 3)\r\n    {\r\n        r = p;\r\n        g = q;\r\n    }\r\n    else if (c === 4)\r\n    {\r\n        r = t;\r\n        g = p;\r\n    }\r\n    else if (c === 5)\r\n    {\r\n        g = p;\r\n        b = q;\r\n    }\r\n\r\n    if (!out)\r\n    {\r\n        return { r: r, g: g, b: b, color: GetColor(r, g, b) };\r\n    }\r\n    else if (out.setTo)\r\n    {\r\n        return out.setTo(r, g, b, out.alpha, false);\r\n    }\r\n    else\r\n    {\r\n        out.r = r;\r\n        out.g = g;\r\n        out.b = b;\r\n        out.color = GetColor(r, g, b);\r\n\r\n        return out;\r\n    }\r\n};\r\n\r\nmodule.exports = HSVToRGB;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetColor","HSVToRGB","h","s","v","out","undefined","i","Math","floor","f","p","q","t","g","r","c","b","setTo","alpha","color"]
}
