shadow$provide.module$node_modules$Phaser$src$loader$filetypes$XMLFile=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var CONST=require("module$node_modules$Phaser$src$loader$const"),File=require("module$node_modules$Phaser$src$loader$File");exports=require("module$node_modules$Phaser$src$loader$FileTypesManager");var GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),IsPlainObject=require("module$node_modules$Phaser$src$utils$object$IsPlainObject"),
ParseXML=require("module$node_modules$Phaser$src$dom$ParseXML"),XMLFile=new global({Extends:File,initialize:function(loader,key,url,xhrSettings){var extension="xml";if(IsPlainObject(key)){var config=key;key=GetFastValue(config,"key");url=GetFastValue(config,"url");xhrSettings=GetFastValue(config,"xhrSettings");extension=GetFastValue(config,"extension",extension)}File.call(this,loader,{type:"xml",cache:loader.cacheManager.xml,extension:extension,responseType:"text",key:key,url:url,xhrSettings:xhrSettings})},
onProcess:function(){this.state=CONST.FILE_PROCESSING;if(this.data=ParseXML(this.xhrLoader.responseText))this.onProcessComplete();else console.warn("Invalid XMLFile: "+this.key),this.onProcessError()}});exports.register("xml",function(key,url,xhrSettings){if(Array.isArray(key))for(url=0;url<key.length;url++)this.addFile(new XMLFile(this,key[url]));else this.addFile(new XMLFile(this,key,url,xhrSettings));return this});module.exports=XMLFile}
//# sourceMappingURL=module$node_modules$Phaser$src$loader$filetypes$XMLFile.js.map
