{
"version":3,
"file":"module$node_modules$Phaser$src$physics$arcade$tilemap$TileCheckX.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,iEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO7H,IAAIC,uBAAyBH,OAAA,CAAQ,8EAAR,CA8D7BC,OAAAC,QAAA,CA9CiBE,QAAS,CAACC,IAAD,CAAOC,IAAP,CAAaC,QAAb,CAAuBC,SAAvB,CAAkCC,QAAlC,CAC1B,CACI,IAAIC,GAAK,CAEW,EAApB,CAAIL,IAAAM,OAAA,EAAJ,EAAyB,CAACN,IAAAO,QAAAC,KAA1B,EAA+CP,IAAAQ,aAA/C,EAAoET,IAAAU,eAAAF,KAApE,CAGQP,IAAAU,UAHR,EAG0BX,IAAAY,EAH1B,CAGmCT,SAHnC,GAKQE,EAEA,CAFKL,IAAAY,EAEL,CAFcT,SAEd,CAAIE,EAAJ,CAAS,CAACD,QAAV,GAEIC,EAFJ,CAES,CAFT,CAPR,EAayB,CAbzB,CAaSL,IAAAM,OAAA,EAbT,EAa8B,CAACN,IAAAO,QAAAM,MAb/B;AAaqDZ,IAAAa,YAbrD,EAayEd,IAAAU,eAAAG,MAbzE,EAgBQZ,IAAAc,SAhBR,EAgByBf,IAAAa,MAhBzB,CAgBsCX,QAhBtC,GAkBQG,EAEA,CAFKL,IAAAa,MAEL,CAFkBX,QAElB,CAAIG,EAAJ,CAASD,QAAT,GAEIC,EAFJ,CAES,CAFT,CApBR,CA2BW,EAAX,GAAIA,EAAJ,GAEQL,IAAAgB,gBAAJ,CAEIhB,IAAAiB,SAFJ,CAEoBZ,EAFpB,CAMIP,sBAAA,CAAuBE,IAAvB,CAA6BK,EAA7B,CARR,CAYA,OAAOA,GA1CX,CAxB6H;",
"sources":["node_modules/Phaser/src/physics/arcade/tilemap/TileCheckX.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$arcade$tilemap$TileCheckX\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar ProcessTileSeparationX = require('./ProcessTileSeparationX');\r\n\r\n/**\r\n * Check the body against the given tile on the X axis.\r\n *\r\n * @function Phaser.Physics.Arcade.Tilemap.TileCheckX\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\r\n * @param {Phaser.Tilemaps.Tile} tile - The tile to check.\r\n * @param {number} tileLeft - [description]\r\n * @param {number} tileRight - [description]\r\n * @param {number} tileBias - [description]\r\n *\r\n * @return {number} The amount of separation that occurred.\r\n */\r\nvar TileCheckX = function (body, tile, tileLeft, tileRight, tileBias)\r\n{\r\n    var ox = 0;\r\n\r\n    if (body.deltaX() < 0 && !body.blocked.left && tile.collideRight && body.checkCollision.left)\r\n    {\r\n        //  Body is moving LEFT\r\n        if (tile.faceRight && body.x < tileRight)\r\n        {\r\n            ox = body.x - tileRight;\r\n\r\n            if (ox < -tileBias)\r\n            {\r\n                ox = 0;\r\n            }\r\n        }\r\n    }\r\n    else if (body.deltaX() > 0 && !body.blocked.right && tile.collideLeft && body.checkCollision.right)\r\n    {\r\n        //  Body is moving RIGHT\r\n        if (tile.faceLeft && body.right > tileLeft)\r\n        {\r\n            ox = body.right - tileLeft;\r\n\r\n            if (ox > tileBias)\r\n            {\r\n                ox = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (ox !== 0)\r\n    {\r\n        if (body.customSeparateX)\r\n        {\r\n            body.overlapX = ox;\r\n        }\r\n        else\r\n        {\r\n            ProcessTileSeparationX(body, ox);\r\n        }\r\n    }\r\n\r\n    return ox;\r\n};\r\n\r\nmodule.exports = TileCheckX;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","ProcessTileSeparationX","TileCheckX","body","tile","tileLeft","tileRight","tileBias","ox","deltaX","blocked","left","collideRight","checkCollision","faceRight","x","right","collideLeft","faceLeft","customSeparateX","overlapX"]
}
