shadow$provide.module$node_modules$Phaser$src$display$mask$GeometryMask=function(global,require,module,exports){global=new (require("module$node_modules$Phaser$src$utils$Class"))({initialize:function(scene,graphicsGeometry){this.geometryMask=graphicsGeometry},setShape:function(graphicsGeometry){this.geometryMask=graphicsGeometry},preRenderWebGL:function(renderer,mask,camera){mask=renderer.gl;var geometryMask=this.geometryMask;renderer.flush();mask.enable(mask.STENCIL_TEST);mask.clear(mask.STENCIL_BUFFER_BIT);
mask.colorMask(!1,!1,!1,!1);mask.stencilFunc(mask.NOTEQUAL,1,1);mask.stencilOp(mask.REPLACE,mask.REPLACE,mask.REPLACE);geometryMask.renderWebGL(renderer,geometryMask,0,camera);renderer.flush();mask.colorMask(!0,!0,!0,!0);mask.stencilFunc(mask.EQUAL,1,1);mask.stencilOp(mask.KEEP,mask.KEEP,mask.KEEP)},postRenderWebGL:function(renderer){var gl=renderer.gl;renderer.flush();gl.disable(gl.STENCIL_TEST)},preRenderCanvas:function(renderer,mask,camera){mask=this.geometryMask;renderer.currentContext.save();
mask.renderCanvas(renderer,mask,0,camera,null,null,!0);renderer.currentContext.clip()},postRenderCanvas:function(renderer){renderer.currentContext.restore()},destroy:function(){this.geometryMask=null}});module.exports=global}
//# sourceMappingURL=module$node_modules$Phaser$src$display$mask$GeometryMask.js.map
