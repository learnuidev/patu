{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$UpdateList.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/Phaser/src/gameobjects/UpdateList.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$UpdateList\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar PluginCache = require('../plugins/PluginCache');\r\n\r\n/**\r\n * @classdesc\r\n * The Update List plugin.\r\n *\r\n * Update Lists belong to a Scene and maintain the list Game Objects to be updated every frame.\r\n *\r\n * Some or all of these Game Objects may also be part of the Scene's [Display List]{@link Phaser.GameObjects.DisplayList}, for Rendering.\r\n *\r\n * @class UpdateList\r\n * @memberOf Phaser.GameObjects\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene that the Update List belongs to.\r\n */\r\nvar UpdateList = new Class({\r\n\r\n    initialize:\r\n\r\n    function UpdateList (scene)\r\n    {\r\n        /**\r\n         * The Scene that the Update List belongs to.\r\n         *\r\n         * @name Phaser.GameObjects.UpdateList#scene\r\n         * @type {Phaser.Scene}\r\n         * @since 3.0.0\r\n         */\r\n        this.scene = scene;\r\n\r\n        /**\r\n         * The Scene's Systems.\r\n         *\r\n         * @name Phaser.GameObjects.UpdateList#systems\r\n         * @type {Phaser.Scenes.Systems}\r\n         * @since 3.0.0\r\n         */\r\n        this.systems = scene.sys;\r\n\r\n        /**\r\n         * The list of Game Objects.\r\n         *\r\n         * @name Phaser.GameObjects.UpdateList#_list\r\n         * @type {array}\r\n         * @private\r\n         * @default []\r\n         * @since 3.0.0\r\n         */\r\n        this._list = [];\r\n\r\n        /**\r\n         * Game Objects that are pending insertion into the list.\r\n         *\r\n         * @name Phaser.GameObjects.UpdateList#_pendingInsertion\r\n         * @type {array}\r\n         * @private\r\n         * @default []\r\n         * @since 3.0.0\r\n         */\r\n        this._pendingInsertion = [];\r\n\r\n        /**\r\n         * Game Objects that are pending removal from the list.\r\n         *\r\n         * @name Phaser.GameObjects.UpdateList#_pendingRemoval\r\n         * @type {array}\r\n         * @private\r\n         * @default []\r\n         * @since 3.0.0\r\n         */\r\n        this._pendingRemoval = [];\r\n\r\n        scene.sys.events.once('boot', this.boot, this);\r\n        scene.sys.events.on('start', this.start, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically, only once, when the Scene is first created.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.GameObjects.UpdateList#boot\r\n     * @private\r\n     * @since 3.5.1\r\n     */\r\n    boot: function ()\r\n    {\r\n        this.systems.events.once('destroy', this.destroy, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically by the Scene when it is starting up.\r\n     * It is responsible for creating local systems, properties and listening for Scene events.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.GameObjects.UpdateList#start\r\n     * @private\r\n     * @since 3.5.0\r\n     */\r\n    start: function ()\r\n    {\r\n        var eventEmitter = this.systems.events;\r\n\r\n        eventEmitter.on('preupdate', this.preUpdate, this);\r\n        eventEmitter.on('update', this.update, this);\r\n        eventEmitter.once('shutdown', this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * Add a Game Object to the Update List.\r\n     *\r\n     * @method Phaser.GameObjects.UpdateList#add\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject} child - The Game Object to add.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} The added Game Object.\r\n     */\r\n    add: function (child)\r\n    {\r\n        //  Is child already in this list?\r\n\r\n        if (this._list.indexOf(child) === -1 && this._pendingInsertion.indexOf(child) === -1)\r\n        {\r\n            this._pendingInsertion.push(child);\r\n        }\r\n\r\n        return child;\r\n    },\r\n\r\n    /**\r\n     * The pre-update step.\r\n     *\r\n     * Handles Game Objects that are pending insertion to and removal from the list.\r\n     *\r\n     * @method Phaser.GameObjects.UpdateList#preUpdate\r\n     * @since 3.0.0\r\n     */\r\n    preUpdate: function ()\r\n    {\r\n        var toRemove = this._pendingRemoval.length;\r\n        var toInsert = this._pendingInsertion.length;\r\n\r\n        if (toRemove === 0 && toInsert === 0)\r\n        {\r\n            //  Quick bail\r\n            return;\r\n        }\r\n\r\n        var i;\r\n        var gameObject;\r\n\r\n        //  Delete old gameObjects\r\n        for (i = 0; i < toRemove; i++)\r\n        {\r\n            gameObject = this._pendingRemoval[i];\r\n\r\n            var index = this._list.indexOf(gameObject);\r\n\r\n            if (index > -1)\r\n            {\r\n                this._list.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        //  Move pending to active\r\n        this._list = this._list.concat(this._pendingInsertion.splice(0));\r\n\r\n        //  Clear the lists\r\n        this._pendingRemoval.length = 0;\r\n        this._pendingInsertion.length = 0;\r\n    },\r\n\r\n    /**\r\n     * The update step.\r\n     *\r\n     * Pre-updates every active Game Object in the list.\r\n     *\r\n     * @method Phaser.GameObjects.UpdateList#update\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} time - The current timestamp.\r\n     * @param {number} delta - The delta time elapsed since the last frame.\r\n     */\r\n    update: function (time, delta)\r\n    {\r\n        for (var i = 0; i < this._list.length; i++)\r\n        {\r\n            var gameObject = this._list[i];\r\n\r\n            if (gameObject.active)\r\n            {\r\n                gameObject.preUpdate.call(gameObject, time, delta);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Remove a Game Object from the list.\r\n     *\r\n     * @method Phaser.GameObjects.UpdateList#remove\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject} child - The Game Object to remove from the list.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} The removed Game Object.\r\n     */\r\n    remove: function (child)\r\n    {\r\n        var index = this._list.indexOf(child);\r\n\r\n        if (index !== -1)\r\n        {\r\n            this._list.splice(index, 1);\r\n        }\r\n\r\n        return child;\r\n    },\r\n\r\n    /**\r\n     * Remove all Game Objects from the list.\r\n     *\r\n     * @method Phaser.GameObjects.UpdateList#removeAll\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.UpdateList} This UpdateList.\r\n     */\r\n    removeAll: function ()\r\n    {\r\n        var i = this._list.length;\r\n\r\n        while (i--)\r\n        {\r\n            this.remove(this._list[i]);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is shutting down.\r\n     * We need to kill and reset all internal properties as well as stop listening to Scene events.\r\n     *\r\n     * @method Phaser.GameObjects.UpdateList#shutdown\r\n     * @since 3.0.0\r\n     */\r\n    shutdown: function ()\r\n    {\r\n        var i = this._list.length;\r\n\r\n        while (i--)\r\n        {\r\n            this._list[i].destroy(true);\r\n        }\r\n\r\n        i = this._pendingRemoval.length;\r\n\r\n        while (i--)\r\n        {\r\n            this._pendingRemoval[i].destroy(true);\r\n        }\r\n\r\n        i = this._pendingInsertion.length;\r\n\r\n        while (i--)\r\n        {\r\n            this._pendingInsertion[i].destroy(true);\r\n        }\r\n\r\n        this._list.length = 0;\r\n        this._pendingRemoval.length = 0;\r\n        this._pendingInsertion.length = 0;\r\n\r\n        var eventEmitter = this.systems.events;\r\n\r\n        eventEmitter.off('preupdate', this.preUpdate, this);\r\n        eventEmitter.off('update', this.update, this);\r\n        eventEmitter.off('shutdown', this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is being destroyed.\r\n     * We need to shutdown and then kill off all external references.\r\n     *\r\n     * @method Phaser.GameObjects.UpdateList#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n\r\n        this.scene.sys.events.off('start', this.start, this);\r\n\r\n        this.scene = null;\r\n        this.systems = null;\r\n    },\r\n\r\n    /**\r\n     * The length of the list.\r\n     *\r\n     * @name Phaser.GameObjects.UpdateList#length\r\n     * @type {integer}\r\n     * @readOnly\r\n     * @since 3.10.0\r\n     */\r\n    length: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._list.length;\r\n        }\r\n\r\n    }\r\n\r\n});\r\n\r\nPluginCache.register('UpdateList', UpdateList, 'updateList');\r\n\r\nmodule.exports = UpdateList;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","PluginCache","UpdateList","initialize","scene","systems","sys","_list","_pendingInsertion","_pendingRemoval","events","once","boot","on","start","destroy","eventEmitter","preUpdate","update","shutdown","add","child","indexOf","push","toRemove","length","toInsert","i","gameObject","index","splice","concat","time","delta","active","call","remove","removeAll","off","get","register"]
}
