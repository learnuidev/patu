{
"version":3,
"file":"module$node_modules$Phaser$src$utils$array$Range.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,iDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO7G,IAAIC,SAAWH,OAAA,CAAQ,sDAAR,CAAf,CACII,QAAUJ,OAAA,CAAQ,oDAAR,CA8HdC,OAAAC,QAAA,CAhEYG,QAAS,CAACC,CAAD,CAAIC,UAAJ,CAAOC,OAAP,CACrB,CACI,IAAIC,IAAMN,QAAA,CAASK,OAAT,CAAkB,KAAlB,CAAyB,CAAzB,CAAV,CACIE,IAAMP,QAAA,CAASK,OAAT,CAAkB,KAAlB,CAAyB,CAAzB,CADV,CAEIG,OAASR,QAAA,CAASK,OAAT,CAAkB,QAAlB,CAA4B,CAAA,CAA5B,CAFb,CAGII,QAAUT,QAAA,CAASK,OAAT,CAAkB,SAAlB,CAA6B,CAAA,CAA7B,CAHd,CAIIK,OAASV,QAAA,CAASK,OAAT,CAAkB,QAAlB,CAA4B,CAA5B,CACTM,QAAAA,CAAOX,QAAA,CAASK,OAAT,CAAkB,MAAlB;AAA0B,CAAA,CAA1B,CAEX,KAAIO,IAAM,EAENH,QAAJ,EAEIR,OAAA,CAAQG,UAAR,CAIW,GAAf,GAAIM,MAAJ,GAEgB,CAAZ,GAAIJ,GAAJ,CAEII,MAFJ,CAEa,CAFb,EAOQG,MAOJ,CAPaV,CAAAW,OAOb,CAPwBV,UAAAU,OAOxB,CAPoCP,GAOpC,CALII,OAKJ,GAHIE,MAGJ,EAHa,CAGb,EAAAH,MAAA,CAASK,IAAAC,KAAA,CAAUV,GAAV,CAAgBO,MAAhB,CAdb,CAFJ,CAoBA,KAASI,OAAT,CAAa,CAAb,CAAgBA,OAAhB,EAAqBP,MAArB,CAA6BO,OAAA,EAA7B,CACA,CAC2Bd,IAAAA,MAAAA,CA/F3B,KA+F8BC,IAAAA,EAAAA,UAAAA,CAAGG,aAAAA,GAAHH,CAjG1BQ,aAAM,EAiGoBR,CA/FrBc,OAAS,CAAlB,CAAqBA,MAArB,CAA8Bf,KAAAW,OAA9B,CAAwCI,MAAA,EAAxC,CAEI,IAAK,IAAIC,OAAS,CAAlB,CAAqBA,MAArB,CAA8Bf,CAAAU,OAA9B,CAAwCK,MAAA,EAAxC,CAEI,IAAK,IAAIF,EAAI,CAAb,CAAgBA,CAAhB,CAAoBV,YAApB,CAAyBU,CAAA,EAAzB,CAEIL,YAAAQ,KAAA,CAAS,CAAEjB,EAAGA,KAAA,CAAEe,MAAF,CAAL,CAAgBd,EAAGA,CAAA,CAAEe,MAAF,CAAnB,CAAT,CAKZ,MAAA,CAAOP,YAsFCJ,OAAJ,EAEIP,OAAA,CAAQoB,KAAR,CAGJT,IAAA,CAAMA,GAAAU,OAAA,CAAWD,KAAX,CAEFV,QAAJ;CAEIU,KAAAE,QAAA,EAEA,CAAAX,GAAA,CAAMA,GAAAU,OAAA,CAAWD,KAAX,CAJV,CAVJ,CAkBIf,GAAJ,EAEIM,GAAAY,OAAA,CAAWlB,GAAX,CAGJ,OAAOM,IA5DX,CAvE6G;",
"sources":["node_modules/Phaser/src/utils/array/Range.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$array$Range\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar GetValue = require('../object/GetValue');\r\nvar Shuffle = require('./Shuffle');\r\n\r\nvar BuildChunk = function (a, b, qty)\r\n{\r\n    var out = [];\r\n\r\n    for (var aIndex = 0; aIndex < a.length; aIndex++)\r\n    {\r\n        for (var bIndex = 0; bIndex < b.length; bIndex++)\r\n        {\r\n            for (var i = 0; i < qty; i++)\r\n            {\r\n                out.push({ a: a[aIndex], b: b[bIndex] });\r\n            }\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\n//  options = repeat, random, randomB, yoyo, max, qty\r\n\r\n//  Range ([a,b,c], [1,2,3]) =\r\n//  a1, a2, a3, b1, b2, b3, c1, c2, c3\r\n\r\n//  Range ([a,b], [1,2,3], qty = 3) =\r\n//  a1, a1, a1, a2, a2, a2, a3, a3, a3, b1, b1, b1, b2, b2, b2, b3, b3, b3\r\n\r\n//  Range ([a,b,c], [1,2,3], repeat x1) =\r\n//  a1, a2, a3, b1, b2, b3, c1, c2, c3, a1, a2, a3, b1, b2, b3, c1, c2, c3\r\n\r\n//  Range ([a,b], [1,2], repeat -1 = endless, max = 14) =\r\n//  Maybe if max is set then repeat goes to -1 automatically?\r\n//  a1, a2, b1, b2, a1, a2, b1, b2, a1, a2, b1, b2, a1, a2 (capped at 14 elements)\r\n\r\n//  Range ([a], [1,2,3,4,5], random = true) =\r\n//  a4, a1, a5, a2, a3\r\n\r\n//  Range ([a, b], [1,2,3], random = true) =\r\n//  b3, a2, a1, b1, a3, b2\r\n\r\n//  Range ([a, b, c], [1,2,3], randomB = true) =\r\n//  a3, a1, a2, b2, b3, b1, c1, c3, c2\r\n\r\n//  Range ([a], [1,2,3,4,5], yoyo = true) =\r\n//  a1, a2, a3, a4, a5, a5, a4, a3, a2, a1\r\n\r\n//  Range ([a, b], [1,2,3], yoyo = true) =\r\n//  a1, a2, a3, b1, b2, b3, b3, b2, b1, a3, a2, a1\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Utils.Array.Range\r\n * @since 3.0.0\r\n *\r\n * @param {array} a - [description]\r\n * @param {array} b - [description]\r\n * @param {object} options - [description]\r\n *\r\n * @return {array} [description]\r\n */\r\nvar Range = function (a, b, options)\r\n{\r\n    var max = GetValue(options, 'max', 0);\r\n    var qty = GetValue(options, 'qty', 1);\r\n    var random = GetValue(options, 'random', false);\r\n    var randomB = GetValue(options, 'randomB', false);\r\n    var repeat = GetValue(options, 'repeat', 0);\r\n    var yoyo = GetValue(options, 'yoyo', false);\r\n\r\n    var out = [];\r\n\r\n    if (randomB)\r\n    {\r\n        Shuffle(b);\r\n    }\r\n\r\n    //  Endless repeat, so limit by max\r\n    if (repeat === -1)\r\n    {\r\n        if (max === 0)\r\n        {\r\n            repeat = 0;\r\n        }\r\n        else\r\n        {\r\n            //  Work out how many repeats we need\r\n            var total = (a.length * b.length) * qty;\r\n\r\n            if (yoyo)\r\n            {\r\n                total *= 2;\r\n            }\r\n\r\n            repeat = Math.ceil(max / total);\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i <= repeat; i++)\r\n    {\r\n        var chunk = BuildChunk(a, b, qty);\r\n\r\n        if (random)\r\n        {\r\n            Shuffle(chunk);\r\n        }\r\n\r\n        out = out.concat(chunk);\r\n\r\n        if (yoyo)\r\n        {\r\n            chunk.reverse();\r\n\r\n            out = out.concat(chunk);\r\n        }\r\n    }\r\n\r\n    if (max)\r\n    {\r\n        out.splice(max);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Range;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetValue","Shuffle","Range","a","b","options","max","qty","random","randomB","repeat","yoyo","out","total","length","Math","ceil","i","aIndex","bIndex","push","chunk","concat","reverse","splice"]
}
