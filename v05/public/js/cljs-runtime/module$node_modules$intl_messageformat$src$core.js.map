{
"version":3,
"file":"module$node_modules$intl_messageformat$src$core.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/intl-messageformat/src/core.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$intl_messageformat$src$core\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntlMessageFormat = void 0;\nvar tslib_1 = require(\"tslib\");\nvar intl_messageformat_parser_1 = require(\"intl-messageformat-parser\");\nvar memoize = tslib_1.__importStar(require(\"fast-memoize\"));\nvar formatters_1 = require(\"./formatters\");\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = tslib_1.__assign(tslib_1.__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, tslib_1.__assign({}, defaultConfig));\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\nfunction createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, tslib_1.__spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.number),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDateTimeFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, tslib_1.__spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.dateTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.PluralRules).bind.apply(_a, tslib_1.__spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.pluralRules),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== 0 /* literal */ ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatters_1.formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n                ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.__parse = intl_messageformat_parser_1.parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexports.IntlMessageFormat = IntlMessageFormat;\n\n};"],
"names":["shadow$provide","global","require","module","exports","mergeConfig","c1","c2","tslib_1","__assign","Object","keys","reduce","all","k","mergeConfigs","defaultConfig","configs","createFastMemoizeCache","store","create","has","key","get","set","value","createDefaultFormatters","cache","number","dateTime","pluralRules","getNumberFormat","memoizeIntl","_a","args","_i","arguments","length","bind","Intl","NumberFormat","apply","__spreadArrays","strategy","strategies","variadic","getDateTimeFormat","DateTimeFormat","getPluralRules","PluralRules","defineProperty","IntlMessageFormat","intl_messageformat_parser_1","memoize","__importStar","formatters_1","default","message","locales","overrideFormats","opts","_this","defaultLocale","formatterCache","format","this.format","values","parts","formatToParts","result","part","type","push","this.formatToParts","ast","formatters","formats","undefined","resolvedOptions","this.resolvedOptions","locale","supportedLocalesOf","getAst","this.getAst","__parse","TypeError","normalizeHashtagInPlural","ignoreTag","Array","isArray","memoizedDefaultLocale","enumerable","configurable","parse","currency","style","percent","date","short","month","day","year","medium","long","full","weekday","time","hour","minute","second","timeZoneName"]
}
