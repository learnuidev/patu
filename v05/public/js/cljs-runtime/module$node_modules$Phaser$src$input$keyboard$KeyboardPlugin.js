shadow$provide.module$node_modules$Phaser$src$input$keyboard$KeyboardPlugin=function(global,require,module,exports){exports=require("module$node_modules$Phaser$src$utils$Class");var EventEmitter=require("module$node_modules$eventemitter3$index"),GetValue=require("module$node_modules$Phaser$src$utils$object$GetValue");global=require("module$node_modules$Phaser$src$input$InputPluginCache");var Key=require("module$node_modules$Phaser$src$input$keyboard$keys$Key"),KeyCodes=require("module$node_modules$Phaser$src$input$keyboard$keys$KeyCodes"),
KeyCombo=require("module$node_modules$Phaser$src$input$keyboard$combo$KeyCombo"),KeyMap=require("module$node_modules$Phaser$src$input$keyboard$keys$KeyMap"),ProcessKeyDown=require("module$node_modules$Phaser$src$input$keyboard$keys$ProcessKeyDown"),ProcessKeyUp=require("module$node_modules$Phaser$src$input$keyboard$keys$ProcessKeyUp"),SnapFloor=require("module$node_modules$Phaser$src$math$snap$SnapFloor");require=new exports({Extends:EventEmitter,initialize:function(sceneInputPlugin){EventEmitter.call(this);
this.scene=sceneInputPlugin.scene;this.settings=this.scene.sys.settings;this.sceneInputPlugin=sceneInputPlugin;this.enabled=!0;this.keys=[];this.combos=[];this.queue=[];this.time=0;sceneInputPlugin.pluginEvents.once("boot",this.boot,this);sceneInputPlugin.pluginEvents.on("start",this.start,this)},boot:function(){var settings=this.settings.input,config=this.scene.sys.game.config;this.enabled=GetValue(settings,"keyboard",config.inputKeyboard);this.target=GetValue(settings,"keyboard.target",config.inputKeyboardEventTarget);
this.sceneInputPlugin.pluginEvents.once("destroy",this.destroy,this)},start:function(){this.enabled&&this.startListeners();this.sceneInputPlugin.pluginEvents.once("shutdown",this.shutdown,this)},isActive:function(){return this.enabled&&this.scene.sys.isActive()},startListeners:function(){var _this=this,handler=function(event){if(!event.defaultPrevented&&_this.isActive()){_this.queue.push(event);var key=_this.keys[event.keyCode];key&&key.preventDefault&&event.preventDefault()}};this.onKeyHandler=handler;
this.target.addEventListener("keydown",handler,!1);this.target.addEventListener("keyup",handler,!1);this.sceneInputPlugin.pluginEvents.on("update",this.update,this)},stopListeners:function(){this.target.removeEventListener("keydown",this.onKeyHandler);this.target.removeEventListener("keyup",this.onKeyHandler);this.sceneInputPlugin.pluginEvents.off("update",this.update)},createCursorKeys:function(){return this.addKeys({up:KeyCodes.UP,down:KeyCodes.DOWN,left:KeyCodes.LEFT,right:KeyCodes.RIGHT,space:KeyCodes.SPACE,
shift:KeyCodes.SHIFT})},addKeys:function(keys){var output={};if("string"===typeof keys){keys=keys.split(",");for(var i=0;i<keys.length;i++){var currentKey=keys[i].trim();currentKey&&(output[currentKey]=this.addKey(currentKey))}}else for(i in keys)output[i]=this.addKey(keys[i]);return output},addKey:function(key){var keys=this.keys;if(key instanceof Key){var idx=keys.indexOf(key);-1<idx?keys[idx]=key:keys[key.keyCode]=key;return key}"string"===typeof key&&(key=KeyCodes[key.toUpperCase()]);keys[key]||
(keys[key]=new Key(key));return keys[key]},removeKey:function(key){var keys=this.keys;if(key instanceof Key){var idx=keys.indexOf(key);-1<idx&&(this.keys[idx]=void 0)}else"string"===typeof key&&(key=KeyCodes[key.toUpperCase()]);keys[key]&&(keys[key]=void 0)},createCombo:function(keys,config){return new KeyCombo(this,keys,config)},checkDown:function(key,duration){return this.enabled&&key.isDown&&(duration=SnapFloor(this.time-key.timeDown,duration),duration>key._tick)?(key._tick=duration,!0):!1},update:function(time){this.time=
time;time=this.queue.length;if(this.enabled&&0!==time)for(var queue=this.queue.splice(0,time),keys=this.keys,i=0;i<time;i++){var event=queue[i],code=event.keyCode;"keydown"===event.type?(!KeyMap[code]||void 0!==keys[code]&&!1!==keys[code].isDown||(this.emit(event.type,event),this.emit("keydown_"+KeyMap[code],event)),keys[code]&&ProcessKeyDown(keys[code],event)):(this.emit(event.type,event),this.emit("keyup_"+KeyMap[code],event),keys[code]&&ProcessKeyUp(keys[code],event))}},shutdown:function(){this.stopListeners();
this.removeAllListeners()},destroy:function(){this.shutdown();this.keys=[];this.combos=[];this.queue=[];this.target=this.sceneInputPlugin=this.settings=this.scene=null}});global.register("KeyboardPlugin",require,"keyboard","keyboard","inputKeyboard");module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$input$keyboard$KeyboardPlugin.js.map
