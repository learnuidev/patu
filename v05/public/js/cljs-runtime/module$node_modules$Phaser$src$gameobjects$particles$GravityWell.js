shadow$provide.module$node_modules$Phaser$src$gameobjects$particles$GravityWell=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue");require=new global({initialize:function(x,y,power,epsilon,gravity){"object"===typeof x?(gravity=x,x=GetFastValue(gravity,"x",0),y=GetFastValue(gravity,"y",0),power=GetFastValue(gravity,"power",0),epsilon=GetFastValue(gravity,"epsilon",
100),gravity=GetFastValue(gravity,"gravity",50)):(void 0===x&&(x=0),void 0===y&&(y=0),void 0===power&&(power=0),void 0===epsilon&&(epsilon=100),void 0===gravity&&(gravity=50));this.x=x;this.y=y;this.active=!0;this._gravity=gravity;this._epsilon=this._power=0;this.power=power;this.epsilon=epsilon},update:function(particle,delta){var x=this.x-particle.x,y=this.y-particle.y,dSq=x*x+y*y;if(0!==dSq){var d=Math.sqrt(dSq);dSq<this._epsilon&&(dSq=this._epsilon);delta=this._power*delta/(dSq*d)*100;particle.velocityX+=
x*delta;particle.velocityY+=y*delta}},epsilon:{get:function(){return Math.sqrt(this._epsilon)},set:function(value){this._epsilon=value*value}},power:{get:function(){return this._power/this._gravity},set:function(value){this._power=value*this._gravity}},gravity:{get:function(){return this._gravity},set:function(value){var pwr=this.power;this._gravity=value;this.power=pwr}}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$particles$GravityWell.js.map
