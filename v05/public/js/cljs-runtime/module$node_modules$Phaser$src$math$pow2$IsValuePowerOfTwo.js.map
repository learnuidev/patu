{
"version":3,
"file":"module$node_modules$Phaser$src$math$pow2$IsValuePowerOfTwo.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,2DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsBvHD,MAAAC,QAAA,CALwBC,QAAS,CAACC,KAAD,CACjC,CACI,MAAgB,EAAhB,CAAQA,KAAR,EAA+C,CAA/C,IAAsBA,KAAtB,CAA+BA,KAA/B,CAAuC,CAAvC,CADJ,CAlBuH;",
"sources":["node_modules/Phaser/src/math/pow2/IsValuePowerOfTwo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$pow2$IsValuePowerOfTwo\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n/**\r\n * Tests the value and returns `true` if it is a power of two.\r\n *\r\n * @function Phaser.Math.Pow2.IsValuePowerOfTwo\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to check if it's a power of two.\r\n *\r\n * @return {boolean} Returns `true` if `value` is a power of two, otherwise `false`.\r\n */\r\nvar IsValuePowerOfTwo = function (value)\r\n{\r\n    return (value > 0 && (value & (value - 1)) === 0);\r\n};\r\n\r\nmodule.exports = IsValuePowerOfTwo;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","IsValuePowerOfTwo","value"]
}
