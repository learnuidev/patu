{
"version":3,
"file":"module$node_modules$Phaser$src$utils$array$MoveTo.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,kDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyC9GD,MAAAC,QAAA,CArBaC,QAAS,CAACC,KAAD,CAAQC,IAAR,CAAcC,KAAd,CACtB,CACI,IAAIC,aAAeH,KAAAI,QAAA,CAAcH,IAAd,CAEnB,IAAqB,EAArB,GAAIE,YAAJ,EAAmC,CAAnC,CAA2BD,KAA3B,EAAwCA,KAAxC,EAAiDF,KAAAK,OAAjD,CAEI,KAAUC,MAAJ,CAAU,8BAAV,CAAN,CAGAH,YAAJ,GAAqBD,KAArB,GAGIF,KAAAO,OAAA,CAAaJ,YAAb,CAA2B,CAA3B,CAGA,CAAAH,KAAAO,OAAA,CAAaL,KAAb,CAAoB,CAApB,CAAuBD,IAAvB,CANJ,CASA,OAAOA,KAjBX,CArB8G;",
"sources":["node_modules/Phaser/src/utils/array/MoveTo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$array$MoveTo\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Moves an element in an array to a new position within the same array.\r\n * The array is modified in-place.\r\n *\r\n * @function Phaser.Utils.Array.MoveTo\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array.\r\n * @param {*} item - The element to move.\r\n * @param {integer} index - The new index that the element will be moved to.\r\n *\r\n * @return {*} The element that was moved.\r\n */\r\nvar MoveTo = function (array, item, index)\r\n{\r\n    var currentIndex = array.indexOf(item);\r\n\r\n    if (currentIndex === -1 || index < 0 || index >= array.length)\r\n    {\r\n        throw new Error('Supplied index out of bounds');\r\n    }\r\n\r\n    if (currentIndex !== index)\r\n    {\r\n        //  Remove\r\n        array.splice(currentIndex, 1);\r\n\r\n        //  Add in new location\r\n        array.splice(index, 0, item);\r\n    }\r\n\r\n    return item;\r\n};\r\n\r\nmodule.exports = MoveTo;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","MoveTo","array","item","index","currentIndex","indexOf","length","Error","splice"]
}
