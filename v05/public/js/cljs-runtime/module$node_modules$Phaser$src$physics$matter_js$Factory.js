shadow$provide.module$node_modules$Phaser$src$physics$matter_js$Factory=function(global,require,module,exports){var Bodies=require("module$node_modules$Phaser$src$physics$matter_js$lib$factory$Bodies");global=require("module$node_modules$Phaser$src$utils$Class");var Composites=require("module$node_modules$Phaser$src$physics$matter_js$lib$factory$Composites"),Constraint=require("module$node_modules$Phaser$src$physics$matter_js$lib$constraint$Constraint"),MatterGameObject=require("module$node_modules$Phaser$src$physics$matter_js$MatterGameObject"),
MatterImage=require("module$node_modules$Phaser$src$physics$matter_js$MatterImage"),MatterSprite=require("module$node_modules$Phaser$src$physics$matter_js$MatterSprite"),MatterTileBody=require("module$node_modules$Phaser$src$physics$matter_js$MatterTileBody"),PointerConstraint=require("module$node_modules$Phaser$src$physics$matter_js$PointerConstraint");require=new global({initialize:function(world){this.world=world;this.scene=world.scene;this.sys=world.scene.sys},rectangle:function(x,y,width,height,
options){x=Bodies.rectangle(x,y,width,height,options);this.world.add(x);return x},trapezoid:function(x,y,width,height,slope,options){x=Bodies.trapezoid(x,y,width,height,slope,options);this.world.add(x);return x},circle:function(x,y,radius,options,maxSides){x=Bodies.circle(x,y,radius,options,maxSides);this.world.add(x);return x},polygon:function(x,y,sides,radius,options){x=Bodies.polygon(x,y,sides,radius,options);this.world.add(x);return x},fromVertices:function(x,y,vertexSets,options,flagInternal,
removeCollinear,minimumArea){x=Bodies.fromVertices(x,y,vertexSets,options,flagInternal,removeCollinear,minimumArea);this.world.add(x);return x},imageStack:function(key,frame,x$jscomp$0,y$jscomp$0,columns,rows,columnGap,rowGap,options){void 0===columnGap&&(columnGap=0);void 0===rowGap&&(rowGap=0);void 0===options&&(options={});var world=this.world,displayList=this.sys.displayList;options.addToWorld=!1;x$jscomp$0=Composites.stack(x$jscomp$0,y$jscomp$0,columns,rows,columnGap,rowGap,function(x,y){x=new MatterImage(world,
x,y,key,frame,options);displayList.add(x);return x.body});world.add(x$jscomp$0);return x$jscomp$0},stack:function(x,y,columns,rows,columnGap,rowGap,callback){x=Composites.stack(x,y,columns,rows,columnGap,rowGap,callback);this.world.add(x);return x},pyramid:function(x,y,columns,rows,columnGap,rowGap,callback){x=Composites.pyramid(x,y,columns,rows,columnGap,rowGap,callback);this.world.add(x);return x},chain:function(composite,xOffsetA,yOffsetA,xOffsetB,yOffsetB,options){return Composites.chain(composite,
xOffsetA,yOffsetA,xOffsetB,yOffsetB,options)},mesh:function(composite,columns,rows,crossBrace,options){return Composites.mesh(composite,columns,rows,crossBrace,options)},newtonsCradle:function(x,y,number,size,length){x=Composites.newtonsCradle(x,y,number,size,length);this.world.add(x);return x},car:function(x,y,width,height,wheelSize){x=Composites.car(x,y,width,height,wheelSize);this.world.add(x);return x},softBody:function(x,y,columns,rows,columnGap,rowGap,crossBrace,particleRadius,particleOptions,
constraintOptions){x=Composites.softBody(x,y,columns,rows,columnGap,rowGap,crossBrace,particleRadius,particleOptions,constraintOptions);this.world.add(x);return x},joint:function(bodyA,bodyB,length,stiffness,options){return this.constraint(bodyA,bodyB,length,stiffness,options)},spring:function(bodyA,bodyB,length,stiffness,options){return this.constraint(bodyA,bodyB,length,stiffness,options)},constraint:function(bodyA,bodyB,length,stiffness,options){void 0===stiffness&&(stiffness=1);void 0===options&&
(options={});options.bodyA="body"===bodyA.type?bodyA:bodyA.body;options.bodyB="body"===bodyB.type?bodyB:bodyB.body;options.length=length;options.stiffness=stiffness;bodyA=Constraint.create(options);this.world.add(bodyA);return bodyA},worldConstraint:function(bodyB,length,stiffness,options){void 0===stiffness&&(stiffness=1);void 0===options&&(options={});options.bodyB="body"===bodyB.type?bodyB:bodyB.body;options.length=length;options.stiffness=stiffness;bodyB=Constraint.create(options);this.world.add(bodyB);
return bodyB},mouseSpring:function(options){return this.pointerConstraint(options)},pointerConstraint:function(options){void 0===options&&(options={});options.hasOwnProperty("render")||(options.render={visible:!1});options=new PointerConstraint(this.scene,this.world,options);this.world.add(options.constraint);return options},image:function(x,y,key,frame,options){x=new MatterImage(this.world,x,y,key,frame,options);this.sys.displayList.add(x);return x},tileBody:function(tile,options){return new MatterTileBody(this.world,
tile,options)},sprite:function(x,y,key,frame,options){x=new MatterSprite(this.world,x,y,key,frame,options);this.sys.displayList.add(x);this.sys.updateList.add(x);return x},gameObject:function(gameObject,options){return MatterGameObject(this.world,gameObject,options)},destroy:function(){this.sys=this.scene=this.world=null}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$Factory.js.map
