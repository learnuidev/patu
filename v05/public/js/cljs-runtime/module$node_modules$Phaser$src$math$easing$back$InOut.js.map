{
"version":3,
"file":"module$node_modules$Phaser$src$math$easing$back$InOut.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkClHD,MAAAC,QAAA,CAhBYC,QAAS,CAACC,CAAD,CAAIC,SAAJ,CACrB,CACsBC,IAAAA,EAAlB,GAAID,SAAJ,GAA+BA,SAA/B,CAA2C,OAA3C,CAEQA,UAAJE,EAAgB,KAEpB,OAAe,EAAf,EAAKH,CAAL,EAAU,CAAV,EAEW,EAFX,CAEkBA,CAFlB,CAEsBA,CAFtB,GAE4BG,SAF5B,CAEgC,CAFhC,EAEqCH,CAFrC,CAEyCG,SAFzC,EAMW,EANX,GAMmBH,CANnB,EAMwB,CANxB,EAM6BA,CAN7B,GAMmCG,SANnC,CAMuC,CANvC,EAM4CH,CAN5C,CAMgDG,SANhD,EAMqD,CANrD,CALJ,CAnBkH;",
"sources":["node_modules/Phaser/src/math/easing/back/InOut.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$easing$back$InOut\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Back ease-in/out.\r\n *\r\n * @function Phaser.Math.Easing.Back.InOut\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n * @param {number} [overshoot=1.70158] - The overshoot amount.\r\n *\r\n * @return {number} The tweened value.\r\n */\r\nvar InOut = function (v, overshoot)\r\n{\r\n    if (overshoot === undefined) { overshoot = 1.70158; }\r\n\r\n    var s = overshoot * 1.525;\r\n\r\n    if ((v *= 2) < 1)\r\n    {\r\n        return 0.5 * (v * v * ((s + 1) * v - s));\r\n    }\r\n    else\r\n    {\r\n        return 0.5 * ((v -= 2) * v * ((s + 1) * v + s) + 2);\r\n    }\r\n};\r\n\r\nmodule.exports = InOut;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","InOut","v","overshoot","undefined","s"]
}
