shadow$provide.module$node_modules$Phaser$src$gameobjects$shape$ellipse$Ellipse=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var Earcut=require("module$node_modules$Phaser$src$geom$polygon$Earcut");exports=require("module$node_modules$Phaser$src$gameobjects$shape$ellipse$EllipseRender");var GeomEllipse=require("module$node_modules$Phaser$src$geom$ellipse$Ellipse"),Shape=require("module$node_modules$Phaser$src$gameobjects$shape$Shape");require=
new global({Extends:Shape,Mixins:[exports],initialize:function(scene,x,y,width,height,fillColor,fillAlpha){void 0===x&&(x=0);void 0===y&&(y=0);void 0===width&&(width=128);void 0===height&&(height=128);Shape.call(this,scene,"Ellipse",new GeomEllipse(width/2,height/2,width,height));this._smoothness=64;this.setPosition(x,y);this.width=width;this.height=height;void 0!==fillColor&&this.setFillStyle(fillColor,fillAlpha);this.updateDisplayOrigin();this.updateData()},smoothness:{get:function(){return this._smoothness},
set:function(value){this._smoothness=value;this.updateData()}},setSize:function(width,height){this.geom.setSize(width,height);return this.updateData()},setSmoothness:function(value){this._smoothness=value;return this.updateData()},updateData:function(){for(var path=[],points=this.geom.getPoints(this._smoothness),i=0;i<points.length;i++)path.push(points[i].x,points[i].y);path.push(points[0].x,points[0].y);this.pathIndexes=Earcut(path);this.pathData=path;return this}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$shape$ellipse$Ellipse.js.map
