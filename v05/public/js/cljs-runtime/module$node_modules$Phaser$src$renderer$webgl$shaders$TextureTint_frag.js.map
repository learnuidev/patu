{
"version":3,
"file":"module$node_modules$Phaser$src$renderer$webgl$shaders$TextureTint_frag.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,uEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACnID,MAAAC,QAAA,CAoCI,61BArC+H;",
"sources":["node_modules/Phaser/src/renderer/webgl/shaders/TextureTint-frag.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$renderer$webgl$shaders$TextureTint_frag\"] = function(global,require,module,exports) {\nmodule.exports = [\n    '#define SHADER_NAME PHASER_TEXTURE_TINT_FS',\n    '',\n    'precision mediump float;',\n    '',\n    'uniform sampler2D uMainSampler;',\n    '',\n    'varying vec2 outTexCoord;',\n    'varying float outTintEffect;',\n    'varying vec4 outTint;',\n    '',\n    'void main()',\n    '{',\n    '    vec4 texture = texture2D(uMainSampler, outTexCoord);',\n    '    vec4 texel = vec4(outTint.rgb * outTint.a, outTint.a);',\n    '    vec4 color = texture;',\n    '',\n    '    if (outTintEffect == 0.0)',\n    '    {',\n    '        //  Multiply texture tint',\n    '        color = texture * texel;',\n    '    }',\n    '    else if (outTintEffect == 1.0)',\n    '    {',\n    '        //  Solid color + texture alpha',\n    '        color.rgb = mix(texture.rgb, outTint.rgb * outTint.a, texture.a);',\n    '        color.a = texture.a * texel.a;',\n    '    }',\n    '    else if (outTintEffect == 2.0)',\n    '    {',\n    '        //  Solid color, no texture',\n    '        color = texel;',\n    '    }',\n    '',\n    '    gl_FragColor = color;',\n    '}',\n    ''\n].join('\\n');\n\n};"],
"names":["shadow$provide","global","require","module","exports"]
}
