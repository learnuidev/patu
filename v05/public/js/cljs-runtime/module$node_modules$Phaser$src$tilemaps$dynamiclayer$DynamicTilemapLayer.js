shadow$provide.module$node_modules$Phaser$src$tilemaps$dynamiclayer$DynamicTilemapLayer=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");exports=require("module$node_modules$Phaser$src$gameobjects$components$index");var DynamicTilemapLayerRender=require("module$node_modules$Phaser$src$tilemaps$dynamiclayer$DynamicTilemapLayerRender"),GameObject=require("module$node_modules$Phaser$src$gameobjects$GameObject"),TilemapComponents=require("module$node_modules$Phaser$src$tilemaps$components$index");
require=new global({Extends:GameObject,Mixins:[exports.Alpha,exports.BlendMode,exports.ComputedSize,exports.Depth,exports.Flip,exports.GetBounds,exports.Origin,exports.Pipeline,exports.ScaleMode,exports.Transform,exports.Visible,exports.ScrollFactor,DynamicTilemapLayerRender],initialize:function(scene,tilemap,layerIndex,tileset,x,y){GameObject.call(this,scene,"DynamicTilemapLayer");this.isTilemap=!0;this.tilemap=tilemap;this.layerIndex=layerIndex;this.layer=tilemap.layers[layerIndex];this.layer.tilemapLayer=
this;this.tileset=[];this.culledTiles=[];this.skipCull=!1;this.tilesDrawn=0;this.tilesTotal=this.layer.width*this.layer.height;this.cullPaddingY=this.cullPaddingX=1;this.cullCallback=TilemapComponents.CullTiles;this._renderOrder=0;this.gidMap=[];this.setTilesets(tileset);this.setAlpha(this.layer.alpha);this.setPosition(x,y);this.setOrigin();this.setSize(this.layer.tileWidth*this.layer.width,this.layer.tileHeight*this.layer.height);this.initPipeline("TextureTintPipeline")},setTilesets:function(tilesets){var gidMap=
[],setList=[],map=this.tilemap;Array.isArray(tilesets)||(tilesets=[tilesets]);for(var i=0;i<tilesets.length;i++){var tileset=tilesets[i];"string"===typeof tileset&&(tileset=map.getTileset(tileset));if(tileset){setList.push(tileset);for(var s=tileset.firstgid,t=0;t<tileset.total;t++)gidMap[s+t]=tileset}}this.gidMap=gidMap;this.tileset=setList},setRenderOrder:function(renderOrder){var orders=["right-down","left-down","right-up","left-up"];"string"===typeof renderOrder&&(renderOrder=orders.indexOf(renderOrder));
0<=renderOrder&&4>renderOrder&&(this._renderOrder=renderOrder);return this},calculateFacesAt:function(tileX,tileY){TilemapComponents.CalculateFacesAt(tileX,tileY,this.layer);return this},calculateFacesWithin:function(tileX,tileY,width,height){TilemapComponents.CalculateFacesWithin(tileX,tileY,width,height,this.layer);return this},createFromTiles:function(indexes,replacements,spriteConfig,scene,camera){return TilemapComponents.CreateFromTiles(indexes,replacements,spriteConfig,scene,camera,this.layer)},
cull:function(camera){return this.cullCallback(this.layer,camera,this.culledTiles,this._renderOrder)},copy:function(srcTileX,srcTileY,width,height,destTileX,destTileY,recalculateFaces){TilemapComponents.Copy(srcTileX,srcTileY,width,height,destTileX,destTileY,recalculateFaces,this.layer);return this},destroy:function(){this.layer.tilemapLayer===this&&(this.layer.tilemapLayer=void 0);this.layer=this.tilemap=void 0;this.culledTiles.length=0;this.cullCallback=null;this.gidMap=[];this.tileset=[];GameObject.prototype.destroy.call(this)},
fill:function(index,tileX,tileY,width,height,recalculateFaces){TilemapComponents.Fill(index,tileX,tileY,width,height,recalculateFaces,this.layer);return this},filterTiles:function(callback,context,tileX,tileY,width,height,filteringOptions){return TilemapComponents.FilterTiles(callback,context,tileX,tileY,width,height,filteringOptions,this.layer)},findByIndex:function(findIndex,skip,reverse){return TilemapComponents.FindByIndex(findIndex,skip,reverse,this.layer)},findTile:function(callback,context,
tileX,tileY,width,height,filteringOptions){return TilemapComponents.FindTile(callback,context,tileX,tileY,width,height,filteringOptions,this.layer)},forEachTile:function(callback,context,tileX,tileY,width,height,filteringOptions){TilemapComponents.ForEachTile(callback,context,tileX,tileY,width,height,filteringOptions,this.layer);return this},getTileAt:function(tileX,tileY,nonNull){return TilemapComponents.GetTileAt(tileX,tileY,nonNull,this.layer)},getTileAtWorldXY:function(worldX,worldY,nonNull,camera){return TilemapComponents.GetTileAtWorldXY(worldX,
worldY,nonNull,camera,this.layer)},getTilesWithin:function(tileX,tileY,width,height,filteringOptions){return TilemapComponents.GetTilesWithin(tileX,tileY,width,height,filteringOptions,this.layer)},getTilesWithinShape:function(shape,filteringOptions,camera){return TilemapComponents.GetTilesWithinShape(shape,filteringOptions,camera,this.layer)},getTilesWithinWorldXY:function(worldX,worldY,width,height,filteringOptions,camera){return TilemapComponents.GetTilesWithinWorldXY(worldX,worldY,width,height,
filteringOptions,camera,this.layer)},hasTileAt:function(tileX,tileY){return TilemapComponents.HasTileAt(tileX,tileY,this.layer)},hasTileAtWorldXY:function(worldX,worldY,camera){return TilemapComponents.HasTileAtWorldXY(worldX,worldY,camera,this.layer)},putTileAt:function(tile,tileX,tileY,recalculateFaces){return TilemapComponents.PutTileAt(tile,tileX,tileY,recalculateFaces,this.layer)},putTileAtWorldXY:function(tile,worldX,worldY,recalculateFaces,camera){return TilemapComponents.PutTileAtWorldXY(tile,
worldX,worldY,recalculateFaces,camera,this.layer)},putTilesAt:function(tilesArray,tileX,tileY,recalculateFaces){TilemapComponents.PutTilesAt(tilesArray,tileX,tileY,recalculateFaces,this.layer);return this},randomize:function(tileX,tileY,width,height,indexes){TilemapComponents.Randomize(tileX,tileY,width,height,indexes,this.layer);return this},removeTileAt:function(tileX,tileY,replaceWithNull,recalculateFaces){return TilemapComponents.RemoveTileAt(tileX,tileY,replaceWithNull,recalculateFaces,this.layer)},
removeTileAtWorldXY:function(worldX,worldY,replaceWithNull,recalculateFaces,camera){return TilemapComponents.RemoveTileAtWorldXY(worldX,worldY,replaceWithNull,recalculateFaces,camera,this.layer)},renderDebug:function(graphics,styleConfig){TilemapComponents.RenderDebug(graphics,styleConfig,this.layer);return this},replaceByIndex:function(findIndex,newIndex,tileX,tileY,width,height){TilemapComponents.ReplaceByIndex(findIndex,newIndex,tileX,tileY,width,height,this.layer);return this},setSkipCull:function(value){void 0===
value&&(value=!0);this.skipCull=value;return this},setCullPadding:function(paddingX,paddingY){void 0===paddingX&&(paddingX=1);void 0===paddingY&&(paddingY=1);this.cullPaddingX=paddingX;this.cullPaddingY=paddingY;return this},setCollision:function(indexes,collides,recalculateFaces){TilemapComponents.SetCollision(indexes,collides,recalculateFaces,this.layer);return this},setCollisionBetween:function(start,stop,collides,recalculateFaces){TilemapComponents.SetCollisionBetween(start,stop,collides,recalculateFaces,
this.layer);return this},setCollisionByProperty:function(properties,collides,recalculateFaces){TilemapComponents.SetCollisionByProperty(properties,collides,recalculateFaces,this.layer);return this},setCollisionByExclusion:function(indexes,collides,recalculateFaces){TilemapComponents.SetCollisionByExclusion(indexes,collides,recalculateFaces,this.layer);return this},setCollisionFromCollisionGroup:function(collides,recalculateFaces){TilemapComponents.SetCollisionFromCollisionGroup(collides,recalculateFaces,
this.layer);return this},setTileIndexCallback:function(indexes,callback,callbackContext){TilemapComponents.SetTileIndexCallback(indexes,callback,callbackContext,this.layer);return this},setTileLocationCallback:function(tileX,tileY,width,height,callback,callbackContext){TilemapComponents.SetTileLocationCallback(tileX,tileY,width,height,callback,callbackContext,this.layer);return this},shuffle:function(tileX,tileY,width,height){TilemapComponents.Shuffle(tileX,tileY,width,height,this.layer);return this},
swapByIndex:function(indexA,indexB,tileX,tileY,width,height){TilemapComponents.SwapByIndex(indexA,indexB,tileX,tileY,width,height,this.layer);return this},tileToWorldX:function(tileX,camera){return TilemapComponents.TileToWorldX(tileX,camera,this.layer)},tileToWorldY:function(tileY,camera){return TilemapComponents.TileToWorldY(tileY,camera,this.layer)},tileToWorldXY:function(tileX,tileY,point,camera){return TilemapComponents.TileToWorldXY(tileX,tileY,point,camera,this.layer)},weightedRandomize:function(tileX,
tileY,width,height,weightedIndexes){TilemapComponents.WeightedRandomize(tileX,tileY,width,height,weightedIndexes,this.layer);return this},worldToTileX:function(worldX,snapToFloor,camera){return TilemapComponents.WorldToTileX(worldX,snapToFloor,camera,this.layer)},worldToTileY:function(worldY,snapToFloor,camera){return TilemapComponents.WorldToTileY(worldY,snapToFloor,camera,this.layer)},worldToTileXY:function(worldX,worldY,snapToFloor,point,camera){return TilemapComponents.WorldToTileXY(worldX,worldY,
snapToFloor,point,camera,this.layer)}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$tilemaps$dynamiclayer$DynamicTilemapLayer.js.map
