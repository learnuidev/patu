shadow$provide.module$node_modules$Phaser$src$utils$Class=function(global,require,module,exports){function extend(ctor,definition,isClassDescriptor,extend){for(var k in definition)if(definition.hasOwnProperty(k)){var def;var def$jscomp$0=(def=isClassDescriptor)?definition[k]:Object.getOwnPropertyDescriptor(definition,k);!def&&def$jscomp$0.value&&"object"===typeof def$jscomp$0.value&&(def$jscomp$0=def$jscomp$0.value);def$jscomp$0&&(def$jscomp$0.get&&"function"===typeof def$jscomp$0.get||def$jscomp$0.set&&
"function"===typeof def$jscomp$0.set)?("undefined"===typeof def$jscomp$0.enumerable&&(def$jscomp$0.enumerable=!0),"undefined"===typeof def$jscomp$0.configurable&&(def$jscomp$0.configurable=!0),def=def$jscomp$0):def=!1;if(!1!==def){(def$jscomp$0=Object.getOwnPropertyDescriptor((extend||ctor).prototype,k))?(def$jscomp$0.value&&"object"===typeof def$jscomp$0.value&&(def$jscomp$0=def$jscomp$0.value),def$jscomp$0=!1===def$jscomp$0.configurable?!0:!1):def$jscomp$0=!1;if(def$jscomp$0){if(Class.ignoreFinals)continue;
throw Error("cannot override final property '"+k+"', set Class.ignoreFinals \x3d true to skip");}Object.defineProperty(ctor.prototype,k,def)}else ctor.prototype[k]=definition[k]}}function mixin(myClass,mixins){if(mixins){Array.isArray(mixins)||(mixins=[mixins]);for(var i=0;i<mixins.length;i++)extend(myClass,mixins[i].prototype||mixins[i])}}function Class(definition){definition||(definition={});if(definition.initialize){if("function"!==typeof definition.initialize)throw Error("initialize must be a function");
var initialize=definition.initialize;delete definition.initialize}else if(definition.Extends){var base=definition.Extends;initialize=function(){base.apply(this,arguments)}}else initialize=function(){};if(definition.Extends){initialize.prototype=Object.create(definition.Extends.prototype);initialize.prototype.constructor=initialize;var Extends=definition.Extends;delete definition.Extends}else initialize.prototype.constructor=initialize;var mixins=null;definition.Mixins&&(mixins=definition.Mixins,delete definition.Mixins);
mixin(initialize,mixins);extend(initialize,definition,!0,Extends);return initialize}Class.extend=extend;Class.mixin=mixin;Class.ignoreFinals=!1;module.exports=Class}
//# sourceMappingURL=module$node_modules$Phaser$src$utils$Class.js.map
