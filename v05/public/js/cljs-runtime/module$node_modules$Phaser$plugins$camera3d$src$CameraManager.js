shadow$provide.module$node_modules$Phaser$plugins$camera3d$src$CameraManager=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var OrthographicCamera=require("module$node_modules$Phaser$plugins$camera3d$src$OrthographicCamera"),PerspectiveCamera=require("module$node_modules$Phaser$plugins$camera3d$src$PerspectiveCamera");require=require("module$node_modules$Phaser$src$plugins$PluginCache");global=new global({initialize:function(scene){this.scene=
scene;this.systems=scene.sys;this.cameras=[];scene.sys.events.once("boot",this.boot,this);scene.sys.events.on("start",this.start,this)},boot:function(){this.systems.events.once("destroy",this.destroy,this)},start:function(){var eventEmitter=this.systems.events;eventEmitter.on("update",this.update,this);eventEmitter.once("shutdown",this.shutdown,this)},add:function(fieldOfView,width,height){return this.addPerspectiveCamera(fieldOfView,width,height)},addOrthographicCamera:function(width,height){var config=
this.scene.sys.game.config;void 0===width&&(width=config.width);void 0===height&&(height=config.height);width=new OrthographicCamera(this.scene,width,height);this.cameras.push(width);return width},addPerspectiveCamera:function(fieldOfView,width,height){var config=this.scene.sys.game.config;void 0===fieldOfView&&(fieldOfView=80);void 0===width&&(width=config.width);void 0===height&&(height=config.height);fieldOfView=new PerspectiveCamera(this.scene,fieldOfView,width,height);this.cameras.push(fieldOfView);
return fieldOfView},getCamera:function(name){for(var i=0;i<this.cameras.length;i++)if(this.cameras[i].name===name)return this.cameras[i];return null},removeCamera:function(camera){camera=this.cameras.indexOf(camera);-1!==camera&&this.cameras.splice(camera,1)},removeAll:function(){for(;0<this.cameras.length;)this.cameras.pop().destroy();return this.main},update:function(timestep,delta){for(var i=0,l=this.cameras.length;i<l;++i)this.cameras[i].update(timestep,delta)},shutdown:function(){var eventEmitter=
this.systems.events;eventEmitter.off("update",this.update,this);eventEmitter.off("shutdown",this.shutdown,this);this.removeAll()},destroy:function(){this.shutdown();this.scene.sys.events.off("start",this.start,this);this.systems=this.scene=null}});require.register("CameraManager3D",global,"cameras3d");module.exports=global}
//# sourceMappingURL=module$node_modules$Phaser$plugins$camera3d$src$CameraManager.js.map
