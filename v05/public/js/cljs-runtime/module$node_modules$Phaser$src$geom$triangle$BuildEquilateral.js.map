{
"version":3,
"file":"module$node_modules$Phaser$src$geom$triangle$BuildEquilateral.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO1H,IAAIC,SAAWH,OAAA,CAAQ,uDAAR,CA+BfC,OAAAC,QAAA,CAhBuBE,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAOC,MAAP,CAChC,CACI,IAAIC,OAAmBC,IAAAC,KAAA,CAAU,CAAV,CAAnBF,CAAkC,CAAlCA,CAASD,MAWb,OAAO,KAAIJ,QAAJ,CATEE,CASF,CAREC,CAQF,CANED,CAMF,CANOE,MAMP,CANgB,CAMhB,CALED,CAKF,CALME,MAKN,CAHEH,CAGF,CAHOE,MAGP,CAHgB,CAGhB,CAFED,CAEF,CAFME,MAEN,CAZX,CAvB0H;",
"sources":["node_modules/Phaser/src/geom/triangle/BuildEquilateral.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$triangle$BuildEquilateral\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Triangle = require('./Triangle');\r\n\r\n/**\r\n * Builds an equilateral triangle. In the equilateral triangle, all the sides are the same length (congruent) and all the angles are the same size (congruent).\r\n * The x/y specifies the top-middle of the triangle (x1/y1) and length is the length of each side.\r\n *\r\n * @function Phaser.Geom.Triangle.BuildEquilateral\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - x coordinate of the top point of the triangle.\r\n * @param {number} y - y coordinate of the top point of the triangle.\r\n * @param {number} length - Length of each side of the triangle.\r\n *\r\n * @return {Phaser.Geom.Triangle} The Triangle object of the given size.\r\n */\r\nvar BuildEquilateral = function (x, y, length)\r\n{\r\n    var height = length * (Math.sqrt(3) / 2);\r\n\r\n    var x1 = x;\r\n    var y1 = y;\r\n\r\n    var x2 = x + (length / 2);\r\n    var y2 = y + height;\r\n\r\n    var x3 = x - (length / 2);\r\n    var y3 = y + height;\r\n\r\n    return new Triangle(x1, y1, x2, y2, x3, y3);\r\n};\r\n\r\nmodule.exports = BuildEquilateral;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Triangle","BuildEquilateral","x","y","length","height","Math","sqrt"]
}
