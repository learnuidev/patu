{
"version":3,
"file":"module$node_modules$Phaser$src$physics$arcade$components$Gravity.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,iEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwE7HD,MAAAC,QAAA,CA1DcC,CAeVC,WAAYA,QAAS,CAACC,CAAD,CAAIC,CAAJ,CACrB,CACI,IAAAC,KAAAC,QAAAC,IAAA,CAAsBJ,CAAtB,CAAyBC,CAAzB,CAEA,OAAO,KAHX,CAhBUH,CAgCVO,YAAaA,QAAS,CAACL,CAAD,CACtB,CACI,IAAAE,KAAAC,QAAAH,EAAA,CAAsBA,CAEtB,OAAO,KAHX,CAjCUF,CAiDVQ,YAAaA,QAAS,CAACL,CAAD,CACtB,CACI,IAAAC,KAAAC,QAAAF,EAAA,CAAsBA,CAEtB,OAAO,KAHX,CAlDUH,CAd+G;",
"sources":["node_modules/Phaser/src/physics/arcade/components/Gravity.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$arcade$components$Gravity\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods for setting the gravity properties of an Arcade Physics Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @name Phaser.Physics.Arcade.Components.Gravity\r\n * @since 3.0.0\r\n */\r\nvar Gravity = {\r\n\r\n    /**\r\n     * Set the X and Y values of the gravitational pull to act upon this Arcade Physics Game Object. Values can be positive or negative. Larger values result in a stronger effect.\r\n     * \r\n     * If only one value is provided, this value will be used for both the X and Y axis.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Gravity#setGravity\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The gravitational force to be applied to the X-axis.\r\n     * @param {number} [y=x] - The gravitational force to be applied to the Y-axis. If this is not specified, the X value will be used.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setGravity: function (x, y)\r\n    {\r\n        this.body.gravity.set(x, y);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the gravitational force to be applied to the X axis. Value can be positive or negative. Larger values result in a stronger effect.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Gravity#setGravityX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The gravitational force to be applied to the X-axis.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setGravityX: function (x)\r\n    {\r\n        this.body.gravity.x = x;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the gravitational force to be applied to the Y axis. Value can be positive or negative. Larger values result in a stronger effect.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Gravity#setGravityY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} y - The gravitational force to be applied to the Y-axis.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setGravityY: function (y)\r\n    {\r\n        this.body.gravity.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Gravity;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Gravity","setGravity","x","y","body","gravity","set","setGravityX","setGravityY"]
}
