{
"version":3,
"file":"module$node_modules$Phaser$src$renderer$webgl$shaders$BitmapMask_frag.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAClID,MAAAC,QAAA,CA4BI,4mBA7B8H;",
"sources":["node_modules/Phaser/src/renderer/webgl/shaders/BitmapMask-frag.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$renderer$webgl$shaders$BitmapMask_frag\"] = function(global,require,module,exports) {\nmodule.exports = [\n    '#define SHADER_NAME PHASER_BITMAP_MASK_FS',\n    '',\n    'precision mediump float;',\n    '',\n    'uniform vec2 uResolution;',\n    'uniform sampler2D uMainSampler;',\n    'uniform sampler2D uMaskSampler;',\n    'uniform bool uInvertMaskAlpha;',\n    '',\n    'void main()',\n    '{',\n    '    vec2 uv = gl_FragCoord.xy / uResolution;',\n    '    vec4 mainColor = texture2D(uMainSampler, uv);',\n    '    vec4 maskColor = texture2D(uMaskSampler, uv);',\n    '    float alpha = mainColor.a;',\n    '',\n    '    if (!uInvertMaskAlpha)',\n    '    {',\n    '        alpha *= (maskColor.a);',\n    '    }',\n    '    else',\n    '    {',\n    '        alpha *= (1.0 - maskColor.a);',\n    '    }',\n    '',\n    '    gl_FragColor = vec4(mainColor.rgb * alpha, alpha);',\n    '}',\n    ''\n].join('\\n');\n\n};"],
"names":["shadow$provide","global","require","module","exports"]
}
