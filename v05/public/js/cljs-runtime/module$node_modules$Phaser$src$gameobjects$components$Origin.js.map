{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$components$Origin.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,6DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqMzHD,MAAAC,QAAA,CApLaC,CAWTC,iBAAkB,CAAA,CAXTD,CAwBTE,QAAS,EAxBAF,CAqCTG,QAAS,EArCAH,CAwCTI,gBAAiB,CAxCRJ,CAyCTK,gBAAiB,CAzCRL,CAoDTM,eAAgB,CAEZC,IAAKA,QAAS,EACd,CACI,MAAO,KAAAH,gBADX,CAHY,CAOZI,IAAKA,QAAS,CAACC,KAAD,CACd,CACI,IAAAL,gBAAA,CAAuBK,KACvB,KAAAP,QAAA,CAAeO,KAAf,CAAuB,IAAAC,MAF3B,CARY,CApDPV,CA4ETW,eAAgB,CAEZJ,IAAKA,QAAS,EACd,CACI,MAAO,KAAAF,gBADX,CAHY,CAOZG,IAAKA,QAAS,CAACC,KAAD,CACd,CACI,IAAAJ,gBAAA,CAAuBI,KACvB,KAAAN,QAAA,CAAeM,KAAf,CAAuB,IAAAG,OAF3B,CARY,CA5EPZ,CAwGTa,UAAWA,QAAS,CAACC,CAAD;AAAIC,CAAJ,CACpB,CACcC,IAAAA,EAAV,GAAIF,CAAJ,GAAuBA,CAAvB,CAA2B,EAA3B,CACUE,KAAAA,EAAV,GAAID,CAAJ,GAAuBA,CAAvB,CAA2BD,CAA3B,CAEA,KAAAZ,QAAA,CAAeY,CACf,KAAAX,QAAA,CAAeY,CAEf,OAAO,KAAAE,oBAAA,EAPX,CAzGSjB,CA2HTkB,mBAAoBA,QAAS,EAC7B,CACI,GAAK,IAAAC,MAAL,EAAoB,IAAAA,MAAAC,YAApB,CAMI,IAAAlB,QACA,CADe,IAAAiB,MAAAE,OACf,CAAA,IAAAlB,QAAA,CAAe,IAAAgB,MAAAG,OAPnB,KAEI,OAAO,KAAAT,UAAA,EAQX,OAAO,KAAAI,oBAAA,EAXX,CA5HSjB,CAsJTuB,iBAAkBA,QAAS,CAACT,CAAD,CAAIC,CAAJ,CAC3B,CACcC,IAAAA,EAAV,GAAIF,CAAJ,GAAuBA,CAAvB,CAA2B,CAA3B,CACUE,KAAAA,EAAV,GAAID,CAAJ,GAAuBA,CAAvB,CAA2BD,CAA3B,CAEA,KAAAR,eAAA,CAAsBQ,CACtB,KAAAH,eAAA,CAAsBI,CAEtB,OAAO,KAPX,CAvJSf,CA0KTiB,oBAAqBA,QAAS,EAC9B,CACI,IAAAb,gBAAA,CAAuBoB,IAAAC,MAAA,CAAW,IAAAvB,QAAX,CAA0B,IAAAQ,MAA1B,CACvB;IAAAL,gBAAA,CAAuBmB,IAAAC,MAAA,CAAW,IAAAtB,QAAX,CAA0B,IAAAS,OAA1B,CAEvB,OAAO,KAJX,CA3KSZ,CAjB4G;",
"sources":["node_modules/Phaser/src/gameobjects/components/Origin.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$components$Origin\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for getting and setting the origin of a Game Object.\r\n * Values are normalized, given in the range 0 to 1.\r\n * Display values contain the calculated pixel values.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @name Phaser.GameObjects.Components.Origin\r\n * @since 3.0.0\r\n */\r\n\r\nvar Origin = {\r\n\r\n    /**\r\n     * A property indicating that a Game Object has this component.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#_originComponent\r\n     * @type {boolean}\r\n     * @private\r\n     * @default true\r\n     * @since 3.2.0\r\n     */\r\n    _originComponent: true,\r\n\r\n    /**\r\n     * The horizontal origin of this Game Object.\r\n     * The origin maps the relationship between the size and position of the Game Object.\r\n     * The default value is 0.5, meaning all Game Objects are positioned based on their center.\r\n     * Setting the value to 0 means the position now relates to the left of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#originX\r\n     * @type {number}\r\n     * @default 0.5\r\n     * @since 3.0.0\r\n     */\r\n    originX: 0.5,\r\n\r\n    /**\r\n     * The vertical origin of this Game Object.\r\n     * The origin maps the relationship between the size and position of the Game Object.\r\n     * The default value is 0.5, meaning all Game Objects are positioned based on their center.\r\n     * Setting the value to 0 means the position now relates to the top of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#originY\r\n     * @type {number}\r\n     * @default 0.5\r\n     * @since 3.0.0\r\n     */\r\n    originY: 0.5,\r\n\r\n    //  private + read only\r\n    _displayOriginX: 0,\r\n    _displayOriginY: 0,\r\n\r\n    /**\r\n     * The horizontal display origin of this Game Object.\r\n     * The origin is a normalized value between 0 and 1.\r\n     * The displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#displayOriginX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayOriginX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._displayOriginX;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._displayOriginX = value;\r\n            this.originX = value / this.width;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The vertical display origin of this Game Object.\r\n     * The origin is a normalized value between 0 and 1.\r\n     * The displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#displayOriginY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayOriginY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._displayOriginY;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._displayOriginY = value;\r\n            this.originY = value / this.height;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the origin of this Game Object.\r\n     *\r\n     * The values are given in the range 0 to 1.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#setOrigin\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0.5] - The horizontal origin value.\r\n     * @param {number} [y=x] - The vertical origin value. If not defined it will be set to the value of `x`.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setOrigin: function (x, y)\r\n    {\r\n        if (x === undefined) { x = 0.5; }\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.originX = x;\r\n        this.originY = y;\r\n\r\n        return this.updateDisplayOrigin();\r\n    },\r\n\r\n    /**\r\n     * Sets the origin of this Game Object based on the Pivot values in its Frame.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#setOriginFromFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setOriginFromFrame: function ()\r\n    {\r\n        if (!this.frame || !this.frame.customPivot)\r\n        {\r\n            return this.setOrigin();\r\n        }\r\n        else\r\n        {\r\n            this.originX = this.frame.pivotX;\r\n            this.originY = this.frame.pivotY;\r\n        }\r\n\r\n        return this.updateDisplayOrigin();\r\n    },\r\n\r\n    /**\r\n     * Sets the display origin of this Game Object.\r\n     * The difference between this and setting the origin is that you can use pixel values for setting the display origin.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#setDisplayOrigin\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0] - The horizontal display origin value.\r\n     * @param {number} [y=x] - The vertical display origin value. If not defined it will be set to the value of `x`.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setDisplayOrigin: function (x, y)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.displayOriginX = x;\r\n        this.displayOriginY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Updates the Display Origin cached values internally stored on this Game Object.\r\n     * You don't usually call this directly, but it is exposed for edge-cases where you may.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#updateDisplayOrigin\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    updateDisplayOrigin: function ()\r\n    {\r\n        this._displayOriginX = Math.round(this.originX * this.width);\r\n        this._displayOriginY = Math.round(this.originY * this.height);\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Origin;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Origin","_originComponent","originX","originY","_displayOriginX","_displayOriginY","displayOriginX","get","set","value","width","displayOriginY","height","setOrigin","x","y","undefined","updateDisplayOrigin","setOriginFromFrame","frame","customPivot","pivotX","pivotY","setDisplayOrigin","Math","round"]
}
