{
"version":3,
"file":"module$node_modules$Phaser$src$geom$triangle$index.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO3GC,MAAAA,CAAWH,OAAA,CAAQ,uDAAR,CAEfG,OAAAC,KAAA,CAAgBJ,OAAA,CAAQ,mDAAR,CAChBG,OAAAE,iBAAA,CAA4BL,OAAA,CAAQ,+DAAR,CAC5BG,OAAAG,iBAAA,CAA4BN,OAAA,CAAQ,+DAAR,CAC5BG,OAAAI,WAAA,CAAsBP,OAAA,CAAQ,yDAAR,CACtBG;MAAAK,SAAA,CAAoBR,OAAA,CAAQ,uDAAR,CACpBG,OAAAM,SAAA,CAAoBT,OAAA,CAAQ,uDAAR,CACpBG,OAAAO,aAAA,CAAwBV,OAAA,CAAQ,2DAAR,CACxBG,OAAAQ,aAAA,CAAwBX,OAAA,CAAQ,2DAAR,CACxBG,OAAAS,MAAA,CAAiBZ,OAAA,CAAQ,oDAAR,CACjBG,OAAAU,SAAA,CAAoBb,OAAA,CAAQ,uDAAR,CACpBG,OAAAW,cAAA;AAAyBd,OAAA,CAAQ,4DAAR,CACzBG,OAAAY,cAAA,CAAyBf,OAAA,CAAQ,4DAAR,CACzBG,OAAAa,SAAA,CAAoBhB,OAAA,CAAQ,uDAAR,CACpBG,OAAAc,UAAA,CAAqBjB,OAAA,CAAQ,wDAAR,CACrBG,OAAAe,OAAA,CAAkBlB,OAAA,CAAQ,qDAAR,CAClBG,OAAAgB,SAAA,CAAoBnB,OAAA,CAAQ,uDAAR,CACpBG,OAAAiB,UAAA,CAAqBpB,OAAA,CAAQ,wDAAR,CACrBG;MAAAkB,SAAA,CAAoBrB,OAAA,CAAQ,uDAAR,CACpBG,OAAAmB,UAAA,CAAqBtB,OAAA,CAAQ,wDAAR,CACrBG,OAAAoB,OAAA,CAAkBvB,OAAA,CAAQ,qDAAR,CAClBG,OAAAqB,OAAA,CAAkBxB,OAAA,CAAQ,qDAAR,CAClBG,OAAAsB,OAAA,CAAkBzB,OAAA,CAAQ,qDAAR,CAClBG,OAAAuB,kBAAA,CAA6B1B,OAAA,CAAQ,gEAAR,CAC7BG,OAAAwB,eAAA;AAA0B3B,OAAA,CAAQ,6DAAR,CAE1BC,OAAAC,QAAA,CAAiBC,MAlC8F;",
"sources":["node_modules/Phaser/src/geom/triangle/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$triangle$index\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar Triangle = require('./Triangle');\r\n\r\nTriangle.Area = require('./Area');\r\nTriangle.BuildEquilateral = require('./BuildEquilateral');\r\nTriangle.BuildFromPolygon = require('./BuildFromPolygon');\r\nTriangle.BuildRight = require('./BuildRight');\r\nTriangle.CenterOn = require('./CenterOn');\r\nTriangle.Centroid = require('./Centroid');\r\nTriangle.CircumCenter = require('./CircumCenter');\r\nTriangle.CircumCircle = require('./CircumCircle');\r\nTriangle.Clone = require('./Clone');\r\nTriangle.Contains = require('./Contains');\r\nTriangle.ContainsArray = require('./ContainsArray');\r\nTriangle.ContainsPoint = require('./ContainsPoint');\r\nTriangle.CopyFrom = require('./CopyFrom');\r\nTriangle.Decompose = require('./Decompose');\r\nTriangle.Equals = require('./Equals');\r\nTriangle.GetPoint = require('./GetPoint');\r\nTriangle.GetPoints = require('./GetPoints');\r\nTriangle.InCenter = require('./InCenter');\r\nTriangle.Perimeter = require('./Perimeter');\r\nTriangle.Offset = require('./Offset');\r\nTriangle.Random = require('./Random');\r\nTriangle.Rotate = require('./Rotate');\r\nTriangle.RotateAroundPoint = require('./RotateAroundPoint');\r\nTriangle.RotateAroundXY = require('./RotateAroundXY');\r\n\r\nmodule.exports = Triangle;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Triangle","Area","BuildEquilateral","BuildFromPolygon","BuildRight","CenterOn","Centroid","CircumCenter","CircumCircle","Clone","Contains","ContainsArray","ContainsPoint","CopyFrom","Decompose","Equals","GetPoint","GetPoints","InCenter","Perimeter","Offset","Random","Rotate","RotateAroundPoint","RotateAroundXY"]
}
