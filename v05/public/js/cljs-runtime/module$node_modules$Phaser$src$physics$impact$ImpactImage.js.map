{
"version":3,
"file":"module$node_modules$Phaser$src$physics$impact$ImpactImage.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlHC,MAAAA,CAAQH,OAAA,CAAQ,4CAAR,CACRI,QAAAA,CAAaJ,OAAA,CAAQ,gEAAR,CACjB,KAAIK,MAAQL,OAAA,CAAQ,wDAAR,CAkDRM,QAAAA,CAAc,IAAIH,MAAJ,CAAU,CAExBI,QAASF,KAFe,CAIxBG,OAAQ,CACJJ,OAAAK,aADI,CAEJL,OAAAM,UAFI,CAGJN,OAAAO,SAHI,CAIJP,OAAAQ,OAJI,CAKJR,OAAAS,aALI,CAMJT,OAAAU,SANI,CAOJV,OAAAW,MAPI,CAQJX,OAAAY,SARI;AASJZ,OAAAa,QATI,CAUJb,OAAAc,OAVI,CAWJd,OAAAe,cAXI,CAYJf,OAAAgB,SAZI,CAJgB,CAmBxBC,WAEAf,QAAqB,CAACgB,KAAD,CAAQC,CAAR,CAAWC,CAAX,CAAcC,OAAd,CAAuBC,KAAvB,CACrB,CACIrB,KAAAsB,KAAA,CAAW,IAAX,CAAiBL,KAAAM,MAAjB,CAA8BL,CAA9B,CAAiCC,CAAjC,CAAoCC,OAApC,CAA6CC,KAA7C,CASA,KAAAG,KAAA,CAAYP,KAAAQ,OAAA,CAAaP,CAAb,CAAiB,IAAAG,MAAAK,QAAjB,CAAqCP,CAArC,CAAyC,IAAAE,MAAAM,QAAzC,CAA6D,IAAAC,MAA7D,CAAyE,IAAAC,OAAzE,CAEZ,KAAAL,KAAAM,OAAA,CAAmB,IACnB,KAAAN,KAAAO,WAAA,CAAuB,IASvB,KAAAC,KAAA,CAAY,IAAAR,KAAAQ,KASZ,KAAAC,OAAA,CAAc,IAAAT,KAAAS,OASd,KAAAC,IAAA,CAAW,IAAAV,KAAAU,IASX,KAAAC,MAAA,CAAa,IAAAX,KAAAW,MASb,KAAAC,SAAA,CAAgB,IAAAZ,KAAAY,SAShB,KAAAC,OAAA,CAAc,IAAAb,KAAAa,OAnElB,CAtBwB,CAAV,CA8FlBzC,OAAAC,QAAA,CAAiBI,OAzJqG;",
"sources":["node_modules/Phaser/src/physics/impact/ImpactImage.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$impact$ImpactImage\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Components = require('./components');\r\nvar Image = require('../../gameobjects/image/Image');\r\n\r\n/**\r\n * @classdesc\r\n * An Impact Physics Image Game Object.\r\n * \r\n * An Image is a light-weight Game Object useful for the display of static images in your game,\r\n * such as logos, backgrounds, scenery or other non-animated elements. Images can have input\r\n * events and physics bodies, or be tweened, tinted or scrolled. The main difference between an\r\n * Image and a Sprite is that you cannot animate an Image as they do not have the Animation component.\r\n *\r\n * @class ImpactImage\r\n * @extends Phaser.GameObjects.Image\r\n * @memberOf Phaser.Physics.Impact\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.Physics.Impact.Components.Acceleration\r\n * @extends Phaser.Physics.Impact.Components.BodyScale\r\n * @extends Phaser.Physics.Impact.Components.BodyType\r\n * @extends Phaser.Physics.Impact.Components.Bounce\r\n * @extends Phaser.Physics.Impact.Components.CheckAgainst\r\n * @extends Phaser.Physics.Impact.Components.Collides\r\n * @extends Phaser.Physics.Impact.Components.Debug\r\n * @extends Phaser.Physics.Impact.Components.Friction\r\n * @extends Phaser.Physics.Impact.Components.Gravity\r\n * @extends Phaser.Physics.Impact.Components.Offset\r\n * @extends Phaser.Physics.Impact.Components.SetGameObject\r\n * @extends Phaser.Physics.Impact.Components.Velocity\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.GetBounds\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.Pipeline\r\n * @extends Phaser.GameObjects.Components.ScaleMode\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.Texture\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Physics.Impact.World} world - [description]\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\r\nvar ImpactImage = new Class({\r\n\r\n    Extends: Image,\r\n\r\n    Mixins: [\r\n        Components.Acceleration,\r\n        Components.BodyScale,\r\n        Components.BodyType,\r\n        Components.Bounce,\r\n        Components.CheckAgainst,\r\n        Components.Collides,\r\n        Components.Debug,\r\n        Components.Friction,\r\n        Components.Gravity,\r\n        Components.Offset,\r\n        Components.SetGameObject,\r\n        Components.Velocity\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function ImpactImage (world, x, y, texture, frame)\r\n    {\r\n        Image.call(this, world.scene, x, y, texture, frame);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#body\r\n         * @type {Phaser.Physics.Impact.Body}\r\n         * @since 3.0.0\r\n         */\r\n        this.body = world.create(x - this.frame.centerX, y - this.frame.centerY, this.width, this.height);\r\n\r\n        this.body.parent = this;\r\n        this.body.gameObject = this;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#size\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.size = this.body.size;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#offset\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.offset = this.body.offset;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#vel\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.vel = this.body.vel;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#accel\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.accel = this.body.accel;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#friction\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.friction = this.body.friction;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#maxVel\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.maxVel = this.body.maxVel;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = ImpactImage;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","Components","Image","ImpactImage","Extends","Mixins","Acceleration","BodyScale","BodyType","Bounce","CheckAgainst","Collides","Debug","Friction","Gravity","Offset","SetGameObject","Velocity","initialize","world","x","y","texture","frame","call","scene","body","create","centerX","centerY","width","height","parent","gameObject","size","offset","vel","accel","friction","maxVel"]
}
