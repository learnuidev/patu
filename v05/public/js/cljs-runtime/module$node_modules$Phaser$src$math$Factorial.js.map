{
"version":3,
"file":"module$node_modules$Phaser$src$math$Factorial.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkC1GD,MAAAC,QAAA,CAjBgBC,QAAS,CAACC,KAAD,CACzB,CACI,GAAc,CAAd,GAAIA,KAAJ,CAEI,MAAO,EAKX,KAFA,IAAIC,IAAMD,KAEV,CAAO,EAAEA,KAAT,CAAA,CAEIC,GAAA,EAAOD,KAGX,OAAOC,IAbX,CAlB0G;",
"sources":["node_modules/Phaser/src/math/Factorial.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$Factorial\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Calculates the factorial of a given number for integer values greater than 0.\r\n *\r\n * @function Phaser.Math.Factorial\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - A positive integer to calculate the factorial of.\r\n *\r\n * @return {number} The factorial of the given number.\r\n */\r\nvar Factorial = function (value)\r\n{\r\n    if (value === 0)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    var res = value;\r\n\r\n    while (--value)\r\n    {\r\n        res *= value;\r\n    }\r\n\r\n    return res;\r\n};\r\n\r\nmodule.exports = Factorial;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Factorial","value","res"]
}
