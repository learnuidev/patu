shadow$provide.module$node_modules$$formatjs$intl$src$number=function(global,require,module,exports){function getFormatter(_a,getNumberFormat,options){var locale=_a.locale,formats=_a.formats;_a=_a.onError;void 0===options&&(options={});var format=options.format;formats=format&&utils_1.getNamedFormat(formats,"number",format,_a)||{};options=utils_1.filterProps(options,NUMBER_FORMAT_OPTIONS,formats);return getNumberFormat(locale,options)}Object.defineProperty(exports,"__esModule",{value:!0});exports.formatNumberToParts=
exports.formatNumber=exports.getFormatter=void 0;var utils_1=require("module$node_modules$$formatjs$intl$src$utils"),error_1=require("module$node_modules$$formatjs$intl$src$error"),NUMBER_FORMAT_OPTIONS="localeMatcher style currency currencyDisplay unit unitDisplay useGrouping minimumIntegerDigits minimumFractionDigits maximumFractionDigits minimumSignificantDigits maximumSignificantDigits compactDisplay currencyDisplay currencySign notation signDisplay unit unitDisplay".split(" ");exports.getFormatter=
getFormatter;exports.formatNumber=function(config,getNumberFormat,value,options){void 0===options&&(options={});try{return getFormatter(config,getNumberFormat,options).format(value)}catch(e){config.onError(new error_1.IntlError("FORMAT_ERROR","Error formatting number.",e))}return String(value)};exports.formatNumberToParts=function(config,getNumberFormat,value,options){void 0===options&&(options={});try{return getFormatter(config,getNumberFormat,options).formatToParts(value)}catch(e){config.onError(new error_1.IntlError("FORMAT_ERROR",
"Error formatting number.",e))}return[]}}
//# sourceMappingURL=module$node_modules$$formatjs$intl$src$number.js.map
