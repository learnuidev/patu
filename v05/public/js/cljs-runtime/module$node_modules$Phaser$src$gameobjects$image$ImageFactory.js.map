{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$image$ImageFactory.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO1H,IAAIC,MAAQH,OAAA,CAAQ,wDAAR,CACYA,QAAAI,CAAQ,8DAARA,CAiBxBC,SAAA,CAA2B,OAA3B,CAAoC,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAOC,GAAP,CAAYC,KAAZ,CAC7C,CACI,MAAO,KAAAC,YAAAC,IAAA,CAAqB,IAAIR,KAAJ,CAAU,IAAAS,MAAV,CAAsBN,CAAtB,CAAyBC,CAAzB,CAA4BC,GAA5B,CAAiCC,KAAjC,CAArB,CADX,CADA,CAzB0H;",
"sources":["node_modules/Phaser/src/gameobjects/image/ImageFactory.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$image$ImageFactory\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Image = require('./Image');\r\nvar GameObjectFactory = require('../GameObjectFactory');\r\n\r\n/**\r\n * Creates a new Image Game Object and adds it to the Scene.\r\n *\r\n * Note: This method will only be available if the Image Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory#image\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n *\r\n * @return {Phaser.GameObjects.Image} The Game Object that was created.\r\n */\r\nGameObjectFactory.register('image', function (x, y, key, frame)\r\n{\r\n    return this.displayList.add(new Image(this.scene, x, y, key, frame));\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectFactory context.\r\n//\r\n//  There are several properties available to use:\r\n//\r\n//  this.scene - a reference to the Scene that owns the GameObjectFactory\r\n//  this.displayList - a reference to the Display List the Scene owns\r\n//  this.updateList - a reference to the Update List the Scene owns\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Image","GameObjectFactory","register","x","y","key","frame","displayList","add","scene"]
}
