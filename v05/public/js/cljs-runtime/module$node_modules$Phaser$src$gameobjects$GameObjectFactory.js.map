{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$GameObjectFactory.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,6DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOrHC,MAAAA,CAAQH,OAAA,CAAQ,4CAAR,CACRI,QAAAA,CAAcJ,OAAA,CAAQ,oDAAR,CAiBlB,KAAIK,kBAAoB,IAAIF,MAAJ,CAAU,CAE9BG,WAEAD,QAA2B,CAACE,KAAD,CAC3B,CASI,IAAAA,MAAA,CAAaA,KAUb,KAAAC,QAAA,CAAeD,KAAAE,IAsBfF,MAAAE,IAAAC,OAAAC,KAAA,CAAsB,MAAtB,CAA8B,IAAAC,KAA9B,CAAyC,IAAzC,CACAL,MAAAE,IAAAC,OAAAG,GAAA,CAAoB,OAApB,CAA6B,IAAAC,MAA7B,CAAyC,IAAzC,CA1CJ,CAL8B,CA0D9BF,KAAMA,QAAS,EACf,CACI,IAAAG,YAAA,CAAmB,IAAAP,QAAAO,YACnB,KAAAC,WAAA;AAAkB,IAAAR,QAAAQ,WAElB,KAAAR,QAAAE,OAAAC,KAAA,CAAyB,SAAzB,CAAoC,IAAAM,QAApC,CAAkD,IAAlD,CAJJ,CA3D8B,CA2E9BH,MAAOA,QAAS,EAChB,CACI,IAAAN,QAAAE,OAAAC,KAAA,CAAyB,UAAzB,CAAqC,IAAAO,SAArC,CAAoD,IAApD,CADJ,CA5E8B,CA6F9BC,SAAUA,QAAS,CAACC,KAAD,CACnB,CACI,CAAIA,KAAAC,aAAJ,EAA0BD,KAAAE,YAA1B,GAEI,IAAAP,YAAAQ,IAAA,CAAqBH,KAArB,CAGAA,MAAAI,UAAJ,EAEI,IAAAR,WAAAO,IAAA,CAAoBH,KAApB,CAGJ,OAAOA,MAXX,CA9F8B,CAoH9BF,SAAUA,QAAS,EACnB,CACI,IAAAV,QAAAE,OAAAe,IAAA,CAAwB,UAAxB,CAAoC,IAAAP,SAApC,CAAmD,IAAnD,CADJ,CArH8B,CAiI9BD,QAASA,QAAS,EAClB,CACI,IAAAC,SAAA,EAEA,KAAAX,MAAAE,IAAAC,OAAAe,IAAA,CAA0B,OAA1B,CAAmC,IAAAX,MAAnC,CAA+C,IAA/C,CAMA,KAAAE,WAAA,CADA,IAAAD,YACA,CAHA,IAAAP,QAGA;AAJA,IAAAD,MAIA,CAJa,IALjB,CAlI8B,CAAV,CAkJxBF,kBAAAqB,SAAA,CAA6BC,QAAS,CAACC,WAAD,CAAcC,eAAd,CACtC,CACSxB,iBAAAyB,UAAAC,eAAA,CAA2CH,WAA3C,CAAL,GAEIvB,iBAAAyB,UAAA,CAA4BF,WAA5B,CAFJ,CAE+CC,eAF/C,CADJ,CAOAzB,QAAAsB,SAAA,CAAqB,mBAArB,CAA0CrB,iBAA1C,CAA6D,KAA7D,CAEAJ,OAAAC,QAAA,CAAiBG,iBArLwG;",
"sources":["node_modules/Phaser/src/gameobjects/GameObjectFactory.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$GameObjectFactory\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar PluginCache = require('../plugins/PluginCache');\r\n\r\n/**\r\n * @classdesc\r\n * The Game Object Factory is a Scene plugin that allows you to quickly create many common\r\n * types of Game Objects and have them automatically registered with the Scene.\r\n *\r\n * Game Objects directly register themselves with the Factory and inject their own creation\r\n * methods into the class.\r\n *\r\n * @class GameObjectFactory\r\n * @memberOf Phaser.GameObjects\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object Factory belongs.\r\n */\r\nvar GameObjectFactory = new Class({\r\n\r\n    initialize:\r\n\r\n    function GameObjectFactory (scene)\r\n    {\r\n        /**\r\n         * The Scene to which this Game Object Factory belongs.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectFactory#scene\r\n         * @type {Phaser.Scene}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.scene = scene;\r\n\r\n        /**\r\n         * A reference to the Scene.Systems.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectFactory#systems\r\n         * @type {Phaser.Scenes.Systems}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.systems = scene.sys;\r\n\r\n        /**\r\n         * A reference to the Scene Display List.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectFactory#displayList\r\n         * @type {Phaser.GameObjects.DisplayList}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.displayList;\r\n\r\n        /**\r\n         * A reference to the Scene Update List.\r\n         *\r\n         * @name Phaser.GameObjects.GameObjectFactory#updateList;\r\n         * @type {Phaser.GameObjects.UpdateList}\r\n         * @protected\r\n         * @since 3.0.0\r\n         */\r\n        this.updateList;\r\n\r\n        scene.sys.events.once('boot', this.boot, this);\r\n        scene.sys.events.on('start', this.start, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically, only once, when the Scene is first created.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#boot\r\n     * @private\r\n     * @since 3.5.1\r\n     */\r\n    boot: function ()\r\n    {\r\n        this.displayList = this.systems.displayList;\r\n        this.updateList = this.systems.updateList;\r\n\r\n        this.systems.events.once('destroy', this.destroy, this);\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically by the Scene when it is starting up.\r\n     * It is responsible for creating local systems, properties and listening for Scene events.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#start\r\n     * @private\r\n     * @since 3.5.0\r\n     */\r\n    start: function ()\r\n    {\r\n        this.systems.events.once('shutdown', this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * Adds an existing Game Object to this Scene.\r\n     * \r\n     * If the Game Object renders, it will be added to the Display List.\r\n     * If it has a `preUpdate` method, it will be added to the Update List.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#existing\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject} child - The child to be added to this Scene.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} The Game Object that was added.\r\n     */\r\n    existing: function (child)\r\n    {\r\n        if (child.renderCanvas || child.renderWebGL)\r\n        {\r\n            this.displayList.add(child);\r\n        }\r\n\r\n        if (child.preUpdate)\r\n        {\r\n            this.updateList.add(child);\r\n        }\r\n\r\n        return child;\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is shutting down.\r\n     * We need to kill and reset all internal properties as well as stop listening to Scene events.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#shutdown\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    shutdown: function ()\r\n    {\r\n        this.systems.events.off('shutdown', this.shutdown, this);\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is being destroyed.\r\n     * We need to shutdown and then kill off all external references.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#destroy\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n\r\n        this.scene.sys.events.off('start', this.start, this);\r\n\r\n        this.scene = null;\r\n        this.systems = null;\r\n\r\n        this.displayList = null;\r\n        this.updateList = null;\r\n    }\r\n\r\n});\r\n\r\n//  Static method called directly by the Game Object factory functions\r\n\r\nGameObjectFactory.register = function (factoryType, factoryFunction)\r\n{\r\n    if (!GameObjectFactory.prototype.hasOwnProperty(factoryType))\r\n    {\r\n        GameObjectFactory.prototype[factoryType] = factoryFunction;\r\n    }\r\n};\r\n\r\nPluginCache.register('GameObjectFactory', GameObjectFactory, 'add');\r\n\r\nmodule.exports = GameObjectFactory;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","PluginCache","GameObjectFactory","initialize","scene","systems","sys","events","once","boot","on","start","displayList","updateList","destroy","shutdown","existing","child","renderCanvas","renderWebGL","add","preUpdate","off","register","GameObjectFactory.register","factoryType","factoryFunction","prototype","hasOwnProperty"]
}
