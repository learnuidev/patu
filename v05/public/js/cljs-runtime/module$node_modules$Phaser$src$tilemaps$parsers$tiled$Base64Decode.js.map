{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$parsers$tiled$Base64Decode.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqC/HD,MAAAC,QAAA,CApBmBC,QAAS,CAACC,IAAD,CAC5B,CACQC,IAAAA,CAAeC,MAAAC,KAAA,CAAYH,IAAZ,CAKnB,KAJA,IAAII,IAAMH,IAAAI,OAAV,CACIC,MAAYC,KAAJ,CAAUH,GAAV,CAAgB,CAAhB,CADZ,CAISI,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,GAApB,CAAyBI,CAAzB,EAA8B,CAA9B,CAEIF,KAAA,CAAME,CAAN,CAAU,CAAV,CAAA,EACIP,IAAAQ,WAAA,CAAwBD,CAAxB,CADJ,CAEIP,IAAAQ,WAAA,CAAwBD,CAAxB,CAA4B,CAA5B,CAFJ,EAEsC,CAFtC,CAGIP,IAAAQ,WAAA,CAAwBD,CAAxB,CAA4B,CAA5B,CAHJ,EAGsC,EAHtC,CAIIP,IAAAQ,WAAA,CAAwBD,CAAxB,CAA4B,CAA5B,CAJJ,EAIsC,EAJtC,IAKM,CAGV,OAAOF,MAhBX,CAlB+H;",
"sources":["node_modules/Phaser/src/tilemaps/parsers/tiled/Base64Decode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$parsers$tiled$Base64Decode\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Decode base-64 encoded data, for example as exported by Tiled.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Tiled.Base64Decode\r\n * @since 3.0.0\r\n *\r\n * @param {object} data - Base-64 encoded data to decode.\r\n *\r\n * @return {array} Array containing the decoded bytes.\r\n */\r\nvar Base64Decode = function (data)\r\n{\r\n    var binaryString = window.atob(data);\r\n    var len = binaryString.length;\r\n    var bytes = new Array(len / 4);\r\n\r\n    // Interpret binaryString as an array of bytes representing little-endian encoded uint32 values.\r\n    for (var i = 0; i < len; i += 4)\r\n    {\r\n        bytes[i / 4] = (\r\n            binaryString.charCodeAt(i) |\r\n            binaryString.charCodeAt(i + 1) << 8 |\r\n            binaryString.charCodeAt(i + 2) << 16 |\r\n            binaryString.charCodeAt(i + 3) << 24\r\n        ) >>> 0;\r\n    }\r\n\r\n    return bytes;\r\n};\r\n\r\nmodule.exports = Base64Decode;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Base64Decode","data","binaryString","window","atob","len","length","bytes","Array","i","charCodeAt"]
}
