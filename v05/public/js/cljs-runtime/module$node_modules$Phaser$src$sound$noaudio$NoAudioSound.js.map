{
"version":3,
"file":"module$node_modules$Phaser$src$sound$noaudio$NoAudioSound.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAQtH,IAAIC,UAAYH,OAAA,CAAQ,gDAAR,CACZI,OAAAA,CAAQJ,OAAA,CAAQ,4CAAR,CACZ,KAAIK,aAAeL,OAAA,CAAQ,yCAAR,CAAnB,CACIM,OAASN,OAAA,CAAQ,oDAAR,CAqBTO,QAAAA,CAAe,IAAIH,MAAJ,CAAU,CAEzBI,QAASH,YAFgB,CAIzBI,WAEAF,QAAsB,CAACG,OAAD,CAAUC,GAAV,CAAeC,MAAf,CACtB,CACmB,IAAK,EAApB,GAAIA,MAAJ,GAAyBA,MAAzB,CAAkC,EAAlC,CAEAP,aAAAQ,KAAA,CAAkB,IAAlB,CAEA;IAAAH,QAAA,CAAeA,OACf,KAAAC,IAAA,CAAWA,GAEX,KAAAG,SAAA,CADA,IAAAC,UACA,CADiB,CAAA,CAEjB,KAAAC,UAAA,CAAiB,CAEjB,KAAAC,cAAA,CADA,IAAAC,SACA,CADgB,CAahB,KAAAC,cAAA,CAVA,IAAAP,OAUA,CAVcN,MAAA,CAAO,CACjBc,KAAM,CAAA,CADW,CAEjBC,OAAQ,CAFS,CAGjBC,KAAM,CAHW,CAIjBC,OAAQ,CAJS,CAKjBC,KAAM,CALW,CAMjBC,KAAM,CAAA,CANW,CAOjBC,MAAO,CAPU,CAAP,CAQXd,MARW,CAWd,KAAAQ,KAAA,CAAY,CAAA,CAEZ,KAAAE,KAAA,CADA,IAAAD,OACA,CADc,CAGd,KAAAG,KAAA,CADA,IAAAD,OACA,CADc,CAEd,KAAAE,KAAA,CAAY,CAAA,CACZ,KAAAE,QAAA,CAAe,EACf,KAAAC,cAAA,CAAqB,IACrB,KAAAC,cAAA,CAAqB,CAAA,CAhCzB,CAPyB,CA2CzBC,UAAWA,QAAS,CAACC,MAAD,CACpB,CACI,MAAO,CAAA,CADX,CA5CyB,CAiDzBC,aAAcA,QAAS,CAACD,MAAD,CACvB,CACI,MAAO,CAAA,CADX,CAlDyB,CAuDzBE,aAAcA,QAAS,CAACC,UAAD,CACvB,CACI,MAAO,KADX,CAxDyB,CA6DzBC,KAAMA,QAAS,CAACD,UAAD;AAAatB,MAAb,CACf,CACI,MAAO,CAAA,CADX,CA9DyB,CAkEzBwB,MAAOA,QAAS,EAChB,CACI,MAAO,CAAA,CADX,CAnEyB,CAuEzBC,OAAQA,QAAS,EACjB,CACI,MAAO,CAAA,CADX,CAxEyB,CA4EzBC,KAAMA,QAAS,EACf,CACI,MAAO,CAAA,CADX,CA7EyB,CAiFzBC,QAASA,QAAS,EAClB,CACI,IAAA7B,QAAA8B,OAAA,CAAoB,IAApB,CAEArC,UAAAsC,UAAAF,QAAA1B,KAAA,CAAiC,IAAjC,CAHJ,CAlFyB,CAAV,CAyFnBZ,OAAAC,QAAA,CAAiBK,OAzHqG;",
"sources":["node_modules/Phaser/src/sound/noaudio/NoAudioSound.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$sound$noaudio$NoAudioSound\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       Pavle Goloskokovic <pgoloskokovic@gmail.com> (http://prunegames.com)\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar BaseSound = require('../BaseSound');\r\nvar Class = require('../../utils/Class');\r\nvar EventEmitter = require('eventemitter3');\r\nvar Extend = require('../../utils/object/Extend');\r\n\r\n/**\r\n * @classdesc\r\n * No audio implementation of the sound. It is used if audio has been\r\n * disabled in the game config or the device doesn't support any audio.\r\n *\r\n * It represents a graceful degradation of sound logic that provides\r\n * minimal functionality and prevents Phaser projects that use audio from\r\n * breaking on devices that don't support any audio playback technologies.\r\n *\r\n * @class NoAudioSound\r\n * @extends Phaser.Sound.BaseSound\r\n * @memberOf Phaser.Sound\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Sound.NoAudioSoundManager} manager - Reference to the current sound manager instance.\r\n * @param {string} key - Asset key for the sound.\r\n * @param {SoundConfig} [config={}] - An optional config object containing default sound settings.\r\n */\r\nvar NoAudioSound = new Class({\r\n\r\n    Extends: EventEmitter,\r\n\r\n    initialize:\r\n\r\n    function NoAudioSound (manager, key, config)\r\n    {\r\n        if (config === void 0) { config = {}; }\r\n\r\n        EventEmitter.call(this);\r\n\r\n        this.manager = manager;\r\n        this.key = key;\r\n        this.isPlaying = false;\r\n        this.isPaused = false;\r\n        this.totalRate = 1;\r\n        this.duration = 0;\r\n        this.totalDuration = 0;\r\n\r\n        this.config = Extend({\r\n            mute: false,\r\n            volume: 1,\r\n            rate: 1,\r\n            detune: 0,\r\n            seek: 0,\r\n            loop: false,\r\n            delay: 0\r\n        }, config);\r\n\r\n        this.currentConfig = this.config;\r\n        this.mute = false;\r\n        this.volume = 1;\r\n        this.rate = 1;\r\n        this.detune = 0;\r\n        this.seek = 0;\r\n        this.loop = false;\r\n        this.markers = {};\r\n        this.currentMarker = null;\r\n        this.pendingRemove = false;\r\n    },\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    addMarker: function (marker)\r\n    {\r\n        return false;\r\n    },\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    updateMarker: function (marker)\r\n    {\r\n        return false;\r\n    },\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    removeMarker: function (markerName)\r\n    {\r\n        return null;\r\n    },\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    play: function (markerName, config)\r\n    {\r\n        return false;\r\n    },\r\n\r\n    pause: function ()\r\n    {\r\n        return false;\r\n    },\r\n\r\n    resume: function ()\r\n    {\r\n        return false;\r\n    },\r\n\r\n    stop: function ()\r\n    {\r\n        return false;\r\n    },\r\n\r\n    destroy: function ()\r\n    {\r\n        this.manager.remove(this);\r\n\r\n        BaseSound.prototype.destroy.call(this);\r\n    }\r\n});\r\n\r\nmodule.exports = NoAudioSound;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","BaseSound","Class","EventEmitter","Extend","NoAudioSound","Extends","initialize","manager","key","config","call","isPaused","isPlaying","totalRate","totalDuration","duration","currentConfig","mute","volume","rate","detune","seek","loop","delay","markers","currentMarker","pendingRemove","addMarker","marker","updateMarker","removeMarker","markerName","play","pause","resume","stop","destroy","remove","prototype"]
}
