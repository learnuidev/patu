{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$image$Image.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO/GC,MAAAA,CAAQH,OAAA,CAAQ,4CAAR,CACRI,QAAAA,CAAaJ,OAAA,CAAQ,6DAAR,CACjB,KAAIK,WAAaL,OAAA,CAAQ,uDAAR,CACbM,QAAAA,CAAcN,OAAA,CAAQ,8DAAR,CAuCdO,QAAAA,CAAQ,IAAIJ,MAAJ,CAAU,CAElBK,QAASH,UAFS,CAIlBI,OAAQ,CACJL,OAAAM,MADI,CAEJN,OAAAO,UAFI,CAGJP,OAAAQ,MAHI;AAIJR,OAAAS,KAJI,CAKJT,OAAAU,UALI,CAMJV,OAAAW,KANI,CAOJX,OAAAY,OAPI,CAQJZ,OAAAa,SARI,CASJb,OAAAc,UATI,CAUJd,OAAAe,aAVI,CAWJf,OAAAgB,KAXI,CAYJhB,OAAAiB,YAZI,CAaJjB,OAAAkB,KAbI,CAcJlB,OAAAmB,UAdI,CAeJnB,OAAAoB,QAfI,CAgBJlB,OAhBI,CAJU,CAuBlBmB,WAEAlB,QAAe,CAACmB,KAAD,CAAQC,CAAR,CAAWC,CAAX,CAAcC,OAAd,CAAuBC,KAAvB,CACf,CACIzB,UAAA0B,KAAA,CAAgB,IAAhB,CAAsBL,KAAtB,CAA6B,OAA7B,CAUA,KAAAM,MAAA,CAAa,IAAAC,gBAAA,EAEb,KAAAC,WAAA,CAAgBL,OAAhB,CAAyBC,KAAzB,CACA,KAAAK,YAAA,CAAiBR,CAAjB,CAAoBC,CAApB,CACA,KAAAQ,eAAA,EACA,KAAAC,mBAAA,EACA,KAAAC,aAAA,EAjBJ,CA1BkB,CAAV,CAgDZrC,OAAAC,QAAA,CAAiBK,OAjGkG;",
"sources":["node_modules/Phaser/src/gameobjects/image/Image.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$image$Image\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Components = require('../components');\r\nvar GameObject = require('../GameObject');\r\nvar ImageRender = require('./ImageRender');\r\n\r\n/**\r\n * @classdesc\r\n * An Image Game Object.\r\n *\r\n * An Image is a light-weight Game Object useful for the display of static images in your game,\r\n * such as logos, backgrounds, scenery or other non-animated elements. Images can have input\r\n * events and physics bodies, or be tweened, tinted or scrolled. The main difference between an\r\n * Image and a Sprite is that you cannot animate an Image as they do not have the Animation component.\r\n *\r\n * @class Image\r\n * @extends Phaser.GameObjects.GameObject\r\n * @memberOf Phaser.GameObjects\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.GetBounds\r\n * @extends Phaser.GameObjects.Components.Mask\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.Pipeline\r\n * @extends Phaser.GameObjects.Components.ScaleMode\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.TextureCrop\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\r\nvar Image = new Class({\r\n\r\n    Extends: GameObject,\r\n\r\n    Mixins: [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Mask,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.ScaleMode,\r\n        Components.ScrollFactor,\r\n        Components.Size,\r\n        Components.TextureCrop,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        ImageRender\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function Image (scene, x, y, texture, frame)\r\n    {\r\n        GameObject.call(this, scene, 'Image');\r\n\r\n        /**\r\n         * The internal crop data object, as used by `setCrop` and passed to the `Frame.setCropUVs` method.\r\n         *\r\n         * @name Phaser.GameObjects.Image#_crop\r\n         * @type {object}\r\n         * @private\r\n         * @since 3.11.0\r\n         */\r\n        this._crop = this.resetCropObject();\r\n\r\n        this.setTexture(texture, frame);\r\n        this.setPosition(x, y);\r\n        this.setSizeToFrame();\r\n        this.setOriginFromFrame();\r\n        this.initPipeline();\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Image;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","Components","GameObject","ImageRender","Image","Extends","Mixins","Alpha","BlendMode","Depth","Flip","GetBounds","Mask","Origin","Pipeline","ScaleMode","ScrollFactor","Size","TextureCrop","Tint","Transform","Visible","initialize","scene","x","y","texture","frame","call","_crop","resetCropObject","setTexture","setPosition","setSizeToFrame","setOriginFromFrame","initPipeline"]
}
