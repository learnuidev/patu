{
"version":3,
"file":"module$node_modules$Phaser$src$math$easing$back$In.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyB/GD,MAAAC,QAAA,CAPSC,QAAS,CAACC,CAAD,CAAIC,SAAJ,CAClB,CACsBC,IAAAA,EAAlB,GAAID,SAAJ,GAA+BA,SAA/B,CAA2C,OAA3C,CAEA,OAAOD,EAAP,CAAWA,CAAX,GAAiBC,SAAjB,CAA6B,CAA7B,EAAkCD,CAAlC,CAAsCC,SAAtC,CAHJ,CAnB+G;",
"sources":["node_modules/Phaser/src/math/easing/back/In.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$easing$back$In\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Back ease-in.\r\n *\r\n * @function Phaser.Math.Easing.Back.In\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n * @param {number} [overshoot=1.70158] - The overshoot amount.\r\n *\r\n * @return {number} The tweened value.\r\n */\r\nvar In = function (v, overshoot)\r\n{\r\n    if (overshoot === undefined) { overshoot = 1.70158; }\r\n\r\n    return v * v * ((overshoot + 1) * v - overshoot);\r\n};\r\n\r\nmodule.exports = In;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","In","v","overshoot","undefined"]
}
