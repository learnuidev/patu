shadow$provide.module$node_modules$Phaser$src$tilemaps$staticlayer$StaticTilemapLayer=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");exports=require("module$node_modules$Phaser$src$gameobjects$components$index");var CONST=require("module$node_modules$Phaser$src$const"),GameObject=require("module$node_modules$Phaser$src$gameobjects$GameObject"),StaticTilemapLayerRender=require("module$node_modules$Phaser$src$tilemaps$staticlayer$StaticTilemapLayerRender"),
TilemapComponents=require("module$node_modules$Phaser$src$tilemaps$components$index"),TransformMatrix=require("module$node_modules$Phaser$src$gameobjects$components$TransformMatrix"),Utils=require("module$node_modules$Phaser$src$renderer$webgl$Utils");require=new global({Extends:GameObject,Mixins:[exports.Alpha,exports.BlendMode,exports.ComputedSize,exports.Depth,exports.Flip,exports.GetBounds,exports.Origin,exports.Pipeline,exports.ScaleMode,exports.Transform,exports.Visible,exports.ScrollFactor,
StaticTilemapLayerRender],initialize:function(scene,tilemap,layerIndex,tileset,x,y){GameObject.call(this,scene,"StaticTilemapLayer");this.isTilemap=!0;this.tilemap=tilemap;this.layerIndex=layerIndex;this.layer=tilemap.layers[layerIndex];this.layer.tilemapLayer=this;this.tileset=[];this.culledTiles=[];this.skipCull=!1;this.tilesDrawn=0;this.tilesTotal=this.layer.width*this.layer.height;this.cullPaddingY=this.cullPaddingX=1;this.cullCallback=TilemapComponents.CullTiles;this.renderer=scene.sys.game.renderer;
this.vertexBuffer=[];this.bufferData=[];this.vertexViewF32=[];this.vertexViewU32=[];this.dirty=[];this.vertexCount=[];this._renderOrder=0;this._tempMatrix=new TransformMatrix;this.gidMap=[];this.setTilesets(tileset);this.setAlpha(this.layer.alpha);this.setPosition(x,y);this.setOrigin();this.setSize(this.layer.tileWidth*this.layer.width,this.layer.tileHeight*this.layer.height);this.updateVBOData();this.initPipeline("TextureTintPipeline");if(scene.sys.game.config.renderType===CONST.WEBGL)scene.sys.game.renderer.onContextRestored(function(){this.updateVBOData()},
this)},setTilesets:function(tilesets){var gidMap=[],setList=[],map=this.tilemap;Array.isArray(tilesets)||(tilesets=[tilesets]);for(var i=0;i<tilesets.length;i++){var tileset=tilesets[i];"string"===typeof tileset&&(tileset=map.getTileset(tileset));if(tileset){setList.push(tileset);for(var s=tileset.firstgid,t=0;t<tileset.total;t++)gidMap[s+t]=tileset}}this.gidMap=gidMap;this.tileset=setList},updateVBOData:function(){for(var i=0;i<this.tileset.length;i++)this.dirty[i]=!0,this.vertexCount[i]=0,this.vertexBuffer[i]=
null,this.bufferData[i]=null,this.vertexViewF32[i]=null,this.vertexViewU32[i]=null;return this},upload:function(camera,tilesetIndex){var renderer=this.renderer,gl=renderer.gl,pipeline=renderer.pipelines.TextureTintPipeline;if(this.dirty[tilesetIndex]){var tileset=this.tileset[tilesetIndex],mapWidth=this.layer.width,mapHeight=this.layer.height,width=tileset.image.source[0].width,height=tileset.image.source[0].height,mapData=this.layer.data,col;var tile=this._renderOrder;var minTileIndex=tileset.firstgid,
maxTileIndex=tileset.firstgid+tileset.total,vertexBuffer=this.vertexBuffer[tilesetIndex],bufferData=this.bufferData[tilesetIndex],vOffset=-1;pipeline=mapWidth*mapHeight*pipeline.vertexSize*6;this.vertexCount[tilesetIndex]=0;null===bufferData&&(bufferData=new ArrayBuffer(pipeline),this.bufferData[tilesetIndex]=bufferData,this.vertexViewF32[tilesetIndex]=new Float32Array(bufferData),this.vertexViewU32[tilesetIndex]=new Uint32Array(bufferData));if(0===tile)for(pipeline=0;pipeline<mapHeight;pipeline++)for(col=
0;col<mapWidth;col++)tile=mapData[pipeline][col],!tile||tile.index<minTileIndex||tile.index>maxTileIndex||!tile.visible||(vOffset=this.batchTile(vOffset,tile,tileset,width,height,camera,tilesetIndex));else if(1===tile)for(pipeline=0;pipeline<mapHeight;pipeline++)for(col=mapWidth-1;0<=col;col--)tile=mapData[pipeline][col],!tile||tile.index<minTileIndex||tile.index>maxTileIndex||!tile.visible||(vOffset=this.batchTile(vOffset,tile,tileset,width,height,camera,tilesetIndex));else if(2===tile)for(pipeline=
mapHeight-1;0<=pipeline;pipeline--)for(col=0;col<mapWidth;col++)tile=mapData[pipeline][col],!tile||tile.index<minTileIndex||tile.index>maxTileIndex||!tile.visible||(vOffset=this.batchTile(vOffset,tile,tileset,width,height,camera,tilesetIndex));else if(3===tile)for(pipeline=mapHeight-1;0<=pipeline;pipeline--)for(col=mapWidth-1;0<=col;col--)tile=mapData[pipeline][col],!tile||tile.index<minTileIndex||tile.index>maxTileIndex||!tile.visible||(vOffset=this.batchTile(vOffset,tile,tileset,width,height,camera,
tilesetIndex));this.dirty[tilesetIndex]=!1;null===vertexBuffer?(vertexBuffer=renderer.createVertexBuffer(bufferData,gl.STATIC_DRAW),this.vertexBuffer[tilesetIndex]=vertexBuffer):(renderer.setVertexBuffer(vertexBuffer),gl.bufferSubData(gl.ARRAY_BUFFER,0,bufferData))}return this},batchTile:function(vOffset,tile,tileset,width,height,camera,tilesetIndex){var texCoords=tileset.getTileTextureCoordinates(tile.index);if(!texCoords)return vOffset;tileset=texCoords.x/width;var v0=texCoords.y/height;width=(texCoords.x+
tile.width)/width;height=(texCoords.y+tile.height)/height;texCoords=this._tempMatrix;var tileWidth=tile.width,tileHeight=tile.height,halfTileWidth=tileWidth/2,halfTileHeight=tileHeight/2,x=-halfTileWidth,y=-halfTileHeight;tile.flipX&&(tileWidth*=-1,x+=tile.width);tile.flipY&&(tileHeight*=-1,y+=tile.height);tileWidth=x+tileWidth;var yh=y+tileHeight;texCoords.applyITRS(halfTileWidth+tile.pixelX,halfTileHeight+tile.pixelY,tile.rotation,1,1);tile=Utils.getTintAppendFloatAlpha(16777215,camera.alpha*this.alpha*
tile.alpha);halfTileWidth=texCoords.getX(x,y);halfTileHeight=texCoords.getY(x,y);tileHeight=texCoords.getX(x,yh);x=texCoords.getY(x,yh);var tx2=texCoords.getX(tileWidth,yh);yh=texCoords.getY(tileWidth,yh);var tx3=texCoords.getX(tileWidth,y);texCoords=texCoords.getY(tileWidth,y);camera.roundPixels&&(halfTileWidth|=0,halfTileHeight|=0,tileHeight|=0,x|=0,tx2|=0,yh|=0,tx3|=0,texCoords|=0);camera=this.vertexViewF32[tilesetIndex];y=this.vertexViewU32[tilesetIndex];camera[++vOffset]=halfTileWidth;camera[++vOffset]=
halfTileHeight;camera[++vOffset]=tileset;camera[++vOffset]=v0;camera[++vOffset]=0;y[++vOffset]=tile;camera[++vOffset]=tileHeight;camera[++vOffset]=x;camera[++vOffset]=tileset;camera[++vOffset]=height;camera[++vOffset]=0;y[++vOffset]=tile;camera[++vOffset]=tx2;camera[++vOffset]=yh;camera[++vOffset]=width;camera[++vOffset]=height;camera[++vOffset]=0;y[++vOffset]=tile;camera[++vOffset]=halfTileWidth;camera[++vOffset]=halfTileHeight;camera[++vOffset]=tileset;camera[++vOffset]=v0;camera[++vOffset]=0;y[++vOffset]=
tile;camera[++vOffset]=tx2;camera[++vOffset]=yh;camera[++vOffset]=width;camera[++vOffset]=height;camera[++vOffset]=0;y[++vOffset]=tile;camera[++vOffset]=tx3;camera[++vOffset]=texCoords;camera[++vOffset]=width;camera[++vOffset]=v0;camera[++vOffset]=0;y[++vOffset]=tile;this.vertexCount[tilesetIndex]+=6;return vOffset},setRenderOrder:function(renderOrder){var orders=["right-down","left-down","right-up","left-up"];"string"===typeof renderOrder&&(renderOrder=orders.indexOf(renderOrder));if(0<=renderOrder&&
4>renderOrder)for(this._renderOrder=renderOrder,renderOrder=0;renderOrder<this.tileset.length;renderOrder++)this.dirty[renderOrder]=!0;return this},calculateFacesAt:function(tileX,tileY){TilemapComponents.CalculateFacesAt(tileX,tileY,this.layer);return this},calculateFacesWithin:function(tileX,tileY,width,height){TilemapComponents.CalculateFacesWithin(tileX,tileY,width,height,this.layer);return this},createFromTiles:function(indexes,replacements,spriteConfig,scene,camera){return TilemapComponents.CreateFromTiles(indexes,
replacements,spriteConfig,scene,camera,this.layer)},cull:function(camera){return this.cullCallback(this.layer,camera,this.culledTiles)},setSkipCull:function(value){void 0===value&&(value=!0);this.skipCull=value;return this},setCullPadding:function(paddingX,paddingY){void 0===paddingX&&(paddingX=1);void 0===paddingY&&(paddingY=1);this.cullPaddingX=paddingX;this.cullPaddingY=paddingY;return this},findByIndex:function(findIndex,skip,reverse){return TilemapComponents.FindByIndex(findIndex,skip,reverse,
this.layer)},findTile:function(callback,context,tileX,tileY,width,height,filteringOptions){return TilemapComponents.FindTile(callback,context,tileX,tileY,width,height,filteringOptions,this.layer)},filterTiles:function(callback,context,tileX,tileY,width,height,filteringOptions){return TilemapComponents.FilterTiles(callback,context,tileX,tileY,width,height,filteringOptions,this.layer)},forEachTile:function(callback,context,tileX,tileY,width,height,filteringOptions){TilemapComponents.ForEachTile(callback,
context,tileX,tileY,width,height,filteringOptions,this.layer);return this},getTileAt:function(tileX,tileY,nonNull){return TilemapComponents.GetTileAt(tileX,tileY,nonNull,this.layer)},getTileAtWorldXY:function(worldX,worldY,nonNull,camera){return TilemapComponents.GetTileAtWorldXY(worldX,worldY,nonNull,camera,this.layer)},getTilesWithin:function(tileX,tileY,width,height,filteringOptions){return TilemapComponents.GetTilesWithin(tileX,tileY,width,height,filteringOptions,this.layer)},getTilesWithinWorldXY:function(worldX,
worldY,width,height,filteringOptions,camera){return TilemapComponents.GetTilesWithinWorldXY(worldX,worldY,width,height,filteringOptions,camera,this.layer)},getTilesWithinShape:function(shape,filteringOptions,camera){return TilemapComponents.GetTilesWithinShape(shape,filteringOptions,camera,this.layer)},hasTileAt:function(tileX,tileY){return TilemapComponents.HasTileAt(tileX,tileY,this.layer)},hasTileAtWorldXY:function(worldX,worldY,camera){return TilemapComponents.HasTileAtWorldXY(worldX,worldY,camera,
this.layer)},renderDebug:function(graphics,styleConfig){TilemapComponents.RenderDebug(graphics,styleConfig,this.layer);return this},setCollision:function(indexes,collides,recalculateFaces){TilemapComponents.SetCollision(indexes,collides,recalculateFaces,this.layer);return this},setCollisionBetween:function(start,stop,collides,recalculateFaces){TilemapComponents.SetCollisionBetween(start,stop,collides,recalculateFaces,this.layer);return this},setCollisionByProperty:function(properties,collides,recalculateFaces){TilemapComponents.SetCollisionByProperty(properties,
collides,recalculateFaces,this.layer);return this},setCollisionByExclusion:function(indexes,collides,recalculateFaces){TilemapComponents.SetCollisionByExclusion(indexes,collides,recalculateFaces,this.layer);return this},setTileIndexCallback:function(indexes,callback,callbackContext){TilemapComponents.SetTileIndexCallback(indexes,callback,callbackContext,this.layer);return this},setCollisionFromCollisionGroup:function(collides,recalculateFaces){TilemapComponents.SetCollisionFromCollisionGroup(collides,
recalculateFaces,this.layer);return this},setTileLocationCallback:function(tileX,tileY,width,height,callback,callbackContext){TilemapComponents.SetTileLocationCallback(tileX,tileY,width,height,callback,callbackContext,this.layer);return this},tileToWorldX:function(tileX,camera){return TilemapComponents.TileToWorldX(tileX,camera,this.layer)},tileToWorldY:function(tileY,camera){return TilemapComponents.TileToWorldY(tileY,camera,this.layer)},tileToWorldXY:function(tileX,tileY,point,camera){return TilemapComponents.TileToWorldXY(tileX,
tileY,point,camera,this.layer)},worldToTileX:function(worldX,snapToFloor,camera){return TilemapComponents.WorldToTileX(worldX,snapToFloor,camera,this.layer)},worldToTileY:function(worldY,snapToFloor,camera){return TilemapComponents.WorldToTileY(worldY,snapToFloor,camera,this.layer)},worldToTileXY:function(worldX,worldY,snapToFloor,point,camera){return TilemapComponents.WorldToTileXY(worldX,worldY,snapToFloor,point,camera,this.layer)},destroy:function(){this.layer.tilemapLayer===this&&(this.layer.tilemapLayer=
void 0);this.layer=this.tilemap=void 0;this.culledTiles.length=0;this.cullCallback=null;for(var i=0;i<this.tileset.length;i++)this.dirty[i]=!0,this.vertexCount[i]=0,this.vertexBuffer[i]=null,this.bufferData[i]=null,this.vertexViewF32[i]=null,this.vertexViewU32[i]=null;this.gidMap=[];this.tileset=[];GameObject.prototype.destroy.call(this)}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$tilemaps$staticlayer$StaticTilemapLayer.js.map
