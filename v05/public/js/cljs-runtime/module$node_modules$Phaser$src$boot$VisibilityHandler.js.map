{
"version":3,
"file":"module$node_modules$Phaser$src$boot$VisibilityHandler.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuIlHD,MAAAC,QAAA,CAlFwBC,QAAS,CAACC,IAAD,CACjC,CACI,IAAIC,SAAJ,CACIC,aAAeF,IAAAG,OAEKC,KAAAA,EAAxB,GAAIC,QAAAC,OAAJ,CAEIL,SAFJ,CAEgB,kBAFhB,CAMkBM,CAAE,QAAFA,CAAY,KAAZA,CAAmB,IAAnBA,CAEdC,QAAA,CAAgB,QAAS,CAACC,MAAD,CACzB,CACwCL,IAAAA,EAApC,GAAIC,QAAA,CAASI,MAAT,CAAkB,QAAlB,CAAJ,GAEIJ,QAAAC,OAKA,CALkBI,QAAS,EAC3B,CACI,MAAOL,SAAA,CAASI,MAAT,CAAkB,QAAlB,CADX,CAIA,CAAAR,SAAA,CAAYQ,MAAZ,CAAqB,kBAPzB,CADJ,CADA,CAeJ,KAAIE,SAAWA,QAAS,CAACC,KAAD,CACxB,CACQP,QAAAC,OAAJ,EAAsC,OAAtC,GAAuBM,KAAAC,KAAvB,CAEIX,YAAAY,KAAA,CAAkB,QAAlB,CAFJ;AAMIZ,YAAAY,KAAA,CAAkB,SAAlB,CAPR,CAWIb,UAAJ,EAEII,QAAAU,iBAAA,CAA0Bd,SAA1B,CAAqCU,QAArC,CAA+C,CAAA,CAA/C,CAGJK,OAAAC,OAAA,CAAgBC,QAAS,EACzB,CACIhB,YAAAY,KAAA,CAAkB,MAAlB,CADJ,CAIAE,OAAAG,QAAA,CAAiBC,QAAS,EAC1B,CACIlB,YAAAY,KAAA,CAAkB,OAAlB,CADJ,CAKIE,OAAAK,MAAJ,EAAoBrB,IAAAsB,OAAAC,UAApB,GAEIP,MAAAK,MAAA,EAEA,CAAArB,IAAAwB,OAAAT,iBAAA,CAA6B,WAA7B,CAA0C,QAAS,EACnD,CACIC,MAAAK,MAAA,EADJ,CADA,CAGG,CAAEI,QAAS,CAAA,CAAX,CAHH,CAJJ,CAUIzB,KAAAwB,OAAJ,GAEIxB,IAAAwB,OAAAE,WAMA,CANyBC,QAAS,EAClC,CACI3B,IAAA4B,OAAA,CAAc,CAAA,CACd1B,aAAAY,KAAA,CAAkB,UAAlB,CAFJ,CAKA,CAAAd,IAAAwB,OAAAK,YAAA,CAA0BC,QAAS,EACnC,CACI9B,IAAA4B,OAAA,CAAc,CAAA,CACd1B,aAAAY,KAAA,CAAkB,WAAlB,CAFJ,CATJ,CAjEJ,CAtDkH;",
"sources":["node_modules/Phaser/src/boot/VisibilityHandler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$boot$VisibilityHandler\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Visibility Handler hidden event.\r\n *\r\n * The document in which the Game is embedded has entered a hidden state.\r\n *\r\n * @event Phaser.Boot.VisibilityHandler#hidden\r\n */\r\n\r\n/**\r\n * Visibility Handler visible event.\r\n *\r\n * The document in which the Game is embedded has entered a visible state.\r\n *\r\n * @event Phaser.Boot.VisibilityHandler#visible\r\n */\r\n\r\n/**\r\n * Visibility Handler blur event.\r\n *\r\n * The window in which the Game is embedded has entered a blurred state.\r\n *\r\n * @event Phaser.Boot.VisibilityHandler#blur\r\n */\r\n\r\n/**\r\n * Visibility Handler focus event.\r\n *\r\n * The window in which the Game is embedded has entered a focused state.\r\n *\r\n * @event Phaser.Boot.VisibilityHandler#focus\r\n */\r\n\r\n/**\r\n * The Visibility Handler is responsible for listening out for document level visibility change events.\r\n * This includes `visibilitychange` if the browser supports it, and blur and focus events. It then uses\r\n * the provided Event Emitter and fires the related events.\r\n *\r\n * @function Phaser.Boot.VisibilityHandler\r\n * @fires Phaser.Boot.VisibilityHandler#hidden\r\n * @fires Phaser.Boot.VisibilityHandler#visible\r\n * @fires Phaser.Boot.VisibilityHandler#blur\r\n * @fires Phaser.Boot.VisibilityHandler#focus\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Game} game - The Game instance this Visibility Handler is working on.\r\n */\r\nvar VisibilityHandler = function (game)\r\n{\r\n    var hiddenVar;\r\n    var eventEmitter = game.events;\r\n\r\n    if (document.hidden !== undefined)\r\n    {\r\n        hiddenVar = 'visibilitychange';\r\n    }\r\n    else\r\n    {\r\n        var vendors = [ 'webkit', 'moz', 'ms' ];\r\n\r\n        vendors.forEach(function (prefix)\r\n        {\r\n            if (document[prefix + 'Hidden'] !== undefined)\r\n            {\r\n                document.hidden = function ()\r\n                {\r\n                    return document[prefix + 'Hidden'];\r\n                };\r\n\r\n                hiddenVar = prefix + 'visibilitychange';\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    var onChange = function (event)\r\n    {\r\n        if (document.hidden || event.type === 'pause')\r\n        {\r\n            eventEmitter.emit('hidden');\r\n        }\r\n        else\r\n        {\r\n            eventEmitter.emit('visible');\r\n        }\r\n    };\r\n\r\n    if (hiddenVar)\r\n    {\r\n        document.addEventListener(hiddenVar, onChange, false);\r\n    }\r\n\r\n    window.onblur = function ()\r\n    {\r\n        eventEmitter.emit('blur');\r\n    };\r\n\r\n    window.onfocus = function ()\r\n    {\r\n        eventEmitter.emit('focus');\r\n    };\r\n\r\n    //  Automatically give the window focus unless config says otherwise\r\n    if (window.focus && game.config.autoFocus)\r\n    {\r\n        window.focus();\r\n\r\n        game.canvas.addEventListener('mousedown', function ()\r\n        {\r\n            window.focus();\r\n        }, { passive: true });\r\n    }\r\n\r\n    if (game.canvas)\r\n    {\r\n        game.canvas.onmouseout = function ()\r\n        {\r\n            game.isOver = false;\r\n            eventEmitter.emit('mouseout');\r\n        };\r\n\r\n        game.canvas.onmouseover = function ()\r\n        {\r\n            game.isOver = true;\r\n            eventEmitter.emit('mouseover');\r\n        };\r\n    }\r\n};\r\n\r\nmodule.exports = VisibilityHandler;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","VisibilityHandler","game","hiddenVar","eventEmitter","events","undefined","document","hidden","vendors","forEach","prefix","document.hidden","onChange","event","type","emit","addEventListener","window","onblur","window.onblur","onfocus","window.onfocus","focus","config","autoFocus","canvas","passive","onmouseout","game.canvas.onmouseout","isOver","onmouseover","game.canvas.onmouseover"]
}
