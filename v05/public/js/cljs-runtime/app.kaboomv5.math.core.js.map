{"version":3,"sources":["app/kaboomv5/math/core.cljs"],"mappings":"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","names":["app.kaboomv5.math.core/neg","num","app.kaboomv5.math.core/deg->rad","deg","goog.math/toRadians","app.kaboomv5.math.core/rad->deg","rad","goog.math/toDegrees","app.kaboomv5.math.core/clamp","value","min","max","goog.math/clamp","app.kaboomv5.math.core/lerp","a","b","x","goog.math/lerp","app.kaboomv5.math.core/mmap","v","l1","h1","l2","h2","app.kaboomv5.math.core/mapc","app.kaboomv5.math.core/angle->vec","cljs.core.partial","app.kaboomv5.math.vector/angle->vec","app.kaboomv5.math.core/vec2","app.kaboomv5.math.vector/vec2","app.kaboomv5.math.core/vec2?","app.kaboomv5.math.vector/vec2?","app.kaboomv5.math.core/vec3","app.kaboomv5.math.vector/vec3","app.kaboomv5.math.core/vec3?","app.kaboomv5.math.vector/vec3?","app.kaboomv5.math.core/scale","app.kaboomv5.math.vector/scale","app.kaboomv5.math.core/add","app.kaboomv5.math.vector/add","app.kaboomv5.math.core/subtract","app.kaboomv5.math.vector/subtract","app.kaboomv5.math.core/scale!","app.kaboomv5.math.vector/scale!","app.kaboomv5.math.core/dist","app.kaboomv5.math.vector/dist","app.kaboomv5.math.core/len","app.kaboomv5.math.vector/len","app.kaboomv5.math.core/unit","app.kaboomv5.math.vector/unit","app.kaboomv5.math.core/normal","app.kaboomv5.math.vector/normal","app.kaboomv5.math.core/dot","app.kaboomv5.math.vector/dot","app.kaboomv5.math.core/angle","app.kaboomv5.math.vector/angle","app.kaboomv5.math.core/vlerp","app.kaboomv5.math.vector/lerp","app.kaboomv5.math.core/to-fixed","app.kaboomv5.math.vector/to-fixed","app.kaboomv5.math.core/color","app.kaboomv5.math.color/color","app.kaboomv5.math.core/lighten","app.kaboomv5.math.color/lighten","app.kaboomv5.math.core/darken","app.kaboomv5.math.color/darken","app.kaboomv5.math.core/dark?","app.kaboomv5.math.color/dark?","app.kaboomv5.math.core/light?","app.kaboomv5.math.color/light?","app.kaboomv5.math.core/color?","app.kaboomv5.math.color/color?","this__4380__auto__","k__4381__auto__","this__4382__auto__","k104426","else__4383__auto__","G__104430","cljs.core/Keyword","y","w","h","cljs.core.get","__extmap","this__4399__auto__","f__4400__auto__","init__4401__auto__","cljs.core.reduce","ret__4402__auto__","p__104431","vec__104432","k__4403__auto__","cljs.core.nth","v__4404__auto__","this__4394__auto__","writer__4395__auto__","opts__4396__auto__","pr-pair__4397__auto__","keyval__4398__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__104425","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4378__auto__","__meta","this__4375__auto__","__hash","this__4384__auto__","cljs.core/count","this__4376__auto__","h__4238__auto__","coll__4377__auto__","cljs.core/hash-unordered-coll","this104427","other104428","cljs.core._EQ_","this__4389__auto__","k__4390__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4387__auto__","k__4388__auto__","pred__104435","cljs.core/keyword-identical?","expr__104436","cljs.core.assoc","this__4392__auto__","cljs.core/seq","cljs.core/MapEntry","this__4379__auto__","this__4385__auto__","entry__4386__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","app.kaboomv5.math.core/Quad","this__4423__auto__","cljs.core/List","writer__4424__auto__","cljs.core/-write","G__104429","extmap__4419__auto__","G__104438","cljs.core/record?","app.kaboomv5.math.core/->Quad","app.kaboomv5.math.core/map->Quad","app.kaboomv5.math.core/quad","app.kaboomv5.math.core/matrix","app.kaboomv5.math.matrix/matrix","app.kaboomv5.math.core/mat4","app.kaboomv5.math.matrix/mat4","app.kaboomv5.math.core/mat4?","app.kaboomv5.math.matrix/mat4?"],"sourcesContent":["(ns app.kaboomv5.math.core\n  (:require [goog.math :as math]\n            [clojure.repl :refer [doc]]\n            [app.kaboomv5.math.vector :as mv]\n            [app.kaboomv5.math.color :as mc]\n            [app.kaboomv5.math.matrix :as mm]))\n\n;; 0\n(defn neg [num]\n  (* -1 num))\n\n;; 1\n(defn deg->rad\n  \"Converts radians to degrees.\n    Parameters:\n    - angleRadians  number\n                Angle in radians.\n    Returns: number\n             Angle in degrees.\n    ex: (deg->rad 1) => 0.017453292519943295\"\n  [deg]\n  (math/toRadians deg))\n(comment\n  (doc deg->rad)\n  (deg->rad 1)\n  (math/toRadians 1))\n\n;; 2\n(defn rad->deg\n  \"Converts radians to degrees.\n   Parameters\n   - angleRadians(number): Angle in radians.\n   Returns\n   - number: Angle in degrees.\n   ex: (rad->deg (/ 22 7)) => 180.07244989825872\n   \"\n  [rad]\n  (math/toDegrees rad))\n(comment\n  (math/toDegrees (/ 22 7)))\n\n;; 3\n(defn clamp\n  \"Takes a number and clamps it to within the provided bounds.\n   Parameters\n   - value(number): The input number.\n   - min  (number): The minimum value to return.\n   - max  (number): The maximum value to return.\n   Returns\n   - number: The input number if it is within bounds, or the nearest number within the bounds.\"\n  [value min max]\n  (if (> min max)\n    (clamp value max min)\n    (math/clamp value min max)))\n\n;; 4\n(defn lerp\n  \"Performs linear interpolation between values a and b.\n  Returns the value between a and b proportional to x (when x is between 0 and 1.\n  When x is outside this range, the return value is a linear extrapolation).\n  Parameters:\n   - a: number\n   - b: number\n   - x: The proportion between a and b\n  \"\n  [a b x]\n  (math/lerp a b x))\n(comment\n  (lerp 1 2 4))\n\n;; 5 math/map - TODO\n(defn mmap [v l1 h1 l2 h2]\n  (/ (+ l2 (- v l1))\n     (* (- h1 l1)\n        (- h2 l2))))\n;; 6 math/mapc - TODO\n(defn mapc [v l1 h1 l2 h2]\n  (clamp (mmap v l1 h1 l2 h2) l2 h2))\n(comment\n  (mapc 1 2 3 4 5))\n\n;; 1. Vectors ===\n(def angle->vec (partial mv/angle->vec))\n\n(def vec2 (partial mv/vec2))\n(def vec2? (partial mv/vec2?))\n\n(def vec3 (partial mv/vec3))\n(def vec3? (partial mv/vec3?))\n(comment\n  (vec3 1)\n  (= (vec2 100) (mv/vec2 100)))\n\n(def scale (partial mv/scale))\n(def add (partial mv/add))\n(def subtract (partial mv/subtract))\n(def scale! (partial mv/scale!))\n(def dist (partial mv/dist))\n(def len (partial mv/len))\n(def unit (partial mv/unit))\n(def normal (partial mv/normal))\n(def dot (partial mv/dot))\n(def angle (partial mv/angle))\n(def vlerp (partial mv/lerp))\n(def to-fixed (partial mv/to-fixed))\n\n(comment\n  (add (vec2 1 1) (vec2 1 3))\n  (scale (vec2 1 1) 2))\n\n;; Colors ===\n(def color (partial mc/color))\n(def lighten (partial mc/lighten))\n(def darken (partial mc/darken))\n(def dark? (partial mc/dark?))\n(def light? (partial mc/light?))\n(def color? (partial mc/color?))\n;; === Color End\n\n;; Quad\n(defrecord Quad [x y w h])\n(defn quad [x y w h]\n  (->Quad x y w h))\n(comment\n  (instance? Quad (quad 1 3 4 5)))\n\n;; === Matrix\n(def matrix (partial mm/matrix))\n(def mat4 (partial mm/mat4))\n(def mat4?  (partial mm/mat4?))\n"]}