{
"version":3,
"file":"module$node_modules$Phaser$src$math$angle$Reverse.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,kDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO9G,IAAIC,UAAYH,OAAA,CAAQ,qDAAR,CAiBhBC,OAAAC,QAAA,CALcE,QAAS,CAACC,KAAD,CACvB,CACI,MAAOF,UAAA,CAAUE,KAAV,CAAkBC,IAAAC,GAAlB,CADX,CApB8G;",
"sources":["node_modules/Phaser/src/math/angle/Reverse.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$angle$Reverse\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Normalize = require('./Normalize');\r\n\r\n/**\r\n * Reverse the given angle.\r\n *\r\n * @function Phaser.Math.Angle.Reverse\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to reverse, in radians.\r\n *\r\n * @return {number} The reversed angle, in radians.\r\n */\r\nvar Reverse = function (angle)\r\n{\r\n    return Normalize(angle + Math.PI);\r\n};\r\n\r\nmodule.exports = Reverse;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Normalize","Reverse","angle","Math","PI"]
}
