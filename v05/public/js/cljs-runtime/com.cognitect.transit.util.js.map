{
"version":3,
"file":"com.cognitect.transit.util.js",
"lineCount":85,
"mappings":"AAcAA,IAAAC,QAAA,CAAa,4BAAb,CAAA;AACAD,IAAAE,QAAA,CAAa,aAAb,CAAA;AAEAF,IAAAG,MAAA,CAAW,QAAS,EAAG;AAEnB,MAAIC,OAAUC,GAAAC,UAAAC,QAAAH,KAAd,EACII,UAAUR,IAAAS,OADd;AAGA,MAAI,MAAOC,OAAAC,KAAX,IAA0B,WAA1B;AACIP,QAAAQ,WAAA,GAAkBC,QAAS,CAACC,GAAD,CAAM;AAC7B,aAAOJ,MAAAC,KAAA,CAAYG,GAAZ,CAAP;AAD6B,KAAjC;AADJ;AAKIV,QAAAQ,WAAA,GAAkBC,QAAS,CAACC,GAAD,CAAM;AAC7B,aAAON,OAAAO,QAAA,CAAgBD,GAAhB,CAAP;AAD6B,KAAjC;AALJ;AAUA,MAAI,MAAOE,MAAAC,QAAX,IAA4B,WAA5B;AACIb,QAAAa,QAAA,GAAeC,QAAS,CAACJ,GAAD,CAAM;AAC1B,aAAOE,KAAAC,QAAA,CAAcH,GAAd,CAAP;AAD0B,KAA9B;AADJ;AAKIV,QAAAa,QAAA,GAAeC,QAAS,CAACJ,GAAD,CAAM;AAC1B,aAAOd,IAAAmB,OAAA,CAAYL,GAAZ,CAAP,KAA4B,OAA5B;AAD0B,KAA9B;AALJ;AAcA,+BAAAV,IAAAgB,MAAA,GAAa,sEAAb;AAEAhB,MAAAiB,QAAA,GAAeC,QAAS,CAACC,EAAD,CAAK;AACzB,WAAOC,IAAAC,MAAA,CAAWD,IAAAE,OAAA,EAAX,GAA2BH,EAA3B,CAAP;AADyB,GAA7B;AAIAnB,MAAAuB,QAAA,GAAeC,QAAS,EAAG;AACvB,WAAOxB,IAAAiB,QAAA,CAAa,EAAb,CAAAQ,SAAA,CAA0B,EAA1B,CAAP;AADuB,GAA3B;AAIAzB,MAAA0B,WAAA,GAAkBC,QAAS,EAAG;AAC1B,QAAIC,OAAOH,CAAC,CAADA,GAAQ,CAARA,GAAczB,IAAAiB,QAAA,CAAa,EAAb,CAAdQ,UAAA,CAA0C,EAA1C,CAAX,EACII,MAAO7B,IAAAuB,QAAA,EAAPM,GAAwB7B,IAAAuB,QAAA,EAAxBM,GAAyC7B,IAAAuB,QAAA,EAAzCM,GAA0D7B,IAAAuB,QAAA,EAA1DM,GACO7B,IAAAuB,QAAA,EADPM,GACwB7B,IAAAuB,QAAA,EADxBM,GACyC7B,IAAAuB,QAAA,EADzCM,GAC0D7B,IAAAuB,QAAA,EAD1DM,GAC2E,GAD3EA,GAEO7B,IAAAuB,QAAA,EAFPM,GAEwB7B,IAAAuB,QAAA,EAFxBM,GAEyC7B,IAAAuB,QAAA,EAFzCM,GAE0D7B,IAAAuB,QAAA,EAF1DM,GAE2E,GAF3EA,GAGkB,GAHlBA,GAGwB7B,IAAAuB,QAAA,EAHxBM,GAGyC7B,IAAAuB,QAAA,EAHzCM,GAG0D7B,IAAAuB,QAAA,EAH1DM,GAG2E,GAH3EA,GAIiBD,IAJjBC,GAIwB7B,IAAAuB,QAAA,EAJxBM,GAIyC7B,IAAAuB,QAAA,EAJzCM,GAI0D7B,IAAAuB,QAAA,EAJ1DM,GAI2E,GAJ3EA,GAKO7B,IAAAuB,QAAA,EALPM,GAKwB7B,IAAAuB,QAAA,EALxBM,GAKyC7B,IAAAuB,QAAA,EALzCM,GAK0D7B,IAAAuB,QAAA,EAL1DM,GAMO7B,IAAAuB,QAAA,EANPM,GAMwB7B,IAAAuB,QAAA,EANxBM;AAMyC7B,QAAAuB,QAAA,EANzCM,GAM0D7B,IAAAuB,QAAA,EAN1DM,GAOO7B,IAAAuB,QAAA,EAPPM,GAOwB7B,IAAAuB,QAAA,EAPxBM,GAOyC7B,IAAAuB,QAAA,EAPzCM,GAO0D7B,IAAAuB,QAAA,EAR9D;AASA,WAAOM,GAAP;AAV0B,GAA9B;AAeA7B,MAAA8B,KAAA,GAAYC,QAAS,CAACC,KAAD,CAAQ;AACzB,QAAI,MAAOF,KAAX,IAAmB,WAAnB;AACI,aAAOA,IAAA,CAAKE,KAAL,CAAP;AADJ,UAEO;AACH,UAAIC,MAAMC,MAAA,CAAOF,KAAP,CAAV;AACA,WACI,IAAIG,KAAJ,EAAWC,QAAX,EAAqBC,MAAM,CAA3B,EAA8BC,MAAMtC,IAAAgB,MAApC,EAAgDuB,SAAS,EAD7D,EAEIN,GAAAO,OAAA,CAAWH,GAAX,GAAiB,CAAjB,CAFJ,KAE4BC,GAAA,GAAM,MAAN,EAAWD,GAAX,GAAiB,CAF7C,GAGIE,MAHJ,IAGcD,GAAAE,OAAA,CAAW,EAAX,GAAgBL,KAAhB,IAAyB,CAAzB,GAA6BE,GAA7B,GAAmC,CAAnC,GAAuC,CAAvC,CAHd,CAIE;AACED,gBAAA,GAAWH,GAAAQ,WAAA,CAAeJ,GAAf,IAAsB,CAAtB,GAA0B,CAA1B,CAAX;AACA,YAAID,QAAJ,GAAe,GAAf;AACI,gBAAM,IAAIM,KAAJ,CAAU,0FAAV,CAAN;AADJ;AAGAP,aAAA,GAAQA,KAAR,IAAiB,CAAjB,GAAqBC,QAArB;AALF;AAOF,aAAOG,MAAP;AAbG;AAHkB,GAA7B;AAuBA;;;AAAAvC,MAAA2C,KAAA,GAAYC,QAAS,CAACZ,KAAD,CAAQ;AACzB,QAAI,MAAOW,KAAX,IAAmB,WAAnB;AACI,aAAOA,IAAA,CAAKX,KAAL,CAAP;AADJ,UAEO;AACH,UAAIC,MAAMC,MAAA,CAAOF,KAAP,CAAAa,QAAA,CAAsB,KAAtB,EAA6B,EAA7B,CAAV;AACA,UAAIZ,GAAAa,OAAJ,GAAiB,CAAjB,IAAsB,CAAtB;AACI,cAAM,IAAIJ,KAAJ,CAAU,mEAAV,CAAN;AADJ;AAGA,WACI,IAAIK,KAAK,CAAT,EAAYC,EAAZ,EAAgBC,MAAhB,EAAwBZ,MAAM,CAA9B,EAAiCE,SAAS,EAD9C,EAEIU,MAFJ,GAEahB,GAAAO,OAAA,CAAWH,GAAA,EAAX,CAFb,EAGI,CAACY,MAAD,KAAYD,EAAA,GAAKD,EAAA,GAAK,CAAL,GAASC,EAAT,GAAc,EAAd,GAAmBC,MAAnB,GAA4BA,MAAjC,EACZF,EAAA,EADY,GACL,CADP,IACYR,MADZ,IACsBL,MAAAgB,aAAA,CAAoB,GAApB,GAA0BF,EAA1B,KAAiC,EAAjC,GAAsCD,EAAtC,GAA2C,CAA3C,EADtB,GACuE,CAJ3E;AAMIE,cAAA,GAASjD,IAAAgB,MAAAmC,QAAA,CAAmBF,MAAnB,CAAT;AANJ;AAQA,aAAOV,MAAP;AAbG;AAHkB,GAA7B;AAoBAvC,MAAAoD,cAAA,GAAqBC,QAAS,CAACC,KAAD,CAAQ;AAClC,QAAIC,aAAa,KAAjB,EACIC,QAAa,CADjB,EAEIV,SAAaQ,KAAAR,OAFjB,EAGIW,SAAa,EAHjB,EAIIC,QAAa,IAJjB;AAMA,WAAOF,KAAP,GAAeV,MAAf,CAAuB;AACnBY,WAAA,GAAQJ,KAAAK,SAAA,CAAeH,KAAf,EAAsBpC,IAAAwC,IAAA,CAASJ,KAAT,GAAiBD,UAAjB,EAA6BT,MAA7B,CAAtB,CAAR;AACAW,YAAA,IAAUvB,MAAAgB,aAAAW,MAAA,CAA0B,IAA1B,EAAgCH,KAAhC,CAAV;AACAF,WAAA,IAASD,UAAT;AAHmB;AAMvB,WAAOvD,IAAA8B,KAAA,CAAU2B,MAAV,CAAP;AAbkC,GAAtC;AAgBAzD,MAAA8D,cAAA,GAAqBC,QAAS,CAACC,MAAD,CAAS;AACnC,QAAIC,gBAAgBjE,IAAA2C,KAAA,CAAUqB,MAAV,CAApB,EACIE,MAAgBD,aAAAnB,OADpB,EAEIqB,QAAgB,IAAIC,UAAJ,CAAeF,GAAf,CAFpB;AAIA,SAAK,IAAIG,IAAI,CAAb,EAAgBA,CAAhB,GAAoBH,GAApB,EAAyBG,CAAA,EAAzB,CAA8B;AAC1B,UAAIC,QAAQL,aAAAxB,WAAA,CAAyB4B,CAAzB,CAAZ;AACAF,WAAA,CAAME,CAAN,CAAA,GAAWC,KAAX;AAF0B;AAK9B,WAAOH,KAAP;AAVmC,GAAvC;AAjHmB,CAAvB,CAAA;;",
"sources":["com/cognitect/transit/util.js"],
"sourcesContent":["// Copyright 2014 Cognitect. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide(\"com.cognitect.transit.util\");\ngoog.require(\"goog.object\");\n\ngoog.scope(function () {\n\n    var util    = com.cognitect.transit.util,\n        gobject = goog.object;\n\n    if (typeof Object.keys != \"undefined\") {\n        util.objectKeys = function (obj) {\n            return Object.keys(obj);\n        };\n    } else {\n        util.objectKeys = function (obj) {\n            return gobject.getKeys(obj);\n        };\n    }\n\n    if (typeof Array.isArray != \"undefined\") {\n        util.isArray = function (obj) {\n            return Array.isArray(obj);\n        };\n    } else {\n        util.isArray = function (obj) {\n            return goog.typeOf(obj) === \"array\";\n        };\n    }\n\n    /**\n     * @const\n     * @type {string}\n     */\n    util.chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    util.randInt = function (ub) {\n        return Math.round(Math.random() * ub);\n    };\n\n    util.randHex = function () {\n        return util.randInt(15).toString(16);\n    };\n\n    util.randomUUID = function () {\n        var rhex = (0x8 | (0x3 & util.randInt(14))).toString(16),\n            ret  = util.randHex() + util.randHex() + util.randHex() + util.randHex() +\n                   util.randHex() + util.randHex() + util.randHex() + util.randHex() + \"-\" +\n                   util.randHex() + util.randHex() + util.randHex() + util.randHex() + \"-\" +\n                              \"4\" + util.randHex() + util.randHex() + util.randHex() + \"-\" +\n                             rhex + util.randHex() + util.randHex() + util.randHex() + \"-\" +\n                   util.randHex() + util.randHex() + util.randHex() + util.randHex() +\n                   util.randHex() + util.randHex() + util.randHex() + util.randHex() +\n                   util.randHex() + util.randHex() + util.randHex() + util.randHex();\n        return ret;\n    };\n\n// https://github.com/davidchambers/Base64.js\n\n    util.btoa = function (input) {\n        if (typeof btoa != \"undefined\") {\n            return btoa(input);\n        } else {\n            var str = String(input);\n            for (\n                var block, charCode, idx = 0, map = util.chars, output = '';\n                str.charAt(idx | 0) || (map = '=', idx % 1);\n                output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n            ) {\n                charCode = str.charCodeAt(idx += 3 / 4);\n                if (charCode > 0xFF) {\n                    throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n                }\n                block = block << 8 | charCode;\n            }\n            return output;\n        }\n    };\n\n    /**\n     * @suppress {uselessCode}\n     */\n    util.atob = function (input) {\n        if (typeof atob != \"undefined\") {\n            return atob(input);\n        } else {\n            var str = String(input).replace(/=+$/, '');\n            if (str.length % 4 == 1) {\n                throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n            }\n            for (\n                var bc = 0, bs, buffer, idx = 0, output = '';\n                buffer = str.charAt(idx++);\n                ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n                bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n            ) {\n                buffer = util.chars.indexOf(buffer);\n            }\n            return output;\n        }\n    };\n\n    util.Uint8ToBase64 = function (u8Arr) {\n        var CHUNK_SIZE = 0x8000,\n            index      = 0,\n            length     = u8Arr.length,\n            result     = '',\n            slice      = null;\n\n        while (index < length) {\n            slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));\n            result += String.fromCharCode.apply(null, slice);\n            index += CHUNK_SIZE;\n        }\n\n        return util.btoa(result);\n    };\n\n    util.Base64ToUint8 = function (base64) {\n        var binary_string = util.atob(base64),\n            len           = binary_string.length,\n            bytes         = new Uint8Array(len);\n\n        for (var i = 0; i < len; i++) {\n            var ascii = binary_string.charCodeAt(i);\n            bytes[i] = ascii;\n        }\n\n        return bytes;\n    };\n\n});\n"],
"names":["goog","provide","require","scope","util","com","cognitect","transit","gobject","object","Object","keys","objectKeys","util.objectKeys","obj","getKeys","Array","isArray","util.isArray","typeOf","chars","randInt","util.randInt","ub","Math","round","random","randHex","util.randHex","toString","randomUUID","util.randomUUID","rhex","ret","btoa","util.btoa","input","str","String","block","charCode","idx","map","output","charAt","charCodeAt","Error","atob","util.atob","replace","length","bc","bs","buffer","fromCharCode","indexOf","Uint8ToBase64","util.Uint8ToBase64","u8Arr","CHUNK_SIZE","index","result","slice","subarray","min","apply","Base64ToUint8","util.Base64ToUint8","base64","binary_string","len","bytes","Uint8Array","i","ascii"]
}
