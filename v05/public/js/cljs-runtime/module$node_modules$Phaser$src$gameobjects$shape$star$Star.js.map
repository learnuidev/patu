{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$shape$star$Star.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/Phaser/src/gameobjects/shape/star/Star.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$shape$star$Star\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar StarRender = require('./StarRender');\r\nvar Class = require('../../../utils/Class');\r\nvar Earcut = require('../../../geom/polygon/Earcut');\r\nvar Shape = require('../Shape');\r\n\r\n/**\r\n * @classdesc\r\n * The Star Shape is a Game Object that can be added to a Scene, Group or Container. You can\r\n * treat it like any other Game Object in your game, such as tweening it, scaling it, or enabling\r\n * it for input or physics. It provides a quick and easy way for you to render this shape in your\r\n * game without using a texture, while still taking advantage of being fully batched in WebGL.\r\n * \r\n * This shape supports both fill and stroke colors.\r\n * \r\n * As the name implies, the Star shape will display a star in your game. You can control several\r\n * aspects of it including the number of points that constitute the star. The default is 5. If\r\n * you change it to 4 it will render as a diamond. If you increase them, you'll get a more spiky\r\n * star shape.\r\n * \r\n * You can also control the inner and outer radius, which is how 'long' each point of the star is.\r\n * Modify these values to create more interesting shapes.\r\n *\r\n * @class Star\r\n * @extends Phaser.GameObjects.Shape\r\n * @memberOf Phaser.GameObjects\r\n * @constructor\r\n * @since 3.13.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} [x=0] - The horizontal position of this Game Object in the world.\r\n * @param {number} [y=0] - The vertical position of this Game Object in the world.\r\n * @param {number} [points=5] - The number of points on the star.\r\n * @param {number} [innerRadius=32] - The inner radius of the star.\r\n * @param {number} [outerRadius=64] - The outer radius of the star.\r\n * @param {number} [fillColor] - The color the star will be filled with, i.e. 0xff0000 for red.\r\n * @param {number} [fillAlpha] - The alpha the star will be filled with. You can also set the alpha of the overall Shape using its `alpha` property.\r\n */\r\nvar Star = new Class({\r\n\r\n    Extends: Shape,\r\n\r\n    Mixins: [\r\n        StarRender\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function Star (scene, x, y, points, innerRadius, outerRadius, fillColor, fillAlpha)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (points === undefined) { points = 5; }\r\n        if (innerRadius === undefined) { innerRadius = 32; }\r\n        if (outerRadius === undefined) { outerRadius = 64; }\r\n\r\n        Shape.call(this, scene, 'Star', null);\r\n\r\n        /**\r\n         * Private internal value.\r\n         * The number of points in the star.\r\n         *\r\n         * @name Phaser.GameObjects.Star#_points\r\n         * @type {integer}\r\n         * @private\r\n         * @since 3.13.0\r\n         */\r\n        this._points = points;\r\n\r\n        /**\r\n         * Private internal value.\r\n         * The inner radius of the star.\r\n         *\r\n         * @name Phaser.GameObjects.Star#_innerRadius\r\n         * @type {number}\r\n         * @private\r\n         * @since 3.13.0\r\n         */\r\n        this._innerRadius = innerRadius;\r\n\r\n        /**\r\n         * Private internal value.\r\n         * The outer radius of the star.\r\n         *\r\n         * @name Phaser.GameObjects.Star#_outerRadius\r\n         * @type {number}\r\n         * @private\r\n         * @since 3.13.0\r\n         */\r\n        this._outerRadius = outerRadius;\r\n\r\n        this.setPosition(x, y);\r\n        this.setSize(outerRadius * 2, outerRadius * 2);\r\n\r\n        if (fillColor !== undefined)\r\n        {\r\n            this.setFillStyle(fillColor, fillAlpha);\r\n        }\r\n\r\n        this.updateDisplayOrigin();\r\n        this.updateData();\r\n    },\r\n\r\n    /**\r\n     * Sets the number of points that make up the Star shape.\r\n     * This call can be chained.\r\n     *\r\n     * @method Phaser.GameObjects.Star#setPoints\r\n     * @since 3.13.0\r\n     * \r\n     * @param {integer} value - The amount of points the Star will have.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setPoints: function (value)\r\n    {\r\n        this._points = value;\r\n\r\n        return this.updateData();\r\n    },\r\n\r\n    /**\r\n     * Sets the inner radius of the Star shape.\r\n     * This call can be chained.\r\n     *\r\n     * @method Phaser.GameObjects.Star#setInnerRadius\r\n     * @since 3.13.0\r\n     * \r\n     * @param {number} value - The amount to set the inner radius to.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setInnerRadius: function (value)\r\n    {\r\n        this._innerRadius = value;\r\n\r\n        return this.updateData();\r\n    },\r\n\r\n    /**\r\n     * Sets the outer radius of the Star shape.\r\n     * This call can be chained.\r\n     *\r\n     * @method Phaser.GameObjects.Star#setOuterRadius\r\n     * @since 3.13.0\r\n     * \r\n     * @param {number} value - The amount to set the outer radius to.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setOuterRadius: function (value)\r\n    {\r\n        this._outerRadius = value;\r\n\r\n        return this.updateData();\r\n    },\r\n\r\n    /**\r\n     * The number of points that make up the Star shape.\r\n     *\r\n     * @name Phaser.GameObjects.Star#points\r\n     * @type {integer}\r\n     * @default 5\r\n     * @since 3.13.0\r\n     */\r\n    points: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._points;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._points = value;\r\n\r\n            this.updateData();\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The inner radius of the Star shape.\r\n     *\r\n     * @name Phaser.GameObjects.Star#innerRadius\r\n     * @type {number}\r\n     * @default 32\r\n     * @since 3.13.0\r\n     */\r\n    innerRadius: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._innerRadius;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._innerRadius = value;\r\n\r\n            this.updateData();\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The outer radius of the Star shape.\r\n     *\r\n     * @name Phaser.GameObjects.Star#outerRadius\r\n     * @type {number}\r\n     * @default 64\r\n     * @since 3.13.0\r\n     */\r\n    outerRadius: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._outerRadius;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._outerRadius = value;\r\n\r\n            this.updateData();\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Internal method that updates the data and path values.\r\n     *\r\n     * @method Phaser.GameObjects.Star#updateData\r\n     * @private\r\n     * @since 3.13.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    updateData: function ()\r\n    {\r\n        var path = [];\r\n\r\n        var points = this._points;\r\n        var innerRadius = this._innerRadius;\r\n        var outerRadius = this._outerRadius;\r\n\r\n        var rot = Math.PI / 2 * 3;\r\n        var step = Math.PI / points;\r\n\r\n        //  So origin 0.5 = the center of the star\r\n        var x = outerRadius;\r\n        var y = outerRadius;\r\n    \r\n        path.push(x, y + -outerRadius);\r\n\r\n        for (var i = 0; i < points; i++)\r\n        {\r\n            path.push(x + Math.cos(rot) * outerRadius, y + Math.sin(rot) * outerRadius);\r\n\r\n            rot += step;\r\n\r\n            path.push(x + Math.cos(rot) * innerRadius, y + Math.sin(rot) * innerRadius);\r\n    \r\n            rot += step;\r\n        }\r\n\r\n        path.push(x, y + -outerRadius);\r\n\r\n        this.pathIndexes = Earcut(path);\r\n        this.pathData = path;\r\n\r\n        return this;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Star;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","StarRender","Class","Earcut","Shape","Star","Extends","Mixins","initialize","scene","x","y","points","innerRadius","outerRadius","fillColor","fillAlpha","undefined","call","_points","_innerRadius","_outerRadius","setPosition","setSize","setFillStyle","updateDisplayOrigin","updateData","setPoints","value","setInnerRadius","setOuterRadius","get","set","path","rot","Math","PI","step","push","i","cos","sin","pathIndexes","pathData"]
}
