shadow$provide.module$node_modules$$formatjs$intl$src$list=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.formatList=void 0;var utils_1=require("module$node_modules$$formatjs$intl$src$utils"),intl_messageformat_1=require("module$node_modules$intl_messageformat$index"),error_1=require("module$node_modules$$formatjs$intl$src$error"),LIST_FORMAT_OPTIONS=["localeMatcher","type","style"],now=Date.now();exports.formatList=function(_a,getListFormat,
values,options){var locale=_a.locale;_a=_a.onError;void 0===options&&(options={});Intl.ListFormat||_a(new intl_messageformat_1.FormatError('Intl.ListFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-listformat"\n',"MISSING_INTL_API"));options=utils_1.filterProps(options,LIST_FORMAT_OPTIONS);try{var richValues_1={},serializedValues=values.map(function(v,i){return"object"===typeof v?(i=now+"_"+i+"_"+now,richValues_1[i]=v,i):String(v)});return Object.keys(richValues_1).length?
getListFormat(locale,options).formatToParts(serializedValues).reduce(function(all,el){el=el.value;richValues_1[el]?all.push(richValues_1[el]):"string"===typeof all[all.length-1]?all[all.length-1]+=el:all.push(el);return all},[]):getListFormat(locale,options).format(serializedValues)}catch(e){_a(new error_1.IntlError("FORMAT_ERROR","Error formatting list.",e))}return values}}
//# sourceMappingURL=module$node_modules$$formatjs$intl$src$list.js.map
