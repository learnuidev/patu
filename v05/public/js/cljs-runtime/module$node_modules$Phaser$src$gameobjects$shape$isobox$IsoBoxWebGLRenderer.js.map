{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$shape$isobox$IsoBoxWebGLRenderer.js",
"lineCount":6,
"mappings":"AAAAA,cAAA,4EAAA,CAAgG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOxI,IAAIC,MAAQH,OAAA,CAAQ,qDAAR,CA2IZC,OAAAC,QAAA,CA1H0BE,QAAS,CAACC,QAAD,CAAWC,GAAX,CAAgBC,uBAAhB,CAAyCC,MAAzC,CAAiDC,YAAjD,CACnC,CACQC,uBAAAA,CAAW,IAAAA,SAEf,KAAIC,UAAYD,uBAAAE,aAAhB,CACIC,YAAcH,uBAAAI,aADlB,CAEIC,WAAaL,uBAAAM,aAEjBX,SAAAY,YAAA,CAAqBP,uBAArB,CAEAG;WAAAK,UAAA,CAAsBZ,GAAAa,EAAtB,CAA6Bb,GAAAc,EAA7B,CAAoCd,GAAAe,SAApC,CAAkDf,GAAAgB,OAAlD,CAA8DhB,GAAAiB,OAA9D,CAEAZ,UAAAa,SAAA,CAAmBhB,MAAAiB,OAAnB,CAEIhB,aAAJ,EAGIE,SAAAe,mBAAA,CAA6BjB,YAA7B,CAA2C,CAACD,MAAAmB,QAA5C,CAA6DrB,GAAAsB,cAA7D,CAAgF,CAACpB,MAAAqB,QAAjF,CAAkGvB,GAAAwB,cAAlG,CAIA,CADAjB,WAAAkB,EACA,CADgBzB,GAAAa,EAChB,CAAAN,WAAAmB,EAAA,CAAgB1B,GAAAc,EAPpB,GAWIP,WAAAkB,EACA,EADiBvB,MAAAmB,QACjB,CADkCrB,GAAAsB,cAClC,CAAAf,WAAAmB,EAAA,EAAiBxB,MAAAqB,QAAjB,CAAkCvB,GAAAwB,cAZtC,CAeAnB,UAAAsB,SAAA,CAAmBpB,WAAnB,CAAgCE,UAAhC,CAEImB,UAAAA,CAAO5B,GAAA6B,MACPC,SAAAA,CAAS9B,GAAA8B,OAETC,aAAAA,CAAQH,SAARG,CAAe,CACPH,UAARI,EAAehC,GAAAiC,WAEfC;MAAAA,CAAQhC,MAAAgC,MAARA,CAAuBlC,GAAAkC,MAE3B,IAAKlC,GAAAmC,SAAL,CAAA,CAqBA,GAAInC,GAAAoC,QAAJ,CACA,CACIC,WAAA,CAAOxC,KAAAyC,+BAAA,CAAqCtC,GAAAuC,QAArC,CAAkDL,MAAlD,CAEP,KAAAM,GAAK/B,UAAAgC,KAAA,CAAgB,CAACV,YAAjB,CAAwB,CAACD,QAAzB,CACL,KAAAY,GAAKjC,UAAAkC,KAAA,CAAgB,CAACZ,YAAjB,CAAwB,CAACD,QAAzB,CAEL,KAAAc,GAAKnC,UAAAgC,KAAA,CAAgB,CAAhB,CAAmB,CAACT,SAApB,CAA4BF,QAA5B,CACL,KAAAe,GAAKpC,UAAAkC,KAAA,CAAgB,CAAhB,CAAmB,CAACX,SAApB,CAA4BF,QAA5B,CAEL,KAAAgB,GAAKrC,UAAAgC,KAAA,CAAgBV,YAAhB,CAAuB,CAACD,QAAxB,CACL,KAAAiB,GAAKtC,UAAAkC,KAAA,CAAgBZ,YAAhB,CAAuB,CAACD,QAAxB,CAEL,KAAAkB,GAAKvC,UAAAgC,KAAA,CAAgB,CAAhB,CAAmBT,SAAnB,CAA2BF,QAA3B,CACL,KAAAmB,GAAKxC,UAAAkC,KAAA,CAAgB,CAAhB,CAAmBX,SAAnB,CAA2BF,QAA3B,CAEL1B;uBAAA8C,UAAA,CAAmBV,EAAnB,CAAuBE,EAAvB,CAA2BE,EAA3B,CAA+BC,EAA/B,CAAmCC,EAAnC,CAAuCC,EAAvC,CAA2CC,EAA3C,CAA+CC,EAA/C,CAAmD,CAAnD,CAAsD,CAAtD,CAAyD,CAAzD,CAA4D,CAA5D,CAA+DZ,WAA/D,CAAqEA,WAArE,CAA2EA,WAA3E,CAAiFA,WAAjF,CAAuF,CAAvF,CAfJ,CAoBIrC,GAAAmD,SAAJ,GAEId,WAcA,CAdOxC,KAAAyC,+BAAA,CAAqCtC,GAAAoD,SAArC,CAAmDlB,MAAnD,CAcP,CAZAM,EAYA,CAZK/B,UAAAgC,KAAA,CAAgB,CAACV,YAAjB,CAAwB,CAAxB,CAYL,CAXAW,EAWA,CAXKjC,UAAAkC,KAAA,CAAgB,CAACZ,YAAjB,CAAwB,CAAxB,CAWL,CATAa,EASA,CATKnC,UAAAgC,KAAA,CAAgB,CAAhB,CAAmBT,SAAnB,CASL,CARAa,EAQA,CARKpC,UAAAkC,KAAA,CAAgB,CAAhB,CAAmBX,SAAnB,CAQL,CANAc,EAMA,CANKrC,UAAAgC,KAAA,CAAgB,CAAhB,CAAmBT,SAAnB,CAA2BF,QAA3B,CAML,CALAiB,EAKA,CALKtC,UAAAkC,KAAA,CAAgB,CAAhB,CAAmBX,SAAnB,CAA2BF,QAA3B,CAKL,CAHAkB,EAGA,CAHKvC,UAAAgC,KAAA,CAAgB,CAACV,YAAjB,CAAwB,CAACD,QAAzB,CAGL,CAFAmB,EAEA,CAFKxC,UAAAkC,KAAA,CAAgB,CAACZ,YAAjB,CAAwB,CAACD,QAAzB,CAEL;AAAA1B,uBAAA8C,UAAA,CAAmBV,EAAnB,CAAuBE,EAAvB,CAA2BE,EAA3B,CAA+BC,EAA/B,CAAmCC,EAAnC,CAAuCC,EAAvC,CAA2CC,EAA3C,CAA+CC,EAA/C,CAAmD,CAAnD,CAAsD,CAAtD,CAAyD,CAAzD,CAA4D,CAA5D,CAA+DZ,WAA/D,CAAqEA,WAArE,CAA2EA,WAA3E,CAAiFA,WAAjF,CAAuF,CAAvF,CAhBJ,CAqBIrC,IAAAqD,UAAJ,GAEIhB,WAcA,CAdOxC,KAAAyC,+BAAA,CAAqCtC,GAAAsD,UAArC,CAAoDpB,MAApD,CAcP,CAZAM,EAYA,CAZK/B,UAAAgC,KAAA,CAAgBV,YAAhB,CAAuB,CAAvB,CAYL,CAXAW,EAWA,CAXKjC,UAAAkC,KAAA,CAAgBZ,YAAhB,CAAuB,CAAvB,CAWL,CATAa,EASA,CATKnC,UAAAgC,KAAA,CAAgB,CAAhB,CAAmBT,SAAnB,CASL,CARAa,EAQA,CARKpC,UAAAkC,KAAA,CAAgB,CAAhB,CAAmBX,SAAnB,CAQL,CANAc,EAMA,CANKrC,UAAAgC,KAAA,CAAgB,CAAhB,CAAmBT,SAAnB,CAA2BF,QAA3B,CAML,CALAiB,EAKA,CALKtC,UAAAkC,KAAA,CAAgB,CAAhB,CAAmBX,SAAnB,CAA2BF,QAA3B,CAKL,CAHAkB,EAGA,CAHKvC,UAAAgC,KAAA,CAAgBV,YAAhB,CAAuB,CAACD,QAAxB,CAGL,CAFAmB,EAEA,CAFKxC,UAAAkC,KAAA,CAAgBZ,YAAhB,CAAuB,CAACD,QAAxB,CAEL;AAAA1B,uBAAA8C,UAAA,CAAmBV,EAAnB,CAAuBE,EAAvB,CAA2BE,EAA3B,CAA+BC,EAA/B,CAAmCC,EAAnC,CAAuCC,EAAvC,CAA2CC,EAA3C,CAA+CC,EAA/C,CAAmD,CAAnD,CAAsD,CAAtD,CAAyD,CAAzD,CAA4D,CAA5D,CAA+DZ,WAA/D,CAAqEA,WAArE,CAA2EA,WAA3E,CAAiFA,WAAjF,CAAuF,CAAvF,CAhBJ,CA/DA,CAtCJ,CAzBwI;",
"sources":["node_modules/Phaser/src/gameobjects/shape/isobox/IsoBoxWebGLRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$shape$isobox$IsoBoxWebGLRenderer\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = require('../../../renderer/webgl/Utils');\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.IsoBox#renderWebGL\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.IsoBox} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar IsoBoxWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    var pipeline = this.pipeline;\r\n\r\n    var camMatrix = pipeline._tempMatrix1;\r\n    var shapeMatrix = pipeline._tempMatrix2;\r\n    var calcMatrix = pipeline._tempMatrix3;\r\n\r\n    renderer.setPipeline(pipeline);\r\n\r\n    shapeMatrix.applyITRS(src.x, src.y, src.rotation, src.scaleX, src.scaleY);\r\n\r\n    camMatrix.copyFrom(camera.matrix);\r\n\r\n    if (parentMatrix)\r\n    {\r\n        //  Multiply the camera by the parent matrix\r\n        camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY);\r\n\r\n        //  Undo the camera scroll\r\n        shapeMatrix.e = src.x;\r\n        shapeMatrix.f = src.y;\r\n    }\r\n    else\r\n    {\r\n        shapeMatrix.e -= camera.scrollX * src.scrollFactorX;\r\n        shapeMatrix.f -= camera.scrollY * src.scrollFactorY;\r\n    }\r\n\r\n    camMatrix.multiply(shapeMatrix, calcMatrix);\r\n\r\n    var size = src.width;\r\n    var height = src.height;\r\n\r\n    var sizeA = size / 2;\r\n    var sizeB = size / src.projection;\r\n\r\n    var alpha = camera.alpha * src.alpha;\r\n\r\n    if (!src.isFilled)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var tint;\r\n\r\n    var x0;\r\n    var y0;\r\n\r\n    var x1;\r\n    var y1;\r\n\r\n    var x2;\r\n    var y2;\r\n\r\n    var x3;\r\n    var y3;\r\n\r\n    //  Top Face\r\n\r\n    if (src.showTop)\r\n    {\r\n        tint = Utils.getTintAppendFloatAlphaAndSwap(src.fillTop, alpha);\r\n\r\n        x0 = calcMatrix.getX(-sizeA, -height);\r\n        y0 = calcMatrix.getY(-sizeA, -height);\r\n    \r\n        x1 = calcMatrix.getX(0, -sizeB - height);\r\n        y1 = calcMatrix.getY(0, -sizeB - height);\r\n    \r\n        x2 = calcMatrix.getX(sizeA, -height);\r\n        y2 = calcMatrix.getY(sizeA, -height);\r\n    \r\n        x3 = calcMatrix.getX(0, sizeB - height);\r\n        y3 = calcMatrix.getY(0, sizeB - height);\r\n    \r\n        pipeline.batchQuad(x0, y0, x1, y1, x2, y2, x3, y3, 0, 0, 1, 1, tint, tint, tint, tint, 2);\r\n    }\r\n\r\n    //  Left Face\r\n\r\n    if (src.showLeft)\r\n    {\r\n        tint = Utils.getTintAppendFloatAlphaAndSwap(src.fillLeft, alpha);\r\n\r\n        x0 = calcMatrix.getX(-sizeA, 0);\r\n        y0 = calcMatrix.getY(-sizeA, 0);\r\n    \r\n        x1 = calcMatrix.getX(0, sizeB);\r\n        y1 = calcMatrix.getY(0, sizeB);\r\n    \r\n        x2 = calcMatrix.getX(0, sizeB - height);\r\n        y2 = calcMatrix.getY(0, sizeB - height);\r\n    \r\n        x3 = calcMatrix.getX(-sizeA, -height);\r\n        y3 = calcMatrix.getY(-sizeA, -height);\r\n    \r\n        pipeline.batchQuad(x0, y0, x1, y1, x2, y2, x3, y3, 0, 0, 1, 1, tint, tint, tint, tint, 2);\r\n    }\r\n\r\n    //  Right Face\r\n\r\n    if (src.showRight)\r\n    {\r\n        tint = Utils.getTintAppendFloatAlphaAndSwap(src.fillRight, alpha);\r\n\r\n        x0 = calcMatrix.getX(sizeA, 0);\r\n        y0 = calcMatrix.getY(sizeA, 0);\r\n    \r\n        x1 = calcMatrix.getX(0, sizeB);\r\n        y1 = calcMatrix.getY(0, sizeB);\r\n    \r\n        x2 = calcMatrix.getX(0, sizeB - height);\r\n        y2 = calcMatrix.getY(0, sizeB - height);\r\n    \r\n        x3 = calcMatrix.getX(sizeA, -height);\r\n        y3 = calcMatrix.getY(sizeA, -height);\r\n    \r\n        pipeline.batchQuad(x0, y0, x1, y1, x2, y2, x3, y3, 0, 0, 1, 1, tint, tint, tint, tint, 2);\r\n    }\r\n};\r\n\r\nmodule.exports = IsoBoxWebGLRenderer;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Utils","IsoBoxWebGLRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","pipeline","camMatrix","_tempMatrix1","shapeMatrix","_tempMatrix2","calcMatrix","_tempMatrix3","setPipeline","applyITRS","x","y","rotation","scaleX","scaleY","copyFrom","matrix","multiplyWithOffset","scrollX","scrollFactorX","scrollY","scrollFactorY","e","f","multiply","size","width","height","sizeA","sizeB","projection","alpha","isFilled","showTop","tint","getTintAppendFloatAlphaAndSwap","fillTop","x0","getX","y0","getY","x1","y1","x2","y2","x3","y3","batchQuad","showLeft","fillLeft","showRight","fillRight"]
}
