{
"version":3,
"file":"module$node_modules$Phaser$src$actions$PlaceOnEllipse.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA8ClHD,MAAAC,QAAA,CAtBqBC,QAAS,CAACC,KAAD,CAAQC,OAAR,CAAiBC,UAAjB,CAA6BC,QAA7B,CAC9B,CACuBC,IAAAA,EAAnB,GAAIF,UAAJ,GAAgCA,UAAhC,CAA6C,CAA7C,CACiBE,KAAAA,EAAjB,GAAID,QAAJ,GAA8BA,QAA9B,CAAyC,IAAzC,CAEA,KAAIE,MAAQH,UACRI,WAAAA,EAAaH,QAAbG,CAAwBJ,UAAxBI,EAAsCN,KAAAO,OAEtCC,SAAAA,CAAIP,OAAAQ,MAAJD,CAAoB,CAGxB,KAFA,IAAIE,EAAIT,OAAAU,OAAJD,CAAqB,CAAzB,CAESE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBZ,KAAAO,OAApB,CAAkCK,CAAA,EAAlC,CAEIZ,KAAA,CAAMY,CAAN,CAAAC,EAGA,CAHaZ,OAAAY,EAGb,CAHyBL,QAGzB,CAH6BM,IAAAC,IAAA,CAASV,KAAT,CAG7B,CAFAL,KAAA,CAAMY,CAAN,CAAAI,EAEA,CAFaf,OAAAe,EAEb,CAFyBN,CAEzB,CAF6BI,IAAAG,IAAA,CAASZ,KAAT,CAE7B,CAAAA,KAAA,EAASC,UAGb,OAAON,MAlBX,CAzBkH;",
"sources":["node_modules/Phaser/src/actions/PlaceOnEllipse.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$actions$PlaceOnEllipse\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Takes an array of Game Objects and positions them on evenly spaced points around the perimeter of an Ellipse.\r\n * \r\n * If you wish to pass a `Phaser.GameObjects.Ellipse` Shape to this function, you should pass its `geom` property.\r\n *\r\n * @function Phaser.Actions.PlaceOnEllipse\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to position the Game Objects on.\r\n * @param {number} [startAngle=0] - Optional angle to start position from, in radians.\r\n * @param {number} [endAngle=6.28] - Optional angle to stop position at, in radians.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\r\nvar PlaceOnEllipse = function (items, ellipse, startAngle, endAngle)\r\n{\r\n    if (startAngle === undefined) { startAngle = 0; }\r\n    if (endAngle === undefined) { endAngle = 6.28; }\r\n\r\n    var angle = startAngle;\r\n    var angleStep = (endAngle - startAngle) / items.length;\r\n\r\n    var a = ellipse.width / 2;\r\n    var b = ellipse.height / 2;\r\n\r\n    for (var i = 0; i < items.length; i++)\r\n    {\r\n        items[i].x = ellipse.x + a * Math.cos(angle);\r\n        items[i].y = ellipse.y + b * Math.sin(angle);\r\n\r\n        angle += angleStep;\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = PlaceOnEllipse;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","PlaceOnEllipse","items","ellipse","startAngle","endAngle","undefined","angle","angleStep","length","a","width","b","height","i","x","Math","cos","y","sin"]
}
