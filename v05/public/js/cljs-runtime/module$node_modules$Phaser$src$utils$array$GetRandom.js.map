{
"version":3,
"file":"module$node_modules$Phaser$src$utils$array$GetRandom.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA6BjHD,MAAAC,QAAA,CAVgBC,QAAS,CAACC,KAAD,CAAQC,UAAR,CAAoBC,MAApB,CACzB,CACuBC,IAAAA,EAAnB,GAAIF,UAAJ,GAAgCA,UAAhC,CAA6C,CAA7C,CACeE,KAAAA,EAAf,GAAID,MAAJ,GAA4BA,MAA5B,CAAqCF,KAAAE,OAArC,CAEkBD,WAAdG,EAA2BC,IAAAC,MAAA,CAAWD,IAAAE,OAAA,EAAX,CAA2BL,MAA3B,CAE/B,OAA+BC,KAAAA,EAAxB,GAACH,KAAA,CAAMI,UAAN,CAAD,CAAqC,IAArC,CAA4CJ,KAAA,CAAMI,UAAN,CANvD,CApBiH;",
"sources":["node_modules/Phaser/src/utils/array/GetRandom.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$array$GetRandom\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Returns a Random element from the array.\r\n *\r\n * @function Phaser.Utils.Array.GetRandom\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to select the random entry from.\r\n * @param {integer} [startIndex=0] - An optional start index.\r\n * @param {integer} [length=array.length] - An optional length, the total number of elements (from the startIndex) to choose from.\r\n *\r\n * @return {*} A random element from the array, or `null` if no element could be found in the range given.\r\n */\r\nvar GetRandom = function (array, startIndex, length)\r\n{\r\n    if (startIndex === undefined) { startIndex = 0; }\r\n    if (length === undefined) { length = array.length; }\r\n\r\n    var randomIndex = startIndex + Math.floor(Math.random() * length);\r\n\r\n    return (array[randomIndex] === undefined) ? null : array[randomIndex];\r\n};\r\n\r\nmodule.exports = GetRandom;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetRandom","array","startIndex","length","undefined","randomIndex","Math","floor","random"]
}
