shadow$provide.module$node_modules$Phaser$src$tilemaps$parsers$Parse2DArray=function(global,require,module,exports){var Formats=require("module$node_modules$Phaser$src$tilemaps$Formats"),LayerData=require("module$node_modules$Phaser$src$tilemaps$mapdata$LayerData"),MapData=require("module$node_modules$Phaser$src$tilemaps$mapdata$MapData"),Tile=require("module$node_modules$Phaser$src$tilemaps$Tile");module.exports=function(name,data,tileWidth,tileHeight,insertNull){var layerData=new LayerData({tileWidth:tileWidth,
tileHeight:tileHeight});name=new MapData({name:name,tileWidth:tileWidth,tileHeight:tileHeight,format:Formats.ARRAY_2D,layers:[layerData]});for(var tiles=[],height=data.length,width=0,y=0;y<data.length;y++){tiles[y]=[];for(var row=data[y],x=0;x<row.length;x++){var tileIndex=parseInt(row[x],10);isNaN(tileIndex)||-1===tileIndex?tiles[y][x]=insertNull?null:new Tile(layerData,-1,x,y,tileWidth,tileHeight):tiles[y][x]=new Tile(layerData,tileIndex,x,y,tileWidth,tileHeight)}0===width&&(width=row.length)}name.width=
layerData.width=width;name.height=layerData.height=height;name.widthInPixels=layerData.widthInPixels=width*tileWidth;name.heightInPixels=layerData.heightInPixels=height*tileHeight;layerData.data=tiles;return name}}
//# sourceMappingURL=module$node_modules$Phaser$src$tilemaps$parsers$Parse2DArray.js.map
