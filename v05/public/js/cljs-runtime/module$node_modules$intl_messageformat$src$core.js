shadow$provide.module$node_modules$intl_messageformat$src$core=function(global,require,module,exports){function mergeConfig(c1,c2){return c2?tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({},c1||{}),c2||{}),Object.keys(c1).reduce(function(all,k){all[k]=tslib_1.__assign(tslib_1.__assign({},c1[k]),c2[k]||{});return all},{})):c1}function mergeConfigs(defaultConfig,configs){return configs?Object.keys(defaultConfig).reduce(function(all,k){all[k]=mergeConfig(defaultConfig[k],configs[k]);return all},
tslib_1.__assign({},defaultConfig)):defaultConfig}function createFastMemoizeCache(store){return{create:function(){return{has:function(key){return key in store},get:function(key){return store[key]},set:function(key,value){store[key]=value}}}}}function createDefaultFormatters(cache){void 0===cache&&(cache={number:{},dateTime:{},pluralRules:{}});return{getNumberFormat:memoizeIntl(function(){for(var _a,args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return new ((_a=Intl.NumberFormat).bind.apply(_a,
tslib_1.__spreadArrays([void 0],args)))},{cache:createFastMemoizeCache(cache.number),strategy:memoizeIntl.strategies.variadic}),getDateTimeFormat:memoizeIntl(function(){for(var _a,args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return new ((_a=Intl.DateTimeFormat).bind.apply(_a,tslib_1.__spreadArrays([void 0],args)))},{cache:createFastMemoizeCache(cache.dateTime),strategy:memoizeIntl.strategies.variadic}),getPluralRules:memoizeIntl(function(){for(var _a,args=[],_i=0;_i<arguments.length;_i++)args[_i]=
arguments[_i];return new ((_a=Intl.PluralRules).bind.apply(_a,tslib_1.__spreadArrays([void 0],args)))},{cache:createFastMemoizeCache(cache.pluralRules),strategy:memoizeIntl.strategies.variadic})}}Object.defineProperty(exports,"__esModule",{value:!0});exports.IntlMessageFormat=void 0;var tslib_1=require("module$node_modules$tslib$tslib"),intl_messageformat_parser_1=require("module$node_modules$intl_messageformat_parser$index");global=tslib_1.__importStar(require("module$node_modules$fast_memoize$src$index"));
var formatters_1=require("module$node_modules$intl_messageformat$src$formatters"),memoizeIntl=global.default||global;require=function(){function IntlMessageFormat(message,locales,overrideFormats,opts){var _this=this;void 0===locales&&(locales=IntlMessageFormat.defaultLocale);this.formatterCache={number:{},dateTime:{},pluralRules:{}};this.format=function(values){values=_this.formatToParts(values);if(1===values.length)return values[0].value;values=values.reduce(function(all,part){all.length&&0===part.type&&
"string"===typeof all[all.length-1]?all[all.length-1]+=part.value:all.push(part.value);return all},[]);return 1>=values.length?values[0]||"":values};this.formatToParts=function(values){return formatters_1.formatToParts(_this.ast,_this.locales,_this.formatters,_this.formats,values,void 0,_this.message)};this.resolvedOptions=function(){return{locale:Intl.NumberFormat.supportedLocalesOf(_this.locales)[0]}};this.getAst=function(){return _this.ast};if("string"===typeof message){this.message=message;if(!IntlMessageFormat.__parse)throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
this.ast=IntlMessageFormat.__parse(message,{normalizeHashtagInPlural:!1,ignoreTag:null===opts||void 0===opts?void 0:opts.ignoreTag})}else this.ast=message;if(!Array.isArray(this.ast))throw new TypeError("A message must be provided as a String or AST.");this.formats=mergeConfigs(IntlMessageFormat.formats,overrideFormats);this.locales=locales;this.formatters=opts&&opts.formatters||createDefaultFormatters(this.formatterCache)}Object.defineProperty(IntlMessageFormat,"defaultLocale",{get:function(){IntlMessageFormat.memoizedDefaultLocale||
(IntlMessageFormat.memoizedDefaultLocale=(new Intl.NumberFormat).resolvedOptions().locale);return IntlMessageFormat.memoizedDefaultLocale},enumerable:!1,configurable:!0});IntlMessageFormat.memoizedDefaultLocale=null;IntlMessageFormat.__parse=intl_messageformat_parser_1.parse;IntlMessageFormat.formats={number:{currency:{style:"currency"},percent:{style:"percent"}},date:{short:{month:"numeric",day:"numeric",year:"2-digit"},medium:{month:"short",day:"numeric",year:"numeric"},long:{month:"long",day:"numeric",
year:"numeric"},full:{weekday:"long",month:"long",day:"numeric",year:"numeric"}},time:{short:{hour:"numeric",minute:"numeric"},medium:{hour:"numeric",minute:"numeric",second:"numeric"},long:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"},full:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"}}};return IntlMessageFormat}();exports.IntlMessageFormat=require}
//# sourceMappingURL=module$node_modules$intl_messageformat$src$core.js.map
