{
"version":3,
"file":"module$node_modules$Phaser$src$math$MaxAdd.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwBvGD,MAAAC,QAAA,CALaC,QAAS,CAACC,KAAD,CAAQC,MAAR,CAAgBC,GAAhB,CACtB,CACI,MAAOC,KAAAC,IAAA,CAASJ,KAAT,CAAiBC,MAAjB,CAAyBC,GAAzB,CADX,CApBuG;",
"sources":["node_modules/Phaser/src/math/MaxAdd.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$MaxAdd\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Add an `amount` to a `value`, limiting the maximum result to `max`.\r\n *\r\n * @function Phaser.Math.MaxAdd\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to add to.\r\n * @param {number} amount - The amount to add.\r\n * @param {number} max - The maximum value to return.\r\n *\r\n * @return {number} The resulting value.\r\n */\r\nvar MaxAdd = function (value, amount, max)\r\n{\r\n    return Math.min(value + amount, max);\r\n};\r\n\r\nmodule.exports = MaxAdd;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","MaxAdd","value","amount","max","Math","min"]
}
