{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$graphics$GraphicsCanvasRenderer.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/Phaser/src/gameobjects/graphics/GraphicsCanvasRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$graphics$GraphicsCanvasRenderer\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Commands = require('./Commands');\r\nvar SetTransform = require('../../renderer/canvas/utils/SetTransform');\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Graphics#renderCanvas\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Graphics} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n * @param {CanvasRenderingContext2D} [renderTargetCtx] - The target rendering context.\r\n * @param {boolean} allowClip - If `true` then path operations will be used instead of fill operations.\r\n */\r\nvar GraphicsCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix, renderTargetCtx, allowClip)\r\n{\r\n    var commandBuffer = src.commandBuffer;\r\n    var commandBufferLength = commandBuffer.length;\r\n\r\n    var ctx = renderTargetCtx || renderer.currentContext;\r\n\r\n    if (commandBufferLength === 0 || !SetTransform(renderer, ctx, src, camera, parentMatrix))\r\n    {\r\n        return;\r\n    }\r\n\r\n    var lineAlpha = 1;\r\n    var fillAlpha = 1;\r\n    var lineColor = 0;\r\n    var fillColor = 0;\r\n    var lineWidth = 1;\r\n    var red = 0;\r\n    var green = 0;\r\n    var blue = 0;\r\n\r\n    ctx.save();\r\n\r\n    //  Reset any currently active paths\r\n    ctx.beginPath();\r\n\r\n    for (var index = 0; index < commandBufferLength; ++index)\r\n    {\r\n        var commandID = commandBuffer[index];\r\n\r\n        switch (commandID)\r\n        {\r\n            case Commands.ARC:\r\n                ctx.arc(\r\n                    commandBuffer[index + 1],\r\n                    commandBuffer[index + 2],\r\n                    commandBuffer[index + 3],\r\n                    commandBuffer[index + 4],\r\n                    commandBuffer[index + 5],\r\n                    commandBuffer[index + 6]\r\n                );\r\n\r\n                //  +7 because overshoot is the 7th value, not used in Canvas\r\n                index += 7;\r\n                break;\r\n\r\n            case Commands.LINE_STYLE:\r\n                lineWidth = commandBuffer[index + 1];\r\n                lineColor = commandBuffer[index + 2];\r\n                lineAlpha = commandBuffer[index + 3];\r\n                red = ((lineColor & 0xFF0000) >>> 16);\r\n                green = ((lineColor & 0xFF00) >>> 8);\r\n                blue = (lineColor & 0xFF);\r\n                ctx.strokeStyle = 'rgba(' + red + ',' + green + ',' + blue + ',' + lineAlpha + ')';\r\n                ctx.lineWidth = lineWidth;\r\n                index += 3;\r\n                break;\r\n\r\n            case Commands.FILL_STYLE:\r\n                fillColor = commandBuffer[index + 1];\r\n                fillAlpha = commandBuffer[index + 2];\r\n                red = ((fillColor & 0xFF0000) >>> 16);\r\n                green = ((fillColor & 0xFF00) >>> 8);\r\n                blue = (fillColor & 0xFF);\r\n                ctx.fillStyle = 'rgba(' + red + ',' + green + ',' + blue + ',' + fillAlpha + ')';\r\n                index += 2;\r\n                break;\r\n\r\n            case Commands.BEGIN_PATH:\r\n                ctx.beginPath();\r\n                break;\r\n\r\n            case Commands.CLOSE_PATH:\r\n                ctx.closePath();\r\n                break;\r\n\r\n            case Commands.FILL_PATH:\r\n                if (!allowClip)\r\n                {\r\n                    ctx.fill();\r\n                }\r\n                break;\r\n\r\n            case Commands.STROKE_PATH:\r\n                if (!allowClip)\r\n                {\r\n                    ctx.stroke();\r\n                }\r\n                break;\r\n\r\n            case Commands.FILL_RECT:\r\n                if (!allowClip)\r\n                {\r\n                    ctx.fillRect(\r\n                        commandBuffer[index + 1],\r\n                        commandBuffer[index + 2],\r\n                        commandBuffer[index + 3],\r\n                        commandBuffer[index + 4]\r\n                    );\r\n                }\r\n                else\r\n                {\r\n                    ctx.rect(\r\n                        commandBuffer[index + 1],\r\n                        commandBuffer[index + 2],\r\n                        commandBuffer[index + 3],\r\n                        commandBuffer[index + 4]\r\n                    );\r\n                }\r\n                index += 4;\r\n                break;\r\n\r\n            case Commands.FILL_TRIANGLE:\r\n                ctx.beginPath();\r\n                ctx.moveTo(commandBuffer[index + 1], commandBuffer[index + 2]);\r\n                ctx.lineTo(commandBuffer[index + 3], commandBuffer[index + 4]);\r\n                ctx.lineTo(commandBuffer[index + 5], commandBuffer[index + 6]);\r\n                ctx.closePath();\r\n                if (!allowClip)\r\n                {\r\n                    ctx.fill();\r\n                }\r\n                index += 6;\r\n                break;\r\n\r\n            case Commands.STROKE_TRIANGLE:\r\n                ctx.beginPath();\r\n                ctx.moveTo(commandBuffer[index + 1], commandBuffer[index + 2]);\r\n                ctx.lineTo(commandBuffer[index + 3], commandBuffer[index + 4]);\r\n                ctx.lineTo(commandBuffer[index + 5], commandBuffer[index + 6]);\r\n                ctx.closePath();\r\n                if (!allowClip)\r\n                {\r\n                    ctx.stroke();\r\n                }\r\n                index += 6;\r\n                break;\r\n\r\n            case Commands.LINE_TO:\r\n                ctx.lineTo(\r\n                    commandBuffer[index + 1],\r\n                    commandBuffer[index + 2]\r\n                );\r\n                index += 2;\r\n                break;\r\n\r\n            case Commands.MOVE_TO:\r\n                ctx.moveTo(\r\n                    commandBuffer[index + 1],\r\n                    commandBuffer[index + 2]\r\n                );\r\n                index += 2;\r\n                break;\r\n\r\n            case Commands.LINE_FX_TO:\r\n                ctx.lineTo(\r\n                    commandBuffer[index + 1],\r\n                    commandBuffer[index + 2]\r\n                );\r\n                index += 5;\r\n                break;\r\n\r\n            case Commands.MOVE_FX_TO:\r\n                ctx.moveTo(\r\n                    commandBuffer[index + 1],\r\n                    commandBuffer[index + 2]\r\n                );\r\n                index += 5;\r\n                break;\r\n\r\n            case Commands.SAVE:\r\n                ctx.save();\r\n                break;\r\n\r\n            case Commands.RESTORE:\r\n                ctx.restore();\r\n                break;\r\n\r\n            case Commands.TRANSLATE:\r\n                ctx.translate(\r\n                    commandBuffer[index + 1],\r\n                    commandBuffer[index + 2]\r\n                );\r\n                index += 2;\r\n                break;\r\n\r\n            case Commands.SCALE:\r\n                ctx.scale(\r\n                    commandBuffer[index + 1],\r\n                    commandBuffer[index + 2]\r\n                );\r\n                index += 2;\r\n                break;\r\n\r\n            case Commands.ROTATE:\r\n                ctx.rotate(\r\n                    commandBuffer[index + 1]\r\n                );\r\n                index += 1;\r\n                break;\r\n\r\n            case Commands.GRADIENT_FILL_STYLE:\r\n                index += 5;\r\n                break;\r\n\r\n            case Commands.GRADIENT_LINE_STYLE:\r\n                index += 6;\r\n                break;\r\n\r\n            case Commands.SET_TEXTURE:\r\n                index += 2;\r\n                break;\r\n        }\r\n    }\r\n\r\n    ctx.restore();\r\n};\r\n\r\nmodule.exports = GraphicsCanvasRenderer;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Commands","SetTransform","GraphicsCanvasRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","renderTargetCtx","allowClip","commandBuffer","commandBufferLength","length","ctx","currentContext","save","beginPath","index","commandID","ARC","arc","LINE_STYLE","lineWidth","lineColor","lineAlpha","red","green","strokeStyle","blue","FILL_STYLE","fillColor","fillAlpha","fillStyle","BEGIN_PATH","CLOSE_PATH","closePath","FILL_PATH","fill","STROKE_PATH","stroke","FILL_RECT","rect","fillRect","FILL_TRIANGLE","moveTo","lineTo","STROKE_TRIANGLE","LINE_TO","MOVE_TO","LINE_FX_TO","MOVE_FX_TO","SAVE","RESTORE","restore","TRANSLATE","translate","SCALE","scale","ROTATE","rotate","GRADIENT_FILL_STYLE","GRADIENT_LINE_STYLE","SET_TEXTURE"]
}
