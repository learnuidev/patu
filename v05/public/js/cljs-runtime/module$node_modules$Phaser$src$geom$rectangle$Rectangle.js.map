{
"version":3,
"file":"module$node_modules$Phaser$src$geom$rectangle$Rectangle.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/Phaser/src/geom/rectangle/Rectangle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$rectangle$Rectangle\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Contains = require('./Contains');\r\nvar GetPoint = require('./GetPoint');\r\nvar GetPoints = require('./GetPoints');\r\nvar Line = require('../line/Line');\r\nvar Random = require('./Random');\r\n\r\n/**\r\n * @classdesc\r\n * Encapsulates a 2D rectangle defined by its corner point in the top-left and its extends in x (width) and y (height)\r\n *\r\n * @class Rectangle\r\n * @memberOf Phaser.Geom\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [x=0] - The X coordinate of the top left corner of the Rectangle.\r\n * @param {number} [y=0] - The Y coordinate of the top left corner of the Rectangle.\r\n * @param {number} [width=0] - The width of the Rectangle.\r\n * @param {number} [height=0] - The height of the Rectangle.\r\n */\r\nvar Rectangle = new Class({\r\n\r\n    initialize:\r\n\r\n    function Rectangle (x, y, width, height)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (width === undefined) { width = 0; }\r\n        if (height === undefined) { height = 0; }\r\n\r\n        /**\r\n         * The X coordinate of the top left corner of the Rectangle.\r\n         *\r\n         * @name Phaser.Geom.Rectangle#x\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.x = x;\r\n\r\n        /**\r\n         * The Y coordinate of the top left corner of the Rectangle.\r\n         *\r\n         * @name Phaser.Geom.Rectangle#y\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.y = y;\r\n\r\n        /**\r\n         * The width of the Rectangle, i.e. the distance between its left side (defined by `x`) and its right side.\r\n         *\r\n         * @name Phaser.Geom.Rectangle#width\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.width = width;\r\n\r\n        /**\r\n         * The height of the Rectangle, i.e. the distance between its top side (defined by `y`) and its bottom side.\r\n         *\r\n         * @name Phaser.Geom.Rectangle#height\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.height = height;\r\n    },\r\n\r\n    /**\r\n     * Checks if the given point is inside the Rectangle's bounds.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#contains\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The X coordinate of the point to check.\r\n     * @param {number} y - The Y coordinate of the point to check.\r\n     *\r\n     * @return {boolean} `true` if the point is within the Rectangle's bounds, otherwise `false`.\r\n     */\r\n    contains: function (x, y)\r\n    {\r\n        return Contains(this, x, y);\r\n    },\r\n\r\n    /**\r\n     * Calculates the coordinates of a point at a certain `position` on the Rectangle's perimeter.\r\n     * \r\n     * The `position` is a fraction between 0 and 1 which defines how far into the perimeter the point is.\r\n     * \r\n     * A value of 0 or 1 returns the point at the top left corner of the rectangle, while a value of 0.5 returns the point at the bottom right corner of the rectangle. Values between 0 and 0.5 are on the top or the right side and values between 0.5 and 1 are on the bottom or the left side.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getPoint\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Point} O - [output,$return]\r\n     *\r\n     * @param {number} position - The normalized distance into the Rectangle's perimeter to return.\r\n     * @param {(Phaser.Geom.Point|object)} [output] - An object to update with the `x` and `y` coordinates of the point.\r\n     *\r\n     * @return {(Phaser.Geom.Point|object)} The updated `output` object, or a new Point if no `output` object was given.\r\n     */\r\n    getPoint: function (position, output)\r\n    {\r\n        return GetPoint(this, position, output);\r\n    },\r\n\r\n    /**\r\n     * Returns an array of points from the perimeter of the Rectangle, each spaced out based on the quantity or step required.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getPoints\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Point[]} O - [output,$return]\r\n     *\r\n     * @param {integer} quantity - The number of points to return. Set to `false` or 0 to return an arbitrary number of points (`perimeter / stepRate`) evenly spaced around the Rectangle based on the `stepRate`.\r\n     * @param {number} [stepRate] - If `quantity` is 0, determines the normalized distance between each returned point.\r\n     * @param {(array|Phaser.Geom.Point[])} [output] - An array to which to append the points.\r\n     *\r\n     * @return {(array|Phaser.Geom.Point[])} The modified `output` array, or a new array if none was provided.\r\n     */\r\n    getPoints: function (quantity, stepRate, output)\r\n    {\r\n        return GetPoints(this, quantity, stepRate, output);\r\n    },\r\n\r\n    /**\r\n     * Returns a random point within the Rectangle's bounds.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getRandomPoint\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Point} O - [point,$return]\r\n     *\r\n     * @param {Phaser.Geom.Point} [point] - The object in which to store the `x` and `y` coordinates of the point.\r\n     *\r\n     * @return {Phaser.Geom.Point} The updated `point`, or a new Point if none was provided.\r\n     */\r\n    getRandomPoint: function (point)\r\n    {\r\n        return Random(this, point);\r\n    },\r\n\r\n    /**\r\n     * Sets the position, width, and height of the Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#setTo\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The X coordinate of the top left corner of the Rectangle.\r\n     * @param {number} y - The Y coordinate of the top left corner of the Rectangle.\r\n     * @param {number} width - The width of the Rectangle.\r\n     * @param {number} height - The height of the Rectangle.\r\n     *\r\n     * @return {Phaser.Geom.Rectangle} This Rectangle object.\r\n     */\r\n    setTo: function (x, y, width, height)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the position, width, and height of the Rectangle to 0.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#setEmpty\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Geom.Rectangle} This Rectangle object.\r\n     */\r\n    setEmpty: function ()\r\n    {\r\n        return this.setTo(0, 0, 0, 0);\r\n    },\r\n\r\n    /**\r\n     * Sets the position of the Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#setPosition\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The X coordinate of the top left corner of the Rectangle.\r\n     * @param {number} [y=x] - The Y coordinate of the top left corner of the Rectangle.\r\n     *\r\n     * @return {Phaser.Geom.Rectangle} This Rectangle object.\r\n     */\r\n    setPosition: function (x, y)\r\n    {\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the width and height of the Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#setSize\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} width - The width to set the Rectangle to.\r\n     * @param {number} [height=width] - The height to set the Rectangle to.\r\n     *\r\n     * @return {Phaser.Geom.Rectangle} This Rectangle object.\r\n     */\r\n    setSize: function (width, height)\r\n    {\r\n        if (height === undefined) { height = width; }\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Determines if the Rectangle is empty. A Rectangle is empty if its width or height is less than or equal to 0.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#isEmpty\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if the Rectangle is empty. A Rectangle object is empty if its width or height is less than or equal to 0.\r\n     */\r\n    isEmpty: function ()\r\n    {\r\n        return (this.width <= 0 || this.height <= 0);\r\n    },\r\n\r\n    /**\r\n     * Returns a Line object that corresponds to the top of this Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getLineA\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Line} O - [line,$return]\r\n     *\r\n     * @param {Phaser.Geom.Line} [line] - A Line object to set the results in. If `undefined` a new Line will be created.\r\n     *\r\n     * @return {Phaser.Geom.Line} A Line object that corresponds to the top of this Rectangle.\r\n     */\r\n    getLineA: function (line)\r\n    {\r\n        if (line === undefined) { line = new Line(); }\r\n\r\n        line.setTo(this.x, this.y, this.right, this.y);\r\n\r\n        return line;\r\n    },\r\n\r\n    /**\r\n     * Returns a Line object that corresponds to the right of this Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getLineB\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Line} O - [line,$return]\r\n     *\r\n     * @param {Phaser.Geom.Line} [line] - A Line object to set the results in. If `undefined` a new Line will be created.\r\n     *\r\n     * @return {Phaser.Geom.Line} A Line object that corresponds to the right of this Rectangle.\r\n     */\r\n    getLineB: function (line)\r\n    {\r\n        if (line === undefined) { line = new Line(); }\r\n\r\n        line.setTo(this.right, this.y, this.right, this.bottom);\r\n\r\n        return line;\r\n    },\r\n\r\n    /**\r\n     * Returns a Line object that corresponds to the bottom of this Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getLineC\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Line} O - [line,$return]\r\n     *\r\n     * @param {Phaser.Geom.Line} [line] - A Line object to set the results in. If `undefined` a new Line will be created.\r\n     *\r\n     * @return {Phaser.Geom.Line} A Line object that corresponds to the bottom of this Rectangle.\r\n     */\r\n    getLineC: function (line)\r\n    {\r\n        if (line === undefined) { line = new Line(); }\r\n\r\n        line.setTo(this.right, this.bottom, this.x, this.bottom);\r\n\r\n        return line;\r\n    },\r\n\r\n    /**\r\n     * Returns a Line object that corresponds to the left of this Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getLineD\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Line} O - [line,$return]\r\n     *\r\n     * @param {Phaser.Geom.Line} [line] - A Line object to set the results in. If `undefined` a new Line will be created.\r\n     *\r\n     * @return {Phaser.Geom.Line} A Line object that corresponds to the left of this Rectangle.\r\n     */\r\n    getLineD: function (line)\r\n    {\r\n        if (line === undefined) { line = new Line(); }\r\n\r\n        line.setTo(this.x, this.bottom, this.x, this.y);\r\n\r\n        return line;\r\n    },\r\n\r\n    /**\r\n     * The x coordinate of the left of the Rectangle.\r\n     * Changing the left property of a Rectangle object has no effect on the y and height properties. However it does affect the width property, whereas changing the x value does not affect the width property.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#left\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    left: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (value >= this.right)\r\n            {\r\n                this.width = 0;\r\n            }\r\n            else\r\n            {\r\n                this.width = this.right - value;\r\n            }\r\n\r\n            this.x = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The sum of the x and width properties.\r\n     * Changing the right property of a Rectangle object has no effect on the x, y and height properties, however it does affect the width property.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#right\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    right: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + this.width;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (value <= this.x)\r\n            {\r\n                this.width = 0;\r\n            }\r\n            else\r\n            {\r\n                this.width = value - this.x;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The y coordinate of the top of the Rectangle. Changing the top property of a Rectangle object has no effect on the x and width properties.\r\n     * However it does affect the height property, whereas changing the y value does not affect the height property.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#top\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    top: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (value >= this.bottom)\r\n            {\r\n                this.height = 0;\r\n            }\r\n            else\r\n            {\r\n                this.height = (this.bottom - value);\r\n            }\r\n\r\n            this.y = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The sum of the y and height properties.\r\n     * Changing the bottom property of a Rectangle object has no effect on the x, y and width properties, but does change the height property.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#bottom\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottom: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + this.height;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (value <= this.y)\r\n            {\r\n                this.height = 0;\r\n            }\r\n            else\r\n            {\r\n                this.height = value - this.y;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The x coordinate of the center of the Rectangle.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#centerX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    centerX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + (this.width / 2);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.x = value - (this.width / 2);\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The y coordinate of the center of the Rectangle.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#centerY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    centerY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + (this.height / 2);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.y = value - (this.height / 2);\r\n        }\r\n\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Rectangle;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","Contains","GetPoint","GetPoints","Line","Random","Rectangle","initialize","x","y","width","height","undefined","contains","getPoint","position","output","getPoints","quantity","stepRate","getRandomPoint","point","setTo","setEmpty","setPosition","setSize","isEmpty","getLineA","line","right","getLineB","bottom","getLineC","getLineD","left","get","set","value","top","centerX","centerY"]
}
