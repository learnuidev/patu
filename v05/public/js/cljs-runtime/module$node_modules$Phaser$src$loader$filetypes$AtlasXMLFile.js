shadow$provide.module$node_modules$Phaser$src$loader$filetypes$AtlasXMLFile=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");exports=require("module$node_modules$Phaser$src$loader$FileTypesManager");var GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),ImageFile=require("module$node_modules$Phaser$src$loader$filetypes$ImageFile"),IsPlainObject=require("module$node_modules$Phaser$src$utils$object$IsPlainObject"),MultiFile=
require("module$node_modules$Phaser$src$loader$MultiFile"),XMLFile=require("module$node_modules$Phaser$src$loader$filetypes$XMLFile"),AtlasXMLFile=new global({Extends:MultiFile,initialize:function(loader,key,textureURL,atlasURL,textureXhrSettings,atlasXhrSettings){IsPlainObject(key)?(atlasURL=key,key=GetFastValue(atlasURL,"key"),textureURL=new ImageFile(loader,{key:key,url:GetFastValue(atlasURL,"textureURL"),extension:GetFastValue(atlasURL,"textureExtension","png"),normalMap:GetFastValue(atlasURL,
"normalMap"),xhrSettings:GetFastValue(atlasURL,"textureXhrSettings")}),atlasURL=new XMLFile(loader,{key:key,url:GetFastValue(atlasURL,"atlasURL"),extension:GetFastValue(atlasURL,"atlasExtension","xml"),xhrSettings:GetFastValue(atlasURL,"atlasXhrSettings")})):(textureURL=new ImageFile(loader,key,textureURL,textureXhrSettings),atlasURL=new XMLFile(loader,key,atlasURL,atlasXhrSettings));textureURL.linkFile?MultiFile.call(this,loader,"atlasxml",key,[textureURL,atlasURL,textureURL.linkFile]):MultiFile.call(this,
loader,"atlasxml",key,[textureURL,atlasURL])},addToCache:function(){if(this.isReadyToProcess()){var image=this.files[0],xml=this.files[1];this.loader.textureManager.addAtlasXML(image.key,image.data,xml.data,this.files[2]?this.files[2].data:null);xml.addToCache();this.complete=!0}}});exports.register("atlasXML",function(key,textureURL,atlasURL,textureXhrSettings,atlasXhrSettings){if(Array.isArray(key))for(atlasURL=0;atlasURL<key.length;atlasURL++)textureURL=new AtlasXMLFile(this,key[atlasURL]),this.addFile(textureURL.files);
else textureURL=new AtlasXMLFile(this,key,textureURL,atlasURL,textureXhrSettings,atlasXhrSettings),this.addFile(textureURL.files);return this});module.exports=AtlasXMLFile}
//# sourceMappingURL=module$node_modules$Phaser$src$loader$filetypes$AtlasXMLFile.js.map
