{
"version":3,
"file":"module$node_modules$Phaser$src$geom$rectangle$GetPoints.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOpH,IAAIC,SAAWH,OAAA,CAAQ,wDAAR,CAAf,CACII,UAAYJ,OAAA,CAAQ,yDAAR,CAwChBC,OAAAC,QAAA,CApBgBG,QAAS,CAACC,SAAD,CAAYC,QAAZ,CAAsBC,QAAtB,CAAgCC,GAAhC,CACzB,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,EAA/B,CAGKF,SAAL,GAEIA,QAFJ,CAEeH,SAAA,CAAUE,SAAV,CAFf,CAEsCE,QAFtC,CAKA,KAASG,QAAT,CAAa,CAAb,CAAgBA,QAAhB,CAAoBJ,QAApB,CAA8BI,QAAA,EAA9B,CAIIF,GAAAG,KAAA,CAAST,QAAA,CAASG,SAAT,CAFMK,QAEN,CAFUJ,QAEV,CAAT,CAGJ,OAAOE,IAhBX,CA7BoH;",
"sources":["node_modules/Phaser/src/geom/rectangle/GetPoints.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$rectangle$GetPoints\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar GetPoint = require('./GetPoint');\r\nvar Perimeter = require('./Perimeter');\r\n\r\n//  Return an array of points from the perimeter of the rectangle\r\n//  each spaced out based on the quantity or step required\r\n\r\n/**\r\n * Return an array of points from the perimeter of the rectangle, each spaced out based on the quantity or step required.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point[]} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - The Rectangle object to get the points from.\r\n * @param {number} step - [description]\r\n * @param {integer} quantity - [description]\r\n * @param {(array|Phaser.Geom.Point[])} [out] - An optional array to store the points in.\r\n *\r\n * @return {(array|Phaser.Geom.Point[])} An array of Points from the perimeter of the rectangle.\r\n */\r\nvar GetPoints = function (rectangle, quantity, stepRate, out)\r\n{\r\n    if (out === undefined) { out = []; }\r\n\r\n    //  If quantity is a falsey value (false, null, 0, undefined, etc) then we calculate it based on the stepRate instead.\r\n    if (!quantity)\r\n    {\r\n        quantity = Perimeter(rectangle) / stepRate;\r\n    }\r\n\r\n    for (var i = 0; i < quantity; i++)\r\n    {\r\n        var position = i / quantity;\r\n\r\n        out.push(GetPoint(rectangle, position));\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetPoints;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetPoint","Perimeter","GetPoints","rectangle","quantity","stepRate","out","undefined","i","push"]
}
