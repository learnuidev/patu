{"version":3,"sources":["app/examples/coffeeshop/core.cljs"],"mappings":"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","names":["var_args","G__27065","app.examples.coffeeshop.core/format-currency","js/Error","amount","app.examples.coffeeshop.core.format_currency","type","options","cljs.core/clj->js","js/Intl.NumberFormat","js/app","js/app.examples","js/app.examples.coffeeshop","js/app.examples.coffeeshop.core","js/app.examples.coffeeshop.core.inventories","app.examples.coffeeshop.core/inventories","reagent.core.atom","js/app.examples.coffeeshop.core.destinations","app.examples.coffeeshop.core/destinations","js/app.examples.coffeeshop.core.shipping","app.examples.coffeeshop.core/shipping","js/app.examples.coffeeshop.core.carts","app.examples.coffeeshop.core/carts","cljs.core/deref","app.examples.coffeeshop.core/cart-get-by-id","id","cljs.core.get","app.examples.coffeeshop.core/calc-subtotal","carts","cljs.core/reduce-kv","acc","k","v","inventory","app.examples.coffeeshop.core/calc-shipping-tax","sub-total","shipping-tax","app.examples.coffeeshop.core/calc-total","app.examples.coffeeshop.core/sub-total","quantity","cart","app.examples.coffeeshop.core/change-shipping","ship-id","cljs.core.println","cljs.core/reset!","app.examples.coffeeshop.core/set-message","message1","message2","message3","cljs.core._EQ_","app.examples.coffeeshop.core/inventories-list","cljs.core.doall","iter__4529__auto__","s__27067","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__27069","cljs.core/chunk-buffer","i__27068","map__27070","cljs.core/-nth","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__27066","cljs.core/chunk-rest","map__27072","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core/vals","cljs.core.swap_BANG_","cljs.core/update","cljs.core/inc","cljs.core/update-in","cljs.core/dec","app.examples.coffeeshop.core/sales-tax-component-2","s__27075","b__27077","i__27076","iter__27074","cljs.core/keys","cljs.core/name","app.examples.coffeeshop.core/format-percentage","value","js/Number","app.examples.coffeeshop.core/sales-tax-component","s__27080","b__27082","i__27081","p1__27078#","iter__27079","cljs.core.keyword","app.examples.coffeeshop.core/cart","s__27084","b__27086","i__27085","iter__27083","cart-id","map__27087","map__27089","subtotal","app.examples.coffeeshop.core/total-view","app.examples.coffeeshop.core/coffeeshop","cljs.core/chunk-first"],"sourcesContent":["(ns app.examples.coffeeshop.core\n  (:require [reagent.core :as r]\n            [\"react-intl\" :refer [IntlProvider]]\n            [app.examples.coffeeshop.i18n :as i18n]))\n\n(comment \"Example\"\n         (i18n/localize i18n/names :en))\n\n;; Number Format\n(defn format-currency\n  ([amount] (format-currency amount :CAD))\n  ([amount type]\n   (let [options (clj->js {:style \"currency\", :currency type})]\n     (.format (new js/Intl.NumberFormat \"en-CA\" options) amount))))\n\n;; App Name - Cafe\n\n;; Entities\n(defonce inventories\n  (r/atom {:a {:id :a :name \"Latte\" :price 9.99 :quantity 10}\n           :b {:id :b :name \"Macchiato\" :price 8.99 :quantity 24}\n           :c {:id :c :name \"Cappuchinno\" :price 7.50 :quantity 5}}))\n\n(defonce destinations {:US 25\n                       :CA 15\n                       :CO 45})\n\n(defonce shipping (r/atom :US))\n\n(defonce carts (r/atom {:a 1\n                        :b 2}))\n\n(deref shipping)\n\n(defn cart-get-by-id [id]\n  (get @inventories id))\n\n(defn calc-subtotal [carts]\n  (reduce-kv (fn [acc k v]\n               (let [inventory (get @inventories k)]\n                 (+ acc (* (:price inventory) v))))\n             0\n             carts))\n\n(defn calc-shipping-tax [carts]\n  (let [sub-total (calc-subtotal carts)\n        shipping-tax (get destinations @shipping)]\n    (/ (* shipping-tax sub-total) 100)))\n\n(defn calc-total [carts]\n  (let [sub-total (calc-subtotal carts)\n        shipping-tax (calc-shipping-tax carts)]\n    (+ sub-total shipping-tax)))\n\n(defn sub-total [id quantity]\n  (let [cart (cart-get-by-id id)]\n    {:cart cart\n     :subtotal (* (:price cart) quantity)}))\n\n(defn change-shipping [ship-id]\n  (println \"shipID \" ship-id)\n  (reset! shipping ship-id))\n\n(defn set-message [quantity message1 message2 message3]\n  (cond\n    (= quantity 0)   message1\n    (< quantity 10)  message2\n    :else message3))\n\n(defn inventories-list []\n  [:div {:style {:max-width 400}}\n   [:h1 \"Caffinated Breverages\"]\n   (doall\n    (for [{:keys [quantity] :as inventory} (vals @inventories)]\n      ^{:key (:id inventory)}\n      [:div {:style {:display :flex\n                     :justify-content :space-between\n                     :align-items :flex-start}}\n       [:div {:display :flex\n              :justify-content :flex-start\n              :align-items :flex-end}\n        [:h2 (:name inventory)]\n        [:p {:style {:font-size :12px}} (str \" Quantity \" (:quantity inventory) \" remaining\")]\n        [:p  {:style {:font-size \"20px\"}} (format-currency (:price inventory))]\n        [:p {:style {:color (set-message quantity \"red\" \"orange\" \"black\")\n                     :transition \"all ease-in-out\"}}\n         (set-message quantity \"\ud83d\ude2d Sold Out\" \"\ud83d\ude31 In Low Stock\" \"\ud83d\ude04 In Stock\")]]\n       [:div\n        [:button {:disabled (= (:quantity inventory) 0)\n                  :style {:width 50\n                          :height 50\n                          :border-radius \"50%\"\n                          :margin-top 10\n                          :margin-right 20\n                          :color \"white\"\n                          :font-size 20\n                          :cursor :pointer\n                          :border :none\n                          :background \"#2ecc71\"}\n                  ; :on-click #(swap! carts update (:id inventory) inc)} \"+\"\n                  :on-click (fn []\n                              (swap! carts update (:id inventory) inc)\n                              (swap! inventories update-in [(:id inventory) :quantity] dec))}\n         \"+\"]\n        [:button {:disabled (<= (get @carts (:id inventory)) 0)\n                  :style {:width 50\n                          :height 50\n                          :margin-top 10\n                          :border-radius 50\n                          :color \"white\"\n                          :font-size 20\n                          :cursor :pointer\n                          :border :none\n                          :background \"#e74c3c\"}\n                  ; :on-click #(swap! carts update (:id inventory) dec)} \"-\"\n                  :on-click (fn []\n                              (swap! carts update (:id inventory) dec)\n                              (swap! inventories update-in [(:id inventory) :quantity] inc))}\n         \"-\"]]]))])\n\n;; https://cljdoc.org/d/mthomure/reagent/0.8.1-custom-components/doc/frequently-asked-questions/why-isn-t-my-component-re-rendering-\n;; https://github.com/reagent-project/reagent/issues/18\n(defn sales-tax-component-2 []\n  [:div\n   [:h1 \"Sales Tax\"]\n   (doall\n    (for [ship-id (keys destinations)]\n      ^{:key ship-id}\n      [:div\n       [:button {:on-click #(change-shipping ship-id)\n                 :class (when (= @shipping ship-id) \"btn-active\")}\n        (str (name ship-id) \" @ \" (get destinations ship-id))]]))])\n\n(defn format-percentage [value]\n  (.toLocaleString (js/Number (/ value 100)) nil (clj->js {:style \"percent\"\n                                                           :minimumFractionDigits 2})))\n(defn sales-tax-component []\n  [:div\n   [:h1 \"Sales Tax\"]\n   (doall\n    (for [ship-id (keys destinations)]\n      ^{:key ship-id}\n      [:div\n       [:label (name ship-id)\n        [:span {:style {:margin \"0 20px\"}}\n         (str (get destinations ship-id) \"%\")]\n        [:input {:type :radio\n                 :value ship-id\n                 :on-change #(change-shipping  (-> % .-target .-value keyword))\n                 :checked (= @shipping ship-id)}]]]))])\n\n(defn cart [carts]\n  [:div {:style {:max-width 300}}\n   [:h1 \"Cart\"]\n   [:div\n    (for [cart-id (keys carts)]\n      (let [quantity (get carts cart-id)\n            {:keys [cart subtotal]} (sub-total cart-id quantity)]\n        ^{:key cart-id}\n        [:div {:style {:display :flex\n                       :align-items :center\n                       :justify-content :space-between}}\n         [:div {:style {:display :flex\n                        :justify-content :space-between\n                        :align-items :center}}\n          [:p (str (:name cart) \" (\" quantity \")\")]]\n         [:h4 (format-currency subtotal)]]))]])\n\n(defn total-view []\n  [:div\n   [:h1 \"Total\"]\n   [:p (str \"Subtotal: \" (format-currency (calc-subtotal @carts)))]\n   [:p (str \"Sales Tax: \" (format-currency (calc-shipping-tax @carts)))]\n   [:hr]\n   [:p (str \"Total: \" (format-currency (calc-total @carts)))]\n   [:button \"Payment\"]])\n\n(defn coffeeshop []\n  [:div {:style {:padding 16\n                 :display :flex}}\n                 ; :justify-content :space-around}}\n   [:div {:style {:margin-right :64px}}\n    [inventories-list]]\n   [sales-tax-component]\n   [:div {:style {:display :flex\n                  :flex-direction :column\n                  :margin-left :128px}}\n    [cart @carts]\n    [total-view]]])\n"]}