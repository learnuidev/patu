{"version":3,"sources":["app/kaboom/level.cljs"],"mappings":";;;;;AAKA,AAAA,AAAMA,AAAsBC;AAA5B,AACE,AAAAC,AAAgB,AAACE,AAA2BH;AAA5C,AAAA,AAAAC;AAAA,AAAAA,AAASC;AAAT,AACEA;;AACA,AAAME,AAAW,AAAA,AAACC;AAAlB,AACE,AAAA,AAAMD,AAAeJ;;AACrB,AAAc,AAAQM,AAAaF;;AACnCA;;;AAEN,AAIA,AAAA;AAAA;;;AAAA,AAAaG;;AAAb,AAGA,AAAA;AAAA;;;;AAAA,AAAa2B;;AAAb,AAAA1B,AAAA,AAES2B,AAAKC,AAAMC;AAFpB,AAAA,AAAA5B,AAAA,AAAA,AAAA,AAAA,AAES0B,AAAAA;AAFTzB,AAAA,AAAAC,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAESyB,AAAAA,AAAKC,AAAAA,AAAMC,AAAAA;;AAFpB,AAAAxB,AAAA,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAESsB,AAAAA,AAAKC,AAAAA,AAAMC,AAAAA;;AAFpB,AAAA,AAAAvB,AAAA,AAESqB;;;;AAFT,AAAA,AAAA,AAEGxB,AAAMwB,AAAKC,AAAMC;AAFpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAESF,AAAAA;AAFT,AAESA,AAAAA,AAAKC,AAAMC;;AAFpB,AAAA7B,AAES2B,AAAKC,AAAMC;;;;AAFpB,AAAAtB,AAAA,AAGQoB,AAAKC;AAHb,AAAA,AAAA3B,AAAA,AAAA,AAAA,AAAA,AAGQ0B,AAAAA;AAHRzB,AAAA,AAAAM,AAAA,AAAAJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGQyB,AAAAA,AAAKC,AAAAA;;AAHb,AAAAvB,AAAA,AAAAG,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGQsB,AAAAA,AAAKC,AAAAA;;AAHb,AAAA,AAAAtB,AAAA,AAGQqB;;;;AAHR,AAAA;;;AAAA,AAGGnB,AAAKmB,AAAKC;AAHb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGQD,AAAAA;AAHR,AAGQA,AAAAA,AAAKC;;AAHb,AAAArB,AAGQoB,AAAKC;;;;AAHb,AAAAnB,AAAA,AAIQkB,AAAKG,AAAEC;AAJf,AAAA,AAAA9B,AAAA,AAAA,AAAA,AAAA,AAIQ0B,AAAAA;AAJRzB,AAAA,AAAAQ,AAAA,AAAAN,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIQyB,AAAAA,AAAKG,AAAAA,AAAEC,AAAAA;;AAJf,AAAA1B,AAAA,AAAAK,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAL,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIQsB,AAAAA,AAAKG,AAAAA,AAAEC,AAAAA;;AAJf,AAAA,AAAAzB,AAAA,AAIQqB;;;;AAJR,AAAA,AAAA,AAIGjB,AAAKiB,AAAKG,AAAEC;AAJf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIQJ,AAAAA;AAJR,AAIQA,AAAAA,AAAKG,AAAEC;;AAJf,AAAAtB,AAIQkB,AAAKG,AAAEC;;;;AAJf,AAAApB,AAAA,AAKUgB,AAAKK,AAAKC;AALpB,AAAA,AAAAhC,AAAA,AAAA,AAAA,AAAA,AAKU0B,AAAAA;AALVzB,AAAA,AAAAU,AAAA,AAAAR,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKUyB,AAAAA,AAAKK,AAAAA,AAAKC,AAAAA;;AALpB,AAAA5B,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAP,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKUsB,AAAAA,AAAKK,AAAAA,AAAKC,AAAAA;;AALpB,AAAA,AAAA3B,AAAA,AAKUqB;;;;AALV,AAAA,AAAA,AAKGf,AAAOe,AAAKK,AAAKC;AALpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKUN,AAAAA;AALV,AAKUA,AAAAA,AAAKK,AAAKC;;AALpB,AAAAtB,AAKUgB,AAAKK,AAAKC;;;;AALpB,AAAApB,AAAA,AAMUc,AAAKC;AANf,AAAA,AAAA3B,AAAA,AAAA,AAAA,AAAA,AAMU0B,AAAAA;AANVzB,AAAA,AAAAY,AAAA,AAAAV,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAMUyB,AAAAA,AAAKC,AAAAA;;AANf,AAAAvB,AAAA,AAAAS,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAT,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAMUsB,AAAAA,AAAKC,AAAAA;;AANf,AAAA,AAAAtB,AAAA,AAMUqB;;;;AANV,AAAA,AAAA,AAMGb,AAAOa,AAAKC;AANf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMUD,AAAAA;AANV,AAMUA,AAAAA,AAAKC;;AANf,AAAAf,AAMUc,AAAKC;;;;AANf,AAAAb,AAAA,AAOkBY,AAAKO,AAAUC,AAAaC;AAP9C,AAAA,AAAAnC,AAAA,AAAA,AAAA,AAAA,AAOkB0B,AAAAA;AAPlBzB,AAAA,AAAAc,AAAA,AAAAZ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAOkByB,AAAAA,AAAKO,AAAAA,AAAUC,AAAAA,AAAaC,AAAAA;;AAP9C,AAAA/B,AAAA,AAAAW,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAX,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAOkBsB,AAAAA,AAAKO,AAAAA,AAAUC,AAAAA,AAAaC,AAAAA;;AAP9C,AAAA,AAAA9B,AAAA,AAOkBqB;;;;AAPlB,AAAA,AAAA,AAOGX,AAAeW,AAAKO,AAAUC,AAAaC;AAP9C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAOkBT,AAAAA;AAPlB,AAOkBA,AAAAA,AAAKO,AAAUC,AAAaC;;AAP9C,AAAArB,AAOkBY,AAAKO,AAAUC,AAAaC;;;;AAP9C,AAAAnB,AAAA,AAQgBU,AAAKO,AAAUG;AAR/B,AAAA,AAAApC,AAAA,AAAA,AAAA,AAAA,AAQgB0B,AAAAA;AARhBzB,AAAA,AAAAgB,AAAA,AAAAd,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAQgByB,AAAAA,AAAKO,AAAAA,AAAUG,AAAAA;;AAR/B,AAAAhC,AAAA,AAAAa,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAb,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAQgBsB,AAAAA,AAAKO,AAAAA,AAAUG,AAAAA;;AAR/B,AAAA,AAAA/B,AAAA,AAQgBqB;;;;AARhB,AAAA;;;;;;;;;;AAAA,AAQGT,AAAaS,AAAKO,AAAUG;AAR/B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAQgBV,AAAAA;AARhB,AAQgBA,AAAAA,AAAKO,AAAUG;;AAR/B,AAAApB,AAQgBU,AAAKO,AAAUG;;;;AAR/B,AAAAlB,AAAA,AAiBUQ,AAAKC;AAjBf,AAAA,AAAA3B,AAAA,AAAA,AAAA,AAAA,AAiBU0B,AAAAA;AAjBVzB,AAAA,AAAAkB,AAAA,AAAAhB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAiBUyB,AAAAA,AAAKC,AAAAA;;AAjBf,AAAAvB,AAAA,AAAAe,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAf,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAiBUsB,AAAAA,AAAKC,AAAAA;;AAjBf,AAAA,AAAAtB,AAAA,AAiBUqB;;;;AAjBV,AAAA,AAAA,AAiBGP,AAAOO,AAAKC;AAjBf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAiBUD,AAAAA;AAjBV,AAiBUA,AAAAA,AAAKC;;AAjBf,AAAAT,AAiBUQ,AAAKC;;;;AAjBf,AAAAP,AAAA;;AAkBcM,AAAKC;AAlBnB,AAAA,AAAA3B,AAAA,AAAA,AAAA,AAAA,AAkBc0B,AAAAA;AAlBdzB,AAAA,AAAAoB,AAAA,AAAAlB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAkBcyB,AAAAA,AAAKC,AAAAA;;AAlBnB,AAAAvB,AAAA,AAAAiB,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjB,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAkBcsB,AAAAA,AAAKC,AAAAA;;AAlBnB,AAAA,AAAAtB,AAAA,AAkBcqB;;;;AAAaA,AAAKC,AAAMU;AAlBtC,AAAA,AAAArC,AAAA,AAAA,AAAA,AAAA,AAkB2B0B,AAAAA;AAlB3BzB,AAAA,AAAAoB,AAAA,AAAAlB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAkB2ByB,AAAAA,AAAKC,AAAAA,AAAMU,AAAAA;;AAlBtC,AAAAjC,AAAA,AAAAiB,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjB,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAkB2BsB,AAAAA,AAAKC,AAAAA,AAAMU,AAAAA;;AAlBtC,AAAA,AAAAhC,AAAA,AAkB2BqB;;;;AAAAA,AAAKC,AAAMU;;;AAAXX,AAAKC;;AAALD,AAAKC,AAAMU;;;;;;;;;AAlBtC,AAAA,AAAA;;;AAAA,AAAAf,AAkBGD;AAlBH,AAAA,AAAAE,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAG,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAkBGH,AAAWK,AAAKC;AAlBnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAkBcD,AAAAA;AAlBd,AAkBcA,AAAAA,AAAKC;;AAlBnB,AAAAP,AAkBcM,AAAKC;;;;AAlBnB,AAAA,AAAA,AAkBGN,AAAwBK,AAAKC,AAAMU;AAlBtC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAkB2BX,AAAAA;AAlB3B,AAkB2BA,AAAAA,AAAKC,AAAMU;;AAlBtC,AAAAjB,AAkB2BM,AAAKC,AAAMU;;;;AAlBtC,AAAA,AAAA,AAkBGhB;;AAlBH;AAAA,AAoBA,AAMA,AAAA;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAiB,AAASK;;AAAT,AAAA,AAAA,AAAA,AAASA,AAMDG,AAAEnB;;AANV,AAAA,AAAA,AAMQmB;AANR,AAOI,AAAMD,AAAE,AAACE,AAAQpB;;;AAPrB,AAAA,AAAA,AAAA,AAASgB,AAEAjB,AAAKC,AAAMC;;AAFpB,AAAA,AAAA,AAESF;AAFT,AAGI,AAAOmB,AAAElB,AAAMC;;;AAHnB,AAAA,AAAA,AAAA,AAASe,AAQCG,AAAEE,AAAShB;;AARrB,AAAA,AAAA,AAQUc;AARV,AASI,AAAQD,AAAE,AAACI,AAAKD,AAAUhB;;;AAT9B,AAAA,AAAA,AAAA,AAASW,AAkBKG,AAAEnB;;AAlBhB,AAAA,AAAA,AAkBcmB;AAlBd,AAmBI,AAAWD,AAAE,AAACE,AAAQpB;;;AAnB1B,AAAA,AAAA,AAAA,AAASgB,AAoBKG,AAAEnB,AAAMU;;AApBtB,AAAA,AAAA,AAoBcS;AApBd,AAqBI,AAAWD,AAAE,AAACE,AAAQpB,AAAO,AAACoB,AAAQV;;;AArB1C,AAAA,AAAA,AAAA,AAASM,AAgBCG,AAAEnB;;AAhBZ,AAAA,AAAA,AAgBUmB;AAhBV,AAiBI,AAAQD,AAAElB;;;AAjBd,AAAA,AAAA,AAAA,AAASgB,AAcSG,AAAEb,AAAUG,AAAWD;;AAdzC,AAAA,AAAA,AAckBW;AAdlB,AAeI,AAAeD,AAAE,AAACI,AAAKhB,AAAWG,AAAWD;;;AAfjD,AAAA,AAAA,AAAA,AAASQ,AAUCG,AAAEE;;AAVZ,AAAA,AAAA,AAUUF;AAVV,AAWI,AAAQD,AAAE,AAACI,AAAKD;;;AAXpB,AAAA,AAAA,AAAA,AAASL,AAIDjB,AAAKG,AAAEC;;AAJf,AAAA,AAAA,AAIQJ;AAJR,AAKI,AAAMmB,AAAEhB,AAAEC;;;AALd,AAAA,AAAA,AAAA,AAASa,AAYOG,AAAEb,AAAUG;;AAZ5B,AAAA,AAAA,AAYgBU;AAZhB,AAaI,AAAaD,AAAE,AAACI,AAAKhB,AAAWG;;;AAbpC,AAAA,AAAA,AAASO;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAJ,AAAAC,AAAAC,AAASE;AAAT,AAAA,AAAAD,AAAAF,AAAA;;;AAAA;;;AAAA,AAASI,AAAmBC;AAA5B,AAAA,AAAAF,AAA4BE;;;AAAnBF,AAuBT,AAAA,AAAA,AAAArB,AAAM6B;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA3B,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAM2B;AAAN,AACM,AAAA,AAACC;;;AADP,AAAA,AAAA,AAAMD,AAEFd;AAFJ,AAGG,AAACO,AAAS,AAACS,AAAU,AAACN,AAAQV;;;AAHjC,AAAA,AAAA,AAAMc;;AAAN,AAKA,AAAKG,AAAK,AAAA,AAAA,AAAA,AAAA,AAACF,AACiB,AAAA,AAACG;AAK7B,AAGA,AAAA,AAAAC,AAAMK,AAAWtE;AAAjB,AAAA,AAAAkE,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAnB,AAAA,AAAAmB,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAC,AAAAF,AAAAA;AAAA,AAAAG,AAAAH,AAAA,AAAA,AAA4BK;AAA5B,AAAAF,AAAAH,AAAA,AAAA,AAAkCM;AAAlC,AAAAH,AAAAH,AAAA,AAAyCO;AAAzC,AAAAJ,AAAAH,AAAA,AAA6CQ;AAA7C,AAAAL,AAAAH,AAAA,AAAsDS;AAAtD,AAGE,AAAMC,AAAW;AAAA,AACE,AAAWb,AAAKQ,AAAMC;;AACtB,AAAA,AAAKT,AAAM,AAAA,AAAA,AAAMU,AAAI,AAAMV,AAAK,AAAA,AAAMU,AAAK,AAAA,AAAOA,AACvC,AAAA,AAAA,AAAMC,AAAS,AAAOX,AAAKW,AAC3B,AAAA,AAAA,AAAMC,AAAK,AAAKZ,AAAK,AAAA,AAAIY,AAAM,AAAA,AAAIA;;AAJjE,AAKE,AAAOZ,AAAK/D,AAAG4E;;AAEnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACN;AAYD,AAGA,AAAA,AAAMO;AAAN,AACE,AAAA,AAAOd;;AAET,AAIA","names":["app.kaboom.level/create-if-not-exists","id","temp__5733__auto__","canvas","js/document.getElementById","new-canvas","js/document.createElement","js/document","app.kaboom.level/ILifeCycle","app$kaboom$level$IKaboom$text$dyn","x__4428__auto__","m__4429__auto__","app.kaboom.level/text","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","app$kaboom$level$IKaboom$add$dyn","app.kaboom.level/add","app$kaboom$level$IKaboom$pos$dyn","app.kaboom.level/pos","app$kaboom$level$IKaboom$scene$dyn","app.kaboom.level/scene","app$kaboom$level$IKaboom$start$dyn","app.kaboom.level/start","app$kaboom$level$IKaboom$load_aseprite$dyn","app.kaboom.level/load-aseprite","app$kaboom$level$IKaboom$load_sprite$dyn","app.kaboom.level/load-sprite","app$kaboom$level$IKaboom$scale$dyn","app.kaboom.level/scale","app$kaboom$level$IKaboom$add_level$dyn","app.kaboom.level/add-level","var_args","G__65546","js/Error","app.kaboom.level/IKaboom","this","value","font-size","x","y","type","func","sprite-id","asset-path-1","asset-path-2","asset-path","options","cljs.core/PROTOCOL_SENTINEL","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","app.kaboom.level/Kaboom","app.kaboom.level/->Kaboom","g","_","cljs.core/clj->js","scene-id","cljs.core/name","G__65548","app.kaboom.level/kaboom!","app.kaboom.level.kaboom_BANG_","js/kaboom","app.kaboom.level/game","js/document.querySelector","p__65549","map__65550","cljs.core.apply","cljs.core/hash-map","cljs.core.get","app.kaboom.level/reg-scene","level","config","txt","scale-by","posn","handler-fn","app.kaboom.level/app"],"sourcesContent":["(ns app.kaboom.level\n  (:require [clojure.repl :refer [doc]]\n            [clojure.spec.alpha :as s]\n            [clojure.spec.gen.alpha :as gen]))\n\n(defn create-if-not-exists [id]\n  (if-let [canvas (js/document.getElementById id)]\n    canvas\n    (let [new-canvas (js/document.createElement \"canvas\")]\n      (set! new-canvas -id id)\n      (.appendChild (.-body js/document) new-canvas)\n      new-canvas)))\n\n(comment\n  (doc load-sprite))\n\n;;\n(defprotocol ILifeCycle)\n\n;; == Protocol\n(defprotocol IKaboom\n  \"IKaboom protocol abstraction\"\n  (text [this value font-size])\n  (add [this value] \"Add a game object to scene\")\n  (pos [this x y])\n  (scene [this type func])\n  (start [this value])\n  (load-aseprite [this sprite-id asset-path-1 asset-path-2])\n  (load-sprite [this sprite-id asset-path]\n    \"Description:\n      - Loads a sprite\n      - Accepts three arguments\n         - 1. game       - kaboom instance. object\n         - 2. sprit-id   - id of the sprite. keyword\n         - 3. asset-path - public path of the asset. string\n    Example usage:\n      - (load-sprite game :player 'assets/player.png')\")\n  (scale [this value])\n  (add-level [this value] [this value options] \"Add a new level\"))\n\n(comment\n  (doc load-sprite)\n  (doc add)\n  (doc scale)\n  (name \"hello\"))\n\n(deftype Kaboom [^js/kaboom g]\n  IKaboom\n  (text [this value font-size]\n    (.text g value font-size))\n  (pos [this x y]\n    (.pos g x y))\n  (add [_ value]\n    (.add g (clj->js value)))\n  (scene [_ scene-id func]\n    (.scene g (name scene-id) func))\n  (start [_ scene-id]\n    (.start g (name scene-id)))\n  (load-sprite [_ sprite-id asset-path]\n    (.loadSprite g (name sprite-id) asset-path))\n  (load-aseprite [_ sprite-id asset-path asset-path-2]\n    (.loadAseprite g (name sprite-id) asset-path asset-path-2))\n  (scale [_ value]\n    (.scale g value))\n  (add-level [_ value]\n    (.addLevel g (clj->js value)))\n  (add-level [_ value options]\n    (.addLevel g (clj->js value) (clj->js options))))\n\n(defn kaboom!\n  ([] (kaboom! {}))\n  ([options]\n   (->Kaboom (js/kaboom (clj->js options)))))\n\n(def game (kaboom! {:debug true\n                    :canvas (js/document.querySelector \"canvas\")}))\n\n;; 1. Load Resources\n; (load-sprite game :scrooge \"assets/ducktales/scrooge.png\")\n\n(comment\n  (set! js/window -game game))\n\n(defn reg-scene [id {:keys [level config txt scale-by posn]\n                     :or {level []\n                          config {}}}]\n  (let [handler-fn (fn []\n                     (add-level game level config)\n                     (add game [(when txt (text game (:val txt) (:size txt)))\n                                (when scale-by (scale game scale-by))\n                                (when posn (pos game (:x posn) (:y posn)))]))]\n    (scene game id handler-fn)))\n\n(reg-scene\n :main\n {:config {:width 40\n           :height 40}\n  :level [\"      +++       \"\n          \"         \"\n          \"         \"\n          \"xxxxxxxxx\"]\n  :txt {:val \"learnui\" :size 32}\n  :scale-by 1\n  :posn {:x 200 :y 200}})\n\n(comment\n  (object? #js {}))\n\n(defn app []\n  (start game :main))\n\n(comment\n  (js/console.log (clj->js  {:well/helloWorld true}))\n  (js/console.log {}))\n\n(comment\n  (doc load-sprite))\n"]}