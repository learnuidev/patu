{"version":3,"sources":["shadow/remote/runtime/api.cljc"],"mappings":";;AAEA,AAAA;AAAA;;;AAAA,AAAaW;;AAAb,AAAAX,AAAA,AACcY,AAAQC;AADtB,AAAA,AAAAZ,AAAA,AAAA,AAAA,AAAA,AACcW,AAAAA;AADdV,AAAA,AAAAC,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcU,AAAAA,AAAQC,AAAAA;;AADtB,AAAAR,AAAA,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcO,AAAAA,AAAQC,AAAAA;;AADtB,AAAA,AAAAP,AAAA,AACcM;;;;AADd,AAAA,AAAA,AACGT,AAAWS,AAAQC;AADtB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACcD,AAAAA;AADd,AACcA,AAAAA,AAAQC;;AADtB,AAAAb,AACcY,AAAQC;;;;AADtB,AAAAN,AAAA,AAEkBK,AAAQE,AAAIC;AAF9B,AAAA,AAAAd,AAAA,AAAA,AAAA,AAAA,AAEkBW,AAAAA;AAFlBV,AAAA,AAAAM,AAAA,AAAAJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEkBU,AAAAA,AAAQE,AAAAA,AAAIC,AAAAA;;AAF9B,AAAAV,AAAA,AAAAG,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEkBO,AAAAA,AAAQE,AAAAA,AAAIC,AAAAA;;AAF9B,AAAA,AAAAT,AAAA,AAEkBM;;;;AAFlB,AAAA,AAAA,AAEGJ,AAAeI,AAAQE,AAAIC;AAF9B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEkBH,AAAAA;AAFlB,AAEkBA,AAAAA,AAAQE,AAAIC;;AAF9B,AAAAR,AAEkBK,AAAQE,AAAIC;;;;AAF9B,AAAAN,AAAA,AAGkBG,AAAQE;AAH1B,AAAA,AAAAb,AAAA,AAAA,AAAA,AAAA,AAGkBW,AAAAA;AAHlBV,AAAA,AAAAQ,AAAA,AAAAN,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGkBU,AAAAA,AAAQE,AAAAA;;AAH1B,AAAAT,AAAA,AAAAK,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAL,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGkBO,AAAAA,AAAQE,AAAAA;;AAH1B,AAAA,AAAAR,AAAA,AAGkBM;;;;AAHlB,AAAA,AAAA,AAGGF,AAAeE,AAAQE;AAH1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGkBF,AAAAA;AAHlB,AAGkBA,AAAAA,AAAQE;;AAH1B,AAAAL,AAGkBG,AAAQE;;;;AAH1B,AAKA,AAAA;AAAA;;;AAAA,AAAaQ;;AAAb,AAAAN,AAAA,AAEaO,AAAMC;AAFnB,AAAA,AAAAvB,AAAA,AAAA,AAAA,AAAA,AAEasB,AAAAA;AAFbrB,AAAA,AAAAe,AAAA,AAAAb,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEaqB,AAAAA,AAAMC,AAAAA;;AAFnB,AAAAN,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAEaG;AAFb,AAAA,AAAAL;AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAG,AAAAA,AAAAA,AAEaE,AAAAA,AAAMC,AAAAA;;AAFnB,AAAAnB,AAAA,AAAAY,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAZ,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEakB,AAAAA,AAAMC,AAAAA;;AAFnB,AAAA,AAAAlB,AAAA,AAEaiB;;;;;AAFb,AAAA;;;AAAA,AAEGN,AAAUM,AAAMC;AAFnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEaD,AAAAA;AAFb,AAEaA,AAAAA,AAAMC;;AAFnB,AAAAR,AAEaO,AAAMC;;;;AAFnB,AAKG,AAAI,AAAA;AAAA;;;AAAA,AAAaG;;AAAb,AAAAF,AAAA,AACeb,AAAQgB,AAAMC;AAD7B,AAAA,AAAA5B,AAAA,AAAA,AAAA,AAAA,AACeW,AAAAA;AADfV,AAAA,AAAAwB,AAAA,AAAAtB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeU,AAAAA,AAAQgB,AAAAA,AAAMC,AAAAA;;AAD7B,AAAAxB,AAAA,AAAAqB,AAAA;AAAA,AAAA,AAAA,AAAA,AAAArB,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeO,AAAAA,AAAQgB,AAAAA,AAAMC,AAAAA;;AAD7B,AAAA,AAAAvB,AAAA,AACeM;;;;AADf,AAAA,AAAA,AACGc,AAAYd,AAAQgB,AAAMC;AAD7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACejB,AAAAA;AADf,AACeA,AAAAA,AAAQgB,AAAMC;;AAD7B,AAAAJ,AACeb,AAAQgB,AAAMC;;;;AAD7B;AAGA,AAAA;AAAA;;;AAAA,AAAaG;;AAAb,AAAAF,AAAA,AACalB,AAAQqB;AADrB,AAAA,AAAAhC,AAAA,AAAA,AAAA,AAAA,AACaW,AAAAA;AADbV,AAAA,AAAA6B,AAAA,AAAA3B,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaU,AAAAA,AAAQqB,AAAAA;;AADrB,AAAA5B,AAAA,AAAA0B,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1B,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaO,AAAAA,AAAQqB,AAAAA;;AADrB,AAAA,AAAA3B,AAAA,AACaM;;;;AADb,AAAA,AAAA,AACGmB,AAAUnB,AAAQqB;AADrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACarB,AAAAA;AADb,AACaA,AAAAA,AAAQqB;;AADrB,AAAAH,AACalB,AAAQqB;;;;AADrB;AAGA,AAAA,AAAAC,AAAMK,AACQ3B,AAAoCiB;AADlD,AAAA,AAAAM,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAC2CP;AAD3C,AAAAT,AAAAgB,AAAA,AAC8BF;AAD9B,AAAAd,AAAAgB,AAAA,AACmCK;AADnC,AAEE,AAAU,AAAK,AAASP,AACT,AAACQ,AAAeD;AAD/B;AAAA,AAEE,AAAO,AAAA,AAAA,AAAA,AAACE,AAA0Cd;;;AACpD,AAACF,AAAWd,AAAQgB,AAAMC;;;AAE5B,AAAA,AAAMe,AACMhC,AAAQqB;AADpB,AAAA,AAES,AAASA;AAFlB;AAAA,AAAA,AAAA,AAAAU,AAAA;;;AAGE,AAACZ,AAASnB,AAAQqB;;AAE3B","names":["shadow$remote$runtime$api$IRuntime$relay_msg$dyn","x__4428__auto__","m__4429__auto__","shadow.remote.runtime.api/relay-msg","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","shadow$remote$runtime$api$IRuntime$add_extension$dyn","shadow.remote.runtime.api/add-extension","shadow$remote$runtime$api$IRuntime$del_extension$dyn","shadow.remote.runtime.api/del-extension","shadow.remote.runtime.api/IRuntime","runtime","msg","key","spec","shadow$remote$runtime$api$Inspectable$describe$dyn","shadow.remote.runtime.api/describe","temp__5733__auto__","cljs.core.get","cljs.core/meta","meta-impl__4427__auto__","shadow.remote.runtime.api/Inspectable","thing","opts","shadow$remote$runtime$api$IEvalCLJS$_cljs_eval$dyn","shadow.remote.runtime.api/-cljs-eval","shadow.remote.runtime.api/IEvalCLJS","input","callback","shadow$remote$runtime$api$IEvalJS$_js_eval$dyn","shadow.remote.runtime.api/-js-eval","shadow.remote.runtime.api/IEvalJS","code","p__34376","map__34377","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","shadow.remote.runtime.api/cljs-eval","ns","cljs.core/simple-symbol?","cljs.core.ex_info","js/Error","shadow.remote.runtime.api/js-eval"],"sourcesContent":["(ns shadow.remote.runtime.api)\n\n(defprotocol IRuntime\n  (relay-msg [runtime msg])\n  (add-extension [runtime key spec])\n  (del-extension [runtime key]))\n\n(defprotocol Inspectable\n  :extend-via-metadata true\n  (describe [thing opts] \"returns a map descriptor that tells system how to handle things further\"))\n\n#?(:cljs\n   (do (defprotocol IEvalCLJS\n         (-cljs-eval [runtime input callback]))\n\n       (defprotocol IEvalJS\n         (-js-eval [runtime code]))\n\n       (defn cljs-eval\n         [^IEvalCLJS runtime {:keys [code ns] :as input} callback]\n         (when-not (and (string? code)\n                        (simple-symbol? ns))\n           (throw (ex-info \"invalid cljs-eval input\" {:input input})))\n         (-cljs-eval runtime input callback))\n\n       (defn js-eval\n         [^IEvalJS runtime code]\n         {:pre [(string? code)]}\n         (-js-eval runtime code))))\n\n(comment\n  ;; nav feels limited by being in metadata\n  ;; and coupled to the result of datafy\n  ;; also has no notion of async built-in which could be a problem for CLJS\n\n  ;; will still be used as the default descriptor impl\n\n  ;; I would like to transmit metadata to the UI but by nav/datafy potentially\n  ;; being in metadata I have to filter it first, which seems like a bad default\n\n  ;; returns one-line text summary of something. default to edn preview, could be custom\n  {::preview-self (fn [opts])\n   ;; returns map description. similar to :summary view right now\n   ::summary (fn [opts]) => {:entries 123 :obj-type \"cljs.core/PersistentArrayMap\"}\n   ::preview-entry (fn [idx opts])\n   ;; similar to nav, but navs by idx\n   ::nav (fn [idx opts callback])})\n\n"]}