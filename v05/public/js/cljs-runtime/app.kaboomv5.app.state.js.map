{"version":3,"sources":["app/kaboomv5/app/state.cljs"],"mappings":"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","names":["cljs.spec.alpha/def-impl","cljs.core/number?","cljs.core/boolean?","cljs.spec.alpha/nilable-impl","app.kaboomv5.app.utils/html-canvas?","app.kaboomv5.app.utils/html-body?","cljs.spec.alpha/map-spec-impl","G__26620","cljs.core/map?","app.kaboomv5.app.state/ex-config","js/document","js/app","js/app.kaboomv5","js/app.kaboomv5.app","js/app.kaboomv5.app.state","js/app.kaboomv5.app.state.key-map","app.kaboomv5.app.state/key-map","cljs.core/vector?","G__26622","js/app.kaboomv5.app.state.app-state","app.kaboomv5.app.state/app-state","cljs.core.atom","app.kaboomv5.math.core/vec2"],"sourcesContent":["(ns app.kaboomv5.app.state\n  (:require [app.kaboomv5.math.core :as math]\n            [app.kaboomv5.app.utils :refer [html-canvas? html-body?]]\n            [cljs.spec.alpha :as s]))\n\n;;  config - spec\n(s/def ::button-state #{:up :pressed :rpressed :down :released})\n(s/def ::width number?)\n(s/def ::height number?)\n(s/def ::scale number?)\n(s/def ::fullscreen? boolean?)\n(s/def ::debug? boolean?)\n(s/def ::crisp? boolean?)\n(s/def ::canvas (s/nilable html-canvas?))\n(s/def ::root html-body?)\n(s/def ::config (s/keys :opt-un [::width\n                                 ::height\n                                 ::scale\n                                 ::fullscreen?\n                                 ::debug?\n                                 ::crisp?\n                                 ::canvas\n                                 ::root]))\n;;\n(def ex-config\n  {:width 640\n   :height 480\n   :scale 2\n   :fullscreen? false\n   :debug? false\n   :crisp? false\n   :canvas nil\n   :root (.-body js/document)})\n(comment\n  (s/valid? ::config ex-config)\n  (s/valid? ::button-state :up)\n  (s/valid? ::button-state :up))\n\n(defonce key-map {:ArrowLeft  :left\n                  :ArrowRight :right\n                  :ArrowUp    :up\n                  :ArrowDown  :down})\n;; App Spec\n(s/def ::loop-id (s/nilable number?))\n(s/def ::stopped? boolean?)\n(s/def ::key-states map?)\n(s/def ::char-inputted vector?)\n(s/def ::mouse-pos map?)\n(s/def ::skip-time? boolean?)\n(s/def ::real-time number?)\n(s/def ::dt number?)\n(s/def ::touch? boolean?)\n(s/def ::mouse-state ::button-state)\n(s/def ::fps number?)\n(s/def ::time number?)\n(s/def ::fps-buf vector?)\n(s/def ::fps-timer number?)\n(s/def ::state (s/keys :opt-un [::loop-id\n                                ::canvas\n                                ::stopped?\n                                ::key-states\n                                ::char-inputted\n                                ::mouse-state\n                                ::mouse-pos\n                                ::skip-time?\n                                ::scale\n                                ::real-time\n                                ::dt\n                                ::touch?\n                                ::fps\n                                ::time\n                                ::fps-buf\n                                ::fps-timer]))\n\n;; App State\n(defonce app-state (atom {:loop-id nil\n                          :canvas nil\n                          :stopped? false\n                          :key-states {}\n                          :char-inputted []\n                          :mouse-state :up\n                          :mouse-pos (math/vec2 0 0)\n                          :skip-time? false\n                          :scale 2\n                          :real-time 0\n                          :dt 0.0\n                          :touch? false\n                          :fps 0\n                          :time 0\n                          :fps-buf []\n                          :fps-timer 0.0}))\n\n(comment\n  (:config @app-state)\n  (:key-states @app-state))\n"]}