{
"version":3,
"file":"module$node_modules$Phaser$src$math$Wrap.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0BrGD,MAAAC,QAAA,CAPWC,QAAS,CAACC,KAAD,CAAQC,GAAR,CAAaC,GAAb,CACpB,CACgBA,GAARC,EAAcF,GAElB,OAAQA,IAAR,GAAkBD,KAAlB,CAA0BC,GAA1B,EAAiCE,GAAjC,CAA0CA,GAA1C,EAAmDA,GAHvD,CApBqG;",
"sources":["node_modules/Phaser/src/math/Wrap.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$Wrap\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Wrap the given `value` between `min` and `max.\r\n *\r\n * @function Phaser.Math.Wrap\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to wrap.\r\n * @param {number} min - The minimum value.\r\n * @param {number} max - The maximum value.\r\n *\r\n * @return {number} The wrapped value.\r\n */\r\nvar Wrap = function (value, min, max)\r\n{\r\n    var range = max - min;\r\n\r\n    return (min + ((((value - min) % range) + range) % range));\r\n};\r\n\r\nmodule.exports = Wrap;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Wrap","value","min","max","range"]
}
