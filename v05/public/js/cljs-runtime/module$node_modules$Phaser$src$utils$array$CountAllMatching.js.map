{
"version":3,
"file":"module$node_modules$Phaser$src$utils$array$CountAllMatching.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,4DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOxH,IAAIC,UAAYH,OAAA,CAAQ,sDAAR,CAuChBC,OAAAC,QAAA,CAvBuBE,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkBC,KAAlB,CAAyBC,UAAzB,CAAqCC,QAArC,CAChC,CACuBC,IAAAA,EAAnB,GAAIF,UAAJ,GAAgCA,UAAhC,CAA6C,CAA7C,CACiBE,KAAAA,EAAjB,GAAID,QAAJ,GAA8BA,QAA9B,CAAyCJ,KAAAM,OAAzC,CAEA,KAAIC,MAAQ,CAEZ,IAAIT,SAAA,CAAUE,KAAV,CAAiBG,UAAjB,CAA6BC,QAA7B,CAAJ,CAEI,IAAA,CAAyBI,UAAzB,CAA6BJ,QAA7B,CAAuCI,UAAA,EAAvC,CAEgBR,KAAAS,CAAMD,UAANC,CAER,CAAMR,QAAN,CAAJ,GAAwBC,KAAxB,EAEIK,KAAA,EAKZ,OAAOA,MAnBX,CAxBwH;",
"sources":["node_modules/Phaser/src/utils/array/CountAllMatching.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$array$CountAllMatching\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar SafeRange = require('./SafeRange');\r\n\r\n/**\r\n * Returns the total number of elements in the array which have a property matching the given value.\r\n *\r\n * @function Phaser.Utils.Array.CountAllMatching\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search.\r\n * @param {string} property - The property to test on each array element.\r\n * @param {*} value - The value to test the property against. Must pass a strict (`===`) comparison check.\r\n * @param {integer} [startIndex] - An optional start index to search from.\r\n * @param {integer} [endIndex] - An optional end index to search to.\r\n *\r\n * @return {integer} The total number of elements with properties matching the given value.\r\n */\r\nvar CountAllMatching = function (array, property, value, startIndex, endIndex)\r\n{\r\n    if (startIndex === undefined) { startIndex = 0; }\r\n    if (endIndex === undefined) { endIndex = array.length; }\r\n\r\n    var total = 0;\r\n\r\n    if (SafeRange(array, startIndex, endIndex))\r\n    {\r\n        for (var i = startIndex; i < endIndex; i++)\r\n        {\r\n            var child = array[i];\r\n\r\n            if (child[property] === value)\r\n            {\r\n                total++;\r\n            }\r\n        }\r\n    }\r\n\r\n    return total;\r\n};\r\n\r\nmodule.exports = CountAllMatching;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","SafeRange","CountAllMatching","array","property","value","startIndex","endIndex","undefined","length","total","i","child"]
}
