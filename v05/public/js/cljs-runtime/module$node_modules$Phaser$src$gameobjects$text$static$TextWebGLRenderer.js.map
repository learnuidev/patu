{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$text$static$TextWebGLRenderer.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOrI,IAAIC,MAAQH,OAAA,CAAQ,qDAAR,CAoDZC,OAAAC,QAAA,CAnCwBE,QAAS,CAACC,QAAD,CAAWC,GAAX,CAAgBC,uBAAhB,CAAyCC,MAAzC,CAAiDC,YAAjD,CACjC,CACI,GAAiB,EAAjB,GAAIH,GAAAI,KAAJ,CAAA,CAKIC,QAAAA,CAAQL,GAAAK,MACRC,wBAAAA,CAAQD,QAAAC,MACZ,KAAIC,OAASF,QAAAE,OAAb,CACIC,QAAUX,KAAAY,wBAEd,KAAAC,SAAAC,aAAA,CACIX,GADJ,CAEIK,QAAAO,UAFJ,CAGIN,uBAHJ,CAGWC,MAHX;AAIIP,GAAAa,EAJJ,CAIWb,GAAAc,EAJX,CAKIR,uBALJ,CAKYN,GAAAe,MAAAC,WALZ,CAKkCT,MALlC,CAK2CP,GAAAe,MAAAC,WAL3C,CAMIhB,GAAAiB,OANJ,CAMgBjB,GAAAkB,OANhB,CAOIlB,GAAAmB,SAPJ,CAQInB,GAAAoB,MARJ,CAQepB,GAAAqB,MARf,CASIrB,GAAAsB,cATJ,CASuBtB,GAAAuB,cATvB,CAUIvB,GAAAwB,eAVJ,CAUwBxB,GAAAyB,eAVxB,CAWI,CAXJ,CAWO,CAXP,CAWUnB,uBAXV,CAWiBC,MAXjB,CAYIC,OAAA,CAAQR,GAAA0B,QAAR,CAAqBxB,MAAAyB,MAArB,CAAoC3B,GAAA4B,SAApC,CAZJ,CAaIpB,OAAA,CAAQR,GAAA6B,QAAR,CAAqB3B,MAAAyB,MAArB,CAAoC3B,GAAA8B,SAApC,CAbJ,CAcItB,OAAA,CAAQR,GAAA+B,QAAR,CAAqB7B,MAAAyB,MAArB,CAAoC3B,GAAAgC,SAApC,CAdJ,CAeIxB,OAAA,CAAQR,GAAAiC,QAAR,CAAqB/B,MAAAyB,MAArB,CAAoC3B,GAAAkC,SAApC,CAfJ,CAgBKlC,GAAAmC,UAhBL,EAgBsBnC,GAAAoC,SAhBtB,CAiBI,CAjBJ,CAiBO,CAjBP,CAkBIlC,MAlBJ,CAmBIC,YAnBJ,CAVA,CADJ,CAzBqI;",
"sources":["node_modules/Phaser/src/gameobjects/text/static/TextWebGLRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$text$static$TextWebGLRenderer\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = require('../../../renderer/webgl/Utils');\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    if (src.text === '')\r\n    {\r\n        return;\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    this.pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src._tintTL, camera.alpha * src._alphaTL),\r\n        getTint(src._tintTR, camera.alpha * src._alphaTR),\r\n        getTint(src._tintBL, camera.alpha * src._alphaBL),\r\n        getTint(src._tintBR, camera.alpha * src._alphaBR),\r\n        (src._isTinted && src.tintFill),\r\n        0, 0,\r\n        camera,\r\n        parentMatrix\r\n    );\r\n};\r\n\r\nmodule.exports = TextWebGLRenderer;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Utils","TextWebGLRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","text","frame","width","height","getTint","getTintAppendFloatAlpha","pipeline","batchTexture","glTexture","x","y","style","resolution","scaleX","scaleY","rotation","flipX","flipY","scrollFactorX","scrollFactorY","displayOriginX","displayOriginY","_tintTL","alpha","_alphaTL","_tintTR","_alphaTR","_tintBL","_alphaBL","_tintBR","_alphaBR","_isTinted","tintFill"]
}
