{
"version":3,
"file":"module$node_modules$Phaser$src$math$RandomXYZ.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiC1GD,MAAAC,QAAA,CAfgBC,QAAS,CAACC,IAAD,CAAOC,MAAP,CACzB,CACmBC,IAAAA,EAAf,GAAID,MAAJ,GAA4BA,MAA5B,CAAqC,CAArC,CAEA,KAAIE,EAAoB,CAApBA,CAAIC,IAAAC,OAAA,EAAJF,CAAwBC,IAAAE,GAA5B,CACIC,EAAqB,CAArBA,CAAKH,IAAAC,OAAA,EAALE,CAA0B,CAD9B,CAEIC,OAASJ,IAAAK,KAAA,CAAU,CAAV,CAAcF,CAAd,CAAkBA,CAAlB,CAATC,CAAgCP,MAEpCD,KAAAU,EAAA,CAASN,IAAAO,IAAA,CAASR,CAAT,CAAT,CAAuBK,MACvBR,KAAAY,EAAA,CAASR,IAAAS,IAAA,CAASV,CAAT,CAAT,CAAuBK,MACvBR,KAAAO,EAAA,CAASA,CAAT,CAAaN,MAEb,OAAOD,KAXX,CAnB0G;",
"sources":["node_modules/Phaser/src/math/RandomXYZ.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$RandomXYZ\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Compute a random position vector in a spherical area, optionally defined by the given radius.\r\n *\r\n * @function Phaser.Math.RandomXYZ\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Math.Vector3} vec3 - The Vector to compute random values for.\r\n * @param {number} [radius=1] - The radius.\r\n *\r\n * @return {Phaser.Math.Vector3} The given Vector.\r\n */\r\nvar RandomXYZ = function (vec3, radius)\r\n{\r\n    if (radius === undefined) { radius = 1; }\r\n\r\n    var r = Math.random() * 2 * Math.PI;\r\n    var z = (Math.random() * 2) - 1;\r\n    var zScale = Math.sqrt(1 - z * z) * radius;\r\n\r\n    vec3.x = Math.cos(r) * zScale;\r\n    vec3.y = Math.sin(r) * zScale;\r\n    vec3.z = z * radius;\r\n\r\n    return vec3;\r\n};\r\n\r\nmodule.exports = RandomXYZ;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","RandomXYZ","vec3","radius","undefined","r","Math","random","PI","z","zScale","sqrt","x","cos","y","sin"]
}
