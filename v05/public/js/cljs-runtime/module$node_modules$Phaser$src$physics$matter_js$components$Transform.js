shadow$provide.module$node_modules$Phaser$src$physics$matter_js$components$Transform=function(global,require,module,exports){var Body=require("module$node_modules$Phaser$src$physics$matter_js$lib$body$Body"),MATH_CONST=require("module$node_modules$Phaser$src$math$const"),WrapAngle=require("module$node_modules$Phaser$src$math$angle$Wrap"),WrapAngleDegrees=require("module$node_modules$Phaser$src$math$angle$WrapDegrees");module.exports={x:{get:function(){return this.body.position.x},set:function(value){this._tempVec2.set(value,
this.y);Body.setPosition(this.body,this._tempVec2)}},y:{get:function(){return this.body.position.y},set:function(value){this._tempVec2.set(this.x,value);Body.setPosition(this.body,this._tempVec2)}},scaleX:{get:function(){return this._scaleX},set:function(value){var factor=1/this._scaleX;this._scaleX=value;this.renderFlags=0===this._scaleX?this.renderFlags&-5:this.renderFlags|4;Body.scale(this.body,factor,this._scaleY);Body.scale(this.body,value,this._scaleY)}},scaleY:{get:function(){return this._scaleY},
set:function(value){var factor=1/this._scaleY;this._scaleY=value;this.renderFlags=0===this._scaleY?this.renderFlags&-5:this.renderFlags|4;Body.scale(this.body,this._scaleX,factor);Body.scale(this.body,this._scaleX,value)}},angle:{get:function(){return WrapAngleDegrees(this.body.angle*MATH_CONST.RAD_TO_DEG)},set:function(value){this.rotation=WrapAngleDegrees(value)*MATH_CONST.DEG_TO_RAD}},rotation:{get:function(){return this.body.angle},set:function(value){this._rotation=WrapAngle(value);Body.setAngle(this.body,
this._rotation)}},setPosition:function(x,y){void 0===x&&(x=0);void 0===y&&(y=x);this._tempVec2.set(x,y);Body.setPosition(this.body,this._tempVec2);return this},setRotation:function(radians){void 0===radians&&(radians=0);this._rotation=WrapAngle(radians);Body.setAngle(this.body,radians);return this},setFixedRotation:function(){Body.setInertia(this.body,Infinity);return this},setAngle:function(degrees){void 0===degrees&&(degrees=0);this.angle=degrees;Body.setAngle(this.body,this.rotation);return this},
setScale:function(x,y,point){void 0===x&&(x=1);void 0===y&&(y=x);var factorX=1/this._scaleX,factorY=1/this._scaleY;this._scaleX=x;this._scaleY=y;Body.scale(this.body,factorX,factorY,point);Body.scale(this.body,x,y,point);return this}}}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$components$Transform.js.map
