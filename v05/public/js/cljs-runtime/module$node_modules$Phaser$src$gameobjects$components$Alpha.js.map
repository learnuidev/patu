{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$components$Alpha.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/Phaser/src/gameobjects/components/Alpha.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$components$Alpha\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Clamp = require('../../math/Clamp');\r\n\r\n//  bitmask flag for GameObject.renderMask\r\nvar _FLAG = 2; // 0010\r\n\r\n/**\r\n * Provides methods used for setting the alpha properties of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @name Phaser.GameObjects.Components.Alpha\r\n * @since 3.0.0\r\n */\r\n\r\nvar Alpha = {\r\n\r\n    /**\r\n     * Private internal value. Holds the global alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#_alpha\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alpha: 1,\r\n\r\n    /**\r\n     * Private internal value. Holds the top-left alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#_alphaTL\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alphaTL: 1,\r\n\r\n    /**\r\n     * Private internal value. Holds the top-right alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#_alphaTR\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alphaTR: 1,\r\n\r\n    /**\r\n     * Private internal value. Holds the bottom-left alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#_alphaBL\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alphaBL: 1,\r\n\r\n    /**\r\n     * Private internal value. Holds the bottom-right alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#_alphaBR\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alphaBR: 1,\r\n\r\n    /**\r\n     * Clears all alpha values associated with this Game Object.\r\n     *\r\n     * Immediately sets the alpha levels back to 1 (fully opaque).\r\n     *\r\n     * @method Phaser.GameObjects.Components.Alpha#clearAlpha\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    clearAlpha: function ()\r\n    {\r\n        return this.setAlpha(1);\r\n    },\r\n\r\n    /**\r\n     * Set the Alpha level of this Game Object. The alpha controls the opacity of the Game Object as it renders.\r\n     * Alpha values are provided as a float between 0, fully transparent, and 1, fully opaque.\r\n     *\r\n     * If your game is running under WebGL you can optionally specify four different alpha values, each of which\r\n     * correspond to the four corners of the Game Object. Under Canvas only the `topLeft` value given is used.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Alpha#setAlpha\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [topLeft=1] - The alpha value used for the top-left of the Game Object. If this is the only value given it's applied across the whole Game Object.\r\n     * @param {number} [topRight] - The alpha value used for the top-right of the Game Object. WebGL only.\r\n     * @param {number} [bottomLeft] - The alpha value used for the bottom-left of the Game Object. WebGL only.\r\n     * @param {number} [bottomRight] - The alpha value used for the bottom-right of the Game Object. WebGL only.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setAlpha: function (topLeft, topRight, bottomLeft, bottomRight)\r\n    {\r\n        if (topLeft === undefined) { topLeft = 1; }\r\n\r\n        //  Treat as if there is only one alpha value for the whole Game Object\r\n        if (topRight === undefined)\r\n        {\r\n            this.alpha = topLeft;\r\n        }\r\n        else\r\n        {\r\n            this._alphaTL = Clamp(topLeft, 0, 1);\r\n            this._alphaTR = Clamp(topRight, 0, 1);\r\n            this._alphaBL = Clamp(bottomLeft, 0, 1);\r\n            this._alphaBR = Clamp(bottomRight, 0, 1);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * The alpha value of the Game Object.\r\n     *\r\n     * This is a global value, impacting the entire Game Object, not just a region of it.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#alpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    alpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alpha;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alpha = v;\r\n            this._alphaTL = v;\r\n            this._alphaTR = v;\r\n            this._alphaBL = v;\r\n            this._alphaBR = v;\r\n\r\n            if (v === 0)\r\n            {\r\n                this.renderFlags &= ~_FLAG;\r\n            }\r\n            else\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The alpha value starting from the top-left of the Game Object.\r\n     * This value is interpolated from the corner to the center of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#alphaTopLeft\r\n     * @type {number}\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    alphaTopLeft: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alphaTL;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alphaTL = v;\r\n\r\n            if (v !== 0)\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The alpha value starting from the top-right of the Game Object.\r\n     * This value is interpolated from the corner to the center of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#alphaTopRight\r\n     * @type {number}\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    alphaTopRight: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alphaTR;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alphaTR = v;\r\n\r\n            if (v !== 0)\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The alpha value starting from the bottom-left of the Game Object.\r\n     * This value is interpolated from the corner to the center of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#alphaBottomLeft\r\n     * @type {number}\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    alphaBottomLeft: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alphaBL;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alphaBL = v;\r\n\r\n            if (v !== 0)\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The alpha value starting from the bottom-right of the Game Object.\r\n     * This value is interpolated from the corner to the center of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#alphaBottomRight\r\n     * @type {number}\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    alphaBottomRight: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alphaBR;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alphaBR = v;\r\n\r\n            if (v !== 0)\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Alpha;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Clamp","Alpha","_alpha","_alphaTL","_alphaTR","_alphaBL","_alphaBR","clearAlpha","setAlpha","topLeft","topRight","bottomLeft","bottomRight","undefined","alpha","get","set","value","v","renderFlags","_FLAG","alphaTopLeft","alphaTopRight","alphaBottomLeft","alphaBottomRight"]
}
