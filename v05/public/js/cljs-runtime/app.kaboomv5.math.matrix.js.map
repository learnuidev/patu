{"version":3,"sources":["app/kaboomv5/math/matrix.cljs"],"mappings":"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","names":["app.kaboomv5.math.matrix/neg","num","app.kaboomv5.math.matrix/matrix","val","js/goog.math.Matrix","cljs.core/clj->js","app.kaboomv5.math.matrix/m1","var_args","G__104403","app.kaboomv5.math.matrix/mat4","js/Error","app.kaboomv5.math.matrix.mat4","m","app.kaboomv5.math.matrix/mat4?","cljs.core._EQ_","app.kaboomv5.math.matrix/mult","this","mat","p__104406","map__104407","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","app.kaboomv5.math.matrix/mult-vec4","x","y","z","w","vect","cljs.core.js__GT_clj","app.kaboomv5.math.vector/vec4","cljs.core.nth","app.kaboomv5.math.matrix/mult-vec3","v3","map__104409","cljs.core.assoc","app.kaboomv5.math.vector/vec3","p__104411","map__104412","app.kaboomv5.math.matrix/mult-vec2","app.kaboomv5.math.vector.vec2","p__104417","map__104418","app.kaboomv5.math.matrix/translate","p__104420","map__104421","app.kaboomv5.math.matrix/scale","app.kaboomv5.math.matrix/rot-x","a","js/Math.cos","js/Math.sin","app.kaboomv5.math.matrix/rot-y","app.kaboomv5.math.matrix/rot-z","app.kaboomv5.math.matrix/invert"],"sourcesContent":["(ns app.kaboomv5.math.matrix\n  (:require [goog.math :as math]\n            [clojure.repl :refer [doc]]\n            [app.kaboomv5.math.vector :as mv]\n            [app.kaboomv5.math.color :as mc])\n  (:import [goog.math Vec2 Vec3 Matrix])\n  (:import [goog.math Matrix]))\n\n;; 0\n(defn neg [num]\n  (* -1 num))\n\n;; === Matrix\n(defn matrix [val]\n  (Matrix. (clj->js val)))\n\n(comment)\n(def m1 (matrix [[1 0 3 4]\n                 [1 1 3 5]\n                 [1 2 1 5]\n                 [1 2 3 1]]))\n\n(comment\n  (.multiply m1 m1)\n  (.getInverse m1)) ;; same as invert\n\n\n(defn mat4\n  ([] (mat4 [[1 0 0 0]\n             [0 1 0 0]\n             [0 0 1 0]\n             [0 0 0 1]]))\n  ([m] (matrix m)))\n(comment\n  (js/console.log (mat4))\n  (.flat (.toArray (mat4))))\n\n;; 13 isMat4\n(defn mat4? [m]\n  (= 4 (.-width (.getSize m))))\n\n(defn mult [this mat]\n  (.multiply this mat))\n;;\n(comment\n  (js/console.log (mult (mat4) (mat4))))\n\n(defn mult-vec4 [this {:keys [x y z w]}]\n  (let [vect (js->clj (.flat (.toArray this)))]\n    (mv/vec4\n     (+ (* x (nth vect 0)) (* y (nth vect 4)) (* z (nth vect 8)) (* w (nth vect 12)))\n     (+ (* x (nth vect 1)) (* y (nth vect 5)) (* z (nth vect 9)) (* w (nth vect 13)))\n     (+ (* x (nth vect 2)) (* y (nth vect 6)) (* z (nth vect 10)) (* w (nth vect 14)))\n     (+ (* x (nth vect 3)) (* y (nth vect 7)) (* z (nth vect 11)) (* w (nth vect 15))))))\n\n(comment\n  (mult-vec4 (mat4 [[1 2 3 4] [4 5 6 7] [8 9 10 11] [12 13 14 15]]) (mv/vec4 1 2 4 5)))\n\n(defn mult-vec3 [mat v3]\n  (let [{:keys [x y z]} (mult-vec4 mat (assoc v3 :w 1.0))]\n    (mv/vec3 x y z)))\n\n(comment\n  (mult-vec3 (mat4 [[1 2 3 4] [4 5 6 7] [8 9 10 11] [12 13 14 15]]) (mv/vec3 1 2 4)))\n\n;;\n(defn mult-vec2 [mat {:keys [x y]}]\n  (let [vect (js->clj (.flat (.toArray mat)))]\n    (mv/vec2\n     (+ (* x (nth vect 0)) (* y (nth vect 4)) (* 0 (nth vect 8)) (* 1 (nth vect 12)))\n     (+ (* x (nth vect 1)) (* y (nth vect 5)) (* 0 (nth vect 9)) (* 1 (nth vect 13))))))\n\n(comment\n  (mult-vec2 (mat4 [[1 2 3 4] [4 5 6 7] [8 9 10 11] [12 13 14 15]]) (mv/vec2 1 2)))\n\n(defn translate [this {:keys [x y]}]\n  (mult this (mat4 [[1 0 0 0]\n                    [0 1 0 0]\n                    [0 0 1 0]\n                    [x y 0 1]])))\n\n(comment\n  (translate (mat4 [[1 2 4 5]\n                    [1 3 4 5]\n                    [1 3 4 5]\n                    [1 3 4 5]])\n             {:x 2 :y 3}))\n\n(defn scale [this {:keys [x y]}]\n  (mult this (mat4 [[x 0 0 0]\n                    [0 y 0 0]\n                    [0 0 1 0]\n                    [0 0 0 1]])))\n\n(comment\n  (scale (mat4 [[1 0 1 0]\n                [1 1 1 1]\n                [1 1 1 1]\n                [1 1 1 1]])\n         {:x 2 :y 2}))\n\n(defn rot-x [this a]\n  (mult this (mat4 [[1               0                     0 0]\n                    [0 (js/Math.cos a) (neg (js/Math.sin a)) 0]\n                    [0 (js/Math.sin a) (js/Math.cos a)       0]\n                    [0               0                     0 1]])))\n\n(defn rot-y [this a]\n  (mult this (mat4 [[(js/Math.cos a) 0 (neg (js/Math.sin a)) 0]\n                    [0               1 0                     0]\n                    [(js/Math.sin a) 0 (js/Math.cos a)       0]\n                    [0               0 0                     1]])))\n\n(defn rot-z [this a]\n  (mult this (mat4 [[(js/Math.cos a) (neg (js/Math.sin a)) 0 0]\n                    [(js/Math.sin a) (js/Math.cos a)       0 0]\n                    [0               0                     1 0]\n                    [0               0                     0 1]])))\n\n(comment\n  (-> (mat4)\n      (rot-z 1)\n      (rot-x 2)\n      (translate {:x 10 :y 22})\n      (translate (mv/scale {:x 10 :y 22} 0.5))))\n(defn invert [mat]\n  (.getInverse mat))\n(comment\n  (invert (mat4 [[1 3 4 12]\n                 [34 1 4 24]\n                 [14 1 1  1]\n                 [4 1 1  1]]))\n  (.getValueAt (mat4) 1 1))\n"]}