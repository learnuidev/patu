shadow$provide.module$node_modules$Phaser$src$physics$matter_js$World=function(global,require,module,exports){var Bodies=require("module$node_modules$Phaser$src$physics$matter_js$lib$factory$Bodies");global=require("module$node_modules$Phaser$src$utils$Class");var Common=require("module$node_modules$Phaser$src$physics$matter_js$lib$core$Common"),Composite=require("module$node_modules$Phaser$src$physics$matter_js$lib$body$Composite"),Engine=require("module$node_modules$Phaser$src$physics$matter_js$lib$core$Engine"),
EventEmitter=require("module$node_modules$eventemitter3$index"),GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),GetValue=require("module$node_modules$Phaser$src$utils$object$GetValue"),MatterBody=require("module$node_modules$Phaser$src$physics$matter_js$lib$body$Body"),MatterEvents=require("module$node_modules$Phaser$src$physics$matter_js$lib$core$Events"),MatterTileBody=require("module$node_modules$Phaser$src$physics$matter_js$MatterTileBody"),MatterWorld=require("module$node_modules$Phaser$src$physics$matter_js$lib$body$World"),
Vector=require("module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Vector");require=new global({Extends:EventEmitter,initialize:function(scene,config){EventEmitter.call(this);this.scene=scene;this.engine=Engine.create(config);this.localWorld=this.engine.world;var gravity=GetValue(config,"gravity",null);gravity&&this.setGravity(gravity.x,gravity.y,gravity.scale);this.walls={left:null,right:null,top:null,bottom:null};if(GetFastValue(config,"setBounds",!1)){var boundsConfig=config.setBounds;
if("boolean"===typeof boundsConfig)this.setBounds();else{gravity=GetFastValue(boundsConfig,"x",0);var y=GetFastValue(boundsConfig,"y",0),width=GetFastValue(boundsConfig,"width",scene.sys.game.config.width);scene=GetFastValue(boundsConfig,"height",scene.sys.game.config.height);var thickness=GetFastValue(boundsConfig,"thickness",64),left=GetFastValue(boundsConfig,"left",!0),right=GetFastValue(boundsConfig,"right",!0),top=GetFastValue(boundsConfig,"top",!0);boundsConfig=GetFastValue(boundsConfig,"bottom",
!0);this.setBounds(gravity,y,width,scene,thickness,left,right,top,boundsConfig)}}this.enabled=GetValue(config,"enabled",!0);this.correction=GetValue(config,"correction",1);this.getDelta=GetValue(config,"getDelta",this.update60Hz);this.autoUpdate=GetValue(config,"autoUpdate",!0);this.drawDebug=GetValue(config,"debug",!1);this.defaults={debugShowBody:GetFastValue(config,"debugShowBody",!0),debugShowStaticBody:GetFastValue(config,"debugShowStaticBody",!0),debugShowVelocity:GetFastValue(config,"debugShowVelocity",
!0),bodyDebugColor:GetFastValue(config,"debugBodyColor",16711935),bodyDebugFillColor:GetFastValue(config,"bodyDebugFillColor",14919651),staticBodyDebugColor:GetFastValue(config,"debugBodyColor",255),velocityDebugColor:GetFastValue(config,"debugVelocityColor",65280),debugShowJoint:GetFastValue(config,"debugShowJoint",!0),jointDebugColor:GetFastValue(config,"debugJointColor",0),debugWireframes:GetFastValue(config,"debugWireframes",!0),debugShowInternalEdges:GetFastValue(config,"debugShowInternalEdges",
!1),debugShowConvexHulls:GetFastValue(config,"debugShowConvexHulls",!1),debugConvexHullColor:GetFastValue(config,"debugConvexHullColor",11184810),debugShowSleeping:GetFastValue(config,"debugShowSleeping",!1)};this.drawDebug&&this.createDebugGraphic();this.setEventsProxy()},setEventsProxy:function(){var _this=this,engine=this.engine;MatterEvents.on(engine,"beforeUpdate",function(event){_this.emit("beforeupdate",event)});MatterEvents.on(engine,"afterUpdate",function(event){_this.emit("afterupdate",
event)});MatterEvents.on(engine,"collisionStart",function(event){var pairs=event.pairs;if(0<pairs.length){var bodyA=pairs[0].bodyA;var bodyB=pairs[0].bodyB}_this.emit("collisionstart",event,bodyA,bodyB)});MatterEvents.on(engine,"collisionActive",function(event){var pairs=event.pairs;if(0<pairs.length){var bodyA=pairs[0].bodyA;var bodyB=pairs[0].bodyB}_this.emit("collisionactive",event,bodyA,bodyB)});MatterEvents.on(engine,"collisionEnd",function(event){var pairs=event.pairs;if(0<pairs.length){var bodyA=
pairs[0].bodyA;var bodyB=pairs[0].bodyB}_this.emit("collisionend",event,bodyA,bodyB)})},setBounds:function(x,y,width,height,thickness,left,right,top,bottom){void 0===x&&(x=0);void 0===y&&(y=0);void 0===width&&(width=this.scene.sys.game.config.width);void 0===height&&(height=this.scene.sys.game.config.height);void 0===thickness&&(thickness=128);void 0===left&&(left=!0);void 0===right&&(right=!0);void 0===top&&(top=!0);void 0===bottom&&(bottom=!0);this.updateWall(left,"left",x-thickness,y,thickness,
height);this.updateWall(right,"right",x+width,y,thickness,height);this.updateWall(top,"top",x,y-thickness,width,thickness);this.updateWall(bottom,"bottom",x,y+height,width,thickness);return this},updateWall:function(add,position,x,y,width,height){var wall=this.walls[position];add?(wall&&MatterWorld.remove(this.localWorld,wall),this.walls[position]=this.create(x+width/2,y+height/2,width,height,{isStatic:!0,friction:0,frictionStatic:0})):(wall&&MatterWorld.remove(this.localWorld,wall),this.walls[position]=
null)},createDebugGraphic:function(){var graphic=this.scene.sys.add.graphics({x:0,y:0});graphic.setDepth(Number.MAX_VALUE);this.debugGraphic=graphic;this.drawDebug=!0;return graphic},disableGravity:function(){this.localWorld.gravity.x=0;this.localWorld.gravity.y=0;this.localWorld.gravity.scale=0;return this},setGravity:function(x,y,scale){void 0===x&&(x=0);void 0===y&&(y=1);this.localWorld.gravity.x=x;this.localWorld.gravity.y=y;void 0!==scale&&(this.localWorld.gravity.scale=scale);return this},create:function(x,
y,width,height,options){x=Bodies.rectangle(x,y,width,height,options);MatterWorld.add(this.localWorld,x);return x},add:function(object){MatterWorld.add(this.localWorld,object);return this},remove:function(object,deep){Composite.removeBody(this.localWorld,object.body?object.body:object,deep);return this},removeConstraint:function(constraint,deep){Composite.remove(this.localWorld,constraint,deep);return this},convertTilemapLayer:function(tilemapLayer,options){var layerData=tilemapLayer.layer;tilemapLayer=
tilemapLayer.getTilesWithin(0,0,layerData.width,layerData.height,{isColliding:!0});this.convertTiles(tilemapLayer,options);return this},convertTiles:function(tiles,options){if(0===tiles.length)return this;for(var i=0;i<tiles.length;i++)new MatterTileBody(this,tiles[i],options);return this},nextGroup:function(isNonColliding){return MatterBody.nextGroup(isNonColliding)},nextCategory:function(){return MatterBody.nextCategory()},pause:function(){this.enabled=!1;this.emit("pause");return this},resume:function(){this.enabled=
!0;this.emit("resume");return this},update:function(time,delta){this.enabled&&this.autoUpdate&&Engine.update(this.engine,this.getDelta(time,delta),this.correction)},step:function(delta,correction){Engine.update(this.engine,delta,correction)},update60Hz:function(){return 1E3/60},update30Hz:function(){return 1E3/30},postUpdate:function(){if(this.drawDebug){this.debugGraphic.clear();var bodies=Composite.allBodies(this.localWorld);this.defaults.debugWireframes?(this.defaults.debugShowConvexHulls&&this.renderConvexHulls(bodies),
this.renderWireframes(bodies)):this.renderBodies(bodies);this.defaults.debugShowJoint&&this.renderJoints()}},renderConvexHulls:function(bodies){var graphics=this.debugGraphic;graphics.lineStyle(1,this.defaults.debugConvexHullColor);graphics.beginPath();for(var i=0;i<bodies.length;i++){var body=bodies[i];if(body.render.visible&&1!==body.parts.length){graphics.moveTo(body.vertices[0].x,body.vertices[0].y);for(var j=1;j<body.vertices.length;j++)graphics.lineTo(body.vertices[j].x,body.vertices[j].y);
graphics.lineTo(body.vertices[0].x,body.vertices[0].y)}}graphics.strokePath()},renderWireframes:function(bodies){var graphics=this.debugGraphic,showInternalEdges=this.defaults.debugShowInternalEdges;graphics.lineStyle(1,this.defaults.bodyDebugColor);graphics.beginPath();for(var i=0;i<bodies.length;i++){var body=bodies[i];if(body.render.visible)for(var k=1<body.parts.length?1:0;k<body.parts.length;k++){var part=body.parts[k],vertLength=part.vertices.length;graphics.moveTo(part.vertices[0].x,part.vertices[0].y);
for(var j=1;j<vertLength;j++)!part.vertices[j-1].isInternal||showInternalEdges?graphics.lineTo(part.vertices[j].x,part.vertices[j].y):graphics.moveTo(part.vertices[j].x,part.vertices[j].y),part.vertices[j].isInternal&&!showInternalEdges&&graphics.moveTo(part.vertices[(j+1)%vertLength].x,part.vertices[(j+1)%vertLength].y);graphics.lineTo(part.vertices[0].x,part.vertices[0].y)}}graphics.strokePath()},renderBodies:function(bodies){var graphics=this.debugGraphic,showInternalEdges=this.defaults.debugShowInternalEdges||
!this.defaults.debugWireframes,showSleeping=this.defaults.debugShowSleeping,wireframes=this.defaults.debugWireframes,i,k;for(i=0;i<bodies.length;i++){var body=bodies[i];if(body.render.visible)for(k=1<body.parts.length?1:0;k<body.parts.length;k++){var part=body.parts[k];if(part.render.visible){showSleeping&&body.isSleeping?(graphics.lineStyle(1,this.defaults.bodyDebugColor,.5*part.render.opacity),graphics.fillStyle(this.defaults.bodyDebugColor,.5*part.render.opacity)):(graphics.lineStyle(1,this.defaults.bodyDebugColor,
part.render.opacity),graphics.fillStyle(this.defaults.bodyDebugColor,part.render.opacity));if(part.circleRadius)graphics.beginPath(),graphics.arc(part.position.x,part.position.y,part.circleRadius,0,2*Math.PI);else{graphics.beginPath();graphics.moveTo(part.vertices[0].x,part.vertices[0].y);for(var vertLength=part.vertices.length,j=1;j<vertLength;j++)!part.vertices[j-1].isInternal||showInternalEdges?graphics.lineTo(part.vertices[j].x,part.vertices[j].y):graphics.moveTo(part.vertices[j].x,part.vertices[j].y),
part.vertices[j].isInternal&&!showInternalEdges&&graphics.moveTo(part.vertices[(j+1)%part.vertices.length].x,part.vertices[(j+1)%part.vertices.length].y);graphics.lineTo(part.vertices[0].x,part.vertices[0].y);graphics.closePath()}wireframes?graphics.strokePath():graphics.fillPath()}}}},renderJoints:function(){var graphics=this.debugGraphic;graphics.lineStyle(2,this.defaults.jointDebugColor);for(var constraints=Composite.allConstraints(this.localWorld),i=0;i<constraints.length;i++){var constraint=
constraints[i];if(constraint.render.visible&&constraint.pointA&&constraint.pointB){constraint.render.lineWidth&&graphics.lineStyle(constraint.render.lineWidth,Common.colorToNumber(constraint.render.strokeStyle));var bodyA=constraint.bodyA,bodyB=constraint.bodyB;bodyA=bodyA?Vector.add(bodyA.position,constraint.pointA):constraint.pointA;if("pin"===constraint.render.type)graphics.beginPath(),graphics.arc(bodyA.x,bodyA.y,3,0,2*Math.PI),graphics.closePath();else{var end=bodyB?Vector.add(bodyB.position,
constraint.pointB):constraint.pointB;graphics.beginPath();graphics.moveTo(bodyA.x,bodyA.y);if("spring"===constraint.render.type){bodyB=Vector.sub(end,bodyA);for(var normal=Vector.perp(Vector.normalise(bodyB)),coils=Math.ceil(Common.clamp(constraint.length/5,12,20)),offset,j=1;j<coils;j+=1)offset=0===j%2?1:-1,graphics.lineTo(bodyA.x+j/coils*bodyB.x+normal.x*offset*4,bodyA.y+j/coils*bodyB.y+normal.y*offset*4)}graphics.lineTo(end.x,end.y)}constraint.render.lineWidth&&graphics.strokePath();constraint.render.anchors&&
(graphics.fillStyle(Common.colorToNumber(constraint.render.strokeStyle)),graphics.beginPath(),graphics.arc(bodyA.x,bodyA.y,6,0,2*Math.PI),graphics.arc(end.x,end.y,6,0,2*Math.PI),graphics.closePath(),graphics.fillPath())}}},fromPath:function(path,points){void 0===points&&(points=[]);path.replace(/L?\s*([\-\d\.e]+)[\s,]*([\-\d\.e]+)*/ig,function(match,x,y){points.push({x:parseFloat(x),y:parseFloat(y)})});return points},shutdown:function(){MatterEvents.off(this.engine);this.removeAllListeners();MatterWorld.clear(this.localWorld,
!1);Engine.clear(this.engine);this.drawDebug&&this.debugGraphic.destroy()},destroy:function(){this.shutdown()}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$World.js.map
