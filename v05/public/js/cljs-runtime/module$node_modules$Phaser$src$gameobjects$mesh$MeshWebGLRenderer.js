shadow$provide.module$node_modules$Phaser$src$gameobjects$mesh$MeshWebGLRenderer=function(global,require,module,exports){var Utils=require("module$node_modules$Phaser$src$renderer$webgl$Utils");module.exports=function(renderer,src,interpolationPercentage,camera,parentMatrix){interpolationPercentage=this.pipeline;renderer.setPipeline(interpolationPercentage,src);var camMatrix=interpolationPercentage._tempMatrix1,spriteMatrix=interpolationPercentage._tempMatrix2;renderer=interpolationPercentage._tempMatrix3;
spriteMatrix.applyITRS(src.x,src.y,src.rotation,src.scaleX,src.scaleY);camMatrix.copyFrom(camera.matrix);parentMatrix?(camMatrix.multiplyWithOffset(parentMatrix,-camera.scrollX*src.scrollFactorX,-camera.scrollY*src.scrollFactorY),spriteMatrix.e=src.x,spriteMatrix.f=src.y):(spriteMatrix.e-=camera.scrollX*src.scrollFactorX,spriteMatrix.f-=camera.scrollY*src.scrollFactorY);camMatrix.multiply(spriteMatrix,renderer);var texture=src.frame.glTexture;parentMatrix=src.vertices;camMatrix=src.uv;spriteMatrix=
src.colors;var alphas=src.alphas,meshVerticesLength=parentMatrix.length,vertexCount=Math.floor(.5*meshVerticesLength);interpolationPercentage.vertexCount+vertexCount>=interpolationPercentage.vertexCapacity&&interpolationPercentage.flush();interpolationPercentage.setTexture2D(texture,0);texture=interpolationPercentage.vertexViewF32;var vertexViewU32=interpolationPercentage.vertexViewU32,vertexOffset=interpolationPercentage.vertexCount*interpolationPercentage.vertexComponentCount-1,colorIndex=0;src=
src.tintFill;for(var i=0;i<meshVerticesLength;i+=2){var x=parentMatrix[i+0],y=parentMatrix[i+1],tx=x*renderer.a+y*renderer.c+renderer.e;x=x*renderer.b+y*renderer.d+renderer.f;camera.roundPixels&&(tx|=0,x|=0);texture[++vertexOffset]=tx;texture[++vertexOffset]=x;texture[++vertexOffset]=camMatrix[i+0];texture[++vertexOffset]=camMatrix[i+1];texture[++vertexOffset]=src;vertexViewU32[++vertexOffset]=Utils.getTintAppendFloatAlpha(spriteMatrix[colorIndex],camera.alpha*alphas[colorIndex]);colorIndex++}interpolationPercentage.vertexCount+=
vertexCount}}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$mesh$MeshWebGLRenderer.js.map
