{
"version":3,
"file":"module$node_modules$Phaser$src$utils$array$RemoveAt.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOhH,IAAIC,UAAYH,OAAA,CAAQ,sDAAR,CAsChBC,OAAAC,QAAA,CAnBeE,QAAS,CAACC,KAAD,CAAQC,KAAR,CAAeC,QAAf,CAAyBC,OAAzB,CACxB,CACoBC,IAAAA,EAAhB,GAAID,OAAJ,GAA6BA,OAA7B,CAAuCH,KAAvC,CAEA,IAAY,CAAZ,CAAIC,KAAJ,EAAiBA,KAAjB,CAAyBD,KAAAK,OAAzB,CAAwC,CAAxC,CAEI,KAAUC,MAAJ,CAAU,qBAAV,CAAN,CAGAC,KAAAA,CAAOT,SAAA,CAAUE,KAAV,CAAiBC,KAAjB,CAEPC,SAAJ,EAEIA,QAAAM,KAAA,CAAcL,OAAd,CAAuBI,KAAvB,CAGJ,OAAOA,MAfX,CA3BgH;",
"sources":["node_modules/Phaser/src/utils/array/RemoveAt.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$array$RemoveAt\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar SpliceOne = require('./SpliceOne');\r\n\r\n/**\r\n * Removes the item from the given position in the array.\r\n * \r\n * The array is modified in-place.\r\n * \r\n * You can optionally specify a callback to be invoked for the item if it is successfully removed from the array.\r\n *\r\n * @function Phaser.Utils.Array.RemoveAt\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to be modified.\r\n * @param {integer} index - The array index to remove the item from. The index must be in bounds or it will throw an error.\r\n * @param {function} [callback] - A callback to be invoked for the item removed from the array.\r\n * @param {object} [context] - The context in which the callback is invoked.\r\n *\r\n * @return {*} The item that was removed.\r\n */\r\nvar RemoveAt = function (array, index, callback, context)\r\n{\r\n    if (context === undefined) { context = array; }\r\n\r\n    if (index < 0 || index > array.length - 1)\r\n    {\r\n        throw new Error('Index out of bounds');\r\n    }\r\n\r\n    var item = SpliceOne(array, index);\r\n\r\n    if (callback)\r\n    {\r\n        callback.call(context, item);\r\n    }\r\n\r\n    return item;\r\n};\r\n\r\nmodule.exports = RemoveAt;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","SpliceOne","RemoveAt","array","index","callback","context","undefined","length","Error","item","call"]
}
