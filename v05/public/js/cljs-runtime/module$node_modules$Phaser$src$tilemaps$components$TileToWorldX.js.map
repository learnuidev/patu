{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$components$TileToWorldX.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,gEAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuC5HD,MAAAC,QAAA,CAlBmBC,QAAS,CAACC,KAAD,CAAQC,MAAR,CAAgBC,KAAhB,CAC5B,CACI,IAAIC,UAAYD,KAAAE,cACZC,MAAAA,CAAeH,KAAAG,aACnB,KAAIC,YAAc,CAEdD,MAAJ,GAEmBE,IAAAA,EAIf,GAJIN,MAIJ,GAJ4BA,MAI5B,CAJqCI,KAAAG,MAAAC,QAAAC,KAIrC,EAFAJ,WAEA,CAFcD,KAAAM,EAEd,CAF+BV,MAAAW,QAE/B,EAFiD,CAEjD,CAFqDP,KAAAQ,cAErD,EAAAV,SAAA,EAAaE,KAAAS,OANjB,CASA,OAAOR,YAAP,CAAqBN,KAArB,CAA6BG,SAdjC,CAtB4H;",
"sources":["node_modules/Phaser/src/tilemaps/components/TileToWorldX.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$components$TileToWorldX\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Converts from tile X coordinates (tile units) to world X coordinates (pixels), factoring in the\r\n * layer's position, scale and scroll.\r\n *\r\n * @function Phaser.Tilemaps.Components.TileToWorldX\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} tileX - The x coordinate, in tiles, not pixels.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when calculating the tile index from the world values.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {number}\r\n */\r\nvar TileToWorldX = function (tileX, camera, layer)\r\n{\r\n    var tileWidth = layer.baseTileWidth;\r\n    var tilemapLayer = layer.tilemapLayer;\r\n    var layerWorldX = 0;\r\n\r\n    if (tilemapLayer)\r\n    {\r\n        if (camera === undefined) { camera = tilemapLayer.scene.cameras.main; }\r\n\r\n        layerWorldX = tilemapLayer.x + camera.scrollX * (1 - tilemapLayer.scrollFactorX);\r\n\r\n        tileWidth *= tilemapLayer.scaleX;\r\n    }\r\n\r\n    return layerWorldX + tileX * tileWidth;\r\n};\r\n\r\nmodule.exports = TileToWorldX;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","TileToWorldX","tileX","camera","layer","tileWidth","baseTileWidth","tilemapLayer","layerWorldX","undefined","scene","cameras","main","x","scrollX","scrollFactorX","scaleX"]
}
