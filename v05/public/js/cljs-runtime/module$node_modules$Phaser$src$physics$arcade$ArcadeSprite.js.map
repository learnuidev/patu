{
"version":3,
"file":"module$node_modules$Phaser$src$physics$arcade$ArcadeSprite.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,2DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOnHC,MAAAA,CAAQH,OAAA,CAAQ,4CAAR,CACRI,QAAAA,CAAaJ,OAAA,CAAQ,gEAAR,CACjB,KAAIK,OAASL,OAAA,CAAQ,0DAAR,CAqDTM,QAAAA,CAAe,IAAIH,MAAJ,CAAU,CAEzBI,QAASF,MAFgB,CAIzBG,OAAQ,CACJJ,OAAAK,aADI,CAEJL,OAAAM,QAFI,CAGJN,OAAAO,OAHI,CAIJP,OAAAQ,MAJI,CAKJR,OAAAS,KALI,CAMJT,OAAAU,OANI,CAOJV,OAAAW,SAPI,CAQJX,OAAAY,QARI;AASJZ,OAAAa,UATI,CAUJb,OAAAc,KAVI,CAWJd,OAAAe,KAXI,CAYJf,OAAAgB,SAZI,CAJiB,CAmBzBC,WAEAf,QAAsB,CAACgB,KAAD,CAAQC,CAAR,CAAWC,CAAX,CAAcC,OAAd,CAAuBC,KAAvB,CACtB,CACIrB,MAAAsB,KAAA,CAAY,IAAZ,CAAkBL,KAAlB,CAAyBC,CAAzB,CAA4BC,CAA5B,CAA+BC,OAA/B,CAAwCC,KAAxC,CAUA,KAAAE,KAAA,CAAY,IAXhB,CAtByB,CAAV,CAsCnB3B,OAAAC,QAAA,CAAiBI,OApGsG;",
"sources":["node_modules/Phaser/src/physics/arcade/ArcadeSprite.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$arcade$ArcadeSprite\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Components = require('./components');\r\nvar Sprite = require('../../gameobjects/sprite/Sprite');\r\n\r\n/**\r\n * @classdesc\r\n * An Arcade Physics Sprite Game Object.\r\n *\r\n * A Sprite Game Object is used for the display of both static and animated images in your game.\r\n * Sprites can have input events and physics bodies. They can also be tweened, tinted, scrolled\r\n * and animated.\r\n *\r\n * The main difference between a Sprite and an Image Game Object is that you cannot animate Images.\r\n * As such, Sprites take a fraction longer to process and have a larger API footprint due to the Animation\r\n * Component. If you do not require animation then you can safely use Images to replace Sprites in all cases.\r\n *\r\n * @class Sprite\r\n * @extends Phaser.GameObjects.Sprite\r\n * @memberOf Phaser.Physics.Arcade\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.Physics.Arcade.Components.Acceleration\r\n * @extends Phaser.Physics.Arcade.Components.Angular\r\n * @extends Phaser.Physics.Arcade.Components.Bounce\r\n * @extends Phaser.Physics.Arcade.Components.Debug\r\n * @extends Phaser.Physics.Arcade.Components.Drag\r\n * @extends Phaser.Physics.Arcade.Components.Enable\r\n * @extends Phaser.Physics.Arcade.Components.Friction\r\n * @extends Phaser.Physics.Arcade.Components.Gravity\r\n * @extends Phaser.Physics.Arcade.Components.Immovable\r\n * @extends Phaser.Physics.Arcade.Components.Mass\r\n * @extends Phaser.Physics.Arcade.Components.Size\r\n * @extends Phaser.Physics.Arcade.Components.Velocity\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.GetBounds\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.Pipeline\r\n * @extends Phaser.GameObjects.Components.ScaleMode\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.Texture\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\r\nvar ArcadeSprite = new Class({\r\n\r\n    Extends: Sprite,\r\n\r\n    Mixins: [\r\n        Components.Acceleration,\r\n        Components.Angular,\r\n        Components.Bounce,\r\n        Components.Debug,\r\n        Components.Drag,\r\n        Components.Enable,\r\n        Components.Friction,\r\n        Components.Gravity,\r\n        Components.Immovable,\r\n        Components.Mass,\r\n        Components.Size,\r\n        Components.Velocity\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function ArcadeSprite (scene, x, y, texture, frame)\r\n    {\r\n        Sprite.call(this, scene, x, y, texture, frame);\r\n\r\n        /**\r\n         * This Game Object's Physics Body.\r\n         *\r\n         * @name Phaser.Physics.Arcade.Sprite#body\r\n         * @type {?(Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody)}\r\n         * @default null\r\n         * @since 3.0.0\r\n         */\r\n        this.body = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = ArcadeSprite;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","Components","Sprite","ArcadeSprite","Extends","Mixins","Acceleration","Angular","Bounce","Debug","Drag","Enable","Friction","Gravity","Immovable","Mass","Size","Velocity","initialize","scene","x","y","texture","frame","call","body"]
}
