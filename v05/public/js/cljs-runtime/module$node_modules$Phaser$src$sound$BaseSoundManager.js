shadow$provide.module$node_modules$Phaser$src$sound$BaseSoundManager=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$utils$Class");var Clone=require("module$node_modules$Phaser$src$utils$object$Clone"),EventEmitter=require("module$node_modules$eventemitter3$index");require=require("module$node_modules$Phaser$src$utils$NOOP");require=new global({Extends:EventEmitter,initialize:function(game){EventEmitter.call(this);this.game=game;this.jsonCache=game.cache.json;
this.sounds=[];this.mute=!1;this.volume=1;this.pauseOnBlur=!0;this._rate=1;this._detune=0;this.locked=this.locked||!1;this.unlocked=!1;game.events.on("blur",function(){if(this.pauseOnBlur)this.onBlur()},this);game.events.on("focus",function(){if(this.pauseOnBlur)this.onFocus()},this);game.events.on("prestep",this.update,this);game.events.once("destroy",this.destroy,this)},add:require,addAudioSprite:function(key,config){void 0===config&&(config={});var sound=this.add(key,config);sound.spritemap=this.jsonCache.get(key).spritemap;
for(var markerName in sound.spritemap)if(sound.spritemap.hasOwnProperty(markerName)){key=Clone(config);var marker=sound.spritemap[markerName];key.loop=marker.hasOwnProperty("loop")?marker.loop:!1;sound.addMarker({name:markerName,start:marker.start,duration:marker.end-marker.start,config:key})}return sound},play:function(key,extra){key=this.add(key);key.once("ended",key.destroy,key);return extra?extra.name?(key.addMarker(extra),key.play(extra.name)):key.play(extra):key.play()},playAudioSprite:function(key,
spriteName,config){key=this.addAudioSprite(key);key.once("ended",key.destroy,key);return key.play(spriteName,config)},remove:function(sound){var index=this.sounds.indexOf(sound);return-1!==index?(sound.destroy(),this.sounds.splice(index,1),!0):!1},removeByKey:function(key){for(var removed=0,i=this.sounds.length-1;0<=i;i--){var sound=this.sounds[i];sound.key===key&&(sound.destroy(),this.sounds.splice(i,1),removed++)}return removed},pauseAll:function(){this.forEachActiveSound(function(sound){sound.pause()});
this.emit("pauseall",this)},resumeAll:function(){this.forEachActiveSound(function(sound){sound.resume()});this.emit("resumeall",this)},stopAll:function(){this.forEachActiveSound(function(sound){sound.stop()});this.emit("stopall",this)},unlock:require,onBlur:require,onFocus:require,update:function(time,delta){this.unlocked&&(this.locked=this.unlocked=!1,this.emit("unlocked",this));for(var i=this.sounds.length-1;0<=i;i--)this.sounds[i].pendingRemove&&this.sounds.splice(i,1);this.sounds.forEach(function(sound){sound.update(time,
delta)})},destroy:function(){this.removeAllListeners();this.forEachActiveSound(function(sound){sound.destroy()});this.sounds.length=0;this.game=this.sounds=null},forEachActiveSound:function(callback,scope){var _this=this;this.sounds.forEach(function(sound,index){sound.pendingRemove||callback.call(scope||_this,sound,index,_this.sounds)})},setRate:function(value){this.rate=value;return this},rate:{get:function(){return this._rate},set:function(value){this._rate=value;this.forEachActiveSound(function(sound){sound.calculateRate()});
this.emit("rate",this,value)}},setDetune:function(value){this.detune=value;return this},detune:{get:function(){return this._detune},set:function(value){this._detune=value;this.forEachActiveSound(function(sound){sound.calculateRate()});this.emit("detune",this,value)}}});module.exports=require}
//# sourceMappingURL=module$node_modules$Phaser$src$sound$BaseSoundManager.js.map
