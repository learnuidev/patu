{
"version":3,
"file":"goog.math.vec2.js",
"lineCount":194,
"mappings":"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",
"sources":["goog/math/vec2.js"],
"sourcesContent":["// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Defines a 2-element vector class that can be used for\n * coordinate math, useful for animation systems and point manipulation.\n *\n * Vec2 objects inherit from goog.math.Coordinate and may be used wherever a\n * Coordinate is required. Where appropriate, Vec2 functions accept both Vec2\n * and Coordinate objects as input.\n *\n * @author brenneman@google.com (Shawn Brenneman)\n */\n\ngoog.provide('goog.math.Vec2');\n\ngoog.require('goog.math');\ngoog.require('goog.math.Coordinate');\n\n\n\n/**\n * Class for a two-dimensional vector object and assorted functions useful for\n * manipulating points.\n *\n * @param {number} x The x coordinate for the vector.\n * @param {number} y The y coordinate for the vector.\n * @struct\n * @constructor\n * @extends {goog.math.Coordinate}\n */\ngoog.math.Vec2 = function(x, y) {\n  /**\n   * X-value\n   * @type {number}\n   */\n  this.x = x;\n\n  /**\n   * Y-value\n   * @type {number}\n   */\n  this.y = y;\n};\ngoog.inherits(goog.math.Vec2, goog.math.Coordinate);\n\n\n/**\n * @return {!goog.math.Vec2} A random unit-length vector.\n */\ngoog.math.Vec2.randomUnit = function() {\n  var angle = Math.random() * Math.PI * 2;\n  return new goog.math.Vec2(Math.cos(angle), Math.sin(angle));\n};\n\n\n/**\n * @return {!goog.math.Vec2} A random vector inside the unit-disc.\n */\ngoog.math.Vec2.random = function() {\n  var mag = Math.sqrt(Math.random());\n  var angle = Math.random() * Math.PI * 2;\n\n  return new goog.math.Vec2(Math.cos(angle) * mag, Math.sin(angle) * mag);\n};\n\n\n/**\n * Returns a new Vec2 object from a given coordinate.\n * @param {!goog.math.Coordinate} a The coordinate.\n * @return {!goog.math.Vec2} A new vector object.\n */\ngoog.math.Vec2.fromCoordinate = function(a) {\n  return new goog.math.Vec2(a.x, a.y);\n};\n\n\n/**\n * @return {!goog.math.Vec2} A new vector with the same coordinates as this one.\n * @override\n */\ngoog.math.Vec2.prototype.clone = function() {\n  return new goog.math.Vec2(this.x, this.y);\n};\n\n\n/**\n * Returns the magnitude of the vector measured from the origin.\n * @return {number} The length of the vector.\n */\ngoog.math.Vec2.prototype.magnitude = function() {\n  return Math.sqrt(this.x * this.x + this.y * this.y);\n};\n\n\n/**\n * Returns the squared magnitude of the vector measured from the origin.\n * NOTE(brenneman): Leaving out the square root is not a significant\n * optimization in JavaScript.\n * @return {number} The length of the vector, squared.\n */\ngoog.math.Vec2.prototype.squaredMagnitude = function() {\n  return this.x * this.x + this.y * this.y;\n};\n\n\n/**\n * @param {number} sx The scale factor to use for the x dimension.\n * @param {number=} opt_sy The scale factor to use for the y dimension.\n * @return {!goog.math.Vec2} This vector after scaling.\n * @override\n */\n// Since the implementation of Coordinate.scale() returns \"this\", we\n// can reuse that implementation here, and just recast the return type.\ngoog.math.Vec2.prototype.scale =\n    /** @type {function(number, number=):!goog.math.Vec2} */\n    (goog.math.Coordinate.prototype.scale);\n\n\n/**\n * Reverses the sign of the vector. Equivalent to scaling the vector by -1.\n * @return {!goog.math.Vec2} The inverted vector.\n */\ngoog.math.Vec2.prototype.invert = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  return this;\n};\n\n\n/**\n * Normalizes the current vector to have a magnitude of 1.\n * @return {!goog.math.Vec2} The normalized vector.\n */\ngoog.math.Vec2.prototype.normalize = function() {\n  return this.scale(1 / this.magnitude());\n};\n\n\n/**\n * Adds another vector to this vector in-place.\n * @param {!goog.math.Coordinate} b The vector to add.\n * @return {!goog.math.Vec2}  This vector with `b` added.\n */\ngoog.math.Vec2.prototype.add = function(b) {\n  this.x += b.x;\n  this.y += b.y;\n  return this;\n};\n\n\n/**\n * Subtracts another vector from this vector in-place.\n * @param {!goog.math.Coordinate} b The vector to subtract.\n * @return {!goog.math.Vec2} This vector with `b` subtracted.\n */\ngoog.math.Vec2.prototype.subtract = function(b) {\n  this.x -= b.x;\n  this.y -= b.y;\n  return this;\n};\n\n\n/**\n * Rotates this vector in-place by a given angle, specified in radians.\n * @param {number} angle The angle, in radians.\n * @return {!goog.math.Vec2} This vector rotated `angle` radians.\n */\ngoog.math.Vec2.prototype.rotate = function(angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var newX = this.x * cos - this.y * sin;\n  var newY = this.y * cos + this.x * sin;\n  this.x = newX;\n  this.y = newY;\n  return this;\n};\n\n\n/**\n * Rotates a vector by a given angle, specified in radians, relative to a given\n * axis rotation point. The returned vector is a newly created instance - no\n * in-place changes are done.\n * @param {!goog.math.Vec2} v A vector.\n * @param {!goog.math.Vec2} axisPoint The rotation axis point.\n * @param {number} angle The angle, in radians.\n * @return {!goog.math.Vec2} The rotated vector in a newly created instance.\n */\ngoog.math.Vec2.rotateAroundPoint = function(v, axisPoint, angle) {\n  var res = v.clone();\n  return res.subtract(axisPoint).rotate(angle).add(axisPoint);\n};\n\n\n/** @override */\ngoog.math.Vec2.prototype.equals = function(b) {\n  if (this == b) {\n    return true;\n  }\n  return b instanceof goog.math.Vec2 && !!b && this.x == b.x && this.y == b.y;\n};\n\n\n/**\n * Returns the distance between two vectors.\n * @param {!goog.math.Coordinate} a The first vector.\n * @param {!goog.math.Coordinate} b The second vector.\n * @return {number} The distance.\n */\ngoog.math.Vec2.distance = goog.math.Coordinate.distance;\n\n\n/**\n * Returns the squared distance between two vectors.\n * @param {!goog.math.Coordinate} a The first vector.\n * @param {!goog.math.Coordinate} b The second vector.\n * @return {number} The squared distance.\n */\ngoog.math.Vec2.squaredDistance = goog.math.Coordinate.squaredDistance;\n\n\n/**\n * Compares vectors for equality.\n * @param {!goog.math.Coordinate} a The first vector.\n * @param {!goog.math.Coordinate} b The second vector.\n * @return {boolean} Whether the vectors have the same x and y coordinates.\n */\ngoog.math.Vec2.equals = goog.math.Coordinate.equals;\n\n\n/**\n * Returns the sum of two vectors as a new Vec2.\n * @param {!goog.math.Coordinate} a The first vector.\n * @param {!goog.math.Coordinate} b The second vector.\n * @return {!goog.math.Vec2} The sum vector.\n */\ngoog.math.Vec2.sum = function(a, b) {\n  return new goog.math.Vec2(a.x + b.x, a.y + b.y);\n};\n\n\n/**\n * Returns the difference between two vectors as a new Vec2.\n * @param {!goog.math.Coordinate} a The first vector.\n * @param {!goog.math.Coordinate} b The second vector.\n * @return {!goog.math.Vec2} The difference vector.\n */\ngoog.math.Vec2.difference = function(a, b) {\n  return new goog.math.Vec2(a.x - b.x, a.y - b.y);\n};\n\n\n/**\n * Returns the dot-product of two vectors.\n * @param {!goog.math.Coordinate} a The first vector.\n * @param {!goog.math.Coordinate} b The second vector.\n * @return {number} The dot-product of the two vectors.\n */\ngoog.math.Vec2.dot = function(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n\n\n/**\n * Returns the determinant of two vectors.\n * @param {!goog.math.Vec2} a The first vector.\n * @param {!goog.math.Vec2} b The second vector.\n * @return {number} The determinant of the two vectors.\n */\ngoog.math.Vec2.determinant = function(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n\n\n/**\n * Returns a new Vec2 that is the linear interpolant between vectors a and b at\n * scale-value x.\n * @param {!goog.math.Coordinate} a Vector a.\n * @param {!goog.math.Coordinate} b Vector b.\n * @param {number} x The proportion between a and b.\n * @return {!goog.math.Vec2} The interpolated vector.\n */\ngoog.math.Vec2.lerp = function(a, b, x) {\n  return new goog.math.Vec2(\n      goog.math.lerp(a.x, b.x, x), goog.math.lerp(a.y, b.y, x));\n};\n\n\n/**\n * Returns a new Vec2 that is a copy of the vector a, but rescaled by a factors\n * sx and sy in the x and y directions. If only sx is specified, then y is\n * scaled by the same factor as x.\n * @param {!goog.math.Coordinate} a Vector a.\n * @param {number} sx X scale factor.\n * @param {number=} sy Y scale factor (optional).\n * @return {!goog.math.Vec2} A new rescaled vector.\n */\ngoog.math.Vec2.rescaled = function(a, sx, sy = sx) {\n  return new goog.math.Vec2(a.x * sx, a.y * sy);\n};\n"],
"names":["goog","provide","require","math","Vec2","goog.math.Vec2","x","y","inherits","Coordinate","randomUnit","goog.math.Vec2.randomUnit","angle","Math","random","PI","cos","sin","goog.math.Vec2.random","mag","sqrt","fromCoordinate","goog.math.Vec2.fromCoordinate","a","prototype","clone","goog.math.Vec2.prototype.clone","magnitude","goog.math.Vec2.prototype.magnitude","squaredMagnitude","goog.math.Vec2.prototype.squaredMagnitude","scale","invert","goog.math.Vec2.prototype.invert","normalize","goog.math.Vec2.prototype.normalize","add","goog.math.Vec2.prototype.add","b","subtract","goog.math.Vec2.prototype.subtract","rotate","goog.math.Vec2.prototype.rotate","newX","newY","rotateAroundPoint","goog.math.Vec2.rotateAroundPoint","v","axisPoint","res","equals","goog.math.Vec2.prototype.equals","distance","squaredDistance","sum","goog.math.Vec2.sum","difference","goog.math.Vec2.difference","dot","goog.math.Vec2.dot","determinant","goog.math.Vec2.determinant","lerp","goog.math.Vec2.lerp","rescaled","goog.math.Vec2.rescaled","sx","sy"]
}
