{
"version":3,
"file":"module$node_modules$Phaser$src$tweens$tween$Tween.js",
"lineCount":24,
"mappings":"AAAAA,cAAA,kDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO9G,IAAIC,MAAQH,OAAA,CAAQ,4CAAR,CACRI,OAAAA,CAAoBJ,OAAA,CAAQ,8DAAR,CACpBK,QAAAA,CAAoBL,OAAA,CAAQ,8DAAR,CACxB,KAAIM,YAAcN,OAAA,CAAQ,mDAAR,CAedO,QAAAA,CAAQ,IAAIJ,KAAJ,CAAU,CAElBK,WAEAD,QAAe,CAACE,MAAD,CAASC,IAAT,CAAeC,OAAf,CACf,CAQI,IAAAF,OAAA,CAAcA,MASd,KAAAG,iBAAA;AAAwBH,MAAAI,eAAA,CAAsB,YAAtB,CASxB,KAAAH,KAAA,CAAYA,IASZ,KAAAI,UAAA,CAAiBJ,IAAAK,OASjB,KAAAJ,QAAA,CAAeA,OASf,KAAAK,aAAA,CAAoBL,OAAAI,OAUpB,KAAAE,UAAA,CAAiB,CAAA,CAWjB,KAAAC,UAAA,CAAiB,CAuEjB,KAAAC,iBAAA,CAVA,IAAAC,OAUA,CApBA,IAAAC,UAoBA,CA9BA,IAAAC,cA8BA,CAxCA,IAAAC,YAwCA,CAlDA,IAAAC,UAkDA,CA5DA,IAAAC,KA4DA,CA5DY,CA+EZ,KAAAC,aAAA,CAVA,IAAAC,MAUA,CAVarB,WAAAsB,YAoBb,KAAAC,OAAA,CAAc,CAAA,CA4Dd,KAAAC,cAAA,CAVA,IAAAC,cAUA,CApBA,IAAAC,SAoBA,CA9BA,IAAAC,SA8BA,CAxCA,IAAAC,aAwCA,CAlDA,IAAAC,QAkDA,CAlDe,CA4Df,KAAAC,UAAA,CAAiB,CACbC,WAAY,IADC,CAEbC,OAAQ,IAFK,CAGbC,SAAU,IAHG;AAIbC,QAAS,IAJI,CAKbC,SAAU,IALG,CAMbC,OAAQ,IANK,CASjB,KAAAC,cA7PJ,CALkB,CA6QlBC,SAAUA,QAAS,EACnB,CACI,MAAO,KAAAlC,KAAA,CAAU,CAAV,CAAAmC,QADX,CA9QkB,CA4RlBC,aAAcA,QAAS,CAACC,KAAD,CACvB,CACI,IAAA7B,UAAA,CAAiB6B,KAEjB,OAAO,KAHX,CA7RkB,CA2SlBC,aAAcA,QAAS,EACvB,CACI,MAAO,KAAA9B,UADX,CA5SkB,CAwTlB+B,UAAWA,QAAS,EACpB,CACI,MAAQ,KAAAtB,MAAR,GAAuBrB,WAAA4C,OAD3B,CAzTkB,CAqUlBC,SAAUA,QAAS,EACnB,CACI,MAAQ,KAAAxB,MAAR,GAAuBrB,WAAA8C,OAD3B,CAtUkB,CAoVlBC,UAAWA,QAAS,CAACC,MAAD,CACpB,CACI,MAAyC,EAAzC,GAAQ,IAAA3C,QAAA4C,QAAA,CAAqBD,MAArB,CADZ,CArVkB,CAqWlBE,SAAUA,QAAS,CAACC,GAAD,CAAMV,KAAN,CAAaW,cAAb,CACnB,CACI,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAA7C,UAApB,CAAoC6C,CAAA,EAApC,CACA,CACI,IAAIC,UAAY,IAAAlD,KAAA,CAAUiD,CAAV,CAEhB;GAAIC,SAAAH,IAAJ,GAAsBA,GAAtB,CACA,CACIG,SAAAC,IAAA,CAAgBd,KAEZW,eAAJ,GAEIE,SAAAE,MAFJ,CAEsBF,SAAAf,QAFtB,CAKA,MARJ,CAJJ,CAgBA,MAAO,KAlBX,CAtWkB,CAiYlBkB,QAASA,QAAS,EAClB,CACQ,IAAApC,MAAJ,GAAmBrB,WAAA0D,QAAnB,EAEI,IAAAC,KAAA,CAAU,CAAV,CACA,CAAA,IAAAxD,OAAAyD,WAAA,CAAuB,IAAvB,CAHJ,GAOI,IAAAC,KAAA,EACA,CAAA,IAAAC,KAAA,EARJ,CADJ,CAlYkB,CAqZlBC,aAAcA,QAAS,EACvB,CAKI,IAJA,IAAIC,IAAM,CAAV,CAEI5D,KAAO,IAAAA,KAFX,CAISiD,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAA7C,UAApB,CAAoC6C,CAAA,EAApC,CACA,CACI,IAAIC,UAAYlD,IAAA,CAAKiD,CAAL,CAGhBC,UAAAW,GAAA,CAAeX,SAAA3B,SAAf,CAAoC2B,SAAAY,KAEhCZ,UAAAa,KAAJ,GAEIb,SAAAW,GAFJ,EAEoBX,SAAA3B,SAFpB,CAMA2B,UAAAc,GAAA,CAAed,SAAAW,GAAf,CAA8BX,SAAAe,YAG9Bf,UAAA7B,cAAA;AAA0B6B,SAAAgB,MAA1B,CAA4ChB,SAAAW,GAEnB,GAAzB,GAAIX,SAAAiB,OAAJ,CAEIjB,SAAA7B,cAFJ,EAE+C,YAF/C,CAEgC6B,SAAAc,GAFhC,CAI4B,CAJ5B,CAISd,SAAAiB,OAJT,GAMIjB,SAAA7B,cANJ,EAMgC6B,SAAAc,GANhC,CAM+Cd,SAAAiB,OAN/C,CASIjB,UAAA7B,cAAJ,CAA8BuC,GAA9B,GAGIA,GAHJ,CAGUV,SAAA7B,cAHV,CA1BJ,CAkCA,IAAAE,SAAA,CAAgBqC,GAEhB,KAAA/C,YAAA,CAAkC,EAAf,GAAC,IAAAE,KAAD,CAAqB,YAArB,CAAoC,IAAAA,KAInD,KAAAM,cAAA,CAFmB,CAAvB,CAAI,IAAAR,YAAJ,CAEyB,IAAAU,SAFzB,CAEyC,IAAAX,cAFzC,EAEgE,IAAAW,SAFhE,CAEgF,IAAAT,UAFhF,EAEkG,IAAAD,YAFlG,CAMyB,IAAAU,SANzB,CAMyC,IAAAX,cAlD7C,CAtZkB,CAqdlBwD,KAAMA,QAAS,EACf,CAII,IAHA,IAAIpE,KAAO,IAAAA,KAAX;AACIM,aAAe,IAAAA,aADnB,CAGS2C,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAA7C,UAApB,CAAoC6C,CAAA,EAApC,CACA,CACI,IAAIC,UAAYlD,IAAA,CAAKiD,CAAL,CAAhB,CACIL,OAASM,SAAAN,OADb,CAEIyB,IAAMnB,SAAAmB,IAEVnB,UAAAgB,MAAA,CAAkBG,GAAAH,MAAA,CAAUjB,CAAV,CAAa3C,YAAb,CAA2BsC,MAA3B,CAClBM,UAAA3B,SAAA,CAAqB8C,GAAA9C,SAAA,CAAa0B,CAAb,CAAgB3C,YAAhB,CAA8BsC,MAA9B,CACrBM,UAAAY,KAAA,CAAiBO,GAAAP,KAAA,CAASb,CAAT,CAAY3C,YAAZ,CAA0BsC,MAA1B,CACjBM,UAAAiB,OAAA,CAAmBE,GAAAF,OAAA,CAAWlB,CAAX,CAAc3C,YAAd,CAA4BsC,MAA5B,CACnBM,UAAAe,YAAA,CAAwBI,GAAAJ,YAAA,CAAgBhB,CAAhB,CAAmB3C,YAAnB,CAAiCsC,MAAjC,CAT5B,CAYA,IAAAe,aAAA,EAKA,KAAAnC,aAAA,CADA,IAAAC,QACA,CAFA,IAAAL,cAEA,CAHA,IAAAE,SAGA,CAHgB,CAMhB,IAAI,IAAAH,OAAJ,EAAmB,CAAC,IAAAjB,iBAApB,CAKI,MAHA,KAAAe,MAGO;AAHMrB,WAAAsB,YAGN,CAFP,IAAAF,aAEO,CAFapB,WAAA0E,KAEb,CAAA,CAAA,CAIP,KAAArD,MAAA,CAAarB,WAAA0E,KAEb,OAAO,CAAA,CApCf,CAtdkB,CAogBlBC,UAAWA,QAAS,EACpB,CACI,GAAuB,CAAvB,CAAI,IAAA1D,YAAJ,CACA,CAEI,IAAAS,SAAA,CADA,IAAAG,QACA,CADe,CAEf,KAAAZ,YAAA,EAEA,KAAIe,OAAS,IAAAF,UAAAE,OAETA,OAAJ,GAEIA,MAAA4C,OAAA,CAAc,CAAd,CAEA,CAFmB,IAAAvE,QAEnB,CAAA2B,MAAA6C,KAAAC,MAAA,CAAkB9C,MAAA+C,MAAlB,CAAgC/C,MAAA4C,OAAhC,CAJJ,CAOA,KAAAI,eAAA,CAAoB,CAAA,CAApB,CAEqB,EAArB,CAAI,IAAA9D,UAAJ,EAEI,IAAAH,UACA,CADiB,IAAAG,UACjB,CAAA,IAAAG,MAAA,CAAarB,WAAAiF,WAHjB,EAOI,IAAA5D,MAPJ,CAOiBrB,WAAA4C,OAvBrB,CADA,IA2BK,IAAyB,CAAzB,CAAI,IAAA5B,cAAJ,CAED,IAAAD,UACA,CADiB,IAAAC,cACjB;AAAA,IAAAK,MAAA,CAAarB,WAAAkF,eAHZ,KAML,CAGI,GAFInD,MAEJ,CAFiB,IAAAD,UAAAC,WAEjB,CAEIA,MAAA6C,OAAA,CAAkB,CAAlB,CAEA,CAFuB,IAAAvE,QAEvB,CAAA0B,MAAA8C,KAAAC,MAAA,CAAsB/C,MAAAgD,MAAtB,CAAwChD,MAAA6C,OAAxC,CAGJ,KAAAvD,MAAA,CAAarB,WAAAmF,eAVjB,CAlCJ,CArgBkB,CA6jBlBC,MAAOA,QAAS,EAChB,CACI,GAAI,IAAA/D,MAAJ,GAAmBrB,WAAA8C,OAAnB,CAWA,MANA,KAAAvB,OAMO,CANO,CAAA,CAMP,CAJP,IAAAH,aAIO,CAJa,IAAAC,MAIb,CAFP,IAAAA,MAEO,CAFMrB,WAAA8C,OAEN,CAAA,IAZX,CA9jBkB,CAqlBlBgB,KAAMA,QAAS,CAACuB,iBAAD,CACf,CACI,GAAI,IAAAhE,MAAJ,GAAmBrB,WAAA4C,OAAnB,CAIK,CAAA,GAAI,IAAAvB,MAAJ,GAAmBrB,WAAAmF,eAAnB,EAAiD,IAAA9D,MAAjD,GAAgErB,WAAA0D,QAAhE,CAED,IAAAc,KAAA,EAEA,CADA,IAAArE,OAAAyD,WAAA,CAAuB,IAAvB,CACA;AAAAyB,iBAAA,CAAoB,CAAA,CAGxB,KAAInD,QAAU,IAAAJ,UAAAI,QAEV,KAAA5B,iBAAJ,EAEI,IAAA0E,eAAA,CAAoBK,iBAApB,CAEA,CAA8B,CAA9B,GAAI,IAAAxE,iBAAJ,EAEQqB,OAOJ,GALIA,OAAA0C,OAAA,CAAe,CAAf,CAEA,CAFoB,IAAAvE,QAEpB,CAAA6B,OAAA2C,KAAAC,MAAA,CAAmB5C,OAAA6C,MAAnB,CAAkC7C,OAAA0C,OAAlC,CAGJ,EAAA,IAAAvD,MAAA,CAAarB,WAAA4C,OATjB,GAaI,IAAA7B,UAEA,CAFiB,IAAAF,iBAEjB,CAAA,IAAAQ,MAAA,CAAarB,WAAAsF,aAfjB,CAJJ,GAsBS,IAAA/D,OAAJ,CAED,IAAAA,OAFC,CAEa,CAAA,CAFb,EAQD,IAAAyD,eAAA,CAAoBK,iBAApB,CAIA,CAFA,IAAAhE,MAEA,CAFarB,WAAA4C,OAEb,CAAIV,OAAJ,GAEIA,OAAA0C,OAAA,CAAe,CAAf,CAEA,CAFoB,IAAAvE,QAEpB,CAAA6B,OAAA2C,KAAAC,MAAA,CAAmB5C,OAAA6C,MAAnB;AAAkC7C,OAAA0C,OAAlC,CAJJ,CAZC,CAID,CAAA,IAAAzE,OAAAyD,WAAA,CAAuB,IAAvB,CA1BJ,CATK,CALT,CAtlBkB,CAypBlBoB,eAAgBA,QAAS,CAACO,aAAD,CACzB,CAGI,IAFA,IAAInF,KAAO,IAAAA,KAAX,CAESiD,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAA7C,UAApB,CAAoC6C,CAAA,EAApC,CACA,CACI,IAAIC,UAAYlD,IAAA,CAAKiD,CAAL,CAEhBC,UAAA5B,SAAA,CAAqB,CACrB4B,UAAAzB,QAAA,CAAoB,CAEpByB,UAAAkC,cAAA,CAAgD,EAAtB,GAAClC,SAAAiB,OAAD,CAA4B,YAA5B,CAA2CjB,SAAAiB,OAEjEgB,cAAJ,EAEIjC,SAAAE,MAMA,CANkBF,SAAAmC,cAAA,CAAwBnC,SAAAN,OAAxB,CAA0CM,SAAAH,IAA1C,CAAyDG,SAAAE,MAAzD,CAMlB,CAJAF,SAAAC,IAIA,CAJgBD,SAAAoC,YAAA,CAAsBpC,SAAAN,OAAtB,CAAwCM,SAAAH,IAAxC,CAAuDG,SAAAC,IAAvD,CAIhB,CAFAD,SAAAf,QAEA,CAFoBe,SAAAE,MAEpB,CAAAF,SAAAjC,MAAA;AAAkBrB,WAAA2F,gBARtB,EAU2B,CAAtB,CAAIrC,SAAAgB,MAAJ,EAEDhB,SAAAzB,QACA,CADoByB,SAAAgB,MACpB,CAAAhB,SAAAjC,MAAA,CAAkBrB,WAAA4F,MAHjB,EAODtC,SAAAjC,MAPC,CAOiBrB,WAAA6F,eAzB1B,CAJJ,CA1pBkB,CAosBlBC,OAAQA,QAAS,EACjB,CACQ,IAAAzE,MAAJ,GAAmBrB,WAAA8C,OAAnB,EAEI,IAAAvB,OAEA,CAFc,CAAA,CAEd,CAAA,IAAAF,MAAA,CAAa,IAAAD,aAJjB,EAQI,IAAA0C,KAAA,EAGJ,OAAO,KAZX,CArsBkB,CA4tBlBH,KAAMA,QAAS,CAACoC,UAAD,CACf,CAGI,IAFA,IAAI3F,KAAO,IAAAA,KAAX,CAESiD,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAA7C,UAApB,CAAoC6C,CAAA,EAApC,CACA,CAEI,IAAI2C,GAAK,IAAAvE,cAALuE,CAA0BD,UAA9B,CAEIzC,UAAYlD,IAAA,CAAKiD,CAAL,CAFhB,CAGI3B,SAAW,CAHf,CAIIG,QAAU,CAEVmE,GAAJ,EAAU1C,SAAAgB,MAAV,CAGIzC,OAHJ,CAEIH,QAFJ,CAEe,CAFf,CAKSsE,EAAJ,EAAU1C,SAAA7B,cAAV;CAEDC,QACA,CADW,CACX,CAAAG,OAAA,CAAUyB,SAAA3B,SAHT,EAKIqE,EAAJ,CAAS1C,SAAAgB,MAAT,EAA4B0B,EAA5B,EAAkC1C,SAAAW,GAAlC,EAGD+B,EAIA,CAJKC,IAAAjC,IAAA,CAAS,CAAT,CAAYgC,EAAZ,CAAiB1C,SAAAgB,MAAjB,CAIL,CADA5C,QACA,CADWsE,EACX,CADgB1C,SAAAW,GAChB,CAAApC,OAAA,CAAUyB,SAAA3B,SAAV,CAA+BD,QAP9B,EASIsE,EATJ,CASS1C,SAAAW,GATT,EASyB+B,EATzB,CAS8B1C,SAAA7B,cAT9B,GAYDuE,EAQA,EARM1C,SAAAgB,MAQN,CAPA0B,EAOA,EAPM1C,SAAAW,GAON,CAFA+B,EAEA,CAFOA,EAEP,CAFY1C,SAAAc,GAEZ,CAF4B,CAE5B,CAFiCd,SAAAc,GAEjC,CAAI4B,EAAJ,CAAS1C,SAAAe,YAAT,GAEI3C,QACA,CADWsE,EACX,CADgB1C,SAAAW,GAChB,CAAApC,OAAA,CAAUyB,SAAA3B,SAAV,CAA+BD,QAHnC,CApBC,CA2BL4B,UAAA5B,SAAA,CAAqBA,QACrB4B,UAAAzB,QAAA,CAAoBA,OAEhBqE,GAAAA,CAAI5C,SAAA6C,KAAA,CAAe7C,SAAA5B,SAAf,CAER4B,UAAAf,QAAA,CAAoBe,SAAAE,MAApB;CAAwCF,SAAAC,IAAxC,CAAwDD,SAAAE,MAAxD,EAA2E0C,EAS3E5C,UAAAN,OAAA,CAAiBM,SAAAH,IAAjB,CAAA,CAAkCG,SAAAf,QA3DtC,CAJJ,CA7tBkB,CA6yBlB6D,YAAaA,QAAS,CAACC,IAAD,CAAOC,QAAP,CAAiB1B,MAAjB,CAAyBG,KAAzB,CACtB,CACI,IAAAjD,UAAA,CAAeuE,IAAf,CAAA,CAAuB,CAAExB,KAAMyB,QAAR,CAAkBvB,MAAOA,KAAzB,CAAgCH,OAAQA,MAAxC,CAEvB,OAAO,KAHX,CA9yBkB,CAi0BlB2B,SAAUA,QAAS,CAACjC,KAAD,CACnB,CACkBkC,IAAAA,EAAd,GAAIlC,KAAJ,GAA2BA,KAA3B,CAAmC,CAAnC,CAEA,IAAIA,KAAJ,CAEI,IAAAvD,UACA,CADiBuD,KACjB,CAAA,IAAAjD,MAAA,CAAarB,WAAAkF,eAHjB,KAMA,CAGI,GAFInD,KAEJ,CAFiB,IAAAD,UAAAC,WAEjB,CAEIA,KAAA6C,OAAA,CAAkB,CAAlB,CAEA,CAFuB,IAAAvE,QAEvB,CAAA0B,KAAA8C,KAAAC,MAAA,CAAsB/C,KAAAgD,MAAtB,CAAwChD,KAAA6C,OAAxC,CAGJ,KAAAvD,MAAA,CAAarB,WAAAmF,eAVjB,CATJ,CAl0BkB,CAi2BlBtB,KAAMA,QAAS,CAAC4C,OAAD,CACf,CACQ,IAAApF,MAAJ;AAAmBrB,WAAA4C,OAAnB,EAEoB4D,IAAAA,EAFpB,GAEQC,OAFR,EAIQ,IAAA9C,KAAA,CAAU8C,OAAV,CAIR,IAAI,IAAApF,MAAJ,GAAmBrB,WAAA0D,QAAnB,CACA,CACI,GAAI,IAAArC,MAAJ,GAAmBrB,WAAA8C,OAAnB,EAAyC,IAAAzB,MAAzC,GAAwDrB,WAAAsB,YAAxD,CAEI,IAAAnB,OAAAuG,SAAAC,KAAA,CAA0B,IAA1B,CACA,CAAA,IAAAxG,OAAAyG,WAAA,EAGJ,KAAAvF,MAAA,CAAarB,WAAAmF,eAPjB,CAVJ,CAl2BkB,CAk4BlB0B,OAAQA,QAAS,CAACC,SAAD,CAAYC,KAAZ,CACjB,CACI,GAAI,IAAA1F,MAAJ,GAAmBrB,WAAA8C,OAAnB,CAEI,MAAO,CAAA,CAGP,KAAAnC,UAAJ,GAEIoG,KAFJ,CAEY,CAFZ,CAEgB,IAAA5G,OAAAS,UAFhB,CAKAmG,MAAA,EAAS,IAAAnG,UAET,KAAAiB,QAAA,EAAgBkF,KAChB,KAAArF,SAAA,CAAgBuE,IAAAe,IAAA,CAAS,IAAAnF,QAAT,CAAwB,IAAAF,SAAxB,CAAuC,CAAvC,CAEhB,KAAAC,aAAA;AAAqBmF,KACrB,KAAAvF,cAAA,CAAqByE,IAAAe,IAAA,CAAS,IAAApF,aAAT,CAA6B,IAAAH,cAA7B,CAAiD,CAAjD,CAErB,QAAQ,IAAAJ,MAAR,EAEI,KAAKrB,WAAA4C,OAAL,CAEQqE,SAAAA,CAAe,CAAA,CAEnB,KAAK,IAAI5D,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAA7C,UAApB,CAAoC6C,CAAA,EAApC,CAEQ,IAAA6D,gBAAA,CAAqB,IAArB,CAA2B,IAAA9G,KAAA,CAAUiD,CAAV,CAA3B,CAAyC0D,KAAzC,CAAJ,GAEIE,SAFJ,CAEmB,CAAA,CAFnB,CAOCA,UAAL,EAEI,IAAAtC,UAAA,EAGJ,MAEJ,MAAK3E,WAAAiF,WAAL,CAEI,IAAAlE,UAAA,EAAkBgG,KAEI,EAAtB,EAAI,IAAAhG,UAAJ,GAEI,IAAAM,MAFJ,CAEiBrB,WAAA4C,OAFjB,CAKA,MAEJ,MAAK5C,WAAAsF,aAAL,CAEI,IAAAvE,UAAA,EAAkBgG,KAElB,IAAsB,CAAtB,EAAI,IAAAhG,UAAJ,CACA,CAGI,GAFImB,KAEJ,CAFc,IAAAJ,UAAAI,QAEd,CAEIA,KAAA0C,OAAA,CAAe,CAAf,CAEA,CAFoB,IAAAvE,QAEpB;AAAA6B,KAAA2C,KAAAC,MAAA,CAAmB5C,KAAA6C,MAAnB,CAAkC7C,KAAA0C,OAAlC,CAGJ,KAAAvD,MAAA,CAAarB,WAAA4C,OAVjB,CAaA,KAEJ,MAAK5C,WAAAkF,eAAL,CAEI,IAAAnE,UAEA,EAFkBgG,KAElB,CAAsB,CAAtB,EAAI,IAAAhG,UAAJ,GASI,CAPIgB,KAOJ,CAPiB,IAAAD,UAAAC,WAOjB,GAHIA,KAAA8C,KAAAC,MAAA,CAAsB/C,KAAAgD,MAAtB,CAAwChD,KAAA6C,OAAxC,CAGJ,CAAA,IAAAvD,MAAA,CAAarB,WAAAmF,eATjB,CAzDR,CAwEA,MAAQ,KAAA9D,MAAR,GAAuBrB,WAAAmF,eA3F3B,CAn4BkB,CA6+BlBgC,gBAAiBA,QAAS,CAACC,KAAD,CAAQ9D,SAAR,CAAmB+D,IAAnB,CAC1B,CACI,GAAI/D,SAAAa,KAAJ,CACA,CAIIb,SAAAzB,QAAA,CAAoBwF,IACpB/D,UAAA5B,SAAA,CAAqB2F,IAArB,CAA4B/D,SAAA3B,SAExB2B,UAAAgE,MAAJ,EAEIhE,SAAAN,OAAAuE,YAAA,EAMAjE,UAAAkE,MAAJ;AAEIlE,SAAAN,OAAAyE,YAAA,EAKJ,IAFIrF,IAEJ,CAFagF,KAAAtF,UAAAM,OAEb,CAGIA,IAAAwC,OAAA,CAAc,CAAd,CAEA,CAFmBtB,SAAAN,OAEnB,CAAAZ,IAAAyC,KAAAC,MAAA,CAAkB1C,IAAA2C,MAAlB,CAAgC3C,IAAAwC,OAAhC,CAGJtB,UAAAE,MAAA,CAAkBF,SAAAmC,cAAA,CAAwBnC,SAAAN,OAAxB,CAA0CM,SAAAH,IAA1C,CAAyDG,SAAAE,MAAzD,CAElB,OAAOxD,YAAA0H,iBAhCX,CAkCK,GAA8B,CAA9B,CAAIpE,SAAAkC,cAAJ,CACL,CAIIlC,SAAAkC,cAAA,EAGAlC,UAAAzB,QAAA,CAAoBwF,IACpB/D,UAAA5B,SAAA,CAAqB2F,IAArB,CAA4B/D,SAAA3B,SAExB2B,UAAAgE,MAAJ,EAEIhE,SAAAN,OAAAuE,YAAA,EAGAjE,UAAAkE,MAAJ,EAEIlE,SAAAN,OAAAyE,YAAA,EAKJ,IAFIxF,KAEJ,CAFemF,KAAAtF,UAAAG,SAEf,CAGIA,KAAA2C,OAAA,CAAgB,CAAhB,CAEA;AAFqBtB,SAAAN,OAErB,CAAAf,KAAA4C,KAAAC,MAAA,CAAoB7C,KAAA8C,MAApB,CAAoC9C,KAAA2C,OAApC,CAGJtB,UAAAE,MAAA,CAAkBF,SAAAmC,cAAA,CAAwBnC,SAAAN,OAAxB,CAA0CM,SAAAH,IAA1C,CAAyDG,SAAAE,MAAzD,CAElBF,UAAAC,IAAA,CAAgBD,SAAAoC,YAAA,CAAsBpC,SAAAN,OAAtB,CAAwCM,SAAAH,IAAxC,CAAuDG,SAAAE,MAAvD,CAGhB,OAA4B,EAA5B,CAAIF,SAAAe,YAAJ,EAEIf,SAAAzB,QAMO8F,CANarE,SAAAe,YAMbsD,CANqCN,IAMrCM,CAJPrE,SAAAf,QAIOoF,CAJarE,SAAAE,MAIbmE,CAFPrE,SAAAN,OAAA,CAAiBM,SAAAH,IAAjB,CAEOwE,CAF2BrE,SAAAf,QAE3BoF,CAAA3H,WAAA2H,aARX,EAYW3H,WAAA2F,gBA/Cf,CAmDA,MAAO3F,YAAA4H,SAxFX,CA9+BkB,CAqlClBC,kBAAmBA,QAAS,CAACT,KAAD;AAAQ9D,SAAR,CAAmB+D,IAAnB,CAC5B,CACI,GAA8B,CAA9B,CAAI/D,SAAAkC,cAAJ,CACA,CACIlC,SAAAkC,cAAA,EAGAlC,UAAAzB,QAAA,CAAoBwF,IACpB/D,UAAA5B,SAAA,CAAqB2F,IAArB,CAA4B/D,SAAA3B,SAExB2B,UAAAgE,MAAJ,EAEIhE,SAAAN,OAAAuE,YAAA,EAGAjE,UAAAkE,MAAJ,EAEIlE,SAAAN,OAAAyE,YAAA,EAKJ,IAFIxF,KAEJ,CAFemF,KAAAtF,UAAAG,SAEf,CAGIA,KAAA2C,OAAA,CAAgB,CAAhB,CAEA,CAFqBtB,SAAAN,OAErB,CAAAf,KAAA4C,KAAAC,MAAA,CAAoB7C,KAAA8C,MAApB,CAAoC9C,KAAA2C,OAApC,CAGJtB,UAAAC,IAAA,CAAgBD,SAAAoC,YAAA,CAAsBpC,SAAAN,OAAtB,CAAwCM,SAAAH,IAAxC,CAAuDG,SAAAE,MAAvD,CAGhB,OAA4B,EAA5B,CAAIF,SAAAe,YAAJ,EAEIf,SAAAzB,QAMO8F,CANarE,SAAAe,YAMbsD,CANqCN,IAMrCM;AAJPrE,SAAAf,QAIOoF,CAJarE,SAAAE,MAIbmE,CAFPrE,SAAAN,OAAA,CAAiBM,SAAAH,IAAjB,CAEOwE,CAF2BrE,SAAAf,QAE3BoF,CAAA3H,WAAA2H,aARX,EAYW3H,WAAA2F,gBA1Cf,CA8CA,MAAO3F,YAAA4H,SAhDX,CAtlCkB,CAspClBV,gBAAiBA,QAAS,CAACE,KAAD,CAAQ9D,SAAR,CAAmByD,KAAnB,CAC1B,CACI,OAAQzD,SAAAjC,MAAR,EAEI,KAAKrB,WAAA2F,gBAAL,CACA,KAAK3F,WAAA0H,iBAAL,CAEI,GAAI,CAACpE,SAAAN,OAAL,CACA,CACIM,SAAAjC,MAAA,CAAkBrB,WAAA4H,SAClB,MAFJ,CAKA,IAAI/F,QAAUyB,SAAAzB,QAAd,CACIF,SAAW2B,SAAA3B,SADf,CAEI0F,KAAO,CAEXxF,QAAA,EAAWkF,KAEPlF,QAAJ,CAAcF,QAAd,GAEI0F,IACA,CADOxF,OACP,CADiBF,QACjB,CAAAE,OAAA,CAAUF,QAHd,CAMImG;KAAAA,CAAWxE,SAAAjC,MAAXyG,GAA+B9H,WAAA2F,gBAC/BjE,SAAAA,CAAWG,OAAXH,CAAqBC,QAMrB,KAAAuE,EAFA4B,KAAJ,CAEQxE,SAAA6C,KAAA,CAAezE,QAAf,CAFR,CAMQ4B,SAAA6C,KAAA,CAAe,CAAf,CAAmBzE,QAAnB,CAGR4B,UAAAf,QAAA,CAAoBe,SAAAE,MAApB,EAAwCF,SAAAC,IAAxC,CAAwDD,SAAAE,MAAxD,EAA2E0C,CAE3E5C,UAAAN,OAAA,CAAiBM,SAAAH,IAAjB,CAAA,CAAkCG,SAAAf,QAElCe,UAAAzB,QAAA,CAAoBA,OACpByB,UAAA5B,SAAA,CAAqBA,QAIrB,IAFIS,OAEJ,CAFeiF,KAAAtF,UAAAK,SAEf,CAEIA,OAAAyC,OAAA,CAAgB,CAAhB,CAEA,CAFqBtB,SAAAN,OAErB,CAAAb,OAAA0C,KAAAC,MAAA,CAAoB3C,OAAA4C,MAApB,CAAoC5C,OAAAyC,OAApC,CAGa,EAAjB,GAAIlD,QAAJ,GAEQoG,KAAJ,CAEyB,CAArB,CAAIxE,SAAAY,KAAJ,EAEIZ,SAAAzB,QAEA,CAFoByB,SAAAY,KAEpB;AAFqCmD,IAErC,CAAA/D,SAAAjC,MAAA,CAAkBrB,WAAA+H,WAJtB,EAQIzE,SAAAjC,MARJ,CAQsB,IAAA8F,gBAAA,CAAqBC,KAArB,CAA4B9D,SAA5B,CAAuC+D,IAAvC,CAV1B,CAeI/D,SAAAjC,MAfJ,CAesB,IAAAwG,kBAAA,CAAuBT,KAAvB,CAA8B9D,SAA9B,CAAyC+D,IAAzC,CAjB1B,CAqBA,MAEJ,MAAKrH,WAAA4F,MAAL,CAEItC,SAAAzB,QAAA,EAAqBkF,KAEI,EAAzB,EAAIzD,SAAAzB,QAAJ,GAEIyB,SAAAzB,QAEA,CAFoBoE,IAAA+B,IAAA,CAAS1E,SAAAzB,QAAT,CAEpB,CAAAyB,SAAAjC,MAAA,CAAkBrB,WAAA6F,eAJtB,CAOA,MAEJ,MAAK7F,WAAA2H,aAAL,CAEIrE,SAAAzB,QAAA,EAAqBkF,KAEI,EAAzB,EAAIzD,SAAAzB,QAAJ,GAEIyB,SAAAzB,QAEA,CAFoBoE,IAAA+B,IAAA,CAAS1E,SAAAzB,QAAT,CAEpB,CAAAyB,SAAAjC,MAAA,CAAkBrB,WAAA2F,gBAJtB,CAOA;KAEJ,MAAK3F,WAAA+H,WAAL,CAEIzE,SAAAzB,QAAA,EAAqBkF,KAEI,EAAzB,EAAIzD,SAAAzB,QAAJ,GAEIyB,SAAAjC,MAFJ,CAEsB,IAAA8F,gBAAA,CAAqBC,KAArB,CAA4B9D,SAA5B,CAAuC2C,IAAA+B,IAAA,CAAS1E,SAAAzB,QAAT,CAAvC,CAFtB,CAKA,MAEJ,MAAK7B,WAAA6F,eAAL,CAEQvC,SAAAN,OAAJ,EAEIM,SAAAE,MAQA,CARkBF,SAAAmC,cAAA,CAAwBnC,SAAAN,OAAxB,CAA0CM,SAAAH,IAA1C,CAAyDG,SAAAN,OAAA,CAAiBM,SAAAH,IAAjB,CAAzD,CAQlB,CANAG,SAAAC,IAMA,CANgBD,SAAAoC,YAAA,CAAsBpC,SAAAN,OAAtB,CAAwCM,SAAAH,IAAxC,CAAuDG,SAAAE,MAAvD,CAMhB,CAJAF,SAAAf,QAIA,CAJoBe,SAAAE,MAIpB,CAFAF,SAAAN,OAAA,CAAiBM,SAAAH,IAAjB,CAEA,CAFkCG,SAAAE,MAElC,CAAAF,SAAAjC,MAAA;AAAkBrB,WAAA2F,gBAVtB,EAcIrC,SAAAjC,MAdJ,CAcsBrB,WAAA4H,SAjI9B,CAwIA,MAAQtE,UAAAjC,MAAR,GAA4BrB,WAAA4H,SAzIhC,CAvpCkB,CAAV,CAqyCZ3H,QAAAgI,MAAA,CAAc,oDAAA,MAAA,CAAA,GAAA,CAqBdlI,QAAAmI,SAAA,CAA2B,OAA3B,CAAoC,QAAS,CAACC,MAAD,CAC7C,CACI,MAAO,KAAAC,MAAAC,IAAAC,OAAAC,IAAA,CAA0BJ,MAA1B,CADX,CADA,CAyBArI,OAAAoI,SAAA,CAA2B,OAA3B,CAAoC,QAAS,CAACC,MAAD,CAC7C,CACI,MAAO,KAAAC,MAAAC,IAAAC,OAAAE,OAAA,CAA6BL,MAA7B,CADX,CADA,CAOAxI,OAAAC,QAAA,CAAiBK,OAn3C6F;",
"sources":["node_modules/Phaser/src/tweens/tween/Tween.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tweens$tween$Tween\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar GameObjectCreator = require('../../gameobjects/GameObjectCreator');\r\nvar GameObjectFactory = require('../../gameobjects/GameObjectFactory');\r\nvar TWEEN_CONST = require('./const');\r\n\r\n/**\r\n * @classdesc\r\n * [description]\r\n *\r\n * @class Tween\r\n * @memberOf Phaser.Tweens\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {(Phaser.Tweens.TweenManager|Phaser.Tweens.Timeline)} parent - [description]\r\n * @param {Phaser.Tweens.TweenDataConfig[]} data - [description]\r\n * @param {array} targets - [description]\r\n */\r\nvar Tween = new Class({\r\n\r\n    initialize:\r\n\r\n    function Tween (parent, data, targets)\r\n    {\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tweens.Tween#parent\r\n         * @type {(Phaser.Tweens.TweenManager|Phaser.Tweens.Timeline)}\r\n         * @since 3.0.0\r\n         */\r\n        this.parent = parent;\r\n\r\n        /**\r\n         * Is the parent of this Tween a Timeline?\r\n         *\r\n         * @name Phaser.Tweens.Tween#parentIsTimeline\r\n         * @type {boolean}\r\n         * @since 3.0.0\r\n         */\r\n        this.parentIsTimeline = parent.hasOwnProperty('isTimeline');\r\n\r\n        /**\r\n         * An array of TweenData objects, each containing a unique property and target being tweened.\r\n         *\r\n         * @name Phaser.Tweens.Tween#data\r\n         * @type {Phaser.Tweens.TweenDataConfig[]}\r\n         * @since 3.0.0\r\n         */\r\n        this.data = data;\r\n\r\n        /**\r\n         * data array doesn't change, so we can cache the length\r\n         *\r\n         * @name Phaser.Tweens.Tween#totalData\r\n         * @type {integer}\r\n         * @since 3.0.0\r\n         */\r\n        this.totalData = data.length;\r\n\r\n        /**\r\n         * An array of references to the target/s this Tween is operating on\r\n         *\r\n         * @name Phaser.Tweens.Tween#targets\r\n         * @type {object[]}\r\n         * @since 3.0.0\r\n         */\r\n        this.targets = targets;\r\n\r\n        /**\r\n         * Cached target total (not necessarily the same as the data total)\r\n         *\r\n         * @name Phaser.Tweens.Tween#totalTargets\r\n         * @type {integer}\r\n         * @since 3.0.0\r\n         */\r\n        this.totalTargets = targets.length;\r\n\r\n        /**\r\n         * If true then duration, delay, etc values are all frame totals.\r\n         *\r\n         * @name Phaser.Tweens.Tween#useFrames\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.useFrames = false;\r\n\r\n        /**\r\n         * Scales the time applied to this Tween. A value of 1 runs in real-time. A value of 0.5 runs 50% slower, and so on.\r\n         * Value isn't used when calculating total duration of the tween, it's a run-time delta adjustment only.\r\n         *\r\n         * @name Phaser.Tweens.Tween#timeScale\r\n         * @type {number}\r\n         * @default 1\r\n         * @since 3.0.0\r\n         */\r\n        this.timeScale = 1;\r\n\r\n        /**\r\n         * Loop this tween? Can be -1 for an infinite loop, or an integer.\r\n         * When enabled it will play through ALL TweenDatas again (use TweenData.repeat to loop a single TD)\r\n         *\r\n         * @name Phaser.Tweens.Tween#loop\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.loop = 0;\r\n\r\n        /**\r\n         * Time in ms/frames before the tween loops.\r\n         *\r\n         * @name Phaser.Tweens.Tween#loopDelay\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.loopDelay = 0;\r\n\r\n        /**\r\n         * How many loops are left to run?\r\n         *\r\n         * @name Phaser.Tweens.Tween#loopCounter\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.loopCounter = 0;\r\n\r\n        /**\r\n         * Time in ms/frames before the 'onComplete' event fires. This never fires if loop = -1 (as it never completes)\r\n         *\r\n         * @name Phaser.Tweens.Tween#completeDelay\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.completeDelay = 0;\r\n\r\n        /**\r\n         * Countdown timer (used by timeline offset, loopDelay and completeDelay)\r\n         *\r\n         * @name Phaser.Tweens.Tween#countdown\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.countdown = 0;\r\n\r\n        /**\r\n         * Set only if this Tween is part of a Timeline.\r\n         *\r\n         * @name Phaser.Tweens.Tween#offset\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.offset = 0;\r\n\r\n        /**\r\n         * Set only if this Tween is part of a Timeline. The calculated offset amount.\r\n         *\r\n         * @name Phaser.Tweens.Tween#calculatedOffset\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.calculatedOffset = 0;\r\n\r\n        /**\r\n         * The current state of the tween\r\n         *\r\n         * @name Phaser.Tweens.Tween#state\r\n         * @type {integer}\r\n         * @since 3.0.0\r\n         */\r\n        this.state = TWEEN_CONST.PENDING_ADD;\r\n\r\n        /**\r\n         * The state of the tween when it was paused (used by Resume)\r\n         *\r\n         * @name Phaser.Tweens.Tween#_pausedState\r\n         * @type {integer}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._pausedState = TWEEN_CONST.PENDING_ADD;\r\n\r\n        /**\r\n         * Does the Tween start off paused? (if so it needs to be started with Tween.play)\r\n         *\r\n         * @name Phaser.Tweens.Tween#paused\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.paused = false;\r\n\r\n        /**\r\n         * Elapsed time in ms/frames of this run through the Tween.\r\n         *\r\n         * @name Phaser.Tweens.Tween#elapsed\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.elapsed = 0;\r\n\r\n        /**\r\n         * Total elapsed time in ms/frames of the entire Tween, including looping.\r\n         *\r\n         * @name Phaser.Tweens.Tween#totalElapsed\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalElapsed = 0;\r\n\r\n        /**\r\n         * Time in ms/frames for the whole Tween to play through once, excluding loop amounts and loop delays.\r\n         *\r\n         * @name Phaser.Tweens.Tween#duration\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.duration = 0;\r\n\r\n        /**\r\n         * Value between 0 and 1. The amount through the Tween, excluding loops.\r\n         *\r\n         * @name Phaser.Tweens.Tween#progress\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.progress = 0;\r\n\r\n        /**\r\n         * Time in ms/frames for the Tween to complete (including looping)\r\n         *\r\n         * @name Phaser.Tweens.Tween#totalDuration\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalDuration = 0;\r\n\r\n        /**\r\n         * Value between 0 and 1. The amount through the entire Tween, including looping.\r\n         *\r\n         * @name Phaser.Tweens.Tween#totalProgress\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.totalProgress = 0;\r\n\r\n        /**\r\n         * An object containing the various Tween callback references.\r\n         *\r\n         * @name Phaser.Tweens.Tween#callbacks\r\n         * @type {object}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.callbacks = {\r\n            onComplete: null,\r\n            onLoop: null,\r\n            onRepeat: null,\r\n            onStart: null,\r\n            onUpdate: null,\r\n            onYoyo: null\r\n        };\r\n\r\n        this.callbackScope;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#getValue\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} [description]\r\n     */\r\n    getValue: function ()\r\n    {\r\n        return this.data[0].current;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#setTimeScale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - [description]\r\n     *\r\n     * @return {Phaser.Tweens.Tween} This Tween object.\r\n     */\r\n    setTimeScale: function (value)\r\n    {\r\n        this.timeScale = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#getTimeScale\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} [description]\r\n     */\r\n    getTimeScale: function ()\r\n    {\r\n        return this.timeScale;\r\n    },\r\n\r\n    /**\r\n     * Checks if the Tween is currently active.\r\n     *\r\n     * @method Phaser.Tweens.Tween#isPlaying\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if the Tween is active, otherwise `false`.\r\n     */\r\n    isPlaying: function ()\r\n    {\r\n        return (this.state === TWEEN_CONST.ACTIVE);\r\n    },\r\n\r\n    /**\r\n     * Checks if the Tween is currently paused.\r\n     *\r\n     * @method Phaser.Tweens.Tween#isPaused\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if the Tween is paused, otherwise `false`.\r\n     */\r\n    isPaused: function ()\r\n    {\r\n        return (this.state === TWEEN_CONST.PAUSED);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#hasTarget\r\n     * @since 3.0.0\r\n     *\r\n     * @param {object} target - [description]\r\n     *\r\n     * @return {boolean} [description]\r\n     */\r\n    hasTarget: function (target)\r\n    {\r\n        return (this.targets.indexOf(target) !== -1);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#updateTo\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - [description]\r\n     * @param {*} value - [description]\r\n     * @param {boolean} startToCurrent - [description]\r\n     *\r\n     * @return {Phaser.Tweens.Tween} This Tween object.\r\n     */\r\n    updateTo: function (key, value, startToCurrent)\r\n    {\r\n        for (var i = 0; i < this.totalData; i++)\r\n        {\r\n            var tweenData = this.data[i];\r\n\r\n            if (tweenData.key === key)\r\n            {\r\n                tweenData.end = value;\r\n\r\n                if (startToCurrent)\r\n                {\r\n                    tweenData.start = tweenData.current;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#restart\r\n     * @since 3.0.0\r\n     */\r\n    restart: function ()\r\n    {\r\n        if (this.state === TWEEN_CONST.REMOVED)\r\n        {\r\n            this.seek(0);\r\n            this.parent.makeActive(this);\r\n        }\r\n        else\r\n        {\r\n            this.stop();\r\n            this.play();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#calcDuration\r\n     * @since 3.0.0\r\n     */\r\n    calcDuration: function ()\r\n    {\r\n        var max = 0;\r\n\r\n        var data = this.data;\r\n\r\n        for (var i = 0; i < this.totalData; i++)\r\n        {\r\n            var tweenData = data[i];\r\n\r\n            //  Set t1 (duration + hold + yoyo)\r\n            tweenData.t1 = tweenData.duration + tweenData.hold;\r\n\r\n            if (tweenData.yoyo)\r\n            {\r\n                tweenData.t1 += tweenData.duration;\r\n            }\r\n\r\n            //  Set t2 (repeatDelay + duration + hold + yoyo)\r\n            tweenData.t2 = tweenData.t1 + tweenData.repeatDelay;\r\n\r\n            //  Total Duration\r\n            tweenData.totalDuration = tweenData.delay + tweenData.t1;\r\n\r\n            if (tweenData.repeat === -1)\r\n            {\r\n                tweenData.totalDuration += (tweenData.t2 * 999999999999);\r\n            }\r\n            else if (tweenData.repeat > 0)\r\n            {\r\n                tweenData.totalDuration += (tweenData.t2 * tweenData.repeat);\r\n            }\r\n\r\n            if (tweenData.totalDuration > max)\r\n            {\r\n                //  Get the longest TweenData from the Tween, used to calculate the Tween TD\r\n                max = tweenData.totalDuration;\r\n            }\r\n        }\r\n\r\n        //  Excludes loop values\r\n        this.duration = max;\r\n\r\n        this.loopCounter = (this.loop === -1) ? 999999999999 : this.loop;\r\n\r\n        if (this.loopCounter > 0)\r\n        {\r\n            this.totalDuration = this.duration + this.completeDelay + ((this.duration + this.loopDelay) * this.loopCounter);\r\n        }\r\n        else\r\n        {\r\n            this.totalDuration = this.duration + this.completeDelay;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Called by TweenManager.preUpdate as part of its loop to check pending and active tweens.\r\n     * Should not be called directly.\r\n     *\r\n     * @method Phaser.Tweens.Tween#init\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} Returns `true` if this Tween should be moved from the pending list to the active list by the Tween Manager.\r\n     */\r\n    init: function ()\r\n    {\r\n        var data = this.data;\r\n        var totalTargets = this.totalTargets;\r\n\r\n        for (var i = 0; i < this.totalData; i++)\r\n        {\r\n            var tweenData = data[i];\r\n            var target = tweenData.target;\r\n            var gen = tweenData.gen;\r\n\r\n            tweenData.delay = gen.delay(i, totalTargets, target);\r\n            tweenData.duration = gen.duration(i, totalTargets, target);\r\n            tweenData.hold = gen.hold(i, totalTargets, target);\r\n            tweenData.repeat = gen.repeat(i, totalTargets, target);\r\n            tweenData.repeatDelay = gen.repeatDelay(i, totalTargets, target);\r\n        }\r\n\r\n        this.calcDuration();\r\n\r\n        this.progress = 0;\r\n        this.totalProgress = 0;\r\n        this.elapsed = 0;\r\n        this.totalElapsed = 0;\r\n\r\n        //  You can't have a paused Tween if it's part of a Timeline\r\n        if (this.paused && !this.parentIsTimeline)\r\n        {\r\n            this.state = TWEEN_CONST.PENDING_ADD;\r\n            this._pausedState = TWEEN_CONST.INIT;\r\n\r\n            return false;\r\n        }\r\n        else\r\n        {\r\n            this.state = TWEEN_CONST.INIT;\r\n\r\n            return true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#nextState\r\n     * @since 3.0.0\r\n     */\r\n    nextState: function ()\r\n    {\r\n        if (this.loopCounter > 0)\r\n        {\r\n            this.elapsed = 0;\r\n            this.progress = 0;\r\n            this.loopCounter--;\r\n\r\n            var onLoop = this.callbacks.onLoop;\r\n\r\n            if (onLoop)\r\n            {\r\n                onLoop.params[1] = this.targets;\r\n\r\n                onLoop.func.apply(onLoop.scope, onLoop.params);\r\n            }\r\n\r\n            this.resetTweenData(true);\r\n\r\n            if (this.loopDelay > 0)\r\n            {\r\n                this.countdown = this.loopDelay;\r\n                this.state = TWEEN_CONST.LOOP_DELAY;\r\n            }\r\n            else\r\n            {\r\n                this.state = TWEEN_CONST.ACTIVE;\r\n            }\r\n        }\r\n        else if (this.completeDelay > 0)\r\n        {\r\n            this.countdown = this.completeDelay;\r\n            this.state = TWEEN_CONST.COMPLETE_DELAY;\r\n        }\r\n        else\r\n        {\r\n            var onComplete = this.callbacks.onComplete;\r\n\r\n            if (onComplete)\r\n            {\r\n                onComplete.params[1] = this.targets;\r\n\r\n                onComplete.func.apply(onComplete.scope, onComplete.params);\r\n            }\r\n\r\n            this.state = TWEEN_CONST.PENDING_REMOVE;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#pause\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Tweens.Tween} This Tween object.\r\n     */\r\n    pause: function ()\r\n    {\r\n        if (this.state === TWEEN_CONST.PAUSED)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.paused = true;\r\n\r\n        this._pausedState = this.state;\r\n\r\n        this.state = TWEEN_CONST.PAUSED;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#play\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} resetFromTimeline - [description]\r\n     */\r\n    play: function (resetFromTimeline)\r\n    {\r\n        if (this.state === TWEEN_CONST.ACTIVE)\r\n        {\r\n            return;\r\n        }\r\n        else if (this.state === TWEEN_CONST.PENDING_REMOVE || this.state === TWEEN_CONST.REMOVED)\r\n        {\r\n            this.init();\r\n            this.parent.makeActive(this);\r\n            resetFromTimeline = true;\r\n        }\r\n\r\n        var onStart = this.callbacks.onStart;\r\n\r\n        if (this.parentIsTimeline)\r\n        {\r\n            this.resetTweenData(resetFromTimeline);\r\n\r\n            if (this.calculatedOffset === 0)\r\n            {\r\n                if (onStart)\r\n                {\r\n                    onStart.params[1] = this.targets;\r\n\r\n                    onStart.func.apply(onStart.scope, onStart.params);\r\n                }\r\n\r\n                this.state = TWEEN_CONST.ACTIVE;\r\n            }\r\n            else\r\n            {\r\n                this.countdown = this.calculatedOffset;\r\n\r\n                this.state = TWEEN_CONST.OFFSET_DELAY;\r\n            }\r\n        }\r\n        else if (this.paused)\r\n        {\r\n            this.paused = false;\r\n\r\n            this.parent.makeActive(this);\r\n        }\r\n        else\r\n        {\r\n            this.resetTweenData(resetFromTimeline);\r\n\r\n            this.state = TWEEN_CONST.ACTIVE;\r\n\r\n            if (onStart)\r\n            {\r\n                onStart.params[1] = this.targets;\r\n\r\n                onStart.func.apply(onStart.scope, onStart.params);\r\n            }\r\n\r\n            this.parent.makeActive(this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#resetTweenData\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} resetFromLoop - [description]\r\n     */\r\n    resetTweenData: function (resetFromLoop)\r\n    {\r\n        var data = this.data;\r\n\r\n        for (var i = 0; i < this.totalData; i++)\r\n        {\r\n            var tweenData = data[i];\r\n\r\n            tweenData.progress = 0;\r\n            tweenData.elapsed = 0;\r\n\r\n            tweenData.repeatCounter = (tweenData.repeat === -1) ? 999999999999 : tweenData.repeat;\r\n\r\n            if (resetFromLoop)\r\n            {\r\n                tweenData.start = tweenData.getStartValue(tweenData.target, tweenData.key, tweenData.start);\r\n\r\n                tweenData.end = tweenData.getEndValue(tweenData.target, tweenData.key, tweenData.end);\r\n\r\n                tweenData.current = tweenData.start;\r\n\r\n                tweenData.state = TWEEN_CONST.PLAYING_FORWARD;\r\n            }\r\n            else if (tweenData.delay > 0)\r\n            {\r\n                tweenData.elapsed = tweenData.delay;\r\n                tweenData.state = TWEEN_CONST.DELAY;\r\n            }\r\n            else\r\n            {\r\n                tweenData.state = TWEEN_CONST.PENDING_RENDER;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Resumes the playback of a previously paused Tween.\r\n     *\r\n     * @method Phaser.Tweens.Tween#resume\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Tweens.Tween} This Tween object.\r\n     */\r\n    resume: function ()\r\n    {\r\n        if (this.state === TWEEN_CONST.PAUSED)\r\n        {\r\n            this.paused = false;\r\n\r\n            this.state = this._pausedState;\r\n        }\r\n        else\r\n        {\r\n            this.play();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#seek\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} toPosition - A value between 0 and 1.\r\n     */\r\n    seek: function (toPosition)\r\n    {\r\n        var data = this.data;\r\n\r\n        for (var i = 0; i < this.totalData; i++)\r\n        {\r\n            //  This won't work with loop > 0 yet\r\n            var ms = this.totalDuration * toPosition;\r\n\r\n            var tweenData = data[i];\r\n            var progress = 0;\r\n            var elapsed = 0;\r\n\r\n            if (ms <= tweenData.delay)\r\n            {\r\n                progress = 0;\r\n                elapsed = 0;\r\n            }\r\n            else if (ms >= tweenData.totalDuration)\r\n            {\r\n                progress = 1;\r\n                elapsed = tweenData.duration;\r\n            }\r\n            else if (ms > tweenData.delay && ms <= tweenData.t1)\r\n            {\r\n                //  Keep it zero bound\r\n                ms = Math.max(0, ms - tweenData.delay);\r\n\r\n                //  Somewhere in the first playthru range\r\n                progress = ms / tweenData.t1;\r\n                elapsed = tweenData.duration * progress;\r\n            }\r\n            else if (ms > tweenData.t1 && ms < tweenData.totalDuration)\r\n            {\r\n                //  Somewhere in repeat land\r\n                ms -= tweenData.delay;\r\n                ms -= tweenData.t1;\r\n\r\n                // var repeats = Math.floor(ms / tweenData.t2);\r\n\r\n                //  remainder\r\n                ms = ((ms / tweenData.t2) % 1) * tweenData.t2;\r\n\r\n                if (ms > tweenData.repeatDelay)\r\n                {\r\n                    progress = ms / tweenData.t1;\r\n                    elapsed = tweenData.duration * progress;\r\n                }\r\n            }\r\n\r\n            tweenData.progress = progress;\r\n            tweenData.elapsed = elapsed;\r\n\r\n            var v = tweenData.ease(tweenData.progress);\r\n\r\n            tweenData.current = tweenData.start + ((tweenData.end - tweenData.start) * v);\r\n\r\n            // console.log(tweenData.key, 'Seek', tweenData.target[tweenData.key], 'to', tweenData.current, 'pro', tweenData.progress, 'marker', toPosition, progress);\r\n\r\n            // if (tweenData.current === 0)\r\n            // {\r\n            //     console.log('zero', tweenData.start, tweenData.end, v, 'progress', progress);\r\n            // }\r\n\r\n            tweenData.target[tweenData.key] = tweenData.current;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#setCallback\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} type - [description]\r\n     * @param {function} callback - [description]\r\n     * @param {array} [params] - [description]\r\n     * @param {object} [scope] - [description]\r\n     *\r\n     * @return {Phaser.Tweens.Tween} This Tween object.\r\n     */\r\n    setCallback: function (type, callback, params, scope)\r\n    {\r\n        this.callbacks[type] = { func: callback, scope: scope, params: params };\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Flags the Tween as being complete, whatever stage of progress it is at.\r\n     *\r\n     * If an onComplete callback has been defined it will automatically invoke it, unless a `delay`\r\n     * argument is provided, in which case the Tween will delay for that period of time before calling the callback.\r\n     *\r\n     * If you don't need a delay, or have an onComplete callback, then call `Tween.stop` instead.\r\n     *\r\n     * @method Phaser.Tweens.Tween#complete\r\n     * @since 3.2.0\r\n     *\r\n     * @param {number} [delay=0] - The time to wait before invoking the complete callback. If zero it will fire immediately.\r\n     */\r\n    complete: function (delay)\r\n    {\r\n        if (delay === undefined) { delay = 0; }\r\n\r\n        if (delay)\r\n        {\r\n            this.countdown = delay;\r\n            this.state = TWEEN_CONST.COMPLETE_DELAY;\r\n        }\r\n        else\r\n        {\r\n            var onComplete = this.callbacks.onComplete;\r\n\r\n            if (onComplete)\r\n            {\r\n                onComplete.params[1] = this.targets;\r\n\r\n                onComplete.func.apply(onComplete.scope, onComplete.params);\r\n            }\r\n\r\n            this.state = TWEEN_CONST.PENDING_REMOVE;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Stops the Tween immediately, whatever stage of progress it is at and flags it for removal by the TweenManager.\r\n     *\r\n     * @method Phaser.Tweens.Tween#stop\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [resetTo] - A value between 0 and 1.\r\n     */\r\n    stop: function (resetTo)\r\n    {\r\n        if (this.state === TWEEN_CONST.ACTIVE)\r\n        {\r\n            if (resetTo !== undefined)\r\n            {\r\n                this.seek(resetTo);\r\n            }\r\n        }\r\n\r\n        if (this.state !== TWEEN_CONST.REMOVED)\r\n        {\r\n            if (this.state === TWEEN_CONST.PAUSED || this.state === TWEEN_CONST.PENDING_ADD)\r\n            {\r\n                this.parent._destroy.push(this);\r\n                this.parent._toProcess++;\r\n            }\r\n\r\n            this.state = TWEEN_CONST.PENDING_REMOVE;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#update\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} timestamp - [description]\r\n     * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n     *\r\n     * @return {boolean} Returns `true` if this Tween has finished and should be removed from the Tween Manager, otherwise returns `false`.\r\n     */\r\n    update: function (timestamp, delta)\r\n    {\r\n        if (this.state === TWEEN_CONST.PAUSED)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        if (this.useFrames)\r\n        {\r\n            delta = 1 * this.parent.timeScale;\r\n        }\r\n\r\n        delta *= this.timeScale;\r\n\r\n        this.elapsed += delta;\r\n        this.progress = Math.min(this.elapsed / this.duration, 1);\r\n\r\n        this.totalElapsed += delta;\r\n        this.totalProgress = Math.min(this.totalElapsed / this.totalDuration, 1);\r\n\r\n        switch (this.state)\r\n        {\r\n            case TWEEN_CONST.ACTIVE:\r\n\r\n                var stillRunning = false;\r\n\r\n                for (var i = 0; i < this.totalData; i++)\r\n                {\r\n                    if (this.updateTweenData(this, this.data[i], delta))\r\n                    {\r\n                        stillRunning = true;\r\n                    }\r\n                }\r\n\r\n                //  Anything still running? If not, we're done\r\n                if (!stillRunning)\r\n                {\r\n                    this.nextState();\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.LOOP_DELAY:\r\n\r\n                this.countdown -= delta;\r\n\r\n                if (this.countdown <= 0)\r\n                {\r\n                    this.state = TWEEN_CONST.ACTIVE;\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.OFFSET_DELAY:\r\n\r\n                this.countdown -= delta;\r\n\r\n                if (this.countdown <= 0)\r\n                {\r\n                    var onStart = this.callbacks.onStart;\r\n\r\n                    if (onStart)\r\n                    {\r\n                        onStart.params[1] = this.targets;\r\n\r\n                        onStart.func.apply(onStart.scope, onStart.params);\r\n                    }\r\n\r\n                    this.state = TWEEN_CONST.ACTIVE;\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.COMPLETE_DELAY:\r\n\r\n                this.countdown -= delta;\r\n\r\n                if (this.countdown <= 0)\r\n                {\r\n                    var onComplete = this.callbacks.onComplete;\r\n\r\n                    if (onComplete)\r\n                    {\r\n                        onComplete.func.apply(onComplete.scope, onComplete.params);\r\n                    }\r\n\r\n                    this.state = TWEEN_CONST.PENDING_REMOVE;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        return (this.state === TWEEN_CONST.PENDING_REMOVE);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#setStateFromEnd\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - [description]\r\n     * @param {Phaser.Tweens.TweenDataConfig} tweenData - [description]\r\n     * @param {number} diff - [description]\r\n     *\r\n     * @return {integer} The state of this Tween.\r\n     */\r\n    setStateFromEnd: function (tween, tweenData, diff)\r\n    {\r\n        if (tweenData.yoyo)\r\n        {\r\n            //  We've hit the end of a Playing Forward TweenData and we have a yoyo\r\n\r\n            //  Account for any extra time we got from the previous frame\r\n            tweenData.elapsed = diff;\r\n            tweenData.progress = diff / tweenData.duration;\r\n\r\n            if (tweenData.flipX)\r\n            {\r\n                tweenData.target.toggleFlipX();\r\n            }\r\n\r\n            //  Problem: The flip and callback and so on gets called for every TweenData that triggers it at the same time.\r\n            //  If you're tweening several properties it can fire for all of them, at once.\r\n\r\n            if (tweenData.flipY)\r\n            {\r\n                tweenData.target.toggleFlipY();\r\n            }\r\n\r\n            var onYoyo = tween.callbacks.onYoyo;\r\n\r\n            if (onYoyo)\r\n            {\r\n                //  Element 1 is reserved for the target of the yoyo (and needs setting here)\r\n                onYoyo.params[1] = tweenData.target;\r\n\r\n                onYoyo.func.apply(onYoyo.scope, onYoyo.params);\r\n            }\r\n\r\n            tweenData.start = tweenData.getStartValue(tweenData.target, tweenData.key, tweenData.start);\r\n\r\n            return TWEEN_CONST.PLAYING_BACKWARD;\r\n        }\r\n        else if (tweenData.repeatCounter > 0)\r\n        {\r\n            //  We've hit the end of a Playing Forward TweenData and we have a Repeat.\r\n            //  So we're going to go right back to the start to repeat it again.\r\n\r\n            tweenData.repeatCounter--;\r\n\r\n            //  Account for any extra time we got from the previous frame\r\n            tweenData.elapsed = diff;\r\n            tweenData.progress = diff / tweenData.duration;\r\n\r\n            if (tweenData.flipX)\r\n            {\r\n                tweenData.target.toggleFlipX();\r\n            }\r\n\r\n            if (tweenData.flipY)\r\n            {\r\n                tweenData.target.toggleFlipY();\r\n            }\r\n\r\n            var onRepeat = tween.callbacks.onRepeat;\r\n\r\n            if (onRepeat)\r\n            {\r\n                //  Element 1 is reserved for the target of the repeat (and needs setting here)\r\n                onRepeat.params[1] = tweenData.target;\r\n\r\n                onRepeat.func.apply(onRepeat.scope, onRepeat.params);\r\n            }\r\n\r\n            tweenData.start = tweenData.getStartValue(tweenData.target, tweenData.key, tweenData.start);\r\n\r\n            tweenData.end = tweenData.getEndValue(tweenData.target, tweenData.key, tweenData.start);\r\n\r\n            //  Delay?\r\n            if (tweenData.repeatDelay > 0)\r\n            {\r\n                tweenData.elapsed = tweenData.repeatDelay - diff;\r\n\r\n                tweenData.current = tweenData.start;\r\n\r\n                tweenData.target[tweenData.key] = tweenData.current;\r\n\r\n                return TWEEN_CONST.REPEAT_DELAY;\r\n            }\r\n            else\r\n            {\r\n                return TWEEN_CONST.PLAYING_FORWARD;\r\n            }\r\n        }\r\n\r\n        return TWEEN_CONST.COMPLETE;\r\n    },\r\n\r\n    /**\r\n     * Was PLAYING_BACKWARD and has hit the start.\r\n     *\r\n     * @method Phaser.Tweens.Tween#setStateFromStart\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - [description]\r\n     * @param {Phaser.Tweens.TweenDataConfig} tweenData - [description]\r\n     * @param {number} diff - [description]\r\n     *\r\n     * @return {integer} The state of this Tween.\r\n     */\r\n    setStateFromStart: function (tween, tweenData, diff)\r\n    {\r\n        if (tweenData.repeatCounter > 0)\r\n        {\r\n            tweenData.repeatCounter--;\r\n\r\n            //  Account for any extra time we got from the previous frame\r\n            tweenData.elapsed = diff;\r\n            tweenData.progress = diff / tweenData.duration;\r\n\r\n            if (tweenData.flipX)\r\n            {\r\n                tweenData.target.toggleFlipX();\r\n            }\r\n\r\n            if (tweenData.flipY)\r\n            {\r\n                tweenData.target.toggleFlipY();\r\n            }\r\n\r\n            var onRepeat = tween.callbacks.onRepeat;\r\n\r\n            if (onRepeat)\r\n            {\r\n                //  Element 1 is reserved for the target of the repeat (and needs setting here)\r\n                onRepeat.params[1] = tweenData.target;\r\n\r\n                onRepeat.func.apply(onRepeat.scope, onRepeat.params);\r\n            }\r\n\r\n            tweenData.end = tweenData.getEndValue(tweenData.target, tweenData.key, tweenData.start);\r\n\r\n            //  Delay?\r\n            if (tweenData.repeatDelay > 0)\r\n            {\r\n                tweenData.elapsed = tweenData.repeatDelay - diff;\r\n\r\n                tweenData.current = tweenData.start;\r\n\r\n                tweenData.target[tweenData.key] = tweenData.current;\r\n\r\n                return TWEEN_CONST.REPEAT_DELAY;\r\n            }\r\n            else\r\n            {\r\n                return TWEEN_CONST.PLAYING_FORWARD;\r\n            }\r\n        }\r\n\r\n        return TWEEN_CONST.COMPLETE;\r\n    },\r\n\r\n    //\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Tweens.Tween#updateTweenData\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tweens.Tween} tween - [description]\r\n     * @param {Phaser.Tweens.TweenDataConfig} tweenData - [description]\r\n     * @param {number} delta - Either a value in ms, or 1 if Tween.useFrames is true\r\n     *\r\n     * @return {boolean} [description]\r\n     */\r\n    updateTweenData: function (tween, tweenData, delta)\r\n    {\r\n        switch (tweenData.state)\r\n        {\r\n            case TWEEN_CONST.PLAYING_FORWARD:\r\n            case TWEEN_CONST.PLAYING_BACKWARD:\r\n\r\n                if (!tweenData.target)\r\n                {\r\n                    tweenData.state = TWEEN_CONST.COMPLETE;\r\n                    break;\r\n                }\r\n\r\n                var elapsed = tweenData.elapsed;\r\n                var duration = tweenData.duration;\r\n                var diff = 0;\r\n\r\n                elapsed += delta;\r\n\r\n                if (elapsed > duration)\r\n                {\r\n                    diff = elapsed - duration;\r\n                    elapsed = duration;\r\n                }\r\n\r\n                var forward = (tweenData.state === TWEEN_CONST.PLAYING_FORWARD);\r\n                var progress = elapsed / duration;\r\n\r\n                var v;\r\n\r\n                if (forward)\r\n                {\r\n                    v = tweenData.ease(progress);\r\n                }\r\n                else\r\n                {\r\n                    v = tweenData.ease(1 - progress);\r\n                }\r\n\r\n                tweenData.current = tweenData.start + ((tweenData.end - tweenData.start) * v);\r\n\r\n                tweenData.target[tweenData.key] = tweenData.current;\r\n\r\n                tweenData.elapsed = elapsed;\r\n                tweenData.progress = progress;\r\n\r\n                var onUpdate = tween.callbacks.onUpdate;\r\n\r\n                if (onUpdate)\r\n                {\r\n                    onUpdate.params[1] = tweenData.target;\r\n\r\n                    onUpdate.func.apply(onUpdate.scope, onUpdate.params);\r\n                }\r\n\r\n                if (progress === 1)\r\n                {\r\n                    if (forward)\r\n                    {\r\n                        if (tweenData.hold > 0)\r\n                        {\r\n                            tweenData.elapsed = tweenData.hold - diff;\r\n\r\n                            tweenData.state = TWEEN_CONST.HOLD_DELAY;\r\n                        }\r\n                        else\r\n                        {\r\n                            tweenData.state = this.setStateFromEnd(tween, tweenData, diff);\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        tweenData.state = this.setStateFromStart(tween, tweenData, diff);\r\n                    }\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.DELAY:\r\n\r\n                tweenData.elapsed -= delta;\r\n\r\n                if (tweenData.elapsed <= 0)\r\n                {\r\n                    tweenData.elapsed = Math.abs(tweenData.elapsed);\r\n\r\n                    tweenData.state = TWEEN_CONST.PENDING_RENDER;\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.REPEAT_DELAY:\r\n\r\n                tweenData.elapsed -= delta;\r\n\r\n                if (tweenData.elapsed <= 0)\r\n                {\r\n                    tweenData.elapsed = Math.abs(tweenData.elapsed);\r\n\r\n                    tweenData.state = TWEEN_CONST.PLAYING_FORWARD;\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.HOLD_DELAY:\r\n\r\n                tweenData.elapsed -= delta;\r\n\r\n                if (tweenData.elapsed <= 0)\r\n                {\r\n                    tweenData.state = this.setStateFromEnd(tween, tweenData, Math.abs(tweenData.elapsed));\r\n                }\r\n\r\n                break;\r\n\r\n            case TWEEN_CONST.PENDING_RENDER:\r\n\r\n                if (tweenData.target)\r\n                {\r\n                    tweenData.start = tweenData.getStartValue(tweenData.target, tweenData.key, tweenData.target[tweenData.key]);\r\n\r\n                    tweenData.end = tweenData.getEndValue(tweenData.target, tweenData.key, tweenData.start);\r\n\r\n                    tweenData.current = tweenData.start;\r\n\r\n                    tweenData.target[tweenData.key] = tweenData.start;\r\n\r\n                    tweenData.state = TWEEN_CONST.PLAYING_FORWARD;\r\n                }\r\n                else\r\n                {\r\n                    tweenData.state = TWEEN_CONST.COMPLETE;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        //  Return TRUE if this TweenData still playing, otherwise return FALSE\r\n        return (tweenData.state !== TWEEN_CONST.COMPLETE);\r\n    }\r\n\r\n});\r\n\r\nTween.TYPES = [\r\n    'onComplete',\r\n    'onLoop',\r\n    'onRepeat',\r\n    'onStart',\r\n    'onUpdate',\r\n    'onYoyo'\r\n];\r\n\r\n/**\r\n * Creates a new Tween object.\r\n *\r\n * Note: This method will only be available Tweens have been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory#tween\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The Tween configuration.\r\n *\r\n * @return {Phaser.Tweens.Tween} The Tween that was created.\r\n */\r\nGameObjectFactory.register('tween', function (config)\r\n{\r\n    return this.scene.sys.tweens.add(config);\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectFactory context.\r\n//\r\n//  There are several properties available to use:\r\n//\r\n//  this.scene - a reference to the Scene that owns the GameObjectFactory\r\n//  this.displayList - a reference to the Display List the Scene owns\r\n//  this.updateList - a reference to the Update List the Scene owns\r\n\r\n/**\r\n * Creates a new Tween object and returns it.\r\n *\r\n * Note: This method will only be available if Tweens have been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#tween\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The Tween configuration.\r\n *\r\n * @return {Phaser.Tweens.Tween} The Tween that was created.\r\n */\r\nGameObjectCreator.register('tween', function (config)\r\n{\r\n    return this.scene.sys.tweens.create(config);\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectCreator context.\r\n\r\nmodule.exports = Tween;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","GameObjectCreator","GameObjectFactory","TWEEN_CONST","Tween","initialize","parent","data","targets","parentIsTimeline","hasOwnProperty","totalData","length","totalTargets","useFrames","timeScale","calculatedOffset","offset","countdown","completeDelay","loopCounter","loopDelay","loop","_pausedState","state","PENDING_ADD","paused","totalProgress","totalDuration","progress","duration","totalElapsed","elapsed","callbacks","onComplete","onLoop","onRepeat","onStart","onUpdate","onYoyo","callbackScope","getValue","current","setTimeScale","value","getTimeScale","isPlaying","ACTIVE","isPaused","PAUSED","hasTarget","target","indexOf","updateTo","key","startToCurrent","i","tweenData","end","start","restart","REMOVED","seek","makeActive","stop","play","calcDuration","max","t1","hold","yoyo","t2","repeatDelay","delay","repeat","init","gen","INIT","nextState","params","func","apply","scope","resetTweenData","LOOP_DELAY","COMPLETE_DELAY","PENDING_REMOVE","pause","resetFromTimeline","OFFSET_DELAY","resetFromLoop","repeatCounter","getStartValue","getEndValue","PLAYING_FORWARD","DELAY","PENDING_RENDER","resume","toPosition","ms","Math","v","ease","setCallback","type","callback","complete","undefined","resetTo","_destroy","push","_toProcess","update","timestamp","delta","min","stillRunning","updateTweenData","setStateFromEnd","tween","diff","flipX","toggleFlipX","flipY","toggleFlipY","PLAYING_BACKWARD","REPEAT_DELAY","COMPLETE","setStateFromStart","forward","HOLD_DELAY","abs","TYPES","register","config","scene","sys","tweens","add","create"]
}
