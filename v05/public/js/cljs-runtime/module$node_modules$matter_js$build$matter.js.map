{
"version":3,
"file":"module$node_modules$matter_js$build$matter.js",
"lineCount":245,
"mappings":"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",
"sources":["node_modules/matter-js/build/matter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$matter_js$build$matter\"] = function(global,require,module,exports) {\n/*!\n * matter-js 0.17.1 by @liabru\n * http://brm.io/matter-js/\n * License MIT\n * \n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Matter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Matter\"] = factory();\n\telse\n\t\troot[\"Matter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 22);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n    Common._warnedOnce = {};\n    Common._decomp = null;\n    \n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result is in milliseconds and will use high-resolution timing if available.\n     * @method now\n     * @return {number} the current timestamp in milliseconds\n     */\n    Common.now = function() {\n        if (typeof window !== 'undefined' && window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        if (Date.now) {\n            return Date.now();\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Uses `Common.warn` to log the given message one time only.\n     * @method warnOnce\n     * @param ...objs {} The objects to log.\n     */\n    Common.warnOnce = function() {\n        var message = Array.prototype.slice.call(arguments).join(' ');\n\n        if (!Common._warnedOnce[message]) {\n            Common.warn(message);\n            Common._warnedOnce[message] = true;\n        }\n    };\n\n    /**\n     * Shows a deprecated console warning when the function on the given object is called.\n     * The target function will be replaced with a new function that first shows the warning\n     * and then calls the original function.\n     * @method deprecated\n     * @param {object} obj The object or module\n     * @param {string} name The property name of the function on obj\n     * @param {string} warning The one-time message to show if the function is called\n     */\n    Common.deprecated = function(obj, prop, warning) {\n        obj[prop] = Common.chain(function() {\n            Common.warnOnce('\ud83d\udd05 deprecated \ud83d\udd05', warning);\n        }, obj[prop]);\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Provide the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module to enable\n     * concave vertex decomposition support when using `Bodies.fromVertices` e.g. `Common.setDecomp(require('poly-decomp'))`.\n     * @method setDecomp\n     * @param {} decomp The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module.\n     */\n    Common.setDecomp = function(decomp) {\n        Common._decomp = decomp;\n    };\n\n    /**\n     * Returns the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module provided through `Common.setDecomp`,\n     * otherwise returns the global `decomp` if set.\n     * @method getDecomp\n     * @return {} The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module if provided.\n     */\n    Common.getDecomp = function() {\n        // get user provided decomp if set\n        var decomp = Common._decomp;\n\n        try {\n            // otherwise from window global\n            if (!decomp && typeof window !== 'undefined') {\n                decomp = window.decomp;\n            }\n    \n            // otherwise from node global\n            if (!decomp && typeof global !== 'undefined') {\n                decomp = global.decomp;\n            }\n        } catch (e) {\n            // decomp not available\n            decomp = null;\n        }\n\n        return decomp;\n    };\n})();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        var events = object.events;\n        \n        if (events && Common.keys(events).length > 0) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* A composite is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite` objects.\n*\n* They are a container that can represent complex objects made of multiple parts, even if they are not physically connected.\n* A composite could contain anything from a single body all the way up to a whole world.\n* \n* When making any changes to composites, use the included functions rather than changing their properties directly.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = __webpack_require__(4);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic single or multi-add function. Adds a single or an array of body(s), constraint(s) or composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {object|array} object A single or an array of body(s), constraint(s) or composite(s)\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {object|array} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n            .concat(Composite.allConstraints(composite))\n            .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Render = __webpack_require__(16);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(10);\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                strokeStyle: null,\n                fillStyle: null,\n                lineWidth: null,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                }\n            },\n            events: null,\n            bounds: null,\n            chamfer: null,\n            circleRadius: 0,\n            positionPrev: null,\n            anglePrev: 0,\n            parent: null,\n            axes: null,\n            area: 0,\n            mass: 0,\n            inertia: 0,\n            _original: null\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#14151f' : Common.choose(['#f19648', '#f5d259', '#f55a3c', '#063e7b', '#ececd1'])),\n            defaultStrokeStyle = body.isStatic ? '#555' : '#ccc',\n            defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.lineWidth = body.render.lineWidth || defaultLineWidth;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            if (!Object.prototype.hasOwnProperty.call(settings, property))\n                continue;\n\n            value = settings[property];\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            case 'centre':\n                Body.setCentre(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                part._original = null;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Set the centre of mass of the body. \n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n    Body.setCentre = function(body, centre, relative) {\n        if (!relative) {\n            body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);\n            body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);\n            body.position.x = centre.x;\n            body.position.y = centre.y;\n        } else {\n            body.positionPrev.x += centre.x;\n            body.positionPrev.y += centre.y;\n            body.position.x += centre.x;\n            body.position.y += centre.y;\n        }\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = __webpack_require__(4);\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(10);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointAWorld = function(constraint) {\n        return {\n            x: (constraint.bodyA ? constraint.bodyA.position.x : 0) + constraint.pointA.x,\n            y: (constraint.bodyA ? constraint.bodyA.position.y : 0) + constraint.pointA.y\n        };\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointBWorld = function(constraint) {\n        return {\n            x: (constraint.bodyB ? constraint.bodyB.position.x : 0) + constraint.pointB.x,\n            y: (constraint.bodyB ? constraint.bodyB.position.y : 0) + constraint.pointB.y\n        };\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = __webpack_require__(17);\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            confirmedActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = __webpack_require__(3);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bounds = __webpack_require__(1);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Utility to create a compound body based on set(s) of vertices.\n     * \n     * _Note:_ To optionally enable automatic concave vertices decomposition the [poly-decomp](https://github.com/schteppe/poly-decomp.js) \n     * package must be first installed and provided see `Common.setDecomp`, otherwise the convex hull of each vertex set will be used.\n     * \n     * The resulting vertices are reorientated about their centre of mass,\n     * and offset such that `body.position` corresponds to this point.\n     * \n     * The resulting offset may be found if needed by subtracting `body.bounds` from the original input bounds.\n     * To later move the centre of mass see `Body.setCentre`.\n     * \n     * Note that automatic conconcave decomposition results are not always optimal. \n     * For best results, simplify the input vertices as much as possible first.\n     * By default this function applies some addtional simplification to help.\n     * \n     * Some outputs may also require further manual processing afterwards to be robust.\n     * In particular some parts may need to be overlapped to avoid collision gaps.\n     * Thin parts and sharp points should be avoided or removed where possible.\n     *\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n     * \n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param {array} vertexSets One or more arrays of vertex points e.g. `[[{ x: 0, y: 0 }...], ...]`.\n     * @param {object} [options] The body options.\n     * @param {bool} [flagInternal=false] Optionally marks internal edges with `isInternal`.\n     * @param {number} [removeCollinear=0.01] Threshold when simplifying vertices along the same edge.\n     * @param {number} [minimumArea=10] Threshold when removing small parts.\n     * @param {number} [removeDuplicatePoints=0.01] Threshold when simplifying nearby vertices.\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n        var decomp = Common.getDecomp(),\n            canDecomp,\n            body,\n            parts,\n            isConvex,\n            isConcave,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        // check decomp is as expected\n        canDecomp = Boolean(decomp && decomp.quickDecomp);\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n        removeDuplicatePoints = typeof removeDuplicatePoints !== 'undefined' ? removeDuplicatePoints : 0.01;\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n            isConcave = !isConvex;\n\n            if (isConcave && !canDecomp) {\n                Common.warnOnce(\n                    'Bodies.fromVertices: Install the \\'poly-decomp\\' library and use Common.setDecomp or provide \\'decomp\\' as a global to decompose concave vertices.'\n                );\n            }\n\n            if (isConvex || !canDecomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n                if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints)\n                    decomp.removeDuplicatePoints(concave, removeDuplicatePoints);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n\n            // offset such that body.position is at the centre off mass\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = parseInt(mouse.element.getAttribute('data-pixel-ratio'), 10) || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = __webpack_require__(14);\nvar Pair = __webpack_require__(9);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick \u2705 indicates a dependency was resolved and installed.\n     * - An orange diamond \ud83d\udd36 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross \u274c indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('\u274c ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('\ud83d\udd36 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('\u2705 ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var parts = pattern.exec(range);\n        var major = Number(parts[4]);\n        var minor = Number(parts[5]);\n        var patch = Number(parts[6]);\n\n        return {\n            isRange: Boolean(parts[1] || parts[2]),\n            version: parts[3],\n            range: range,\n            operator: parts[1] || parts[2] || '',\n            major: major,\n            minor: minor,\n            patch: patch,\n            parts: [major, minor, patch],\n            prerelease: parts[7],\n            number: major * 1e8 + minor * 1e4 + patch\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var r = Plugin.versionParse(range),\n            v = Plugin.versionParse(version);\n\n        if (r.isRange) {\n            if (r.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (r.operator === '>') {\n                return v.number > r.number;\n            }\n\n            if (r.operator === '>=') {\n                return v.number >= r.number;\n            }\n\n            if (r.operator === '~') {\n                return v.major === r.major && v.minor === r.minor && v.patch >= r.patch;\n            }\n\n            if (r.operator === '^') {\n                if (r.major > 0) {\n                    return v.major === r.major && v.number >= r.number;\n                }\n\n                if (r.minor > 0) {\n                    return v.minor === r.minor && v.patch >= r.patch;\n                }\n\n                return v.patch === r.patch;\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Render` module is a simple canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = __webpack_require__(0);\nvar Composite = __webpack_require__(5);\nvar Bounds = __webpack_require__(1);\nvar Events = __webpack_require__(4);\nvar Vector = __webpack_require__(2);\nvar Mouse = __webpack_require__(12);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    Render._goodFps = 30;\n    Render._goodDelta = 1000 / 60;\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            timing: {\n                historySize: 60,\n                delta: 0,\n                deltaHistory: [],\n                lastTime: 0,\n                lastTimestamp: 0,\n                lastElapsed: 0,\n                timestampElapsed: 0,\n                timestampElapsedHistory: [],\n                engineDeltaHistory: [],\n                engineElapsedHistory: [],\n                elapsedHistory: []\n            },\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#14151f',\n                wireframeBackground: '#14151f',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showStats: false,\n                showPerformance: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            \n            _updateTiming(render, time);\n\n            Render.world(render, time);\n\n            if (render.options.showStats || render.options.showDebug) {\n                Render.stats(render, render.context, time);\n            }\n\n            if (render.options.showPerformance || render.options.showDebug) {\n                Render.performance(render, render.context, time);\n            }\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.setTransform(\n            render.options.pixelRatio / boundsScaleX, 0, 0, \n            render.options.pixelRatio / boundsScaleY, 0, 0\n        );\n        \n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render, time) {\n        var startTime = Common.now(),\n            engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            timing = render.timing;\n\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase)\n            Render.grid(render, engine.grid, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n\n        // log the time elapsed computing this update\n        timing.lastElapsed = Common.now() - startTime;\n    };\n\n    /**\n     * Renders statistics about the engine and world useful for debugging.\n     * @private\n     * @method stats\n     * @param {render} render\n     * @param {RenderingContext} context\n     * @param {Number} time\n     */\n    Render.stats = function(render, context, time) {\n        var engine = render.engine,\n            world = engine.world,\n            bodies = Composite.allBodies(world),\n            parts = 0,\n            width = 55,\n            height = 44,\n            x = 0,\n            y = 0;\n        \n        // count parts\n        for (var i = 0; i < bodies.length; i += 1) {\n            parts += bodies[i].parts.length;\n        }\n\n        // sections\n        var sections = {\n            'Part': parts,\n            'Body': bodies.length,\n            'Cons': Composite.allConstraints(world).length,\n            'Comp': Composite.allComposites(world).length,\n            'Pair': engine.pairs.list.length\n        };\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(x, y, width * 5.5, height);\n\n        context.font = '12px Arial';\n        context.textBaseline = 'top';\n        context.textAlign = 'right';\n\n        // sections\n        for (var key in sections) {\n            var section = sections[key];\n            // label\n            context.fillStyle = '#aaa';\n            context.fillText(key, x + width, y + 8);\n\n            // value\n            context.fillStyle = '#eee';\n            context.fillText(section, x + width, y + 26);\n\n            x += width;\n        }\n    };\n\n    /**\n     * Renders engine and render performance information.\n     * @private\n     * @method performance\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.performance = function(render, context) {\n        var engine = render.engine,\n            timing = render.timing,\n            deltaHistory = timing.deltaHistory,\n            elapsedHistory = timing.elapsedHistory,\n            timestampElapsedHistory = timing.timestampElapsedHistory,\n            engineDeltaHistory = timing.engineDeltaHistory,\n            engineElapsedHistory = timing.engineElapsedHistory,\n            lastEngineDelta = engine.timing.lastDelta;\n        \n        var deltaMean = _mean(deltaHistory),\n            elapsedMean = _mean(elapsedHistory),\n            engineDeltaMean = _mean(engineDeltaHistory),\n            engineElapsedMean = _mean(engineElapsedHistory),\n            timestampElapsedMean = _mean(timestampElapsedHistory),\n            rateMean = (timestampElapsedMean / deltaMean) || 0,\n            fps = (1000 / deltaMean) || 0;\n\n        var graphHeight = 4,\n            gap = 12,\n            width = 60,\n            height = 34,\n            x = 10,\n            y = 69;\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(0, 50, gap * 4 + width * 5 + 22, height);\n\n        // show FPS\n        Render.status(\n            context, x, y, width, graphHeight, deltaHistory.length, \n            Math.round(fps) + ' fps', \n            fps / Render._goodFps,\n            function(i) { return (deltaHistory[i] / deltaMean) - 1; }\n        );\n\n        // show engine delta\n        Render.status(\n            context, x + gap + width, y, width, graphHeight, engineDeltaHistory.length,\n            lastEngineDelta.toFixed(2) + ' dt', \n            Render._goodDelta / lastEngineDelta,\n            function(i) { return (engineDeltaHistory[i] / engineDeltaMean) - 1; }\n        );\n\n        // show engine update time\n        Render.status(\n            context, x + (gap + width) * 2, y, width, graphHeight, engineElapsedHistory.length,\n            engineElapsedMean.toFixed(2) + ' ut', \n            1 - (engineElapsedMean / Render._goodFps),\n            function(i) { return (engineElapsedHistory[i] / engineElapsedMean) - 1; }\n        );\n\n        // show render time\n        Render.status(\n            context, x + (gap + width) * 3, y, width, graphHeight, elapsedHistory.length,\n            elapsedMean.toFixed(2) + ' rt', \n            1 - (elapsedMean / Render._goodFps),\n            function(i) { return (elapsedHistory[i] / elapsedMean) - 1; }\n        );\n\n        // show effective speed\n        Render.status(\n            context, x + (gap + width) * 4, y, width, graphHeight, timestampElapsedHistory.length, \n            rateMean.toFixed(2) + ' x', \n            rateMean * rateMean * rateMean,\n            function(i) { return (((timestampElapsedHistory[i] / deltaHistory[i]) / rateMean) || 0) - 1; }\n        );\n    };\n\n    /**\n     * Renders a label, indicator and a chart.\n     * @private\n     * @method status\n     * @param {RenderingContext} context\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} count\n     * @param {string} label\n     * @param {string} indicator\n     * @param {function} plotY\n     */\n    Render.status = function(context, x, y, width, height, count, label, indicator, plotY) {\n        // background\n        context.strokeStyle = '#888';\n        context.fillStyle = '#444';\n        context.lineWidth = 1;\n        context.fillRect(x, y + 7, width, 1);\n\n        // chart\n        context.beginPath();\n        context.moveTo(x, y + 7 - height * Common.clamp(0.4 * plotY(0), -2, 2));\n        for (var i = 0; i < width; i += 1) {\n            context.lineTo(x + i, y + 7 - (i < count ? height * Common.clamp(0.4 * plotY(i), -2, 2) : 0));\n        }\n        context.stroke();\n\n        // indicator\n        context.fillStyle = 'hsl(' + Common.clamp(25 + 95 * indicator, 0, 120) + ',100%,60%)';\n        context.fillRect(x, y - 7, 4, 4);\n\n        // label\n        context.font = '12px Arial';\n        context.textBaseline = 'middle';\n        context.textAlign = 'right';\n        context.fillStyle = '#eee';\n        context.fillText(label, x + width, y - 5);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                            (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                grid.bucketWidth,\n                grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                    Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Updates render timing.\n     * @method _updateTiming\n     * @private\n     * @param {render} render\n     * @param {number} time\n     */\n    var _updateTiming = function(render, time) {\n        var engine = render.engine,\n            timing = render.timing,\n            historySize = timing.historySize,\n            timestamp = engine.timing.timestamp;\n\n        timing.delta = time - timing.lastTime || Render._goodDelta;\n        timing.lastTime = time;\n\n        timing.timestampElapsed = timestamp - timing.lastTimestamp || 0;\n        timing.lastTimestamp = timestamp;\n\n        timing.deltaHistory.unshift(timing.delta);\n        timing.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize);\n\n        timing.engineDeltaHistory.unshift(engine.timing.lastDelta);\n        timing.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize);\n\n        timing.timestampElapsedHistory.unshift(timing.timestampElapsed);\n        timing.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize);\n\n        timing.engineElapsedHistory.unshift(engine.timing.lastElapsed);\n        timing.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize);\n\n        timing.elapsedHistory.unshift(timing.lastElapsed);\n        timing.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize);\n    };\n\n    /**\n     * Returns the mean value of the given numbers.\n     * @method _mean\n     * @private\n     * @param {Number[]} values\n     * @return {Number} the mean of given values\n     */\n    var _mean = function(values) {\n        var result = 0;\n        for (var i = 0; i < values.length; i += 1) {\n            result += values[i];\n        }\n        return (result / values.length) || 0;\n    };\n\n    /**\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n    /**\n     * The mouse to render if `render.options.showMousePosition` is enabled.\n     *\n     * @property mouse\n     * @type mouse\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * The [pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio) to use when rendering.\n     *\n     * @property options.pixelRatio\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is disabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.background\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is enabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.wireframeBackground\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable all debug information overlays together.  \n     * This includes and has priority over the values of:\n     *\n     * - `render.options.showStats`\n     * - `render.options.showPerformance`\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the engine stats info overlay.  \n     * From left to right, the values shown are:\n     *\n     * - body parts total\n     * - body total\n     * - constraints total\n     * - composites total\n     * - collision pairs total\n     *\n     * @property options.showStats\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable performance charts.  \n     * From left to right, the values shown are:\n     *\n     * - average render frequency (e.g. 60 fps)\n     * - exact engine delta time used for last update (e.g. 16.66ms)\n     * - average engine execution duration (e.g. 5.00ms)\n     * - average render execution duration (e.g. 0.40ms)\n     * - average effective play speed (e.g. '1.00x' is 'real-time')\n     *\n     * Each value is recorded over a fixed sample of past frames (60 frames).\n     *\n     * A chart shown below each value indicates the variance from the average over the sample.\n     * The more stable or fixed the value is the flatter the chart will appear.\n     *\n     * @property options.showPerformance\n     * @type boolean\n     * @default false\n     */\n    \n    /**\n     * A flag to enable or disable rendering entirely.\n     *\n     * @property options.enabled\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to toggle wireframe rendering otherwise solid fill rendering is used.\n     *\n     * @property options.wireframes\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable sleeping bodies indicators.\n     *\n     * @property options.showSleeping\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable the debug information overlay.\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision broadphase debug overlay.\n     *\n     * @property options.showBroadphase\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body bounds debug overlay.\n     *\n     * @property options.showBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body velocity debug overlay.\n     *\n     * @property options.showVelocity\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body collisions debug overlay.\n     *\n     * @property options.showCollisions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision resolver separations debug overlay.\n     *\n     * @property options.showSeparations\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body axes debug overlay.\n     *\n     * @property options.showAxes\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body positions debug overlay.\n     *\n     * @property options.showPositions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body angle debug overlay.\n     *\n     * @property options.showAngleIndicator\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body and part ids debug overlay.\n     *\n     * @property options.showIds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body vertex numbers debug overlay.\n     *\n     * @property options.showVertexNumbers\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body convex hulls debug overlay.\n     *\n     * @property options.showConvexHulls\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body internal edges debug overlay.\n     *\n     * @property options.showInternalEdges\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the mouse position debug overlay.\n     *\n     * @property options.showMousePosition\n     * @type boolean\n     * @default false\n     */\n\n})();\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar Sleeping = __webpack_require__(7);\nvar Resolver = __webpack_require__(19);\nvar Detector = __webpack_require__(13);\nvar Pairs = __webpack_require__(20);\nvar Grid = __webpack_require__(21);\nvar Events = __webpack_require__(4);\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(options) {\n        options = options || {};\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            grid: null,\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            timing: {\n                timestamp: 0,\n                timeScale: 1,\n                lastDelta: 0,\n                lastElapsed: 0\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        engine.world = options.world || Composite.create({ label: 'World' });\n        engine.grid = Grid.create(options.grid || options.broadphase);\n        engine.pairs = Pairs.create();\n\n        // temporary back compatibility\n        engine.world.gravity = engine.gravity;\n        engine.broadphase = engine.grid;\n        engine.metrics = {};\n        \n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        var startTime = Common.now();\n\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            grid = engine.grid,\n            gridPairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n        timing.lastDelta = delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, engine.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n\n        // if world is dirty, we must flush the whole grid\n        if (world.isModified)\n            Grid.clear(grid);\n\n        // update the grid buckets based on current bodies\n        Grid.update(grid, allBodies, engine, world.isModified);\n        gridPairs = grid.pairsList;\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = Detector.collisions(gridPairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        // log the time elapsed computing this update\n        engine.timing.lastElapsed = Common.now() - startTime;\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world,\n            bodies = Composite.allBodies(world);\n\n        Pairs.clear(engine.pairs);\n        Grid.clear(engine.grid);\n        Grid.update(engine.grid, bodies, engine, true);\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * A deprecated alias for `Runner.run`, use `Matter.Runner.run(engine)` instead and see `Matter.Runner` for more information.\n     * @deprecated use Matter.Runner.run(engine) instead\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the total execution time elapsed during the last `Engine.update` in milliseconds.\n     * It is updated by timing from the start of the last `Engine.update` call until it ends.\n     *\n     * This value will also include the total execution time of all event handlers directly or indirectly triggered by the engine update.\n     *\n     * @property timing.lastElapsed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the `delta` value used in the last engine update.\n     *\n     * @property timing.lastDelta\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Matter.Grid` instance.\n     *\n     * @property grid\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * Replaced by and now alias for `engine.grid`.\n     *\n     * @deprecated use `engine.grid`\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * The root `Matter.Composite` instance that will contain all bodies, constraints and other composites to be simulated by this engine.\n     *\n     * @property world\n     * @type composite\n     * @default a Matter.Composite instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * The gravity to apply on all bodies in `engine.world`.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n})();\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                Vector.add(bodyA.positionImpulse, \n                    Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pairsList[i].confirmedActive = false;\n        }\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                    pair.confirmedActive = true;\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && !pair.confirmedActive) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // temporary back compatibility bounds check\n            if (world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y))\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Matter = module.exports = __webpack_require__(23);\r\n\r\nMatter.Axes = __webpack_require__(10);\r\nMatter.Bodies = __webpack_require__(11);\r\nMatter.Body = __webpack_require__(6);\r\nMatter.Bounds = __webpack_require__(1);\r\nMatter.Common = __webpack_require__(0);\r\nMatter.Composite = __webpack_require__(5);\r\nMatter.Composites = __webpack_require__(24);\r\nMatter.Constraint = __webpack_require__(8);\r\nMatter.Contact = __webpack_require__(17);\r\nMatter.Detector = __webpack_require__(13);\r\nMatter.Engine = __webpack_require__(18);\r\nMatter.Events = __webpack_require__(4);\r\nMatter.Grid = __webpack_require__(21);\r\nMatter.Mouse = __webpack_require__(12);\r\nMatter.MouseConstraint = __webpack_require__(25);\r\nMatter.Pair = __webpack_require__(9);\r\nMatter.Pairs = __webpack_require__(20);\r\nMatter.Plugin = __webpack_require__(15);\r\nMatter.Query = __webpack_require__(26);\r\nMatter.Render = __webpack_require__(16);\r\nMatter.Resolver = __webpack_require__(19);\r\nMatter.Runner = __webpack_require__(27);\r\nMatter.SAT = __webpack_require__(14);\r\nMatter.Sleeping = __webpack_require__(7);\r\nMatter.Svg = __webpack_require__(28);\r\nMatter.Vector = __webpack_require__(2);\r\nMatter.Vertices = __webpack_require__(3);\r\nMatter.World = __webpack_require__(29);\r\n\r\n// temporary back compatibility\r\nMatter.Engine.run = Matter.Runner.run;\r\nMatter.Common.deprecated(Matter.Engine, 'run', 'Engine.run \u27a4 use Matter.Runner.run(engine) instead');\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\r\n*\r\n* @class Matter\r\n*/\r\n\r\nvar Matter = {};\r\n\r\nmodule.exports = Matter;\r\n\r\nvar Plugin = __webpack_require__(15);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * The library name.\r\n     * @property name\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.name = 'matter-js';\r\n\r\n    /**\r\n     * The library version.\r\n     * @property version\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.version =  true ? \"0.17.1\" : undefined;\r\n\r\n    /**\r\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\r\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\r\n     * @property uses\r\n     * @type {Array}\r\n     */\r\n    Matter.uses = [];\r\n\r\n    /**\r\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\r\n     * @property used\r\n     * @readOnly\r\n     * @type {Array}\r\n     */\r\n    Matter.used = [];\r\n\r\n    /**\r\n     * Installs the given plugins on the `Matter` namespace.\r\n     * This is a short-hand for `Plugin.use`, see it for more information.\r\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\r\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\r\n     * @method use\r\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\r\n     */\r\n    Matter.use = function() {\r\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method before\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain before the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.before = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathBefore(Matter, path, func);\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method after\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain after the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.after = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathAfter(Matter, path, func);\r\n    };\r\n\r\n})();\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bodies = __webpack_require__(11);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * This has now moved to the [newtonsCradle example](https://github.com/liabru/matter-js/blob/master/examples/newtonsCradle.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to newtonsCradle example\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                    { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n\n    deprecated(Composites, 'newtonsCradle', 'Composites.newtonsCradle \u27a4 moved to newtonsCradle example');\n    \n    /**\n     * This has now moved to the [car example](https://github.com/liabru/matter-js/blob/master/examples/car.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to car example\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    deprecated(Composites, 'car', 'Composites.car \u27a4 moved to car example');\n\n    /**\n     * This has now moved to the [softBody example](https://github.com/liabru/matter-js/blob/master/examples/softBody.js)\n     * and the [cloth example](https://github.com/liabru/matter-js/blob/master/examples/cloth.js), follow those instead as this function is deprecated here.\n     * @deprecated moved to softBody and cloth examples\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n    deprecated(Composites, 'softBody', 'Composites.softBody \u27a4 moved to softBody and cloth examples');\n})();\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = __webpack_require__(3);\nvar Sleeping = __webpack_require__(7);\nvar Mouse = __webpack_require__(12);\nvar Events = __webpack_require__(4);\nvar Detector = __webpack_require__(13);\nvar Constraint = __webpack_require__(8);\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = __webpack_require__(2);\nvar SAT = __webpack_require__(14);\nvar Bounds = __webpack_require__(1);\nvar Bodies = __webpack_require__(11);\nvar Vertices = __webpack_require__(3);\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = __webpack_require__(4);\nvar Engine = __webpack_require__(18);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        Events.trigger(runner, 'afterTick', event);\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = __webpack_require__(1);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Composite`.\n*\n* All usage should be migrated to the equivalent functions found on `Matter.Composite`.\n* For example `World.add(world, body)` now becomes `Composite.add(world, body)`.\n*\n* The property `world.gravity` has been moved to `engine.gravity`.\n*\n* For back-compatibility purposes this module will remain as a direct alias to `Matter.Composite` in the short term during migration.\n* Eventually this alias module will be marked as deprecated and then later removed in a future release.\n*\n* @class World\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * See above, aliases for back compatibility only\n     */\n    World.create = Composite.create;\n    World.add = Composite.add;\n    World.remove = Composite.remove;\n    World.clear = Composite.clear;\n    World.addComposite = Composite.addComposite;\n    World.addBody = Composite.addBody;\n    World.addConstraint = Composite.addConstraint;\n\n})();\n\n\n/***/ })\n/******/ ]);\n});\n};"],
"names":["shadow$provide","global","require","module","exports","webpackUniversalModuleDefinition","root","factory","define","amd","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","__webpack_require__.d","name","getter","o","Object","defineProperty","enumerable","get","r","__webpack_require__.r","Symbol","toStringTag","value","t","__webpack_require__.t","mode","__esModule","ns","create","key","bind","n","__webpack_require__.n","getDefault","getModuleExports","__webpack_require__.o","object","property","prototype","hasOwnProperty","p","s","Common","_nextId","_seed","_nowStartTime","Date","_warnedOnce","_decomp","extend","Common.extend","obj","deep","argsStart","deepClone","arguments","length","source","prop","constructor","clone","Common.clone","keys","Common.keys","push","values","Common.values","Common.get","path","begin","end","split","slice","set","Common.set","val","parts","shuffle","Common.shuffle","array","j","Math","floor","random","temp","choose","Common.choose","choices","isElement","Common.isElement","HTMLElement","nodeType","nodeName","isArray","Common.isArray","toString","isFunction","Common.isFunction","isPlainObject","Common.isPlainObject","isString","Common.isString","clamp","Common.clamp","min","max","sign","Common.sign","now","Common.now","window","performance","webkitNow","Common.random","colorToNumber","Common.colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","Common.log","console","apply","concat","Array","info","Common.info","warn","Common.warn","warnOnce","Common.warnOnce","message","join","deprecated","Common.deprecated","warning","chain","nextId","Common.nextId","indexOf","Common.indexOf","haystack","needle","map","Common.map","list","func","mapped","topologicalSort","Common.topologicalSort","graph","result","visited","node","_topologicalSort","Common._topologicalSort","neighbors","neighbor","Common.chain","funcs","_chained","lastResult","args","chainPathBefore","Common.chainPathBefore","base","chainPathAfter","Common.chainPathAfter","setDecomp","Common.setDecomp","decomp","getDecomp","Common.getDecomp","e","Bounds","Bounds.create","vertices","bounds","x","y","update","Bounds.update","velocity","Infinity","vertex","contains","Bounds.contains","point","overlaps","Bounds.overlaps","boundsA","boundsB","translate","Bounds.translate","vector","shift","Bounds.shift","position","deltaX","deltaY","Vector","Vector.create","Vector.clone","magnitude","Vector.magnitude","sqrt","magnitudeSquared","Vector.magnitudeSquared","rotate","Vector.rotate","angle","output","cos","sin","rotateAbout","Vector.rotateAbout","normalise","Vector.normalise","dot","Vector.dot","vectorA","vectorB","cross","Vector.cross","cross3","Vector.cross3","vectorC","add","Vector.add","sub","Vector.sub","mult","Vector.mult","scalar","div","Vector.div","perp","Vector.perp","negate","neg","Vector.neg","Vector.angle","atan2","_temp","Vertices","Vertices.create","points","body","index","isInternal","fromPath","Vertices.fromPath","pathPattern","match","parseFloat","centre","Vertices.centre","area","mean","Vertices.mean","average","Vertices.area","signed","abs","inertia","Vertices.inertia","mass","numerator","denominator","Vertices.translate","Vertices.rotate","vertice","dx","dy","Vertices.contains","nextVertice","scale","Vertices.scale","scaleX","scaleY","delta","chamfer","Vertices.chamfer","radius","quality","qualityMin","qualityMax","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","pow","radiusVector","midNormal","scaledVertex","precision","theta","acos","alpha","clockwiseSort","Vertices.clockwiseSort","sort","vertexA","vertexB","isConvex","Vertices.isConvex","flag","k","z","hull","Vertices.hull","upper","lower","pop","Events","on","Events.on","eventNames","callback","names","events","off","Events.off","callbacks","newCallbacks","trigger","Events.trigger","event","eventClone","Composite","Body","Composite.create","options","id","type","parent","isModified","bodies","constraints","composites","label","plugin","setModified","Composite.setModified","composite","updateParents","updateChildren","childComposite","Composite.add","objects","addBody","addConstraint","addComposite","constraint","remove","Composite.remove","removeBody","removeConstraint","removeComposite","Composite.addComposite","compositeA","compositeB","Composite.removeComposite","removeCompositeAt","Composite.removeCompositeAt","splice","Composite.addBody","Composite.removeBody","removeBodyAt","Composite.removeBodyAt","Composite.addConstraint","Composite.removeConstraint","removeConstraintAt","Composite.removeConstraintAt","clear","Composite.clear","keepStatic","filter","isStatic","allBodies","Composite.allBodies","allConstraints","Composite.allConstraints","allComposites","Composite.allComposites","Composite.get","move","Composite.move","rebase","Composite.rebase","Composite.translate","translation","recursive","Composite.rotate","rotation","setPosition","Composite.scale","Composite.bounds","Sleeping","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","Body.create","defaults","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","angularVelocity","isSensor","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","render","visible","opacity","strokeStyle","fillStyle","lineWidth","sprite","xScale","yScale","xOffset","yOffset","circleRadius","positionPrev","anglePrev","axes","_original","defaultFillStyle","defaultStrokeStyle","defaultLineWidth","nextGroup","Body.nextGroup","isNonColliding","nextCategory","Body.nextCategory","Body.set","settings","setStatic","setMass","setDensity","setInertia","setVertices","setAngle","setVelocity","setAngularVelocity","setParts","setCentre","Body.setStatic","part","inverseMass","inverseInertia","Body.setMass","Body.setDensity","Body.setInertia","Body.setVertices","fromVertices","Body.setParts","autoHull","hullCentre","total","_totalProperties","Body.setCentre","relative","Body.setPosition","Body.setAngle","Body.setVelocity","Body.setAngularVelocity","Body.translate","Body.rotate","Body.scale","totalArea","totalInertia","Body.update","deltaTime","correction","deltaTimeSquared","velocityPrevY","applyForce","Body.applyForce","Body._totalProperties","properties","_motionWakeThreshold","_motionSleepThreshold","_minBias","Sleeping.update","timeFactor","minMotion","maxMotion","sleepCounter","afterCollisions","Sleeping.afterCollisions","pairs","pair","isActive","collision","bodyA","bodyB","sleepingBody","movingBody","Sleeping.set","wasSleeping","Constraint","_warming","_torqueDampen","_minLength","Constraint.create","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","Constraint.preSolveAll","impulse","solveAll","Constraint.solveAll","fixedA","fixedB","solve","Constraint.solve","pointAWorld","pointBWorld","currentLength","massTotal","resistanceTotal","zero","normal","relativeVelocity","normalVelocity","share","postSolveAll","Constraint.postSolveAll","Constraint.pointAWorld","Constraint.pointBWorld","Pair","Contact","Pair.create","timestamp","parentA","parentB","contacts","activeContacts","separation","confirmedActive","timeCreated","timeUpdated","Pair.update","supports","collided","support","contactId","contact","depth","setActive","Pair.setActive","Pair.id","Axes.fromVertices","gradient","toFixed","Axes.rotate","axis","xx","Bodies","rectangle","Bodies.rectangle","width","height","trapezoid","Bodies.trapezoid","slope","x1","x2","x3","verticesPath","circle","Bodies.circle","maxSides","sides","ceil","polygon","Bodies.polygon","PI","offset","yy","Bodies.fromVertices","vertexSets","flagInternal","removeCollinear","minimumArea","removeDuplicatePoints","isConcave","v","canDecomp","quickDecomp","concave","makeCCW","removeCollinearPoints","decomposed","chunkVertices","chunk","partA","partB","pav","pbv","da","db","coincident_max_dist","Mouse","Mouse.create","element","mouse","document","absolute","mousedownPosition","mouseupPosition","wheelDelta","button","pixelRatio","getAttribute","sourceEvents","mousemove","mousedown","mouseup","mousewheel","mouse.mousemove","_getRelativeMousePosition","changedTouches","preventDefault","mouse.mousedown","mouse.mouseup","mouse.mousewheel","detail","setElement","Mouse.setElement","addEventListener","clearSourceEvents","Mouse.clearSourceEvents","setOffset","Mouse.setOffset","setScale","Mouse.setScale","Mouse._getRelativeMousePosition","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","undefined","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","touches","pageX","left","pageY","top","clientWidth","clientHeight","Detector","SAT","collisions","Detector.collisions","broadphasePairs","engine","pairsTable","table","canCollide","pairId","collides","previousCollision","Detector.canCollide","filterA","filterB","SAT.collides","canReusePrevCol","axisBodyA","axisBody","minOverlap","_overlapAxes","axisBodyB","axisNumber","reused","overlap","overlapAB","overlapBA","tangent","penetration","verticesB","_findSupports","verticesA","SAT._overlapAxes","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","SAT._projectToAxis","projection","SAT._findSupports","nearestDistance","vertexToBody","bodyAPosition","distance","prevIndex","Plugin","_registry","register","Plugin.register","isPlugin","registered","pluginVersion","versionParse","version","number","registeredVersion","resolve","Plugin.resolve","dependency","dependencyParse","Plugin.toString","range","Plugin.isPlugin","install","isUsed","Plugin.isUsed","used","isFor","Plugin.isFor","parsed","for","versionSatisfies","use","Plugin.use","plugins","uses","dependencies","sortedDependencies","status","_warned","Plugin.dependencies","tracked","parsedBase","resolved","Plugin.dependencyParse","pattern","test","Plugin.versionParse","exec","major","minor","patch","isRange","operator","prerelease","Plugin.versionSatisfies","Render","_requestAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_goodFps","_goodDelta","Render.create","controller","canvas","frameRequestId","timing","historySize","deltaHistory","lastTime","lastTimestamp","lastElapsed","timestampElapsed","timestampElapsedHistory","engineDeltaHistory","engineElapsedHistory","elapsedHistory","background","wireframeBackground","hasBounds","enabled","wireframes","showSleeping","showDebug","showStats","showPerformance","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","appendChild","run","Render.run","loop","time","unshift","lastDelta","world","stats","stop","Render.stop","Render.setPixelRatio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","setAttribute","style","lookAt","Render.lookAt","padding","center","outerRatio","innerRatio","startViewTransform","Render.startViewTransform","setTransform","endViewTransform","Render.endViewTransform","Render.world","startTime","currentBackground","cssBackground","backgroundSize","globalCompositeOperation","fillRect","enableSleeping","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","grid","Render.stats","sections","font","textBaseline","textAlign","section","fillText","Render.performance","lastEngineDelta","deltaMean","_mean","elapsedMean","engineDeltaMean","engineElapsedMean","rateMean","timestampElapsedMean","fps","graphHeight","round","Render.status","count","indicator","plotY","beginPath","moveTo","lineTo","stroke","Render.constraints","start","arc","closePath","coils","fill","Render.bodies","globalAlpha","texture","image","imagePath","Image","src","drawImage","Render.bodyWireframes","Render.bodyConvexHulls","Render.vertexNumbers","Render.mousePosition","Render.bodyBounds","rect","Render.bodyAxes","Render.bodyPositions","Render.bodyVelocity","Render.bodyIds","Render.collisions","normalPosX","normalPosY","Render.separations","Render.grid","bucketKeys","buckets","bucketId","region","bucketWidth","bucketHeight","inspector","Render.inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","canvas.oncontextmenu","onselectstart","canvas.onselectstart","Contact.create","normalImpulse","tangentImpulse","Contact.id","Engine","Resolver","Pairs","Grid","Engine.create","positionIterations","velocityIterations","constraintIterations","gravity","broadphase","metrics","Engine.update","_bodiesApplyGravity","_bodiesUpdate","gridPairs","pairsList","removeOld","collisionStart","preSolvePosition","solvePosition","postSolvePosition","preSolveVelocity","solveVelocity","collisionActive","collisionEnd","_bodiesClearForces","merge","Engine.merge","engineA","engineB","Engine.clear","Engine._bodiesClearForces","Engine._bodiesApplyGravity","gravityScale","Engine._bodiesUpdate","worldBounds","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","Resolver.preSolvePosition","activeCount","Resolver.solvePosition","tempA","tempB","tempC","tempD","bodyBtoA","contactShare","Resolver.postSolvePosition","Resolver.preSolveVelocity","contactVertex","Resolver.solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","velocityPointB","tangentVelocity","tangentSpeed","tangentVelocityDirection","normalForce","maxFriction","oAcN","oBcN","contactNormalImpulse","contactTangentImpulse","_pairMaxIdleLife","Pairs.create","Pairs.update","Pairs.removeOld","indexesToRemove","pairIndex","Pairs.clear","Grid.create","Grid.update","forceUpdate","row","gridChanged","newRegion","_getRegion","union","_regionUnion","col","startCol","endCol","startRow","endRow","_getBucketId","bucket","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","Grid.clear","Grid._regionUnion","regionA","regionB","_createRegion","Grid._getRegion","Grid._createRegion","Grid._getBucketId","column","Grid._createBucket","Grid._bucketAddBody","Grid._bucketRemoveBody","Grid._createActivePairsList","pairKeys","Matter","Composites","MouseConstraint","Query","Runner","Svg","World","Matter.use","before","Matter.before","after","Matter.after","stack","Composites.stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","Composites.chain","xOffsetA","yOffsetA","xOffsetB","yOffsetB","mesh","Composites.mesh","crossBrace","bodyC","pyramid","Composites.pyramid","actualRows","lastBodyWidth","newtonsCradle","Composites.newtonsCradle","size","car","Composites.car","wheelSize","wheelAOffset","wheelBase","wheelBOffset","wheelA","wheelYOffset","wheelB","axelA","axelB","softBody","Composites.softBody","particleRadius","particleOptions","constraintOptions","MouseConstraint.create","mouseConstraint","_triggerEvents","MouseConstraint.update","MouseConstraint._triggerEvents","mouseEvents","Query.collides","ray","Query.ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","Query.region","outside","Query.point","_frameTimeout","clearTimeout","Runner.create","runner","deltaSampleSize","counterTimestamp","frameCounter","timePrev","timeScalePrev","isFixed","deltaMin","deltaMax","Runner.run","tick","Runner.tick","Runner.stop","Runner.start","pathToVertices","Svg.pathToVertices","sampleLength","segmentsQueue","lastPoint","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segment","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","segments","pathSegList","numberOfItems","getItem","segmentIndex","getPathSegAtLength","lastSegment","getPointAtLength","il","Svg._svgPathToAbsolute","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag"]
}
