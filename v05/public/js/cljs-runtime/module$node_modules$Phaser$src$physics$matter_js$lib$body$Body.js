shadow$provide.module$node_modules$Phaser$src$physics$matter_js$lib$body$Body=function(global,require,module,exports){var Body={};module.exports=Body;var Vertices=require("module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Vertices"),Vector=require("module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Vector"),Sleeping=require("module$node_modules$Phaser$src$physics$matter_js$lib$core$Sleeping"),Common=require("module$node_modules$Phaser$src$physics$matter_js$lib$core$Common"),
Bounds=require("module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Bounds"),Axes=require("module$node_modules$Phaser$src$physics$matter_js$lib$geometry$Axes");(function(){Body._inertiaScale=4;Body._nextCollidingGroupId=1;Body._nextNonCollidingGroupId=-1;Body._nextCategory=1;Body.create=function(options){var defaults={id:Common.nextId(),type:"body",label:"Body",gameObject:null,parts:[],plugin:{},angle:0,vertices:Vertices.fromPath("L 0 0 L 40 0 L 40 40 L 0 40"),position:{x:0,y:0},force:{x:0,
y:0},torque:0,positionImpulse:{x:0,y:0},previousPositionImpulse:{x:0,y:0},constraintImpulse:{x:0,y:0,angle:0},totalContacts:0,speed:0,angularSpeed:0,velocity:{x:0,y:0},angularVelocity:0,isSensor:!1,isStatic:!1,isSleeping:!1,ignoreGravity:!1,ignorePointer:!1,motion:0,sleepThreshold:60,density:.001,restitution:0,friction:.1,frictionStatic:.5,frictionAir:.01,collisionFilter:{category:1,mask:4294967295,group:0},slop:.05,timeScale:1,render:{visible:!0,opacity:1,sprite:{xScale:1,yScale:1,xOffset:0,yOffset:0},
lineWidth:0},events:null,bounds:null,chamfer:null,circleRadius:0,positionPrev:null,anglePrev:0,parent:null,axes:null,area:0,mass:0,inertia:0,_original:null};defaults=Common.extend(defaults,options);options=options||{};Body.set(defaults,{bounds:defaults.bounds||Bounds.create(defaults.vertices),positionPrev:defaults.positionPrev||Vector.clone(defaults.position),anglePrev:defaults.anglePrev||defaults.angle,vertices:defaults.vertices,parts:defaults.parts||[defaults],isStatic:defaults.isStatic,isSleeping:defaults.isSleeping,
parent:defaults.parent||defaults});Vertices.rotate(defaults.vertices,defaults.angle,defaults.position);Axes.rotate(defaults.axes,defaults.angle);Bounds.update(defaults.bounds,defaults.vertices,defaults.velocity);Body.set(defaults,{axes:options.axes||defaults.axes,area:options.area||defaults.area,mass:options.mass||defaults.mass,inertia:options.inertia||defaults.inertia});options=defaults.isStatic?"#2e2b44":Common.choose(["#006BA6","#0496FF","#FFBC42","#D81159","#8F2D56"]);defaults.render.fillStyle=
defaults.render.fillStyle||options;defaults.render.strokeStyle=defaults.render.strokeStyle||"#000";defaults.render.sprite.xOffset+=-(defaults.bounds.min.x-defaults.position.x)/(defaults.bounds.max.x-defaults.bounds.min.x);defaults.render.sprite.yOffset+=-(defaults.bounds.min.y-defaults.position.y)/(defaults.bounds.max.y-defaults.bounds.min.y);return defaults};Body.nextGroup=function(isNonColliding){return isNonColliding?Body._nextNonCollidingGroupId--:Body._nextCollidingGroupId++};Body.nextCategory=
function(){Body._nextCategory<<=1;return Body._nextCategory};Body.set=function(body,settings,value){if("string"===typeof settings){var property=settings;settings={};settings[property]=value}for(property in settings)if(settings.hasOwnProperty(property))switch(value=settings[property],property){case "isStatic":Body.setStatic(body,value);break;case "isSleeping":Sleeping.set(body,value);break;case "mass":Body.setMass(body,value);break;case "density":Body.setDensity(body,value);break;case "inertia":Body.setInertia(body,
value);break;case "vertices":Body.setVertices(body,value);break;case "position":Body.setPosition(body,value);break;case "angle":Body.setAngle(body,value);break;case "velocity":Body.setVelocity(body,value);break;case "angularVelocity":Body.setAngularVelocity(body,value);break;case "parts":Body.setParts(body,value);break;default:body[property]=value}};Body.setStatic=function(body,isStatic){for(var i=0;i<body.parts.length;i++){var part=body.parts[i];(part.isStatic=isStatic)?(part._original={restitution:part.restitution,
friction:part.friction,mass:part.mass,inertia:part.inertia,density:part.density,inverseMass:part.inverseMass,inverseInertia:part.inverseInertia},part.restitution=0,part.friction=1,part.mass=part.inertia=part.density=Infinity,part.inverseMass=part.inverseInertia=0,part.positionPrev.x=part.position.x,part.positionPrev.y=part.position.y,part.anglePrev=part.angle,part.angularVelocity=0,part.speed=0,part.angularSpeed=0,part.motion=0):part._original&&(part.restitution=part._original.restitution,part.friction=
part._original.friction,part.mass=part._original.mass,part.inertia=part._original.inertia,part.density=part._original.density,part.inverseMass=part._original.inverseMass,part.inverseInertia=part._original.inverseInertia,part._original=null)}};Body.setMass=function(body,mass){body.inertia=body.inertia/(body.mass/6)*(mass/6);body.inverseInertia=1/body.inertia;body.mass=mass;body.inverseMass=1/body.mass;body.density=body.mass/body.area};Body.setDensity=function(body,density){Body.setMass(body,density*
body.area);body.density=density};Body.setInertia=function(body,inertia){body.inertia=inertia;body.inverseInertia=1/body.inertia};Body.setVertices=function(body,vertices){body.vertices=vertices[0].body===body?vertices:Vertices.create(vertices,body);body.axes=Axes.fromVertices(body.vertices);body.area=Vertices.area(body.vertices);Body.setMass(body,body.density*body.area);vertices=Vertices.centre(body.vertices);Vertices.translate(body.vertices,vertices,-1);Body.setInertia(body,Body._inertiaScale*Vertices.inertia(body.vertices,
body.mass));Vertices.translate(body.vertices,body.position);Bounds.update(body.bounds,body.vertices,body.velocity)};Body.setParts=function(body,parts,autoHull){var i;parts=parts.slice(0);body.parts.length=0;body.parts.push(body);body.parent=body;for(i=0;i<parts.length;i++){var part=parts[i];part!==body&&(part.parent=body,body.parts.push(part))}if(1!==body.parts.length){if("undefined"!==typeof autoHull?autoHull:1){autoHull=[];for(i=0;i<parts.length;i++)autoHull=autoHull.concat(parts[i].vertices);Vertices.clockwiseSort(autoHull);
parts=Vertices.hull(autoHull);i=Vertices.centre(parts);Body.setVertices(body,parts);Vertices.translate(body.vertices,i)}parts=Body._totalProperties(body);body.area=parts.area;body.parent=body;body.position.x=parts.centre.x;body.position.y=parts.centre.y;body.positionPrev.x=parts.centre.x;body.positionPrev.y=parts.centre.y;Body.setMass(body,parts.mass);Body.setInertia(body,parts.inertia);Body.setPosition(body,parts.centre)}};Body.setPosition=function(body,position){position=Vector.sub(position,body.position);
body.positionPrev.x+=position.x;body.positionPrev.y+=position.y;for(var i=0;i<body.parts.length;i++){var part=body.parts[i];part.position.x+=position.x;part.position.y+=position.y;Vertices.translate(part.vertices,position);Bounds.update(part.bounds,part.vertices,body.velocity)}};Body.setAngle=function(body,angle){angle-=body.angle;body.anglePrev+=angle;for(var i=0;i<body.parts.length;i++){var part=body.parts[i];part.angle+=angle;Vertices.rotate(part.vertices,angle,body.position);Axes.rotate(part.axes,
angle);Bounds.update(part.bounds,part.vertices,body.velocity);0<i&&Vector.rotateAbout(part.position,angle,body.position,part.position)}};Body.setVelocity=function(body,velocity){body.positionPrev.x=body.position.x-velocity.x;body.positionPrev.y=body.position.y-velocity.y;body.velocity.x=velocity.x;body.velocity.y=velocity.y;body.speed=Vector.magnitude(body.velocity)};Body.setAngularVelocity=function(body,velocity){body.anglePrev=body.angle-velocity;body.angularVelocity=velocity;body.angularSpeed=
Math.abs(body.angularVelocity)};Body.translate=function(body,translation){Body.setPosition(body,Vector.add(body.position,translation))};Body.rotate=function(body,rotation,point){if(point){var cos=Math.cos(rotation),sin=Math.sin(rotation),dx=body.position.x-point.x,dy=body.position.y-point.y;Body.setPosition(body,{x:point.x+(dx*cos-dy*sin),y:point.y+(dx*sin+dy*cos)})}Body.setAngle(body,body.angle+rotation)};Body.scale=function(body,scaleX,scaleY,point){var totalArea=0,totalInertia=0;point=point||body.position;
for(var i=0;i<body.parts.length;i++){var part=body.parts[i];Vertices.scale(part.vertices,scaleX,scaleY,point);part.axes=Axes.fromVertices(part.vertices);part.area=Vertices.area(part.vertices);Body.setMass(part,body.density*part.area);Vertices.translate(part.vertices,{x:-part.position.x,y:-part.position.y});Body.setInertia(part,Body._inertiaScale*Vertices.inertia(part.vertices,part.mass));Vertices.translate(part.vertices,{x:part.position.x,y:part.position.y});0<i&&(totalArea+=part.area,totalInertia+=
part.inertia);part.position.x=point.x+(part.position.x-point.x)*scaleX;part.position.y=point.y+(part.position.y-point.y)*scaleY;Bounds.update(part.bounds,part.vertices,body.velocity)}1<body.parts.length&&(body.area=totalArea,body.isStatic||(Body.setMass(body,body.density*totalArea),Body.setInertia(body,totalInertia)));body.circleRadius&&(body.circleRadius=scaleX===scaleY?body.circleRadius*scaleX:null)};Body.update=function(body,deltaTime,timeScale,correction){deltaTime=Math.pow(deltaTime*timeScale*
body.timeScale,2);timeScale=1-body.frictionAir*timeScale*body.timeScale;var velocityPrevY=body.position.y-body.positionPrev.y;body.velocity.x=(body.position.x-body.positionPrev.x)*timeScale*correction+body.force.x/body.mass*deltaTime;body.velocity.y=velocityPrevY*timeScale*correction+body.force.y/body.mass*deltaTime;body.positionPrev.x=body.position.x;body.positionPrev.y=body.position.y;body.position.x+=body.velocity.x;body.position.y+=body.velocity.y;body.angularVelocity=(body.angle-body.anglePrev)*
timeScale*correction+body.torque/body.inertia*deltaTime;body.anglePrev=body.angle;body.angle+=body.angularVelocity;body.speed=Vector.magnitude(body.velocity);body.angularSpeed=Math.abs(body.angularVelocity);for(correction=0;correction<body.parts.length;correction++)deltaTime=body.parts[correction],Vertices.translate(deltaTime.vertices,body.velocity),0<correction&&(deltaTime.position.x+=body.velocity.x,deltaTime.position.y+=body.velocity.y),0!==body.angularVelocity&&(Vertices.rotate(deltaTime.vertices,
body.angularVelocity,body.position),Axes.rotate(deltaTime.axes,body.angularVelocity),0<correction&&Vector.rotateAbout(deltaTime.position,body.angularVelocity,body.position,deltaTime.position)),Bounds.update(deltaTime.bounds,deltaTime.vertices,body.velocity)};Body.applyForce=function(body,position,force){body.force.x+=force.x;body.force.y+=force.y;body.torque+=(position.x-body.position.x)*force.y-(position.y-body.position.y)*force.x};Body._totalProperties=function(body){for(var properties={mass:0,
area:0,inertia:0,centre:{x:0,y:0}},i=1===body.parts.length?0:1;i<body.parts.length;i++){var part=body.parts[i],mass=Infinity!==part.mass?part.mass:1;properties.mass+=mass;properties.area+=part.area;properties.inertia+=part.inertia;properties.centre=Vector.add(properties.centre,Vector.mult(part.position,mass))}properties.centre=Vector.div(properties.centre,properties.mass);return properties}})()}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$lib$body$Body.js.map
