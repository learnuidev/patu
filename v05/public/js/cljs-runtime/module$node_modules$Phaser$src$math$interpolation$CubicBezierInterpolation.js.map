{
"version":3,
"file":"module$node_modules$Phaser$src$math$interpolation$CubicBezierInterpolation.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,2EAAA,CAA+F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyDvID,MAAAC,QAAA,CAL+BC,QAAS,CAACC,CAAD,CAAIC,EAAJ,CAAQC,EAAR,CAAYC,EAAZ,CAAgBC,EAAhB,CACxC,CA5CI,IAAIC,EAAI,CAAJA,CA6CML,CA7CV,CAOIK,WAAI,CAAJA,CAsCkBL,CAAtB,OA3COK,EA2CP,CA3CWA,CA2CX,CA3CeA,CA2Cf,CAAaJ,EAAb,CApCO,CAoCP,CApCWI,UAoCX,CApCeA,UAoCf,CAAsBL,CAAtB,CAAyBE,EAAzB,CA/BO,CA+BP,EA/BY,CA+BZ,CAAkCF,CAAlC,EAAkCA,CAAlC,CAAkCA,CAAlC,CAAqCG,EAArC,CAA8CH,CAA9C,CAA8CA,CAA9C,CAA8CA,CAA9C,CAAiDI,EADrD,CArDuI;",
"sources":["node_modules/Phaser/src/math/interpolation/CubicBezierInterpolation.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$interpolation$CubicBezierInterpolation\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nfunction P0 (t, p)\r\n{\r\n    var k = 1 - t;\r\n\r\n    return k * k * k * p;\r\n}\r\n\r\nfunction P1 (t, p)\r\n{\r\n    var k = 1 - t;\r\n\r\n    return 3 * k * k * t * p;\r\n}\r\n\r\nfunction P2 (t, p)\r\n{\r\n    return 3 * (1 - t) * t * t * p;\r\n}\r\n\r\nfunction P3 (t, p)\r\n{\r\n    return t * t * t * p;\r\n}\r\n\r\n//  p0 = start point\r\n//  p1 = control point 1\r\n//  p2 = control point 2\r\n//  p3 = end point\r\n\r\n// https://medium.com/@adrian_cooney/bezier-interpolation-13b68563313a\r\n\r\n/**\r\n * A cubic bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.CubicBezier\r\n * @since 3.0.0\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} p0 - The start point.\r\n * @param {number} p1 - The first control point.\r\n * @param {number} p2 - The second control point.\r\n * @param {number} p3 - The end point.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nvar CubicBezierInterpolation = function (t, p0, p1, p2, p3)\r\n{\r\n    return P0(t, p0) + P1(t, p1) + P2(t, p2) + P3(t, p3);\r\n};\r\n\r\nmodule.exports = CubicBezierInterpolation;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","CubicBezierInterpolation","t","p0","p1","p2","p3","k"]
}
