{
"version":3,
"file":"module$node_modules$Phaser$src$utils$array$Replace.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqC/GD,MAAAC,QAAA,CAjBcC,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkBC,QAAlB,CACvB,CACQC,QAAAA,CAASH,KAAAI,QAAA,CAAcH,QAAd,CACb,KAAII,OAASL,KAAAI,QAAA,CAAcF,QAAd,CAEb,OAAe,EAAf,GAAIC,QAAJ,EAAgC,EAAhC,GAAqBE,MAArB,EAEIL,KAAA,CAAMG,QAAN,CAEO,CAFSD,QAET,CAAA,CAAA,CAJX,EAQW,CAAA,CAZf,CArB+G;",
"sources":["node_modules/Phaser/src/utils/array/Replace.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$array$Replace\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Replaces an element of the array with the new element.\r\n * The new element cannot already be a member of the array.\r\n * The array is modified in-place.\r\n *\r\n * @function Phaser.Utils.Array.Replace\r\n * @since 3.4.0\r\n *\r\n * @param {*} oldChild - The element in the array that will be replaced.\r\n * @param {*} newChild - The element to be inserted into the array at the position of `oldChild`.\r\n *\r\n * @return {boolean} Returns true if the oldChild was successfully replaced, otherwise returns false.\r\n */\r\nvar Replace = function (array, oldChild, newChild)\r\n{\r\n    var index1 = array.indexOf(oldChild);\r\n    var index2 = array.indexOf(newChild);\r\n\r\n    if (index1 !== -1 && index2 === -1)\r\n    {\r\n        array[index1] = newChild;\r\n\r\n        return true;\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n};\r\n\r\nmodule.exports = Replace;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Replace","array","oldChild","newChild","index1","indexOf","index2"]
}
