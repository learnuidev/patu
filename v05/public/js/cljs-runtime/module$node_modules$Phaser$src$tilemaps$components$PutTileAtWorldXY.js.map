{
"version":3,
"file":"module$node_modules$Phaser$src$tilemaps$components$PutTileAtWorldXY.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,oEAAA,CAAwF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOhI,IAAIC,UAAYH,OAAA,CAAQ,8DAAR,CAAhB,CACII,aAAeJ,OAAA,CAAQ,iEAAR,CADnB,CAEIK,aAAeL,OAAA,CAAQ,iEAAR,CA4BnBC,OAAAC,QAAA,CAPuBI,QAAS,CAACC,IAAD,CAAOC,MAAP,CAAeC,MAAf,CAAuBC,gBAAvB,CAAyCC,MAAzC,CAAiDC,KAAjD,CAChC,CACQC,MAAAA,CAAQT,YAAA,CAAaI,MAAb,CAAqB,CAAA,CAArB,CAA2BG,MAA3B,CAAmCC,KAAnC,CACRE;MAAAA,CAAQT,YAAA,CAAaI,MAAb,CAAqB,CAAA,CAArB,CAA2BE,MAA3B,CAAmCC,KAAnC,CACZ,OAAOT,UAAA,CAAUI,IAAV,CAAgBM,MAAhB,CAAuBC,MAAvB,CAA8BJ,gBAA9B,CAAgDE,KAAhD,CAHX,CA/BgI;",
"sources":["node_modules/Phaser/src/tilemaps/components/PutTileAtWorldXY.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$tilemaps$components$PutTileAtWorldXY\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar PutTileAt = require('./PutTileAt');\r\nvar WorldToTileX = require('./WorldToTileX');\r\nvar WorldToTileY = require('./WorldToTileY');\r\n\r\n/**\r\n * Puts a tile at the given world coordinates (pixels) in the specified layer. You can pass in either\r\n * an index or a Tile object. If you pass in a Tile, all attributes will be copied over to the\r\n * specified location. If you pass in an index, only the index at the specified location will be\r\n * changed. Collision information will be recalculated at the specified location.\r\n *\r\n * @function Phaser.Tilemaps.Components.PutTileAtWorldXY\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {(integer|Phaser.Tilemaps.Tile)} tile - The index of this tile to set or a Tile object.\r\n * @param {number} worldX - The x coordinate, in pixels.\r\n * @param {number} worldY - The y coordinate, in pixels.\r\n * @param {boolean} [recalculateFaces=true] - `true` if the faces data should be recalculated.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when calculating the tile index from the world values.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n *\r\n * @return {Phaser.Tilemaps.Tile} The Tile object that was created or added to this map.\r\n */\r\nvar PutTileAtWorldXY = function (tile, worldX, worldY, recalculateFaces, camera, layer)\r\n{\r\n    var tileX = WorldToTileX(worldX, true, camera, layer);\r\n    var tileY = WorldToTileY(worldY, true, camera, layer);\r\n    return PutTileAt(tile, tileX, tileY, recalculateFaces, layer);\r\n};\r\n\r\nmodule.exports = PutTileAtWorldXY;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","PutTileAt","WorldToTileX","WorldToTileY","PutTileAtWorldXY","tile","worldX","worldY","recalculateFaces","camera","layer","tileX","tileY"]
}
