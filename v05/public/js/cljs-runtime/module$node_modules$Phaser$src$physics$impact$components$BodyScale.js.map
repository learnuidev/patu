{
"version":3,
"file":"module$node_modules$Phaser$src$physics$impact$components$BodyScale.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,mEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoE/HD,MAAAC,QAAA,CAtDgBC,CAaZC,YAAaA,QAAS,CAACC,KAAD,CAAQC,MAAR,CACtB,CACmBC,IAAAA,EAAf,GAAID,MAAJ,GAA4BA,MAA5B,CAAqCD,KAArC,CAEA,KAAAG,KAAAC,KAAAC,EAAA,CAAmBC,IAAAC,MAAA,CAAWP,KAAX,CACnB,KAAAG,KAAAC,KAAAI,EAAA,CAAmBF,IAAAC,MAAA,CAAWN,MAAX,CAEnB,OAAO,KANX,CAdYH,CAkCZW,aAAcA,QAAS,CAACC,MAAD,CAASC,MAAT,CACvB,CACmBT,IAAAA,EAAf,GAAIS,MAAJ,GAA4BA,MAA5B,CAAqCD,MAArC,CAEA,KAAIE,WAAa,IAAAT,KAAAS,WAEjB,OAAIA,WAAJ,EAEIA,UAAAC,SAAA,CAAoBH,MAApB,CAA4BC,MAA5B,CAEO,CAAA,IAAAZ,YAAA,CAAiBa,UAAAZ,MAAjB,CAAoCY,UAAAF,OAApC;AAAuDE,UAAAX,OAAvD,CAA2EW,UAAAD,OAA3E,CAJX,EAQW,IAAAZ,YAAA,CAAiB,IAAAI,KAAAC,KAAAC,EAAjB,CAAoCK,MAApC,CAA4C,IAAAP,KAAAC,KAAAI,EAA5C,CAA+DG,MAA/D,CAbf,CAnCYb,CAd+G;",
"sources":["node_modules/Phaser/src/physics/impact/components/BodyScale.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$impact$components$BodyScale\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * The Impact Body Scale component.\r\n * Should be applied as a mixin.\r\n *\r\n * @name Phaser.Physics.Impact.Components.BodyScale\r\n * @since 3.0.0\r\n */\r\nvar BodyScale = {\r\n\r\n    /**\r\n     * Sets the size of the physics body.\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.BodyScale#setBodySize\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} width - The width of the body in pixels.\r\n     * @param {number} [height=width] - The height of the body in pixels.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setBodySize: function (width, height)\r\n    {\r\n        if (height === undefined) { height = width; }\r\n\r\n        this.body.size.x = Math.round(width);\r\n        this.body.size.y = Math.round(height);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the scale of the physics body.\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.BodyScale#setBodyScale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} scaleX - The horizontal scale of the body.\r\n     * @param {number} [scaleY] - The vertical scale of the body. If not given, will use the horizontal scale value.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setBodyScale: function (scaleX, scaleY)\r\n    {\r\n        if (scaleY === undefined) { scaleY = scaleX; }\r\n\r\n        var gameObject = this.body.gameObject;\r\n\r\n        if (gameObject)\r\n        {\r\n            gameObject.setScale(scaleX, scaleY);\r\n\r\n            return this.setBodySize(gameObject.width * gameObject.scaleX, gameObject.height * gameObject.scaleY);\r\n        }\r\n        else\r\n        {\r\n            return this.setBodySize(this.body.size.x * scaleX, this.body.size.y * scaleY);\r\n        }\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = BodyScale;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","BodyScale","setBodySize","width","height","undefined","body","size","x","Math","round","y","setBodyScale","scaleX","scaleY","gameObject","setScale"]
}
