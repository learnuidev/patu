{"version":3,"sources":["app/kaboomv1/core.cljs"],"mappings":";;;;;AAKA,AAAA,AAAA,AAAA,AAAA,AAAKA,AAAgB,AAAA,AAAiBC;AAEtC,AAACC,AAAaF;AAEd,AAAA,AAACG;AACD,AAAA,AAAA,AAACC;AAMD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AAUI,AAAQJ;AAEjB,AAAA,AAAA,AAAAK,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD;AAAN,AACM,AAACE,AAAKL;;;AADZ,AAAA,AAAA,AAAMG,AAEFG;AAFJ,AAGG,AAACC,AAAI;AAAA,AAEE,AAAM,AAAA,AAACC;AAAP,AACE,AAAA,AAACC;;AADH;;AAEA,AAAM,AAAA,AAACD;AAAP,AACE,AAAA,AAACC;;AADH;;AAEA,AAAM,AAAA,AAACD;AAAP,AACE,AAAA,AAACC;;AADH;;AAEA,AAAM,AAAA,AAACD;AAAP,AACE,AAAA,AAACC;;AADH;;AAEA,AAACC;;;;AAbX,AAAA,AAAA,AAAMP;;AAAN,AAeA,AAAA,AAAMQ;AAAN,AACE,AAACN","names":["app.kaboomv1.core/config","js/document","app.kaboomv1.app/init!","app.kaboomv1.assets/load-root","app.kaboomv1.assets.load_sprite","app.kaboomv1.core/def-config","var_args","G__29625","app.kaboomv1.core/patu","js/Error","app.kaboomv1.core.patu","arg","app.kaboomv1.app/run","app.kaboomv1.app/key-pressed?","js/console.log","app.kaboomv1.gfx/sprite","app.kaboomv1.core/app"],"sourcesContent":["(ns app.kaboomv1.core\n  (:require [app.kaboomv1.app :as kaboom :refer [run key-pressed?]]\n            [app.kaboomv1.assets :as assets]\n            [app.kaboomv1.gfx :as gfx]))\n\n(def config {:canvas (.getElementById js/document \"app\")\n             :full-screen? false})\n(kaboom/init! config)\n\n(assets/load-root \"assets/platformer/\")\n(assets/load-sprite\n :tiles\n \"Tilemap/monochrome_tilemap.png\")\n ; \"assets/platformer/Tilemap/monochrome_tilemap.png\")\n\n\n(def def-config\n  {:width 640\n   :height 480\n   :scale 1\n   :fullscreen? false\n   :debug? false\n   :crisp? false\n   :canvas nil\n   :connect nil\n   :logMax 8\n   :root (.-body js/document)})\n\n(defn patu\n  ([] (patu def-config))\n  ([arg]\n   (run (fn []\n          ; (js/console.log \"Hello Kaboom CLJS\")\n          (when (key-pressed? :left)\n            (js/console.log \"LEFT PRESSED\"))\n          (when (key-pressed? :right)\n            (js/console.log \"Right PRESSED\"))\n          (when (key-pressed? :up)\n            (js/console.log \"Up PRESSED\"))\n          (when (key-pressed? :down)\n            (js/console.log \"Down PRESSED\"))\n          (gfx/sprite)))))\n\n(defn app []\n  (patu))\n"]}