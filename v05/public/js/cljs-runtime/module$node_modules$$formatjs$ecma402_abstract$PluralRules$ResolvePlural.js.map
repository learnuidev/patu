{
"version":3,
"file":"module$node_modules$$formatjs$ecma402_abstract$PluralRules$ResolvePlural.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,yEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAErIC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,cAAA,CAAwB,IAAK,EAC7B,KAAIC,QAAUP,OAAA,CAAQ,sDAAR,CAAd,CACIQ,OAASR,OAAA,CAAQ,oDAAR,CADb,CAEIS,wBAA0BT,OAAA,CAAQ,mFAAR,CAF9B,CAGIU,cAAgBV,OAAA,CAAQ,wEAAR,CAsBpBE;OAAAI,cAAA,CAfAA,QAAsB,CAACK,EAAD,CAAKC,CAAL,CAAQC,EAAR,CAAY,CAAA,IAC1BC,iBAAmBD,EAAAC,iBAAqBC,GAAAA,CAAmBF,EAAAE,iBAC/D,KAAIC,cAAgBF,gBAAA,CAAiBH,EAAjB,CACpBJ,QAAAU,UAAA,CAAiD,QAAjD,GAAkBT,MAAAU,KAAA,CAAYF,aAAZ,CAAlB,CAA2D,wBAA3D,CACAT,QAAAU,UAAA,CAAkB,wBAAlB,EAA8CD,cAA9C,CAA6D,iCAA7D,CACAT,QAAAU,UAAA,CAAqC,QAArC,GAAkBT,MAAAU,KAAA,CAAYN,CAAZ,CAAlB,CAA+C,oBAA/C,CACA,IAAI,CAACO,QAAA,CAASP,CAAT,CAAL,CACI,MAAO,OAEPQ,GAAAA,CAASJ,aAAAI,OAAsBC,iBAAAA,CAAOL,aAAAK,KAEtCC,cAAAA,CADMb,uBAAAc,sBAAAC,CAA8CR,aAA9CQ;AAA6DZ,CAA7DY,CACFC,gBACJC,cAAAA,CAAWhB,aAAAiB,YAAA,CAA0BL,aAA1B,CACf,OAAOP,GAAA,CAAiBK,EAAjB,CAAyBC,gBAAzB,CAA+BT,CAA/B,CAAkCc,aAAlC,CAbuB,CAdmG;",
"sources":["node_modules/@formatjs/ecma402-abstract/PluralRules/ResolvePlural.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$formatjs$ecma402_abstract$PluralRules$ResolvePlural\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolvePlural = void 0;\nvar utils_1 = require(\"../utils\");\nvar _262_1 = require(\"../262\");\nvar FormatNumericToString_1 = require(\"../NumberFormat/FormatNumericToString\");\nvar GetOperands_1 = require(\"./GetOperands\");\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-resolveplural\n * @param pl\n * @param n\n * @param PluralRuleSelect Has to pass in bc it's implementation-specific\n */\nfunction ResolvePlural(pl, n, _a) {\n    var getInternalSlots = _a.getInternalSlots, PluralRuleSelect = _a.PluralRuleSelect;\n    var internalSlots = getInternalSlots(pl);\n    utils_1.invariant(_262_1.Type(internalSlots) === 'Object', 'pl has to be an object');\n    utils_1.invariant('initializedPluralRules' in internalSlots, 'pluralrules must be initialized');\n    utils_1.invariant(_262_1.Type(n) === 'Number', 'n must be a number');\n    if (!isFinite(n)) {\n        return 'other';\n    }\n    var locale = internalSlots.locale, type = internalSlots.type;\n    var res = FormatNumericToString_1.FormatNumericToString(internalSlots, n);\n    var s = res.formattedString;\n    var operands = GetOperands_1.GetOperands(s);\n    return PluralRuleSelect(locale, type, n, operands);\n}\nexports.ResolvePlural = ResolvePlural;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ResolvePlural","utils_1","_262_1","FormatNumericToString_1","GetOperands_1","pl","n","_a","getInternalSlots","PluralRuleSelect","internalSlots","invariant","Type","isFinite","locale","type","s","FormatNumericToString","res","formattedString","operands","GetOperands"]
}
