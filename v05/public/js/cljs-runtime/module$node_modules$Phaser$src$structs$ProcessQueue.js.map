{
"version":3,
"file":"module$node_modules$Phaser$src$structs$ProcessQueue.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoB5GC,MAAAA,CAAe,KAbPH,OAAAI,CAAQ,4CAARA,CAaO,EAAU,CAEzBC,WAEAF,QAAsB,EACtB,CAYI,IAAAG,SAAA,CAAgB,EAahB,KAAAC,QAAA,CAAe,EAaf,KAAAC,SAAA,CAAgB,EAWhB,KAAAC,WAAA,CAAkB,CAjDtB,CALyB,CAsEzBC,IAAKA,QAAS,CAACC,IAAD,CACd,CACI,IAAAL,SAAAM,KAAA,CAAmBD,IAAnB,CAEA,KAAAF,WAAA,EAEA,OAAO,KALX,CAvEyB,CA4FzBI,OAAQA,QAAS,CAACF,IAAD,CACjB,CACI,IAAAH,SAAAI,KAAA,CAAmBD,IAAnB,CAEA,KAAAF,WAAA,EAEA,OAAO,KALX,CA7FyB,CA+GzBK,OAAQA,QAAS,EACjB,CACI,GAAwB,CAAxB,GAAI,IAAAL,WAAJ,CAGI,MAAO,KAAAF,QAGX,KAAIQ,KAAO,IAAAP,SAAX;AACIQ,OAAS,IAAAT,QADb,CAEIU,CAIJ,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBF,IAAAG,OAAhB,CAA6BD,CAAA,EAA7B,CACA,CACI,IAAAN,KAAOI,IAAA,CAAKE,CAAL,CAGHE,KAAAA,CAAMH,MAAAI,QAAA,CAAeT,IAAf,CAEE,GAAZ,GAAIQ,IAAJ,EAEIH,MAAAK,OAAA,CAAcF,IAAd,CAAmB,CAAnB,CARR,CAYAJ,IAAAG,OAAA,CAAc,CAKdH,KAAA,CAAO,IAAAT,SAEP,KAAKW,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBF,IAAAG,OAAhB,CAA6BD,CAAA,EAA7B,CAEIN,IAEA,CAFOI,IAAA,CAAKE,CAAL,CAEP,CAAA,IAAAV,QAAAK,KAAA,CAAkBD,IAAlB,CAKJ,KAAAF,WAAA,CAFAM,IAAAG,OAEA,CAFc,CAKd,OAAO,KAAAX,QA7CX,CAhHyB,CA0KzBe,UAAWA,QAAS,EACpB,CACI,MAAO,KAAAf,QADX,CA3KyB,CAqLzBgB,QAASA,QAAS,EAClB,CACI,IAAAjB,SAAA,CAAgB,EAChB,KAAAC,QAAA,CAAe,EACf,KAAAC,SAAA,CAAgB,EAHpB,CAtLyB,CAAV,CA8LnBP,OAAAC,QAAA,CAAiBC,MAlN+F;",
"sources":["node_modules/Phaser/src/structs/ProcessQueue.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$structs$ProcessQueue\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\n\r\n/**\r\n * @classdesc\r\n * [description]\r\n *\r\n * @class ProcessQueue\r\n * @memberOf Phaser.Structs\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @generic T\r\n */\r\nvar ProcessQueue = new Class({\r\n\r\n    initialize:\r\n\r\n    function ProcessQueue ()\r\n    {\r\n        /**\r\n         * [description]\r\n         *\r\n         * @genericUse {T[]} - [$type]\r\n         *\r\n         * @name Phaser.Structs.ProcessQueue#_pending\r\n         * @type {Array.<*>}\r\n         * @private\r\n         * @default []\r\n         * @since 3.0.0\r\n         */\r\n        this._pending = [];\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @genericUse {T[]} - [$type]\r\n         *\r\n         * @name Phaser.Structs.ProcessQueue#_active\r\n         * @type {Array.<*>}\r\n         * @private\r\n         * @default []\r\n         * @since 3.0.0\r\n         */\r\n        this._active = [];\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @genericUse {T[]} - [$type]\r\n         *\r\n         * @name Phaser.Structs.ProcessQueue#_destroy\r\n         * @type {Array.<*>}\r\n         * @private\r\n         * @default []\r\n         * @since 3.0.0\r\n         */\r\n        this._destroy = [];\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Structs.ProcessQueue#_toProcess\r\n         * @type {integer}\r\n         * @private\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this._toProcess = 0;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Structs.ProcessQueue#add\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [item]\r\n     * @genericUse {Phaser.Structs.ProcessQueue.<T>} - [$return]\r\n     *\r\n     * @param {*} item - [description]\r\n     *\r\n     * @return {Phaser.Structs.ProcessQueue} This Process Queue object.\r\n     */\r\n    add: function (item)\r\n    {\r\n        this._pending.push(item);\r\n\r\n        this._toProcess++;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Structs.ProcessQueue#remove\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [item]\r\n     * @genericUse {Phaser.Structs.ProcessQueue.<T>} - [$return]\r\n     *\r\n     * @param {*} item - [description]\r\n     *\r\n     * @return {Phaser.Structs.ProcessQueue} This Process Queue object.\r\n     */\r\n    remove: function (item)\r\n    {\r\n        this._destroy.push(item);\r\n\r\n        this._toProcess++;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Structs.ProcessQueue#update\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T[]} - [$return]\r\n     *\r\n     * @return {Array.<*>} [description]\r\n     */\r\n    update: function ()\r\n    {\r\n        if (this._toProcess === 0)\r\n        {\r\n            //  Quick bail\r\n            return this._active;\r\n        }\r\n\r\n        var list = this._destroy;\r\n        var active = this._active;\r\n        var i;\r\n        var item;\r\n\r\n        //  Clear the 'destroy' list\r\n        for (i = 0; i < list.length; i++)\r\n        {\r\n            item = list[i];\r\n\r\n            //  Remove from the 'active' array\r\n            var idx = active.indexOf(item);\r\n\r\n            if (idx !== -1)\r\n            {\r\n                active.splice(idx, 1);\r\n            }\r\n        }\r\n\r\n        list.length = 0;\r\n\r\n        //  Process the pending addition list\r\n        //  This stops callbacks and out of sync events from populating the active array mid-way during an update\r\n\r\n        list = this._pending;\r\n\r\n        for (i = 0; i < list.length; i++)\r\n        {\r\n            item = list[i];\r\n\r\n            this._active.push(item);\r\n        }\r\n\r\n        list.length = 0;\r\n\r\n        this._toProcess = 0;\r\n\r\n        //  The owner of this queue can now safely do whatever it needs to with the active list\r\n        return this._active;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Structs.ProcessQueue#getActive\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T[]} - [$return]\r\n     *\r\n     * @return {Array.<*>} [description]\r\n     */\r\n    getActive: function ()\r\n    {\r\n        return this._active;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Structs.ProcessQueue#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this._pending = [];\r\n        this._active = [];\r\n        this._destroy = [];\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = ProcessQueue;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","ProcessQueue","Class","initialize","_pending","_active","_destroy","_toProcess","add","item","push","remove","update","list","active","i","length","idx","indexOf","splice","getActive","destroy"]
}
