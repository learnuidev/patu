{
"version":3,
"file":"goog.math.vec3.js",
"lineCount":180,
"mappings":"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",
"sources":["goog/math/vec3.js"],
"sourcesContent":["// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Defines a 3-element vector class that can be used for\n * coordinate math, useful for animation systems and point manipulation.\n *\n * Based heavily on code originally by:\n * @author brenneman@google.com (Shawn Brenneman)\n */\n\n\ngoog.provide('goog.math.Vec3');\n\ngoog.require('goog.math');\ngoog.require('goog.math.Coordinate3');\n\n\n\n/**\n * Class for a three-dimensional vector object and assorted functions useful for\n * manipulation.\n *\n * Inherits from goog.math.Coordinate3 so that a Vec3 may be passed in to any\n * function that requires a Coordinate.\n *\n * @param {number} x The x value for the vector.\n * @param {number} y The y value for the vector.\n * @param {number} z The z value for the vector.\n * @struct\n * @constructor\n * @extends {goog.math.Coordinate3}\n */\ngoog.math.Vec3 = function(x, y, z) {\n  /**\n   * X-value\n   * @type {number}\n   */\n  this.x = x;\n\n  /**\n   * Y-value\n   * @type {number}\n   */\n  this.y = y;\n\n  /**\n   * Z-value\n   * @type {number}\n   */\n  this.z = z;\n};\ngoog.inherits(goog.math.Vec3, goog.math.Coordinate3);\n\n\n/**\n * Generates a random unit vector.\n *\n * http://mathworld.wolfram.com/SpherePointPicking.html\n * Using (6), (7), and (8) to generate coordinates.\n * @return {!goog.math.Vec3} A random unit-length vector.\n */\ngoog.math.Vec3.randomUnit = function() {\n  var theta = Math.random() * Math.PI * 2;\n  var phi = Math.random() * Math.PI * 2;\n\n  var z = Math.cos(phi);\n  var x = Math.sqrt(1 - z * z) * Math.cos(theta);\n  var y = Math.sqrt(1 - z * z) * Math.sin(theta);\n\n  return new goog.math.Vec3(x, y, z);\n};\n\n\n/**\n * Generates a random vector inside the unit sphere.\n *\n * @return {!goog.math.Vec3} A random vector.\n */\ngoog.math.Vec3.random = function() {\n  return goog.math.Vec3.randomUnit().scale(Math.random());\n};\n\n\n/**\n * Returns a new Vec3 object from a given coordinate.\n *\n * @param {goog.math.Coordinate3} a The coordinate.\n * @return {!goog.math.Vec3} A new vector object.\n */\ngoog.math.Vec3.fromCoordinate3 = function(a) {\n  return new goog.math.Vec3(a.x, a.y, a.z);\n};\n\n\n/**\n * Creates a new copy of this Vec3.\n *\n * @return {!goog.math.Vec3} A new vector with the same coordinates as this one.\n * @override\n */\ngoog.math.Vec3.prototype.clone = function() {\n  return new goog.math.Vec3(this.x, this.y, this.z);\n};\n\n\n/**\n * Returns the magnitude of the vector measured from the origin.\n *\n * @return {number} The length of the vector.\n */\ngoog.math.Vec3.prototype.magnitude = function() {\n  return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n};\n\n\n/**\n * Returns the squared magnitude of the vector measured from the origin.\n * NOTE(brenneman): Leaving out the square root is not a significant\n * optimization in JavaScript.\n *\n * @return {number} The length of the vector, squared.\n */\ngoog.math.Vec3.prototype.squaredMagnitude = function() {\n  return this.x * this.x + this.y * this.y + this.z * this.z;\n};\n\n\n/**\n * Scales the current vector by a constant.\n *\n * @param {number} s The scale factor.\n * @return {!goog.math.Vec3} This vector, scaled.\n */\ngoog.math.Vec3.prototype.scale = function(s) {\n  this.x *= s;\n  this.y *= s;\n  this.z *= s;\n  return this;\n};\n\n\n/**\n * Reverses the sign of the vector. Equivalent to scaling the vector by -1.\n *\n * @return {!goog.math.Vec3} This vector, inverted.\n */\ngoog.math.Vec3.prototype.invert = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  this.z = -this.z;\n  return this;\n};\n\n\n/**\n * Normalizes the current vector to have a magnitude of 1.\n *\n * @return {!goog.math.Vec3} This vector, normalized.\n */\ngoog.math.Vec3.prototype.normalize = function() {\n  return this.scale(1 / this.magnitude());\n};\n\n\n/**\n * Adds another vector to this vector in-place.\n *\n * @param {goog.math.Vec3} b The vector to add.\n * @return {!goog.math.Vec3} This vector with `b` added.\n */\ngoog.math.Vec3.prototype.add = function(b) {\n  this.x += b.x;\n  this.y += b.y;\n  this.z += b.z;\n  return this;\n};\n\n\n/**\n * Subtracts another vector from this vector in-place.\n *\n * @param {goog.math.Vec3} b The vector to subtract.\n * @return {!goog.math.Vec3} This vector with `b` subtracted.\n */\ngoog.math.Vec3.prototype.subtract = function(b) {\n  this.x -= b.x;\n  this.y -= b.y;\n  this.z -= b.z;\n  return this;\n};\n\n\n/**\n * Compares this vector with another for equality.\n *\n * @param {goog.math.Vec3} b The other vector.\n * @return {boolean} True if this vector's x, y and z equal the given vector's\n *     x, y, and z, respectively.\n */\ngoog.math.Vec3.prototype.equals = function(b) {\n  return this == b || !!b && this.x == b.x && this.y == b.y && this.z == b.z;\n};\n\n\n/**\n * Returns the distance between two vectors.\n *\n * @param {goog.math.Vec3} a The first vector.\n * @param {goog.math.Vec3} b The second vector.\n * @return {number} The distance.\n */\ngoog.math.Vec3.distance = goog.math.Coordinate3.distance;\n\n\n/**\n * Returns the squared distance between two vectors.\n *\n * @param {goog.math.Vec3} a The first vector.\n * @param {goog.math.Vec3} b The second vector.\n * @return {number} The squared distance.\n */\ngoog.math.Vec3.squaredDistance = goog.math.Coordinate3.squaredDistance;\n\n\n/**\n * Compares vectors for equality.\n *\n * @param {goog.math.Vec3} a The first vector.\n * @param {goog.math.Vec3} b The second vector.\n * @return {boolean} True if the vectors have equal x, y, and z coordinates.\n */\ngoog.math.Vec3.equals = goog.math.Coordinate3.equals;\n\n\n/**\n * Returns the sum of two vectors as a new Vec3.\n *\n * @param {goog.math.Vec3} a The first vector.\n * @param {goog.math.Vec3} b The second vector.\n * @return {!goog.math.Vec3} The sum vector.\n */\ngoog.math.Vec3.sum = function(a, b) {\n  return new goog.math.Vec3(a.x + b.x, a.y + b.y, a.z + b.z);\n};\n\n\n/**\n * Returns the difference of two vectors as a new Vec3.\n *\n * @param {goog.math.Vec3} a The first vector.\n * @param {goog.math.Vec3} b The second vector.\n * @return {!goog.math.Vec3} The difference vector.\n */\ngoog.math.Vec3.difference = function(a, b) {\n  return new goog.math.Vec3(a.x - b.x, a.y - b.y, a.z - b.z);\n};\n\n\n/**\n * Returns the dot-product of two vectors.\n *\n * @param {goog.math.Vec3} a The first vector.\n * @param {goog.math.Vec3} b The second vector.\n * @return {number} The dot-product of the two vectors.\n */\ngoog.math.Vec3.dot = function(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z;\n};\n\n\n/**\n * Returns the cross-product of two vectors.\n *\n * @param {goog.math.Vec3} a The first vector.\n * @param {goog.math.Vec3} b The second vector.\n * @return {!goog.math.Vec3} The cross-product of the two vectors.\n */\ngoog.math.Vec3.cross = function(a, b) {\n  return new goog.math.Vec3(\n      a.y * b.z - a.z * b.y, a.z * b.x - a.x * b.z, a.x * b.y - a.y * b.x);\n};\n\n\n/**\n * Returns a new Vec3 that is the linear interpolant between vectors a and b at\n * scale-value x.\n *\n * @param {goog.math.Vec3} a Vector a.\n * @param {goog.math.Vec3} b Vector b.\n * @param {number} x The proportion between a and b.\n * @return {!goog.math.Vec3} The interpolated vector.\n */\ngoog.math.Vec3.lerp = function(a, b, x) {\n  return new goog.math.Vec3(\n      goog.math.lerp(a.x, b.x, x), goog.math.lerp(a.y, b.y, x),\n      goog.math.lerp(a.z, b.z, x));\n};\n\n\n/**\n * Returns a new Vec3 that is a copy of the vector a, but rescaled by a factor s\n * in all dimensions.\n * @param {!goog.math.Vec3} a Vector a.\n * @param {number} s Scale factor.\n * @return {!goog.math.Vec3} A new rescaled vector.\n */\ngoog.math.Vec3.rescaled = function(a, s) {\n  return new goog.math.Vec3(a.x * s, a.y * s, a.z * s);\n};\n"],
"names":["goog","provide","require","math","Vec3","goog.math.Vec3","x","y","z","inherits","Coordinate3","randomUnit","goog.math.Vec3.randomUnit","theta","Math","random","PI","phi","cos","sqrt","sin","goog.math.Vec3.random","scale","fromCoordinate3","goog.math.Vec3.fromCoordinate3","a","prototype","clone","goog.math.Vec3.prototype.clone","magnitude","goog.math.Vec3.prototype.magnitude","squaredMagnitude","goog.math.Vec3.prototype.squaredMagnitude","goog.math.Vec3.prototype.scale","s","invert","goog.math.Vec3.prototype.invert","normalize","goog.math.Vec3.prototype.normalize","add","goog.math.Vec3.prototype.add","b","subtract","goog.math.Vec3.prototype.subtract","equals","goog.math.Vec3.prototype.equals","distance","squaredDistance","sum","goog.math.Vec3.sum","difference","goog.math.Vec3.difference","dot","goog.math.Vec3.dot","cross","goog.math.Vec3.cross","lerp","goog.math.Vec3.lerp","rescaled","goog.math.Vec3.rescaled"]
}
