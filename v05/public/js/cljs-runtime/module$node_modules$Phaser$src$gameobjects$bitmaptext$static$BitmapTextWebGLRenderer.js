shadow$provide.module$node_modules$Phaser$src$gameobjects$bitmaptext$static$BitmapTextWebGLRenderer=function(global,require,module,exports){var Utils=require("module$node_modules$Phaser$src$renderer$webgl$Utils");module.exports=function(renderer,src,interpolationPercentage,camera,parentMatrix){interpolationPercentage=src._text;var textLength=interpolationPercentage.length;if(0!==textLength){var pipeline=this.pipeline;renderer.setPipeline(pipeline,src);var camMatrix=pipeline._tempMatrix1,spriteMatrix=
pipeline._tempMatrix2;renderer=pipeline._tempMatrix3;spriteMatrix.applyITRS(src.x,src.y,src.rotation,src.scaleX,src.scaleY);camMatrix.copyFrom(camera.matrix);parentMatrix?(camMatrix.multiplyWithOffset(parentMatrix,-camera.scrollX*src.scrollFactorX,-camera.scrollY*src.scrollFactorY),spriteMatrix.e=src.x,spriteMatrix.f=src.y):(spriteMatrix.e-=camera.scrollX*src.scrollFactorX,spriteMatrix.f-=camera.scrollY*src.scrollFactorY);camMatrix.multiply(spriteMatrix,renderer);camMatrix=src.frame;var texture=camMatrix.glTexture;
parentMatrix=camMatrix.cutX;camMatrix=camMatrix.cutY;spriteMatrix=texture.width;var textureHeight=texture.height,tintEffect=src._isTinted&&src.tintFill,tintTL=Utils.getTintAppendFloatAlpha(src._tintTL,camera.alpha*src._alphaTL),tintTR=Utils.getTintAppendFloatAlpha(src._tintTR,camera.alpha*src._alphaTR),tintBL=Utils.getTintAppendFloatAlpha(src._tintBL,camera.alpha*src._alphaBL),tintBR=Utils.getTintAppendFloatAlpha(src._tintBR,camera.alpha*src._alphaBR);pipeline.setTexture2D(texture,0);var yAdvance=
texture=0,lastCharCode=0,letterSpacing=src._letterSpacing,glyph,fontData=src.fontData,chars=fontData.chars,lineHeight=fontData.lineHeight;fontData=src._fontSize/fontData.size;var align=src._align,currentLine=0,lineOffsetX=0;src.getTextBounds(!1);var lineData=src._bounds.lines;1===align?lineOffsetX=(lineData.longest-lineData.lengths[0])/2:2===align&&(lineOffsetX=lineData.longest-lineData.lengths[0]);camera=camera.roundPixels;for(var i=0;i<textLength;i++){var charCode=interpolationPercentage.charCodeAt(i);
if(10===charCode){currentLine++;1===align?lineOffsetX=(lineData.longest-lineData.lengths[currentLine])/2:2===align&&(lineOffsetX=lineData.longest-lineData.lengths[currentLine]);texture=0;yAdvance+=lineHeight;var lastGlyph=null}else if(glyph=chars[charCode]){var glyphX=parentMatrix+glyph.x;var glyphY=camMatrix+glyph.y;var glyphW=glyph.width;var glyphH=glyph.height;var x=glyph.xOffset+texture,y=glyph.yOffset+yAdvance;null!==lastGlyph&&(lastGlyph=glyph.kerning[lastCharCode],x+=void 0!==lastGlyph?lastGlyph:
0);texture+=glyph.xAdvance+letterSpacing;lastGlyph=glyph;lastCharCode=charCode;if(0!==glyphW&&0!==glyphH&&32!==charCode){x*=fontData;y*=fontData;x-=src.displayOriginX;y-=src.displayOriginY;x+=lineOffsetX;charCode=glyphX/spriteMatrix;glyph=glyphY/textureHeight;glyphX=(glyphX+glyphW)/spriteMatrix;glyphY=(glyphY+glyphH)/textureHeight;glyphW=x+glyphW*fontData;var yh=y+glyphH*fontData;glyphH=renderer.getX(x,y);var ty0=renderer.getY(x,y),tx1=renderer.getX(x,yh);x=renderer.getY(x,yh);var tx2=renderer.getX(glyphW,
yh);yh=renderer.getY(glyphW,yh);var tx3=renderer.getX(glyphW,y);y=renderer.getY(glyphW,y);camera&&(glyphH|=0,ty0|=0,tx1|=0,x|=0,tx2|=0,yh|=0,tx3|=0,y|=0);pipeline.batchQuad(glyphH,ty0,tx1,x,tx2,yh,tx3,y,charCode,glyph,glyphX,glyphY,tintTL,tintTR,tintBL,tintBR,tintEffect)}}}}}}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$bitmaptext$static$BitmapTextWebGLRenderer.js.map
