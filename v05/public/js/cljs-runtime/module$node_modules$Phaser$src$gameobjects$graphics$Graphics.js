shadow$provide.module$node_modules$Phaser$src$gameobjects$graphics$Graphics=function(global,require,module,exports){global=require("module$node_modules$Phaser$src$cameras$2d$BaseCamera");exports=require("module$node_modules$Phaser$src$utils$Class");var Commands=require("module$node_modules$Phaser$src$gameobjects$graphics$Commands"),ComponentsAlpha=require("module$node_modules$Phaser$src$gameobjects$components$Alpha"),ComponentsBlendMode=require("module$node_modules$Phaser$src$gameobjects$components$BlendMode"),
ComponentsDepth=require("module$node_modules$Phaser$src$gameobjects$components$Depth"),ComponentsMask=require("module$node_modules$Phaser$src$gameobjects$components$Mask"),ComponentsPipeline=require("module$node_modules$Phaser$src$gameobjects$components$Pipeline"),ComponentsTransform=require("module$node_modules$Phaser$src$gameobjects$components$Transform"),ComponentsVisible=require("module$node_modules$Phaser$src$gameobjects$components$Visible"),ComponentsScrollFactor=require("module$node_modules$Phaser$src$gameobjects$components$ScrollFactor"),
Ellipse=require("module$node_modules$Phaser$src$geom$ellipse$Ellipse"),GameObject=require("module$node_modules$Phaser$src$gameobjects$GameObject"),GetFastValue=require("module$node_modules$Phaser$src$utils$object$GetFastValue"),GetValue=require("module$node_modules$Phaser$src$utils$object$GetValue"),MATH_CONST=require("module$node_modules$Phaser$src$math$const");require=require("module$node_modules$Phaser$src$gameobjects$graphics$GraphicsRender");var Graphics=new exports({Extends:GameObject,Mixins:[ComponentsAlpha,
ComponentsBlendMode,ComponentsDepth,ComponentsMask,ComponentsPipeline,ComponentsTransform,ComponentsVisible,ComponentsScrollFactor,require],initialize:function(scene,options){var x=GetValue(options,"x",0),y=GetValue(options,"y",0);GameObject.call(this,scene,"Graphics");this.setPosition(x,y);this.initPipeline();this.displayOriginY=this.displayOriginX=0;this.commandBuffer=[];this.defaultFillColor=-1;this.defaultStrokeWidth=this.defaultFillAlpha=1;this.defaultStrokeColor=-1;this._lineWidth=this.defaultStrokeAlpha=
1;this.setDefaultStyles(options)},setDefaultStyles:function(options){GetValue(options,"lineStyle",null)&&(this.defaultStrokeWidth=GetValue(options,"lineStyle.width",1),this.defaultStrokeColor=GetValue(options,"lineStyle.color",16777215),this.defaultStrokeAlpha=GetValue(options,"lineStyle.alpha",1),this.lineStyle(this.defaultStrokeWidth,this.defaultStrokeColor,this.defaultStrokeAlpha));GetValue(options,"fillStyle",null)&&(this.defaultFillColor=GetValue(options,"fillStyle.color",16777215),this.defaultFillAlpha=
GetValue(options,"fillStyle.alpha",1),this.fillStyle(this.defaultFillColor,this.defaultFillAlpha));return this},lineStyle:function(lineWidth,color,alpha){void 0===alpha&&(alpha=1);this.commandBuffer.push(Commands.LINE_STYLE,lineWidth,color,alpha);this._lineWidth=lineWidth;return this},fillStyle:function(color,alpha){void 0===alpha&&(alpha=1);this.commandBuffer.push(Commands.FILL_STYLE,color,alpha);return this},fillGradientStyle:function(topLeft,topRight,bottomLeft,bottomRight,alpha){void 0===alpha&&
(alpha=1);this.commandBuffer.push(Commands.GRADIENT_FILL_STYLE,alpha,topLeft,topRight,bottomLeft,bottomRight);return this},lineGradientStyle:function(lineWidth,topLeft,topRight,bottomLeft,bottomRight,alpha){void 0===alpha&&(alpha=1);this.commandBuffer.push(Commands.GRADIENT_LINE_STYLE,lineWidth,alpha,topLeft,topRight,bottomLeft,bottomRight);return this},setTexture:function(key,frame,mode){void 0===mode&&(mode=0);if(void 0===key)this.commandBuffer.push(Commands.CLEAR_TEXTURE);else if(key=this.scene.sys.textures.getFrame(key,
frame))2===mode&&(mode=3),this.commandBuffer.push(Commands.SET_TEXTURE,key,mode);return this},beginPath:function(){this.commandBuffer.push(Commands.BEGIN_PATH);return this},closePath:function(){this.commandBuffer.push(Commands.CLOSE_PATH);return this},fillPath:function(){this.commandBuffer.push(Commands.FILL_PATH);return this},strokePath:function(){this.commandBuffer.push(Commands.STROKE_PATH);return this},fillCircleShape:function(circle){return this.fillCircle(circle.x,circle.y,circle.radius)},strokeCircleShape:function(circle){return this.strokeCircle(circle.x,
circle.y,circle.radius)},fillCircle:function(x,y,radius){this.beginPath();this.arc(x,y,radius,0,MATH_CONST.PI2);this.fillPath();return this},strokeCircle:function(x,y,radius){this.beginPath();this.arc(x,y,radius,0,MATH_CONST.PI2);this.strokePath();return this},fillRectShape:function(rect){return this.fillRect(rect.x,rect.y,rect.width,rect.height)},strokeRectShape:function(rect){return this.strokeRect(rect.x,rect.y,rect.width,rect.height)},fillRect:function(x,y,width,height){this.commandBuffer.push(Commands.FILL_RECT,
x,y,width,height);return this},strokeRect:function(x,y,width,height){var lineWidthHalf=this._lineWidth/2,minx=x-lineWidthHalf;lineWidthHalf=x+lineWidthHalf;this.beginPath();this.moveTo(x,y);this.lineTo(x,y+height);this.strokePath();this.beginPath();this.moveTo(x+width,y);this.lineTo(x+width,y+height);this.strokePath();this.beginPath();this.moveTo(minx,y);this.lineTo(lineWidthHalf+width,y);this.strokePath();this.beginPath();this.moveTo(minx,y+height);this.lineTo(lineWidthHalf+width,y+height);this.strokePath();
return this},fillRoundedRect:function(x,y,width,height,radius){void 0===radius&&(radius=20);var tl=radius,tr=radius,bl=radius,br=radius;"number"!==typeof radius&&(tl=GetFastValue(radius,"tl",20),tr=GetFastValue(radius,"tr",20),bl=GetFastValue(radius,"bl",20),br=GetFastValue(radius,"br",20));this.beginPath();this.moveTo(x+tl,y);this.lineTo(x+width-tr,y);this.arc(x+width-tr,y+tr,tr,-MATH_CONST.TAU,0);this.lineTo(x+width,y+height-br);this.arc(x+width-br,y+height-br,br,0,MATH_CONST.TAU);this.lineTo(x+
bl,y+height);this.arc(x+bl,y+height-bl,bl,MATH_CONST.TAU,Math.PI);this.lineTo(x,y+tl);this.arc(x+tl,y+tl,tl,-Math.PI,-MATH_CONST.TAU);this.fillPath();return this},strokeRoundedRect:function(x,y,width,height,radius){void 0===radius&&(radius=20);var tl=radius,tr=radius,bl=radius,br=radius;"number"!==typeof radius&&(tl=GetFastValue(radius,"tl",20),tr=GetFastValue(radius,"tr",20),bl=GetFastValue(radius,"bl",20),br=GetFastValue(radius,"br",20));this.beginPath();this.moveTo(x+tl,y);this.lineTo(x+width-
tr,y);this.arc(x+width-tr,y+tr,tr,-MATH_CONST.TAU,0);this.lineTo(x+width,y+height-br);this.arc(x+width-br,y+height-br,br,0,MATH_CONST.TAU);this.lineTo(x+bl,y+height);this.arc(x+bl,y+height-bl,bl,MATH_CONST.TAU,Math.PI);this.lineTo(x,y+tl);this.arc(x+tl,y+tl,tl,-Math.PI,-MATH_CONST.TAU);this.strokePath();return this},fillPointShape:function(point,size){return this.fillPoint(point.x,point.y,size)},fillPoint:function(x,y,size){!size||1>size?size=1:(x-=size/2,y-=size/2);this.commandBuffer.push(Commands.FILL_RECT,
x,y,size,size);return this},fillTriangleShape:function(triangle){return this.fillTriangle(triangle.x1,triangle.y1,triangle.x2,triangle.y2,triangle.x3,triangle.y3)},strokeTriangleShape:function(triangle){return this.strokeTriangle(triangle.x1,triangle.y1,triangle.x2,triangle.y2,triangle.x3,triangle.y3)},fillTriangle:function(x0,y0,x1,y1,x2,y2){this.commandBuffer.push(Commands.FILL_TRIANGLE,x0,y0,x1,y1,x2,y2);return this},strokeTriangle:function(x0,y0,x1,y1,x2,y2){this.commandBuffer.push(Commands.STROKE_TRIANGLE,
x0,y0,x1,y1,x2,y2);return this},strokeLineShape:function(line){return this.lineBetween(line.x1,line.y1,line.x2,line.y2)},lineBetween:function(x1,y1,x2,y2){this.beginPath();this.moveTo(x1,y1);this.lineTo(x2,y2);this.strokePath();return this},lineTo:function(x,y){this.commandBuffer.push(Commands.LINE_TO,x,y);return this},moveTo:function(x,y){this.commandBuffer.push(Commands.MOVE_TO,x,y);return this},lineFxTo:function(x,y,width,rgb){this.commandBuffer.push(Commands.LINE_FX_TO,x,y,width,rgb,1);return this},
moveFxTo:function(x,y,width,rgb){this.commandBuffer.push(Commands.MOVE_FX_TO,x,y,width,rgb,1);return this},strokePoints:function(points,autoClose,endIndex){void 0===autoClose&&(autoClose=!1);void 0===endIndex&&(endIndex=points.length);this.beginPath();this.moveTo(points[0].x,points[0].y);for(var i=1;i<endIndex;i++)this.lineTo(points[i].x,points[i].y);autoClose&&this.lineTo(points[0].x,points[0].y);this.strokePath();return this},fillPoints:function(points,autoClose,endIndex){void 0===autoClose&&(autoClose=
!1);void 0===endIndex&&(endIndex=points.length);this.beginPath();this.moveTo(points[0].x,points[0].y);for(var i=1;i<endIndex;i++)this.lineTo(points[i].x,points[i].y);autoClose&&this.lineTo(points[0].x,points[0].y);this.fillPath();return this},strokeEllipseShape:function(ellipse,smoothness){void 0===smoothness&&(smoothness=32);ellipse=ellipse.getPoints(smoothness);return this.strokePoints(ellipse,!0)},strokeEllipse:function(x,y,width,height,smoothness){void 0===smoothness&&(smoothness=32);x=(new Ellipse(x,
y,width,height)).getPoints(smoothness);return this.strokePoints(x,!0)},fillEllipseShape:function(ellipse,smoothness){void 0===smoothness&&(smoothness=32);ellipse=ellipse.getPoints(smoothness);return this.fillPoints(ellipse,!0)},fillEllipse:function(x,y,width,height,smoothness){void 0===smoothness&&(smoothness=32);x=(new Ellipse(x,y,width,height)).getPoints(smoothness);return this.fillPoints(x,!0)},arc:function(x,y,radius,startAngle,endAngle,anticlockwise,overshoot){void 0===anticlockwise&&(anticlockwise=
!1);void 0===overshoot&&(overshoot=0);this.commandBuffer.push(Commands.ARC,x,y,radius,startAngle,endAngle,anticlockwise,overshoot);return this},slice:function(x,y,radius,startAngle,endAngle,anticlockwise,overshoot){void 0===anticlockwise&&(anticlockwise=!1);void 0===overshoot&&(overshoot=0);this.commandBuffer.push(Commands.BEGIN_PATH);this.commandBuffer.push(Commands.MOVE_TO,x,y);this.commandBuffer.push(Commands.ARC,x,y,radius,startAngle,endAngle,anticlockwise,overshoot);this.commandBuffer.push(Commands.CLOSE_PATH);
return this},save:function(){this.commandBuffer.push(Commands.SAVE);return this},restore:function(){this.commandBuffer.push(Commands.RESTORE);return this},translate:function(x,y){this.commandBuffer.push(Commands.TRANSLATE,x,y);return this},scale:function(x,y){this.commandBuffer.push(Commands.SCALE,x,y);return this},rotate:function(radians){this.commandBuffer.push(Commands.ROTATE,radians);return this},clear:function(){this.commandBuffer.length=0;-1<this.defaultFillColor&&this.fillStyle(this.defaultFillColor,
this.defaultFillAlpha);-1<this.defaultStrokeColor&&this.lineStyle(this.defaultStrokeWidth,this.defaultStrokeColor,this.defaultStrokeAlpha);return this},generateTexture:function(key,width,height){var sys=this.scene.sys,renderer=sys.game.renderer;void 0===width&&(width=sys.game.config.width);void 0===height&&(height=sys.game.config.height);Graphics.TargetCamera.setScene(this.scene);Graphics.TargetCamera.setViewport(0,0,width,height);Graphics.TargetCamera.scrollX=this.x;Graphics.TargetCamera.scrollY=
this.y;var ctx;if("string"===typeof key)if(sys.textures.exists(key)){var texture=sys.textures.get(key);key=texture.getSourceImage();key instanceof HTMLCanvasElement&&(ctx=key.getContext("2d"))}else texture=sys.textures.createCanvas(key,width,height),ctx=texture.getSourceImage().getContext("2d");else key instanceof HTMLCanvasElement&&(ctx=key.getContext("2d"));ctx&&(this.renderCanvas(renderer,this,0,Graphics.TargetCamera,null,ctx,!1),texture&&texture.refresh());return this},preDestroy:function(){this.commandBuffer=
[]}});Graphics.TargetCamera=new global;module.exports=Graphics}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$graphics$Graphics.js.map
