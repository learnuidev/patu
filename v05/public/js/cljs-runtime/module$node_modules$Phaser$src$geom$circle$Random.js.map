{
"version":3,
"file":"module$node_modules$Phaser$src$geom$circle$Random.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,kDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO9G,IAAIC,MAAQH,OAAA,CAAQ,iDAAR,CA+BZC,OAAAC,QAAA,CAhBaE,QAAS,CAACC,MAAD,CAASC,GAAT,CACtB,CACgBC,IAAAA,EAAZ,GAAID,GAAJ,GAAyBA,GAAzB,CAA+B,IAAIH,KAAnC,CAEA,KAAIK,EAAI,CAAJA,CAAQC,IAAAC,GAARF,CAAkBC,IAAAE,OAAA,EAAtB,CACIC,EAAIH,IAAAE,OAAA,EAAJC,CAAoBH,IAAAE,OAAA,EACpBE,EAAAA,CAAS,CAAL,CAACD,CAAD,CAAU,CAAV,CAAcA,CAAd,CAAkBA,CAE1B,KAAIE,EAAID,CAAJC,CAAQL,IAAAM,IAAA,CAASP,CAAT,CAEZF,IAAAU,EAAA,CAAQX,MAAAW,EAAR,CAHQH,CAGR,CAHYJ,IAAAQ,IAAA,CAAST,CAAT,CAGZ,CAAwBH,MAAAa,OACxBZ,IAAAQ,EAAA,CAAQT,MAAAS,EAAR,CAAoBA,CAApB,CAAwBT,MAAAa,OAExB,OAAOZ,IAZX,CAvB8G;",
"sources":["node_modules/Phaser/src/geom/circle/Random.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$geom$circle$Random\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Returns a uniformly distributed random point from anywhere within the given Circle.\r\n *\r\n * @function Phaser.Geom.Circle.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to get a random point from.\r\n * @param {(Phaser.Geom.Point|object)} [out] - A Point or point-like object to set the random `x` and `y` values in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point object with the random values set in the `x` and `y` properties.\r\n */\r\nvar Random = function (circle, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    var t = 2 * Math.PI * Math.random();\r\n    var u = Math.random() + Math.random();\r\n    var r = (u > 1) ? 2 - u : u;\r\n    var x = r * Math.cos(t);\r\n    var y = r * Math.sin(t);\r\n\r\n    out.x = circle.x + (x * circle.radius);\r\n    out.y = circle.y + (y * circle.radius);\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Random;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Point","Random","circle","out","undefined","t","Math","PI","random","u","r","y","sin","x","cos","radius"]
}
