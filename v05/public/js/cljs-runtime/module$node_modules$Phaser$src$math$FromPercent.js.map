{
"version":3,
"file":"module$node_modules$Phaser$src$math$FromPercent.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,gDAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO5G,IAAIC,MAAQH,OAAA,CAAQ,2CAAR,CAqBZC,OAAAC,QAAA,CAPkBE,QAAS,CAACC,OAAD,CAAUC,GAAV,CAAeC,GAAf,CAC3B,CACIF,OAAA,CAAUF,KAAA,CAAME,OAAN,CAAe,CAAf,CAAkB,CAAlB,CAEV,QAAQE,GAAR,CAAcD,GAAd,EAAqBD,OAHzB,CAtB4G;",
"sources":["node_modules/Phaser/src/math/FromPercent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$FromPercent\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Clamp = require('./Clamp');\r\n\r\n/**\r\n * Return a value based on the range between `min` and `max` and the percentage given.\r\n *\r\n * @function Phaser.Math.FromPercent\r\n * @since 3.0.0\r\n *\r\n * @param {number} percent - A value between 0 and 1 representing the percentage.\r\n * @param {number} min - The minimum value.\r\n * @param {number} [max] - The maximum value.\r\n *\r\n * @return {number} The value that is `percent` percent between `min` and `max`.\r\n */\r\nvar FromPercent = function (percent, min, max)\r\n{\r\n    percent = Clamp(percent, 0, 1);\r\n\r\n    return (max - min) * percent;\r\n};\r\n\r\nmodule.exports = FromPercent;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Clamp","FromPercent","percent","min","max"]
}
