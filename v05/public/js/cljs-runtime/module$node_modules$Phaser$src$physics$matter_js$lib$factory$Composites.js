shadow$provide.module$node_modules$Phaser$src$physics$matter_js$lib$factory$Composites=function(global,require,module,exports){var Composites={};module.exports=Composites;var Composite=require("module$node_modules$Phaser$src$physics$matter_js$lib$body$Composite"),Constraint=require("module$node_modules$Phaser$src$physics$matter_js$lib$constraint$Constraint"),Common=require("module$node_modules$Phaser$src$physics$matter_js$lib$core$Common"),Body=require("module$node_modules$Phaser$src$physics$matter_js$lib$body$Body"),
Bodies=require("module$node_modules$Phaser$src$physics$matter_js$lib$factory$Bodies");(function(){Composites.stack=function(xx,yy,columns,rows,columnGap,rowGap,callback){for(var stack=Composite.create({label:"Stack"}),x=xx,lastBody,i=0,row=0;row<rows;row++){for(var maxHeight=0,column=0;column<columns;column++){var body=callback(x,yy,column,row,lastBody,i);body?(x=body.bounds.max.y-body.bounds.min.y,lastBody=body.bounds.max.x-body.bounds.min.x,x>maxHeight&&(maxHeight=x),Body.translate(body,{x:.5*lastBody,
y:.5*x}),x=body.bounds.max.x+columnGap,Composite.addBody(stack,body),lastBody=body,i+=1):x+=columnGap}yy+=maxHeight+rowGap;x=xx}return stack};Composites.chain=function(composite,xOffsetA,yOffsetA,xOffsetB,yOffsetB,options){for(var bodies=composite.bodies,i=1;i<bodies.length;i++){var bodyA=bodies[i-1],bodyB=bodies[i];bodyA=Common.extend({bodyA:bodyA,pointA:{x:(bodyA.bounds.max.x-bodyA.bounds.min.x)*xOffsetA,y:(bodyA.bounds.max.y-bodyA.bounds.min.y)*yOffsetA},bodyB:bodyB,pointB:{x:(bodyB.bounds.max.x-
bodyB.bounds.min.x)*xOffsetB,y:(bodyB.bounds.max.y-bodyB.bounds.min.y)*yOffsetB}},options);Composite.addConstraint(composite,Constraint.create(bodyA))}composite.label+=" Chain";return composite};Composites.mesh=function(composite,columns,rows,crossBrace,options){var bodies=composite.bodies,row,col;for(row=0;row<rows;row++){for(col=1;col<columns;col++){var bodyA=bodies[col-1+row*columns];var bodyB=bodies[col+row*columns];Composite.addConstraint(composite,Constraint.create(Common.extend({bodyA:bodyA,
bodyB:bodyB},options)))}if(0<row)for(col=0;col<columns;col++)bodyA=bodies[col+(row-1)*columns],bodyB=bodies[col+row*columns],Composite.addConstraint(composite,Constraint.create(Common.extend({bodyA:bodyA,bodyB:bodyB},options))),crossBrace&&0<col&&(bodyA=bodies[col-1+(row-1)*columns],Composite.addConstraint(composite,Constraint.create(Common.extend({bodyA:bodyA,bodyB:bodyB},options)))),crossBrace&&col<columns-1&&(bodyA=bodies[col+1+(row-1)*columns],Composite.addConstraint(composite,Constraint.create(Common.extend({bodyA:bodyA,
bodyB:bodyB},options))))}composite.label+=" Mesh";return composite};Composites.pyramid=function(xx,yy,columns,rows,columnGap,rowGap,callback){return Composites.stack(xx,yy,columns,rows,columnGap,rowGap,function(x,y,column,row,lastBody,i){var actualRows=Math.min(rows,Math.ceil(columns/2));x=lastBody?lastBody.bounds.max.x-lastBody.bounds.min.x:0;if(!(row>actualRows||(row=actualRows-row,actualRows=columns-1-row,column<row||column>actualRows)))return 1===i&&Body.translate(lastBody,{x:(column+(1===columns%
2?1:-1))*x,y:0}),callback(xx+(lastBody?column*x:0)+column*columnGap,y,column,row,lastBody,i)})};Composites.newtonsCradle=function(xx,yy,number,size,length){for(var newtonsCradle=Composite.create({label:"Newtons Cradle"}),i=0;i<number;i++){var circle=Bodies.circle(xx+1.9*i*size,yy+length,size,{inertia:Infinity,restitution:1,friction:0,frictionAir:1E-4,slop:1}),constraint=Constraint.create({pointA:{x:xx+1.9*i*size,y:yy},bodyB:circle});Composite.addBody(newtonsCradle,circle);Composite.addConstraint(newtonsCradle,
constraint)}return newtonsCradle};Composites.car=function(xx,yy,width,height,wheelSize){var group=Body.nextGroup(!0),wheelAOffset=.5*-width+20,wheelBOffset=.5*width-20,car=Composite.create({label:"Car"});width=Bodies.rectangle(xx,yy,width,height,{collisionFilter:{group:group},chamfer:{radius:.5*height},density:2E-4});height=Bodies.circle(xx+wheelAOffset,yy+0,wheelSize,{collisionFilter:{group:group},friction:.8});xx=Bodies.circle(xx+wheelBOffset,yy+0,wheelSize,{collisionFilter:{group:group},friction:.8});
wheelAOffset=Constraint.create({bodyB:width,pointB:{x:wheelAOffset,y:0},bodyA:height,stiffness:1,length:0});wheelBOffset=Constraint.create({bodyB:width,pointB:{x:wheelBOffset,y:0},bodyA:xx,stiffness:1,length:0});Composite.addBody(car,width);Composite.addBody(car,height);Composite.addBody(car,xx);Composite.addConstraint(car,wheelAOffset);Composite.addConstraint(car,wheelBOffset);return car};Composites.softBody=function(xx,yy,columns,rows,columnGap,rowGap,crossBrace,particleRadius,particleOptions,constraintOptions){particleOptions=
Common.extend({inertia:Infinity},particleOptions);constraintOptions=Common.extend({stiffness:.2,render:{type:"line",anchors:!1}},constraintOptions);xx=Composites.stack(xx,yy,columns,rows,columnGap,rowGap,function(x,y){return Bodies.circle(x,y,particleRadius,particleOptions)});Composites.mesh(xx,columns,rows,crossBrace,constraintOptions);xx.label="Soft Body";return xx}})()}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$lib$factory$Composites.js.map
