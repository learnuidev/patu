{
"version":3,
"file":"module$node_modules$Phaser$src$dom$RequestAnimationFrame.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOjHC,MAAAA,CAAQH,OAAA,CAAQ,4CAAR,CACZ,KAAII,KAAOJ,OAAA,CAAQ,2CAAR,CAYPK,QAAAA,CAAwB,IAAIF,MAAJ,CAAU,CAElCG,WAEAD,QAA+B,EAC/B,CASI,IAAAE,UAAA,CAAiB,CAAA,CASjB,KAAAC,SAAA,CAAgBJ,IAUhB,KAAAK,KAAA,CAAY,CAUZ,KAAAC,aAAA,CAAoB,CAAA,CAUpB,KAAAC,UAAA,CAAiB,IAUjB,KAAAC,SAAA,CAAgB,CAEhB,KAAIC,MAAQ,IAUZ,KAAAC,KAAA,CAAYC,QAASD,KAAK,CAACE,SAAD,CAC1B,CAEIH,KAAAD,SAAA,CAAiBC,KAAAJ,KAEjBI,MAAAJ,KAAA,CAAaO,SAEbH,MAAAL,SAAA,CAAeQ,SAAf,CAEAH;KAAAF,UAAA,CAAkBM,MAAAC,sBAAA,CAA6BJ,IAA7B,CARtB,CAmBA,KAAAK,YAAA,CAAmBC,QAASD,YAAY,EACxC,CACI,IAAIE,EAAIC,IAAAC,IAAA,EAAR,CAEIC,MAAQC,IAAAC,IAAA,CAAS,EAAT,CAAcb,KAAAD,SAAd,CAA+BS,CAA/B,CAAkC,CAAlC,CAEZR,MAAAD,SAAA,CAAiBC,KAAAJ,KAEjBI,MAAAJ,KAAA,CAAaY,CAEbR,MAAAL,SAAA,CAAea,CAAf,CAEAR,MAAAF,UAAA,CAAkBM,MAAAU,WAAA,CAAkBR,WAAlB,CAA+BK,KAA/B,CAXtB,CA3FJ,CALkC,CAwHlCI,MAAOA,QAAS,CAACpB,QAAD,CAAWqB,eAAX,CAChB,CACQ,IAAAtB,UAAJ,GAKA,IAAAC,SAMA,CANgBA,QAMhB,CAJA,IAAAE,aAIA,CAJoBmB,eAIpB,CAFA,IAAAtB,UAEA,CAFiB,CAAA,CAEjB,CAAA,IAAAI,UAAA,CAAkBkB,eAAD,CAAoBZ,MAAAU,WAAA,CAAkB,IAAAR,YAAlB,CAAoC,CAApC,CAApB,CAA6DF,MAAAC,sBAAA,CAA6B,IAAAJ,KAA7B,CAX9E,CADJ,CAzHkC;AA8IlCgB,KAAMA,QAAS,EACf,CACI,IAAAvB,UAAA,CAAiB,CAAA,CAEb,KAAAG,aAAJ,CAEIqB,YAAA,CAAa,IAAApB,UAAb,CAFJ,CAMIM,MAAAe,qBAAA,CAA4B,IAAArB,UAA5B,CATR,CA/IkC,CAkKlCsB,QAASA,QAAS,EAClB,CACI,IAAAH,KAAA,EAEA,KAAAtB,SAAA,CAAgBJ,IAHpB,CAnKkC,CAAV,CA2K5BH,OAAAC,QAAA,CAAiBG,OA/LoG;",
"sources":["node_modules/Phaser/src/dom/RequestAnimationFrame.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$dom$RequestAnimationFrame\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar NOOP = require('../utils/NOOP');\r\n\r\n/**\r\n * @classdesc\r\n * Abstracts away the use of RAF or setTimeOut for the core game update loop.\r\n * This is invoked automatically by the Phaser.Game instance.\r\n *\r\n * @class RequestAnimationFrame\r\n * @memberOf Phaser.DOM\r\n * @constructor\r\n * @since 3.0.0\r\n */\r\nvar RequestAnimationFrame = new Class({\r\n\r\n    initialize:\r\n\r\n    function RequestAnimationFrame ()\r\n    {\r\n        /**\r\n         * True if RequestAnimationFrame is running, otherwise false.\r\n         *\r\n         * @name Phaser.DOM.RequestAnimationFrame#isRunning\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.isRunning = false;\r\n\r\n        /**\r\n         * The callback to be invoked each step.\r\n         *\r\n         * @name Phaser.DOM.RequestAnimationFrame#callback\r\n         * @type {FrameRequestCallback}\r\n         * @since 3.0.0\r\n         */\r\n        this.callback = NOOP;\r\n\r\n        /**\r\n         * The most recent timestamp. Either a DOMHighResTimeStamp under RAF or `Date.now` under SetTimeout.\r\n         *\r\n         * @name Phaser.DOM.RequestAnimationFrame#tick\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.tick = 0;\r\n\r\n        /**\r\n         * True if the step is using setTimeout instead of RAF.\r\n         *\r\n         * @name Phaser.DOM.RequestAnimationFrame#isSetTimeOut\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.isSetTimeOut = false;\r\n\r\n        /**\r\n         * The setTimeout or RAF callback ID used when canceling them.\r\n         *\r\n         * @name Phaser.DOM.RequestAnimationFrame#timeOutID\r\n         * @type {?number}\r\n         * @default null\r\n         * @since 3.0.0\r\n         */\r\n        this.timeOutID = null;\r\n\r\n        /**\r\n         * The previous time the step was called.\r\n         *\r\n         * @name Phaser.DOM.RequestAnimationFrame#lastTime\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.lastTime = 0;\r\n\r\n        var _this = this;\r\n\r\n        /**\r\n         * The RAF step function.\r\n         * Updates the local tick value, invokes the callback and schedules another call to requestAnimationFrame.\r\n         *\r\n         * @name Phaser.DOM.RequestAnimationFrame#step\r\n         * @type {FrameRequestCallback}\r\n         * @since 3.0.0\r\n         */\r\n        this.step = function step (timestamp)\r\n        {\r\n            // DOMHighResTimeStamp\r\n            _this.lastTime = _this.tick;\r\n\r\n            _this.tick = timestamp;\r\n\r\n            _this.callback(timestamp);\r\n\r\n            _this.timeOutID = window.requestAnimationFrame(step);\r\n        };\r\n\r\n        /**\r\n         * The SetTimeout step function.\r\n         * Updates the local tick value, invokes the callback and schedules another call to setTimeout.\r\n         *\r\n         * @name Phaser.DOM.RequestAnimationFrame#stepTimeout\r\n         * @type {function}\r\n         * @since 3.0.0\r\n         */\r\n        this.stepTimeout = function stepTimeout ()\r\n        {\r\n            var d = Date.now();\r\n\r\n            var delay = Math.max(16 + _this.lastTime - d, 0);\r\n\r\n            _this.lastTime = _this.tick;\r\n\r\n            _this.tick = d;\r\n\r\n            _this.callback(d);\r\n\r\n            _this.timeOutID = window.setTimeout(stepTimeout, delay);\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Starts the requestAnimationFrame or setTimeout process running.\r\n     *\r\n     * @method Phaser.DOM.RequestAnimationFrame#start\r\n     * @since 3.0.0\r\n     *\r\n     * @param {FrameRequestCallback} callback - The callback to invoke each step.\r\n     * @param {boolean} forceSetTimeOut - Should it use SetTimeout, even if RAF is available?\r\n     */\r\n    start: function (callback, forceSetTimeOut)\r\n    {\r\n        if (this.isRunning)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.callback = callback;\r\n\r\n        this.isSetTimeOut = forceSetTimeOut;\r\n\r\n        this.isRunning = true;\r\n\r\n        this.timeOutID = (forceSetTimeOut) ? window.setTimeout(this.stepTimeout, 0) : window.requestAnimationFrame(this.step);\r\n    },\r\n\r\n    /**\r\n     * Stops the requestAnimationFrame or setTimeout from running.\r\n     *\r\n     * @method Phaser.DOM.RequestAnimationFrame#stop\r\n     * @since 3.0.0\r\n     */\r\n    stop: function ()\r\n    {\r\n        this.isRunning = false;\r\n\r\n        if (this.isSetTimeOut)\r\n        {\r\n            clearTimeout(this.timeOutID);\r\n        }\r\n        else\r\n        {\r\n            window.cancelAnimationFrame(this.timeOutID);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Stops the step from running and clears the callback reference.\r\n     *\r\n     * @method Phaser.DOM.RequestAnimationFrame#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.stop();\r\n\r\n        this.callback = NOOP;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = RequestAnimationFrame;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Class","NOOP","RequestAnimationFrame","initialize","isRunning","callback","tick","isSetTimeOut","timeOutID","lastTime","_this","step","this.step","timestamp","window","requestAnimationFrame","stepTimeout","this.stepTimeout","d","Date","now","delay","Math","max","setTimeout","start","forceSetTimeOut","stop","clearTimeout","cancelAnimationFrame","destroy"]
}
