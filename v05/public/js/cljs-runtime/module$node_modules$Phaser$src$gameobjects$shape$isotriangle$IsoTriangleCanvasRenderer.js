shadow$provide.module$node_modules$Phaser$src$gameobjects$shape$isotriangle$IsoTriangleCanvasRenderer=function(global,require,module,exports){var FillStyleCanvas=require("module$node_modules$Phaser$src$gameobjects$shape$FillStyleCanvas"),SetTransform=require("module$node_modules$Phaser$src$renderer$canvas$utils$SetTransform");module.exports=function(renderer,src,interpolationPercentage,camera,parentMatrix){interpolationPercentage=renderer.currentContext;if(SetTransform(renderer,interpolationPercentage,
src,camera,parentMatrix)&&src.isFilled){parentMatrix=src.width;renderer=src.height;camera=parentMatrix/2;parentMatrix/=src.projection;var reversed=src.isReversed;src.showTop&&reversed&&(FillStyleCanvas(interpolationPercentage,src,src.fillTop),interpolationPercentage.beginPath(),interpolationPercentage.moveTo(-camera,-renderer),interpolationPercentage.lineTo(0,-parentMatrix-renderer),interpolationPercentage.lineTo(camera,-renderer),interpolationPercentage.lineTo(0,parentMatrix-renderer),interpolationPercentage.fill());
src.showLeft&&(FillStyleCanvas(interpolationPercentage,src,src.fillLeft),interpolationPercentage.beginPath(),reversed?interpolationPercentage.moveTo(-camera,-renderer):interpolationPercentage.moveTo(-camera,0),interpolationPercentage.lineTo(0,parentMatrix),interpolationPercentage.lineTo(0,parentMatrix-renderer),interpolationPercentage.fill());src.showRight&&(FillStyleCanvas(interpolationPercentage,src,src.fillRight),interpolationPercentage.beginPath(),reversed?interpolationPercentage.moveTo(camera,
-renderer):interpolationPercentage.moveTo(camera,0),interpolationPercentage.lineTo(0,parentMatrix),interpolationPercentage.lineTo(0,parentMatrix-renderer),interpolationPercentage.fill())}}}
//# sourceMappingURL=module$node_modules$Phaser$src$gameobjects$shape$isotriangle$IsoTriangleCanvasRenderer.js.map
