shadow$provide.module$node_modules$Phaser$src$cameras$2d$effects$Fade=function(global,require,module,exports){var Clamp=require("module$node_modules$Phaser$src$math$Clamp");global=new (require("module$node_modules$Phaser$src$utils$Class"))({initialize:function(camera){this.camera=camera;this.isComplete=this.isRunning=!1;this.direction=!0;this._elapsed=this.progress=this.alpha=this.blue=this.green=this.red=this.duration=0},start:function(direction,duration,red,green,blue,force,callback,context){void 0===
direction&&(direction=!0);void 0===duration&&(duration=1E3);void 0===red&&(red=0);void 0===green&&(green=0);void 0===blue&&(blue=0);void 0===force&&(force=!1);void 0===callback&&(callback=null);void 0===context&&(context=this.camera.scene);if(!force&&this.isRunning)return this.camera;this.isRunning=!0;this.isComplete=!1;this.duration=duration;this.direction=direction;this.progress=0;this.red=red;this.green=green;this.blue=blue;this.alpha=direction?Number.MIN_VALUE:1;this._elapsed=0;this._onUpdate=
callback;this._onUpdateScope=context;this.camera.emit(direction?"camerafadeoutstart":"camerafadeinstart",this.camera,this,duration,red,green,blue);return this.camera},update:function(time,delta){this.isRunning&&(this._elapsed+=delta,this.progress=Clamp(this._elapsed/this.duration,0,1),this._onUpdate&&this._onUpdate.call(this._onUpdateScope,this.camera,this.progress),this._elapsed<this.duration?this.alpha=this.direction?this.progress:1-this.progress:this.effectComplete())},postRenderCanvas:function(ctx){if(!this.isRunning&&
!this.isComplete)return!1;var camera=this.camera;ctx.fillStyle="rgba("+this.red+","+this.green+","+this.blue+","+this.alpha+")";ctx.fillRect(camera._cx,camera._cy,camera._cw,camera._ch);return!0},postRenderWebGL:function(pipeline,getTintFunction){if(!this.isRunning&&!this.isComplete)return!1;var camera=this.camera;pipeline.drawFillRect(camera._cx,camera._cy,camera._cw,camera._ch,getTintFunction(this.red/255,this.green/255,this.blue/255,1),this.alpha);return!0},effectComplete:function(){this._onUpdateScope=
this._onUpdate=null;this.isRunning=!1;this.isComplete=!0;this.camera.emit(this.direction?"camerafadeoutcomplete":"camerafadeincomplete",this.camera,this)},reset:function(){this.isComplete=this.isRunning=!1;this._onUpdateScope=this._onUpdate=null},destroy:function(){this.reset();this.camera=null}});module.exports=global}
//# sourceMappingURL=module$node_modules$Phaser$src$cameras$2d$effects$Fade.js.map
