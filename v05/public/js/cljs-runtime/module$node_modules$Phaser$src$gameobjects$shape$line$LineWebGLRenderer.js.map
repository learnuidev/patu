{
"version":3,
"file":"module$node_modules$Phaser$src$gameobjects$shape$line$LineWebGLRenderer.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOpI,IAAIC,MAAQH,OAAA,CAAQ,qDAAR,CA8EZC,OAAAC,QAAA,CA7DwBE,QAAS,CAACC,QAAD,CAAWC,GAAX,CAAgBC,uBAAhB,CAAyCC,MAAzC,CAAiDC,YAAjD,CACjC,CACQC,uBAAAA,CAAW,IAAAA,SAEf,KAAIC,UAAYD,uBAAAE,aAAhB,CACIC,YAAcH,uBAAAI,aAElBT,SAAAU,YAAA,CAAqBL,uBAArB,CAEAG,YAAAG,UAAA,CAAsBV,GAAAW,EAAtB,CAA6BX,GAAAY,EAA7B,CAAoCZ,GAAAa,SAApC;AAAkDb,GAAAc,OAAlD,CAA8Dd,GAAAe,OAA9D,CAEAV,UAAAW,SAAA,CAAmBd,MAAAe,OAAnB,CAEId,aAAJ,EAGIE,SAAAa,mBAAA,CAA6Bf,YAA7B,CAA2C,CAACD,MAAAiB,QAA5C,CAA6DnB,GAAAoB,cAA7D,CAAgF,CAAClB,MAAAmB,QAAjF,CAAkGrB,GAAAsB,cAAlG,CAIA,CADAf,WAAAgB,EACA,CADgBvB,GAAAW,EAChB,CAAAJ,WAAAiB,EAAA,CAAgBxB,GAAAY,EAPpB,GAWIL,WAAAgB,EACA,EADiBrB,MAAAiB,QACjB,CADkCnB,GAAAoB,cAClC,CAAAb,WAAAiB,EAAA,EAAiBtB,MAAAmB,QAAjB,CAAkCrB,GAAAsB,cAZtC,CAeIG,SAAAA,CAAKzB,GAAA0B,gBACLC,aAAAA,CAAK3B,GAAA4B,gBACT,KAAIC,MAAQ3B,MAAA2B,MAARA,CAAuB7B,GAAA6B,MAEvB7B,IAAA8B,UAAJ,GAEQC,MAWJ,CAXiB3B,uBAAA2B,WAWjB,CAVIC,KAUJ,CAVYnC,KAAAoC,+BAAA,CAAqCjC,GAAAkC,YAArC;AAAsDlC,GAAAmC,YAAtD,CAAwEN,KAAxE,CAUZ,CARAE,MAAAK,GAQA,CARgBJ,KAQhB,CAPAD,MAAAM,GAOA,CAPgBL,KAOhB,CANAD,MAAAO,GAMA,CANgBN,KAMhB,CALAD,MAAAQ,GAKA,CALgBP,KAKhB,CAAA5B,uBAAAoC,UAAA,CACIxC,GAAAyC,KAAAC,GADJ,CACkBjB,QADlB,CAEIzB,GAAAyC,KAAAE,GAFJ,CAEkBhB,YAFlB,CAGI3B,GAAAyC,KAAAG,GAHJ,CAGkBnB,QAHlB,CAIIzB,GAAAyC,KAAAI,GAJJ,CAIkBlB,YAJlB,CAHiB3B,GAAA8C,YAGjB,CAFe9C,GAAA+C,UAEf,CAOI,CAPJ,CAQI,CARJ,CASI,CAAA,CATJ,CAUIxC,WAVJ,CAWIF,SAXJ,CAbJ,CA/BJ,CAzBoI;",
"sources":["node_modules/Phaser/src/gameobjects/shape/line/LineWebGLRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$gameobjects$shape$line$LineWebGLRenderer\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = require('../../../renderer/webgl/Utils');\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Line#renderWebGL\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Line} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar LineWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    var pipeline = this.pipeline;\r\n\r\n    var camMatrix = pipeline._tempMatrix1;\r\n    var shapeMatrix = pipeline._tempMatrix2;\r\n\r\n    renderer.setPipeline(pipeline);\r\n\r\n    shapeMatrix.applyITRS(src.x, src.y, src.rotation, src.scaleX, src.scaleY);\r\n\r\n    camMatrix.copyFrom(camera.matrix);\r\n\r\n    if (parentMatrix)\r\n    {\r\n        //  Multiply the camera by the parent matrix\r\n        camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY);\r\n\r\n        //  Undo the camera scroll\r\n        shapeMatrix.e = src.x;\r\n        shapeMatrix.f = src.y;\r\n    }\r\n    else\r\n    {\r\n        shapeMatrix.e -= camera.scrollX * src.scrollFactorX;\r\n        shapeMatrix.f -= camera.scrollY * src.scrollFactorY;\r\n    }\r\n\r\n    var dx = src._displayOriginX;\r\n    var dy = src._displayOriginY;\r\n    var alpha = camera.alpha * src.alpha;\r\n\r\n    if (src.isStroked)\r\n    {\r\n        var strokeTint = pipeline.strokeTint;\r\n        var color = Utils.getTintAppendFloatAlphaAndSwap(src.strokeColor, src.strokeAlpha * alpha);\r\n\r\n        strokeTint.TL = color;\r\n        strokeTint.TR = color;\r\n        strokeTint.BL = color;\r\n        strokeTint.BR = color;\r\n\r\n        var startWidth = src._startWidth;\r\n        var endWidth = src._endWidth;\r\n\r\n        pipeline.batchLine(\r\n            src.geom.x1 - dx,\r\n            src.geom.y1 - dy,\r\n            src.geom.x2 - dx,\r\n            src.geom.y2 - dy,\r\n            startWidth,\r\n            endWidth,\r\n            1,\r\n            0,\r\n            false,\r\n            shapeMatrix,\r\n            camMatrix\r\n        );\r\n    }\r\n};\r\n\r\nmodule.exports = LineWebGLRenderer;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Utils","LineWebGLRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","pipeline","camMatrix","_tempMatrix1","shapeMatrix","_tempMatrix2","setPipeline","applyITRS","x","y","rotation","scaleX","scaleY","copyFrom","matrix","multiplyWithOffset","scrollX","scrollFactorX","scrollY","scrollFactorY","e","f","dx","_displayOriginX","dy","_displayOriginY","alpha","isStroked","strokeTint","color","getTintAppendFloatAlphaAndSwap","strokeColor","strokeAlpha","TL","TR","BL","BR","batchLine","geom","x1","y1","x2","y2","_startWidth","_endWidth"]
}
