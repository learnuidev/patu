shadow$provide.module$node_modules$Phaser$src$physics$matter_js$lib$plugins$MatterWrap=function(global,require,module,exports){var Matter=require("module$node_modules$Phaser$src$physics$matter_js$CustomMain"),MatterWrap={name:"matter-wrap",version:"0.1.4",for:"matter-js@^0.13.1",silent:!0,install:function(base){base.after("Engine.update",function(){MatterWrap.Engine.update(this)})},Engine:{update:function(engine){var world=engine.world;engine=Matter.Composite.allBodies(world);world=Matter.Composite.allComposites(world);
for(var i=0;i<engine.length;i+=1){var body=engine[i];body.plugin.wrap&&MatterWrap.Body.wrap(body,body.plugin.wrap)}for(i=0;i<world.length;i+=1)engine=world[i],engine.plugin.wrap&&MatterWrap.Composite.wrap(engine,engine.plugin.wrap)}},Bounds:{wrap:function(objectBounds,bounds){var x=null,y=null;"undefined"!==typeof bounds.min.x&&"undefined"!==typeof bounds.max.x&&(objectBounds.min.x>bounds.max.x?x=bounds.min.x-objectBounds.max.x:objectBounds.max.x<bounds.min.x&&(x=bounds.max.x-objectBounds.min.x));
"undefined"!==typeof bounds.min.y&&"undefined"!==typeof bounds.max.y&&(objectBounds.min.y>bounds.max.y?y=bounds.min.y-objectBounds.max.y:objectBounds.max.y<bounds.min.y&&(y=bounds.max.y-objectBounds.min.y));if(null!==x||null!==y)return{x:x||0,y:y||0}}},Body:{wrap:function(body,bounds){(bounds=MatterWrap.Bounds.wrap(body.bounds,bounds))&&Matter.Body.translate(body,bounds);return bounds}},Composite:{bounds:function(composite){composite=Matter.Composite.allBodies(composite);for(var vertices=[],i=0;i<
composite.length;i+=1){var body=composite[i];vertices.push(body.bounds.min,body.bounds.max)}return Matter.Bounds.create(vertices)},wrap:function(composite,bounds){(bounds=MatterWrap.Bounds.wrap(MatterWrap.Composite.bounds(composite),bounds))&&Matter.Composite.translate(composite,bounds);return bounds}}};module.exports=MatterWrap}
//# sourceMappingURL=module$node_modules$Phaser$src$physics$matter_js$lib$plugins$MatterWrap.js.map
