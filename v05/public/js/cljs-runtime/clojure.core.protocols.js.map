{"version":3,"sources":["clojure/core/protocols.cljs"],"mappings":";;AAUA,AAAA;AAAA;;;AAAA,AAAaW;;AAAb,AAAAX,AAAA,AAEWY;AAFX,AAAA,AAAAX,AAAA,AAAA,AAAA,AAAA,AAEWW,AAAAA;AAFXV,AAAA,AAAAC,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEWU,AAAAA;;AAFX,AAAAP,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAEWK;AAFX,AAAA,AAAAP;AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAG,AAAAA,AAAAA,AAEWI,AAAAA;;AAFX,AAAAH,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAM,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEWG,AAAAA;;AAFX,AAAA,AAAAF,AAAA,AAEWE;;;;;AAFX,AAAA;;;AAAA,AAEGT,AAAQS;AAFX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEWA,AAAAA;AAFX,AAEWA,AAAAA;;AAFX,AAAAZ,AAEWY;;;;AAFX,AAIA,AAAA,AAAA,AAAAC,AAAAF,AAAA,AAAA;;AAAA,AAAAE,AAAAV,AAAA,AAEE,AAASW;AAAT,AAAA;;;AAFF,AAAA,AAAAD,AAAAF,AAAA,AAAA;;AAAA,AAAAE,AAAAV,AAAA,AAKE,AAASS;AAAT,AAAYA;;AAEd,AAAA;AAAA;;;AAAA,AAAaK;;AAAb,AAAAF,AAAA,AAEQG,AAAKC,AAAEC;AAFf,AAAA,AAAAnB,AAAA,AAAA,AAAA,AAAA,AAEQiB,AAAAA;AAFRhB,AAAA,AAAAc,AAAA,AAAAZ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEQgB,AAAAA,AAAKC,AAAAA,AAAEC,AAAAA;;AAFf,AAAAf,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAEQW;AAFR,AAAA,AAAAb;AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAG,AAAAA,AAAAA,AAEQU,AAAAA,AAAKC,AAAAA,AAAEC,AAAAA;;AAFf,AAAAX,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAP,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEQS,AAAAA,AAAKC,AAAAA,AAAEC,AAAAA;;AAFf,AAAA,AAAAV,AAAA,AAEQQ;;;;;AAFR,AAAA;;;;AAAA,AAEGF,AAAKE,AAAKC,AAAEC;AAFf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEQF,AAAAA;AAFR,AAEQA,AAAAA,AAAKC,AAAEC;;AAFf,AAAAL,AAEQG,AAAKC,AAAEC;;;;AAFf,AAKA,AAAA,AAAA,AAAAP,AAAAI,AAAA,AAAA;;AAAA,AAAAJ,AAAAG,AAAA,AAEE,AAAMF,AAAEA,AAAEO;AAAV,AAAaA","names":["clojure$core$protocols$Datafiable$datafy$dyn","x__4428__auto__","m__4429__auto__","clojure.core.protocols/datafy","goog/typeOf","temp__5733__auto__","cljs.core.get","cljs.core/meta","meta-impl__4427__auto__","m__4426__auto__","cljs.core/missing-protocol","clojure.core.protocols/Datafiable","o","goog.object/set","_","clojure$core$protocols$Navigable$nav$dyn","clojure.core.protocols/nav","clojure.core.protocols/Navigable","coll","k","v","x"],"sourcesContent":[";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns clojure.core.protocols)\n\n(defprotocol Datafiable\n  :extend-via-metadata true\n  (datafy [o] \"return a representation of o as data (default identity)\"))\n\n(extend-protocol Datafiable\n  nil\n  (datafy [_] nil)\n\n  default\n  (datafy [o] o))\n\n(defprotocol Navigable\n  :extend-via-metadata true\n  (nav [coll k v] \"return (possibly transformed) v in the context of coll and k (a key/index or nil),\ndefaults to returning v.\"))\n\n(extend-protocol Navigable\n  default\n  (nav [_ _ x] x))\n"]}