{
"version":3,
"file":"module$node_modules$Phaser$src$physics$matter_js$lib$core$Common.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/Phaser/src/physics/matter-js/lib/core/Common.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$matter_js$lib$core$Common\"] = function(global,require,module,exports) {\n/**\r\n* The `Matter.Common` module contains utility functions that are common to all modules.\r\n*\r\n* @class Common\r\n*/\r\n\r\nvar Common = {};\r\n\r\nmodule.exports = Common;\r\n\r\n(function() {\r\n\r\n    Common._nextId = 0;\r\n    Common._seed = 0;\r\n    Common._nowStartTime = +(new Date());\r\n\r\n    /**\r\n     * Extends the object in the first argument using the object in the second argument.\r\n     * @method extend\r\n     * @param {} obj\r\n     * @param {boolean} deep\r\n     * @return {} obj extended\r\n     */\r\n    Common.extend = function(obj, deep) {\r\n        var argsStart,\r\n            args,\r\n            deepClone;\r\n\r\n        if (typeof deep === 'boolean') {\r\n            argsStart = 2;\r\n            deepClone = deep;\r\n        } else {\r\n            argsStart = 1;\r\n            deepClone = true;\r\n        }\r\n\r\n        for (var i = argsStart; i < arguments.length; i++) {\r\n            var source = arguments[i];\r\n\r\n            if (source) {\r\n                for (var prop in source) {\r\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\r\n                        if (!obj[prop] || obj[prop].constructor === Object) {\r\n                            obj[prop] = obj[prop] || {};\r\n                            Common.extend(obj[prop], deepClone, source[prop]);\r\n                        } else {\r\n                            obj[prop] = source[prop];\r\n                        }\r\n                    } else {\r\n                        obj[prop] = source[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Creates a new clone of the object, if deep is true references will also be cloned.\r\n     * @method clone\r\n     * @param {} obj\r\n     * @param {bool} deep\r\n     * @return {} obj cloned\r\n     */\r\n    Common.clone = function(obj, deep) {\r\n        return Common.extend({}, deep, obj);\r\n    };\r\n\r\n    /**\r\n     * Returns the list of keys for the given object.\r\n     * @method keys\r\n     * @param {} obj\r\n     * @return {string[]} keys\r\n     */\r\n    Common.keys = function(obj) {\r\n        if (Object.keys)\r\n            return Object.keys(obj);\r\n\r\n        // avoid hasOwnProperty for performance\r\n        var keys = [];\r\n        for (var key in obj)\r\n            keys.push(key);\r\n        return keys;\r\n    };\r\n\r\n    /**\r\n     * Returns the list of values for the given object.\r\n     * @method values\r\n     * @param {} obj\r\n     * @return {array} Array of the objects property values\r\n     */\r\n    Common.values = function(obj) {\r\n        var values = [];\r\n        \r\n        if (Object.keys) {\r\n            var keys = Object.keys(obj);\r\n            for (var i = 0; i < keys.length; i++) {\r\n                values.push(obj[keys[i]]);\r\n            }\r\n            return values;\r\n        }\r\n        \r\n        // avoid hasOwnProperty for performance\r\n        for (var key in obj)\r\n            values.push(obj[key]);\r\n        return values;\r\n    };\r\n\r\n    /**\r\n     * Gets a value from `base` relative to the `path` string.\r\n     * @method get\r\n     * @param {} obj The base object\r\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\r\n     * @param {number} [begin] Path slice begin\r\n     * @param {number} [end] Path slice end\r\n     * @return {} The object at the given path\r\n     */\r\n    Common.get = function(obj, path, begin, end) {\r\n        path = path.split('.').slice(begin, end);\r\n\r\n        for (var i = 0; i < path.length; i += 1) {\r\n            obj = obj[path[i]];\r\n        }\r\n\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Sets a value on `base` relative to the given `path` string.\r\n     * @method set\r\n     * @param {} obj The base object\r\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\r\n     * @param {} val The value to set\r\n     * @param {number} [begin] Path slice begin\r\n     * @param {number} [end] Path slice end\r\n     * @return {} Pass through `val` for chaining\r\n     */\r\n    Common.set = function(obj, path, val, begin, end) {\r\n        var parts = path.split('.').slice(begin, end);\r\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\r\n        return val;\r\n    };\r\n\r\n    /**\r\n     * Shuffles the given array in-place.\r\n     * The function uses a seeded random generator.\r\n     * @method shuffle\r\n     * @param {array} array\r\n     * @return {array} array shuffled randomly\r\n     */\r\n    Common.shuffle = function(array) {\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Common.random() * (i + 1));\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Randomly chooses a value from a list with equal probability.\r\n     * The function uses a seeded random generator.\r\n     * @method choose\r\n     * @param {array} choices\r\n     * @return {object} A random choice object from the array\r\n     */\r\n    Common.choose = function(choices) {\r\n        return choices[Math.floor(Common.random() * choices.length)];\r\n    };\r\n\r\n    /**\r\n     * Returns true if the object is a HTMLElement, otherwise false.\r\n     * @method isElement\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\r\n     */\r\n    Common.isElement = function(obj) {\r\n        if (typeof HTMLElement !== 'undefined') {\r\n            return obj instanceof HTMLElement;\r\n        }\r\n\r\n        return !!(obj && obj.nodeType && obj.nodeName);\r\n    };\r\n\r\n    /**\r\n     * Returns true if the object is an array.\r\n     * @method isArray\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is an array, otherwise false\r\n     */\r\n    Common.isArray = function(obj) {\r\n        return Object.prototype.toString.call(obj) === '[object Array]';\r\n    };\r\n\r\n    /**\r\n     * Returns true if the object is a function.\r\n     * @method isFunction\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is a function, otherwise false\r\n     */\r\n    Common.isFunction = function(obj) {\r\n        return typeof obj === \"function\";\r\n    };\r\n\r\n    /**\r\n     * Returns true if the object is a plain object.\r\n     * @method isPlainObject\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is a plain object, otherwise false\r\n     */\r\n    Common.isPlainObject = function(obj) {\r\n        return typeof obj === 'object' && obj.constructor === Object;\r\n    };\r\n\r\n    /**\r\n     * Returns true if the object is a string.\r\n     * @method isString\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is a string, otherwise false\r\n     */\r\n    Common.isString = function(obj) {\r\n        return toString.call(obj) === '[object String]';\r\n    };\r\n    \r\n    /**\r\n     * Returns the given value clamped between a minimum and maximum value.\r\n     * @method clamp\r\n     * @param {number} value\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @return {number} The value clamped between min and max inclusive\r\n     */\r\n    Common.clamp = function(value, min, max) {\r\n        if (value < min)\r\n            return min;\r\n        if (value > max)\r\n            return max;\r\n        return value;\r\n    };\r\n    \r\n    /**\r\n     * Returns the sign of the given value.\r\n     * @method sign\r\n     * @param {number} value\r\n     * @return {number} -1 if negative, +1 if 0 or positive\r\n     */\r\n    Common.sign = function(value) {\r\n        return value < 0 ? -1 : 1;\r\n    };\r\n    \r\n    /**\r\n     * Returns the current timestamp since the time origin (e.g. from page load).\r\n     * The result will be high-resolution including decimal places if available.\r\n     * @method now\r\n     * @return {number} the current timestamp\r\n     */\r\n    Common.now = function() {\r\n        if (window.performance) {\r\n            if (window.performance.now) {\r\n                return window.performance.now();\r\n            } else if (window.performance.webkitNow) {\r\n                return window.performance.webkitNow();\r\n            }\r\n        }\r\n\r\n        return (new Date()) - Common._nowStartTime;\r\n    };\r\n    \r\n    /**\r\n     * Returns a random value between a minimum and a maximum value inclusive.\r\n     * The function uses a seeded random generator.\r\n     * @method random\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @return {number} A random number between min and max inclusive\r\n     */\r\n    Common.random = function(min, max) {\r\n        min = (typeof min !== \"undefined\") ? min : 0;\r\n        max = (typeof max !== \"undefined\") ? max : 1;\r\n        return min + _seededRandom() * (max - min);\r\n    };\r\n\r\n    var _seededRandom = function() {\r\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\r\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\r\n        return Common._seed / 233280;\r\n    };\r\n\r\n    /**\r\n     * Converts a CSS hex colour string into an integer.\r\n     * @method colorToNumber\r\n     * @param {string} colorString\r\n     * @return {number} An integer representing the CSS hex string\r\n     */\r\n    Common.colorToNumber = function(colorString) {\r\n        colorString = colorString.replace('#','');\r\n\r\n        if (colorString.length == 3) {\r\n            colorString = colorString.charAt(0) + colorString.charAt(0)\r\n                        + colorString.charAt(1) + colorString.charAt(1)\r\n                        + colorString.charAt(2) + colorString.charAt(2);\r\n        }\r\n\r\n        return parseInt(colorString, 16);\r\n    };\r\n\r\n    /**\r\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\r\n     * The default level is 'debug' which shows all console messages.  \r\n     *\r\n     * Possible level values are:\r\n     * - 0 = None\r\n     * - 1 = Debug\r\n     * - 2 = Info\r\n     * - 3 = Warn\r\n     * - 4 = Error\r\n     * @property Common.logLevel\r\n     * @type {Number}\r\n     * @default 1\r\n     */\r\n    Common.logLevel = 1;\r\n\r\n    /**\r\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\r\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\r\n     * @method log\r\n     * @param ...objs {} The objects to log.\r\n     */\r\n    Common.log = function() {\r\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\r\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\r\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\r\n     * @method info\r\n     * @param ...objs {} The objects to log.\r\n     */\r\n    Common.info = function() {\r\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\r\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\r\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\r\n     * @method warn\r\n     * @param ...objs {} The objects to log.\r\n     */\r\n    Common.warn = function() {\r\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\r\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique sequential ID.\r\n     * @method nextId\r\n     * @return {Number} Unique sequential ID\r\n     */\r\n    Common.nextId = function() {\r\n        return Common._nextId++;\r\n    };\r\n\r\n    /**\r\n     * A cross browser compatible indexOf implementation.\r\n     * @method indexOf\r\n     * @param {array} haystack\r\n     * @param {object} needle\r\n     * @return {number} The position of needle in haystack, otherwise -1.\r\n     */\r\n    Common.indexOf = function(haystack, needle) {\r\n        if (haystack.indexOf)\r\n            return haystack.indexOf(needle);\r\n\r\n        for (var i = 0; i < haystack.length; i++) {\r\n            if (haystack[i] === needle)\r\n                return i;\r\n        }\r\n\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * A cross browser compatible array map implementation.\r\n     * @method map\r\n     * @param {array} list\r\n     * @param {function} func\r\n     * @return {array} Values from list transformed by func.\r\n     */\r\n    Common.map = function(list, func) {\r\n        if (list.map) {\r\n            return list.map(func);\r\n        }\r\n\r\n        var mapped = [];\r\n\r\n        for (var i = 0; i < list.length; i += 1) {\r\n            mapped.push(func(list[i]));\r\n        }\r\n\r\n        return mapped;\r\n    };\r\n\r\n    /**\r\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\r\n     * Circular dependencies are allowed.\r\n     * @method topologicalSort\r\n     * @param {object} graph\r\n     * @return {array} Partially ordered set of vertices in topological order.\r\n     */\r\n    Common.topologicalSort = function(graph) {\r\n        // https://github.com/mgechev/javascript-algorithms\r\n        // Copyright (c) Minko Gechev (MIT license)\r\n        // Modifications: tidy formatting and naming\r\n        var result = [],\r\n            visited = [],\r\n            temp = [];\r\n\r\n        for (var node in graph) {\r\n            if (!visited[node] && !temp[node]) {\r\n                Common._topologicalSort(node, visited, temp, graph, result);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\r\n        var neighbors = graph[node] || [];\r\n        temp[node] = true;\r\n\r\n        for (var i = 0; i < neighbors.length; i += 1) {\r\n            var neighbor = neighbors[i];\r\n\r\n            if (temp[neighbor]) {\r\n                // skip circular dependencies\r\n                continue;\r\n            }\r\n\r\n            if (!visited[neighbor]) {\r\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\r\n            }\r\n        }\r\n\r\n        temp[node] = false;\r\n        visited[node] = true;\r\n\r\n        result.push(node);\r\n    };\r\n\r\n    /**\r\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\r\n     * The arguments applied when calling the new function will also be applied to every function passed.\r\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\r\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\r\n     * After all passed functions have been called the new function returns the last returned value (if any).\r\n     * If any of the passed functions are a chain, then the chain will be flattened.\r\n     * @method chain\r\n     * @param ...funcs {function} The functions to chain.\r\n     * @return {function} A new function that calls the passed functions in order.\r\n     */\r\n    Common.chain = function() {\r\n        var funcs = [];\r\n\r\n        for (var i = 0; i < arguments.length; i += 1) {\r\n            var func = arguments[i];\r\n\r\n            if (func._chained) {\r\n                // flatten already chained functions\r\n                funcs.push.apply(funcs, func._chained);\r\n            } else {\r\n                funcs.push(func);\r\n            }\r\n        }\r\n\r\n        var chain = function() {\r\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\r\n            var lastResult,\r\n                args = new Array(arguments.length);\r\n\r\n            for (var i = 0, l = arguments.length; i < l; i++) {\r\n                args[i] = arguments[i];\r\n            }\r\n\r\n            for (i = 0; i < funcs.length; i += 1) {\r\n                var result = funcs[i].apply(lastResult, args);\r\n\r\n                if (typeof result !== 'undefined') {\r\n                    lastResult = result;\r\n                }\r\n            }\r\n\r\n            return lastResult;\r\n        };\r\n\r\n        chain._chained = funcs;\r\n\r\n        return chain;\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\r\n     * See also docs for `Common.chain`.\r\n     * @method chainPathBefore\r\n     * @param {} base The base object\r\n     * @param {string} path The path relative to `base`\r\n     * @param {function} func The function to chain before the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Common.chainPathBefore = function(base, path, func) {\r\n        return Common.set(base, path, Common.chain(\r\n            func,\r\n            Common.get(base, path)\r\n        ));\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\r\n     * See also docs for `Common.chain`.\r\n     * @method chainPathAfter\r\n     * @param {} base The base object\r\n     * @param {string} path The path relative to `base`\r\n     * @param {function} func The function to chain after the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Common.chainPathAfter = function(base, path, func) {\r\n        return Common.set(base, path, Common.chain(\r\n            Common.get(base, path),\r\n            func\r\n        ));\r\n    };\r\n\r\n    /**\r\n     * Used to require external libraries outside of the bundle.\r\n     * It first looks for the `globalName` on the environment's global namespace.\r\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\r\n     * @private\r\n     * @method _requireGlobal\r\n     * @param {string} globalName The global module name\r\n     * @param {string} moduleName The fallback CommonJS module name\r\n     * @return {} The loaded module\r\n     */\r\n    Common._requireGlobal = function(globalName, moduleName) {\r\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\r\n\r\n        //  Breaks webpack :(\r\n        // return obj || require(moduleName);\r\n\r\n        return obj;\r\n    };\r\n})();\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Common","_nextId","_seed","_nowStartTime","Date","extend","Common.extend","obj","deep","argsStart","deepClone","i","arguments","length","source","prop","constructor","Object","clone","Common.clone","keys","Common.keys","key","push","values","Common.values","get","Common.get","path","begin","end","split","slice","set","Common.set","val","parts","shuffle","Common.shuffle","array","j","Math","floor","random","temp","choose","Common.choose","choices","isElement","Common.isElement","HTMLElement","nodeType","nodeName","isArray","Common.isArray","prototype","toString","call","isFunction","Common.isFunction","isPlainObject","Common.isPlainObject","isString","Common.isString","clamp","Common.clamp","value","min","max","sign","Common.sign","now","Common.now","window","performance","webkitNow","Common.random","colorToNumber","Common.colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","Common.log","console","apply","concat","Array","info","Common.info","warn","Common.warn","nextId","Common.nextId","indexOf","Common.indexOf","haystack","needle","map","Common.map","list","func","mapped","topologicalSort","Common.topologicalSort","graph","result","visited","node","_topologicalSort","Common._topologicalSort","neighbors","neighbor","chain","Common.chain","funcs","_chained","lastResult","args","l","chainPathBefore","Common.chainPathBefore","base","chainPathAfter","Common.chainPathAfter","_requireGlobal","Common._requireGlobal","globalName","moduleName"]
}
