{
"version":3,
"file":"module$node_modules$Phaser$src$physics$arcade$tilemap$TileCheckY.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,iEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO7H,IAAIC,uBAAyBH,OAAA,CAAQ,8EAAR,CA8D7BC,OAAAC,QAAA,CA9CiBE,QAAS,CAACC,IAAD,CAAOC,IAAP,CAAaC,OAAb,CAAsBC,UAAtB,CAAkCC,QAAlC,CAC1B,CACI,IAAIC,GAAK,CAEW,EAApB,CAAIL,IAAAM,OAAA,EAAJ,EAAyB,CAACN,IAAAO,QAAAC,GAA1B,EAA6CP,IAAAQ,YAA7C,EAAiET,IAAAU,eAAAF,GAAjE,CAGQP,IAAAU,WAHR,EAG2BX,IAAAY,EAH3B,CAGoCT,UAHpC,GAKQE,EAEA,CAFKL,IAAAY,EAEL,CAFcT,UAEd,CAAIE,EAAJ,CAAS,CAACD,QAAV,GAEIC,EAFJ,CAES,CAFT,CAPR,EAayB,CAbzB,CAaSL,IAAAM,OAAA,EAbT,EAa8B,CAACN,IAAAO,QAAAM,KAb/B,EAaoDZ,IAAAa,UAbpD;AAasEd,IAAAU,eAAAG,KAbtE,EAgBQZ,IAAAc,QAhBR,EAgBwBf,IAAAgB,OAhBxB,CAgBsCd,OAhBtC,GAkBQG,EAEA,CAFKL,IAAAgB,OAEL,CAFmBd,OAEnB,CAAIG,EAAJ,CAASD,QAAT,GAEIC,EAFJ,CAES,CAFT,CApBR,CA2BW,EAAX,GAAIA,EAAJ,GAEQL,IAAAiB,gBAAJ,CAEIjB,IAAAkB,SAFJ,CAEoBb,EAFpB,CAMIP,sBAAA,CAAuBE,IAAvB,CAA6BK,EAA7B,CARR,CAYA,OAAOA,GA1CX,CAxB6H;",
"sources":["node_modules/Phaser/src/physics/arcade/tilemap/TileCheckY.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$physics$arcade$tilemap$TileCheckY\"] = function(global,require,module,exports) {\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar ProcessTileSeparationY = require('./ProcessTileSeparationY');\r\n\r\n/**\r\n * Check the body against the given tile on the Y axis.\r\n *\r\n * @function Phaser.Physics.Arcade.Tilemap.TileCheckY\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\r\n * @param {Phaser.Tilemaps.Tile} tile - The tile to check.\r\n * @param {number} tileTop - [description]\r\n * @param {number} tileBottom - [description]\r\n * @param {number} tileBias - [description]\r\n *\r\n * @return {number} The amount of separation that occurred.\r\n */\r\nvar TileCheckY = function (body, tile, tileTop, tileBottom, tileBias)\r\n{\r\n    var oy = 0;\r\n\r\n    if (body.deltaY() < 0 && !body.blocked.up && tile.collideDown && body.checkCollision.up)\r\n    {\r\n        //  Body is moving UP\r\n        if (tile.faceBottom && body.y < tileBottom)\r\n        {\r\n            oy = body.y - tileBottom;\r\n\r\n            if (oy < -tileBias)\r\n            {\r\n                oy = 0;\r\n            }\r\n        }\r\n    }\r\n    else if (body.deltaY() > 0 && !body.blocked.down && tile.collideUp && body.checkCollision.down)\r\n    {\r\n        //  Body is moving DOWN\r\n        if (tile.faceTop && body.bottom > tileTop)\r\n        {\r\n            oy = body.bottom - tileTop;\r\n\r\n            if (oy > tileBias)\r\n            {\r\n                oy = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (oy !== 0)\r\n    {\r\n        if (body.customSeparateY)\r\n        {\r\n            body.overlapY = oy;\r\n        }\r\n        else\r\n        {\r\n            ProcessTileSeparationY(body, oy);\r\n        }\r\n    }\r\n\r\n    return oy;\r\n};\r\n\r\nmodule.exports = TileCheckY;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","ProcessTileSeparationY","TileCheckY","body","tile","tileTop","tileBottom","tileBias","oy","deltaY","blocked","up","collideDown","checkCollision","faceBottom","y","down","collideUp","faceTop","bottom","customSeparateY","overlapY"]
}
