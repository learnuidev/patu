{
"version":3,
"file":"module$node_modules$Phaser$src$math$interpolation$LinearInterpolation.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlI,IAAIC,OAASH,OAAA,CAAQ,4CAAR,CAiCbC,OAAAC,QAAA,CAnB0BE,QAAS,CAACC,CAAD,CAAIC,CAAJ,CACnC,CACI,IAAIC,EAAIF,CAAAG,OAAJD,CAAe,CAAnB,CACIE,EAAIF,CAAJE,CAAQH,CADZ,CAEII,EAAIC,IAAAC,MAAA,CAAWH,CAAX,CAER,OAAQ,EAAR,CAAIH,CAAJ,CAEWH,MAAA,CAAOE,CAAA,CAAE,CAAF,CAAP,CAAaA,CAAA,CAAE,CAAF,CAAb,CAAmBI,CAAnB,CAFX,CAKQ,CAAR,CAAIH,CAAJ,CAEWH,MAAA,CAAOE,CAAA,CAAEE,CAAF,CAAP,CAAaF,CAAA,CAAEE,CAAF,CAAM,CAAN,CAAb,CAAuBA,CAAvB,CAA2BE,CAA3B,CAFX,CAKON,MAAA,CAAOE,CAAA,CAAEK,CAAF,CAAP,CAAaL,CAAA,CAAGK,CAAD,CAAK,CAAL,CAASH,CAAT,CAAcA,CAAd,CAAkBG,CAAlB,CAAsB,CAAxB,CAAb,CAAyCD,CAAzC,CAA6CC,CAA7C,CAfX,CAtBkI;",
"sources":["node_modules/Phaser/src/math/interpolation/LinearInterpolation.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$math$interpolation$LinearInterpolation\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Linear = require('../Linear');\r\n\r\n/**\r\n * A linear interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.Linear\r\n * @since 3.0.0\r\n * @see {@link https://en.wikipedia.org/wiki/Linear_interpolation}\r\n *\r\n * @param {number[]} v - The input array of values to interpolate between.\r\n * @param {!number} k - The percentage of interpolation, between 0 and 1.\r\n *\r\n * @return {!number} The interpolated value.\r\n */\r\nvar LinearInterpolation = function (v, k)\r\n{\r\n    var m = v.length - 1;\r\n    var f = m * k;\r\n    var i = Math.floor(f);\r\n\r\n    if (k < 0)\r\n    {\r\n        return Linear(v[0], v[1], f);\r\n    }\r\n\r\n    if (k > 1)\r\n    {\r\n        return Linear(v[m], v[m - 1], m - f);\r\n    }\r\n\r\n    return Linear(v[i], v[(i + 1 > m) ? m : i + 1], f - i);\r\n};\r\n\r\nmodule.exports = LinearInterpolation;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","Linear","LinearInterpolation","v","k","m","length","f","i","Math","floor"]
}
