{
"version":3,
"file":"module$node_modules$Phaser$src$utils$object$HasAll.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+B/GD,MAAAC,QAAA,CAbaC,QAAS,CAACC,MAAD,CAASC,IAAT,CACtB,CACI,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,IAAAE,OAApB,CAAiCD,CAAA,EAAjC,CAEI,GAAI,CAACF,MAAAI,eAAA,CAAsBH,IAAA,CAAKC,CAAL,CAAtB,CAAL,CAEI,MAAO,CAAA,CAIf,OAAO,CAAA,CATX,CAnB+G;",
"sources":["node_modules/Phaser/src/utils/object/HasAll.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$Phaser$src$utils$object$HasAll\"] = function(global,require,module,exports) {\n/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Verifies that an object contains all requested keys\r\n *\r\n * @function Phaser.Utils.Objects.HasAll\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - an object on which to check for key existence\r\n * @param {string[]} keys - an array of keys to ensure the source object contains\r\n *\r\n * @return {boolean} true if the source object contains all keys, false otherwise.\r\n */\r\nvar HasAll = function (source, keys)\r\n{\r\n    for (var i = 0; i < keys.length; i++)\r\n    {\r\n        if (!source.hasOwnProperty(keys[i]))\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nmodule.exports = HasAll;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","HasAll","source","keys","i","length","hasOwnProperty"]
}
